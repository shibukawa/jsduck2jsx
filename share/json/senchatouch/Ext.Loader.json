{"docauthor":[{"email":"jacky@sencha.com","tagname":"docauthor","name":"Jacky Nguyen"}],"autodetected":{},"short_doc":"Ext.Loader is the heart of the new dynamic dependency loading capability in Ext JS 4+. ...","singleton":true,"aliases":{},"aside":[{"type":"guide","tagname":"aside","name":"mvc_dependencies"}],"files":[{"linenr":5,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"tagname":"class","members":[{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"Appends current timestamp to script files to prevent caching. ...","default":"true","owner":"Ext.Loader","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":187,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":null,"static":null,"name":"disableCaching","properties":null,"doc":"<p>Appends current timestamp to script files to prevent caching.</p>\n","inheritdoc":null,"id":"cfg-disableCaching","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":"The get parameter name for the cache buster's timestamp. ...","default":"'_dc'","owner":"Ext.Loader","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":193,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":null,"static":null,"name":"disableCachingParam","properties":null,"doc":"<p>The get parameter name for the cache buster's timestamp.</p>\n","inheritdoc":null,"id":"cfg-disableCachingParam","html_type":"String","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"Whether or not to enable the dynamic dependency loading feature. ...","default":"true","owner":"Ext.Loader","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":181,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":null,"static":null,"name":"enabled","properties":null,"doc":"<p>Whether or not to enable the dynamic dependency loading feature.</p>\n","inheritdoc":null,"id":"cfg-enabled","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Object","short_doc":"The mapping from namespaces to file paths. ...","default":"{'Ext': '.'}","owner":"Ext.Loader","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":199,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":null,"static":null,"name":"paths","properties":null,"doc":"<p>The mapping from namespaces to file paths.</p>\n\n<pre><code>{\n    'Ext': '.', // This is set by default, Ext.layout.container.Container will be\n                // loaded from ./layout/Container.js\n\n    'My': './src/my_own_folder' // My.layout.Container will be loaded from\n                                // ./src/my_own_folder/layout/Container.js\n}\n</code></pre>\n\n<p>Note that all relative paths are relative to the current HTML document.\nIf not being specified, for example, <code>Other.awesome.Class</code>\nwill simply be loaded from <code>./Other/awesome/Class.js</code>.</p>\n","inheritdoc":null,"id":"cfg-paths","html_type":"Object","evented":null,"linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Loader","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":516,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"classNameToFilePathMap","doc":"\n","inheritdoc":null,"id":"property-classNameToFilePathMap","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"Configuration ...","default":"{enabled: true, disableCaching: true, disableCachingParam: '_dc', paths: {'Ext': '.'}}","owner":"Ext.Loader","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":176,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"config","doc":"<p>Configuration</p>\n","inheritdoc":null,"id":"property-config","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.Loader","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":452,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"documentHead","doc":"\n","inheritdoc":null,"id":"property-documentHead","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"false","owner":"Ext.Loader","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":513,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"hasFileLoadError","doc":"\n","inheritdoc":null,"id":"property-hasFileLoadError","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":"An array of class names to keep track of the dependency loading order. ...","default":"[]","owner":"Ext.Loader","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":166,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":null,"static":null,"name":"history","properties":null,"doc":"<p>An array of class names to keep track of the dependency loading order.\nThis is not guaranteed to be the same every time due to the asynchronous\nnature of the Loader.</p>\n","inheritdoc":null,"id":"property-history","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"Maintain the list of files that have already been handled so that they never get double-loaded ...","default":"{}","owner":"Ext.Loader","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":474,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"isClassFileLoaded","doc":"<p>Maintain the list of files that have already been handled so that they never get double-loaded</p>\n","inheritdoc":null,"id":"property-isClassFileLoaded","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Loader","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":480,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"isFileLoaded","doc":"\n","inheritdoc":null,"id":"property-isFileLoaded","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Loader","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":161,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"isInHistory","doc":"\n","inheritdoc":null,"id":"property-isInHistory","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"Flag indicating whether there are still files being loaded ...","default":"false","owner":"Ext.Loader","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":457,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"isLoading","doc":"<p>Flag indicating whether there are still files being loaded</p>\n","inheritdoc":null,"id":"property-isLoading","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":" ...","default":"0","owner":"Ext.Loader","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":508,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"numLoadedFiles","doc":"\n","inheritdoc":null,"id":"property-numLoadedFiles","html_type":"Number","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":" ...","default":"0","owner":"Ext.Loader","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":503,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"numPendingFiles","doc":"\n","inheritdoc":null,"id":"property-numPendingFiles","html_type":"Number","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":"Contains optional dependencies to be loaded last ...","default":"[]","owner":"Ext.Loader","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":491,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"optionalRequires","doc":"<p>Contains optional dependencies to be loaded last</p>\n","inheritdoc":null,"id":"property-optionalRequires","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":"Maintain the queue for all dependencies. ...","default":"[]","owner":"Ext.Loader","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":463,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"queue","doc":"<p>Maintain the queue for all dependencies. Each item in the array is an object of the format:</p>\n\n<pre><code>{\n    requires: [...], // The required classes for this queue item\n    callback: function() { ... } // The function to execute when all classes specified in requires exist\n}\n</code></pre>\n","inheritdoc":null,"id":"property-queue","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":"Maintain the list of listeners to execute when all required scripts are fully loaded ...","default":"[]","owner":"Ext.Loader","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":485,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"readyListeners","doc":"<p>Maintain the list of listeners to execute when all required scripts are fully loaded</p>\n","inheritdoc":null,"id":"property-readyListeners","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"Map of fully qualified class names to an array of dependent classes. ...","default":"{}","owner":"Ext.Loader","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":497,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"requiresMap","doc":"<p>Map of fully qualified class names to an array of dependent classes.</p>\n","inheritdoc":null,"id":"property-requiresMap","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"false","owner":"Ext.Loader","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":521,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"syncModeEnabled","doc":"\n","inheritdoc":null,"id":"property-syncModeEnabled","html_type":"Boolean","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets a batch of path entries ...","method_calls":null,"owner":"Ext.Loader","inheritable":null,"params":[{"type":"Object ","tagname":"params","doc":"<p>a set of className: path mappings</p>\n","name":"paths","html_type":"Object "}],"tagname":"method","files":[{"linenr":289,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"return":{"type":"Ext.Loader","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>"},"private":null,"static":null,"name":"addClassPathMappings","doc":"<p>Sets a batch of path entries</p>\n","chainable":true,"inheritdoc":null,"id":"method-addClassPathMappings","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Loader","inheritable":null,"params":[{"type":"Object","name":"requires","html_type":"Object"}],"tagname":"method","files":[{"linenr":952,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"return":{"type":"Ext.Loader","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>"},"private":true,"static":null,"name":"addOptionalRequires","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-addOptionalRequires","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Loader","inheritable":null,"params":[{"type":"Object","name":"script","html_type":"Object"},{"type":"Object","name":"remove","html_type":"Object"}],"tagname":"method","files":[{"linenr":627,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"return":{"type":"Ext.Loader","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>"},"private":true,"static":null,"name":"cleanupScriptElement","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-cleanupScriptElement","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Explicitly exclude files from being loaded. ...","method_calls":["require","syncRequire"],"owner":"Ext.Loader","inheritable":null,"params":[{"type":"Array","tagname":"params","doc":"\n","name":"excludes","html_type":"Array"}],"tagname":"method","files":[{"linenr":403,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"return":{"type":"Object","properties":null,"doc":"<p>object contains <code>require</code> method for chaining.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"exclude","doc":"<p>Explicitly exclude files from being loaded. Useful when used in conjunction with a broad include expression.\nCan be chained with more <code>require</code> and <code>exclude</code> methods, eg:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-exclude\" rel=\"Ext-method-exclude\" class=\"docClass\">Ext.exclude</a>('Ext.data.*').require('*');\n\n<a href=\"#!/api/Ext-method-exclude\" rel=\"Ext-method-exclude\" class=\"docClass\">Ext.exclude</a>('widget.button*').require('widget.*');\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-exclude","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the config value corresponding to the specified name. ...","method_calls":null,"owner":"Ext.Loader","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The config property name.</p>\n","name":"name","html_type":"String"}],"tagname":"method","files":[{"linenr":259,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"return":{"type":"Object/Mixed","properties":null,"doc":"\n","name":"return","html_type":"Object/Mixed"},"private":null,"static":null,"name":"getConfig","doc":"<p>Get the config value corresponding to the specified name. If no name is given, will return the config object.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Translates a className to a file path by adding the\nthe proper prefix and converting the .'s to /'s. ...","method_calls":["getPrefix"],"owner":"Ext.Loader","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"className","html_type":"String"}],"tagname":"method","files":[{"linenr":309,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"return":{"type":"String","properties":null,"doc":"<p>path</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"getPath","doc":"<p>Translates a className to a file path by adding the\nthe proper prefix and converting the .'s to /'s. For example:</p>\n\n<pre><code><a href=\"#!/api/Ext.Loader-method-setPath\" rel=\"Ext.Loader-method-setPath\" class=\"docClass\">Ext.Loader.setPath</a>('My', '/path/to/My');\n\nalert(<a href=\"#!/api/Ext.Loader-method-getPath\" rel=\"Ext.Loader-method-getPath\" class=\"docClass\">Ext.Loader.getPath</a>('My.awesome.Class')); // alerts '/path/to/My/awesome/Class.js'\n</code></pre>\n\n<p>Note that the deeper namespace levels, if explicitly set, are always resolved first. For example:</p>\n\n<pre><code><a href=\"#!/api/Ext.Loader-method-setPath\" rel=\"Ext.Loader-method-setPath\" class=\"docClass\">Ext.Loader.setPath</a>({\n    'My': '/path/to/lib',\n    'My.awesome': '/other/path/for/awesome/stuff',\n    'My.awesome.more': '/more/awesome/path'\n});\n\nalert(<a href=\"#!/api/Ext.Loader-method-getPath\" rel=\"Ext.Loader-method-getPath\" class=\"docClass\">Ext.Loader.getPath</a>('My.awesome.Class')); // alerts '/other/path/for/awesome/stuff/Class.js'\n\nalert(<a href=\"#!/api/Ext.Loader-method-getPath\" rel=\"Ext.Loader-method-getPath\" class=\"docClass\">Ext.Loader.getPath</a>('My.awesome.more.Class')); // alerts '/more/awesome/path/Class.js'\n\nalert(<a href=\"#!/api/Ext.Loader-method-getPath\" rel=\"Ext.Loader-method-getPath\" class=\"docClass\">Ext.Loader.getPath</a>('My.cool.Class')); // alerts '/path/to/lib/cool/Class.js'\n\nalert(<a href=\"#!/api/Ext.Loader-method-getPath\" rel=\"Ext.Loader-method-getPath\" class=\"docClass\">Ext.Loader.getPath</a>('Unknown.strange.Stuff')); // alerts 'Unknown/strange/Stuff.js'\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-getPath","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Loader","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"className","html_type":"String"}],"tagname":"method","files":[{"linenr":357,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"getPrefix","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getPrefix","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Loader","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"className","html_type":"String"}],"tagname":"method","files":[{"linenr":1028,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"return":{"type":"Ext.Loader","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>"},"private":true,"static":null,"name":"historyPush","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-historyPush","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Inject a script element to document's head, call onLoad and onError accordingly ...","method_calls":["cleanupScriptElement"],"owner":"Ext.Loader","inheritable":null,"params":[{"type":"Object","name":"url","html_type":"Object"},{"type":"Object","name":"onLoad","html_type":"Object"},{"type":"Object","name":"onError","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"},{"type":"Object","name":"charset","html_type":"Object"}],"tagname":"method","files":[{"linenr":581,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"injectScriptElement","doc":"<p>Inject a script element to document's head, call onLoad and onError accordingly</p>\n","chainable":false,"inheritdoc":null,"id":"method-injectScriptElement","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Load a script file, supports both asynchronous and synchronous approaches ...","method_calls":["getConfig","injectScriptElement"],"owner":"Ext.Loader","inheritable":null,"params":[{"type":"Object","name":"url","html_type":"Object"},{"type":"Object","name":"onLoad","html_type":"Object"},{"type":"Object","name":"onError","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"},{"type":"Object","name":"synchronous","html_type":"Object"}],"tagname":"method","files":[{"linenr":642,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"loadScriptFile","doc":"<p>Load a script file, supports both asynchronous and synchronous approaches</p>\n","chainable":false,"inheritdoc":null,"id":"method-loadScriptFile","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Loader","inheritable":null,"params":[{"type":"Object","name":"className","html_type":"Object"},{"type":"Object","name":"filePath","html_type":"Object"},{"type":"Object","name":"errorMessage","html_type":"Object"},{"type":"Object","name":"isSynchronous","html_type":"Object"}],"tagname":"method","files":[{"linenr":940,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"onFileLoadError","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onFileLoadError","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["refreshQueue"],"owner":"Ext.Loader","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"className","html_type":"String"},{"type":"String","tagname":"params","doc":"\n","name":"filePath","html_type":"String"}],"tagname":"method","files":[{"linenr":886,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":true,"static":null,"name":"onFileLoaded","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onFileLoaded","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add a new listener to be executed when all required scripts are fully loaded. ...","method_calls":null,"owner":"Ext.Loader","inheritable":null,"params":[{"type":"Function","tagname":"params","doc":"<p>The function callback to be executed.</p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The execution scope (<code>this</code>) of the callback function.</p>\n","name":"scope","html_type":"Object"},{"type":"Boolean","tagname":"params","doc":"<p>Whether or not to wait for document DOM ready as well.</p>\n","name":"withDomReady","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":428,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":null,"static":null,"name":"onReady","doc":"<p>Add a new listener to be executed when all required scripts are fully loaded.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onReady","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Refresh all items in the queue. ...","method_calls":["refreshQueue","triggerReady"],"owner":"Ext.Loader","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":528,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"return":{"type":"Ext.Loader","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>"},"private":true,"static":null,"name":"refreshQueue","doc":"<p>Refresh all items in the queue. If all dependencies for an item exist during looping,\nit will execute the callback and call refreshQueue again. Triggers onReady when the queue is\nempty</p>\n","chainable":true,"inheritdoc":null,"id":"method-refreshQueue","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Loads all classes by the given names and all their direct dependencies; optionally executes the given callback functi...","method_calls":null,"owner":"Ext.Loader","inheritable":null,"params":[{"type":"String/Array","tagname":"params","doc":"<p>Can either be a string or an array of string.</p>\n","name":"expressions","html_type":"String/Array"},{"type":"Function","tagname":"params","doc":"<p>The callback function.</p>\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The execution scope (<code>this</code>) of the callback function.</p>\n","name":"scope","optional":true,"html_type":"Object"},{"type":"String/Array","tagname":"params","doc":"<p>Classes to be excluded, useful when being used with expressions.</p>\n","name":"excludes","optional":true,"html_type":"String/Array"}],"tagname":"method","files":[{"linenr":380,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":null,"static":null,"name":"require","doc":"<p>Loads all classes by the given names and all their direct dependencies; optionally executes the given callback function when\nfinishes, within the optional scope. This method is aliased by <a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a> for convenience.</p>\n","chainable":false,"inheritdoc":null,"id":"method-require","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Set the configuration for the loader. ...","method_calls":null,"owner":"Ext.Loader","inheritable":null,"params":[{"type":"Object/String","tagname":"params","doc":"<p>The config object to override the default values\nor name of a single config setting when also passing the second parameter.</p>\n","name":"name","html_type":"Object/String"},{"type":"Mixed","tagname":"params","doc":"<p>The value for the config setting.</p>\n","name":"value","optional":true,"html_type":"Mixed"}],"tagname":"method","files":[{"linenr":220,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"return":{"type":"Ext.Loader","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>"},"private":null,"static":null,"name":"setConfig","doc":"<p>Set the configuration for the loader. This should be called right after ext-(debug).js\nis included in the page, and before <a href=\"#!/api/Ext-method-onReady\" rel=\"Ext-method-onReady\" class=\"docClass\">Ext.onReady</a>. i.e:</p>\n\n<pre><code>&lt;script type=\"text/javascript\" src=\"ext-core-debug.js\"&gt;&lt;/script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    <a href=\"#!/api/Ext.Loader-method-setConfig\" rel=\"Ext.Loader-method-setConfig\" class=\"docClass\">Ext.Loader.setConfig</a>({\n      enabled: true,\n      paths: {\n          'My': 'my_own_path'\n      }\n    });\n&lt;script&gt;\n&lt;script type=\"text/javascript\"&gt;\n    <a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>(...);\n\n    <a href=\"#!/api/Ext-method-onReady\" rel=\"Ext-method-onReady\" class=\"docClass\">Ext.onReady</a>(function() {\n      // application code here\n    });\n&lt;/script&gt;\n</code></pre>\n\n<p>Refer to config options of <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a> for the list of possible properties.</p>\n","chainable":true,"inheritdoc":null,"id":"method-setConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the path of a namespace. ...","method_calls":null,"owner":"Ext.Loader","inheritable":null,"params":[{"type":"String/Object","tagname":"params","doc":"<p>See <a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","name":"name","html_type":"String/Object"},{"type":"String","tagname":"params","doc":"<p>See <a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","name":"path","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":272,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"return":{"type":"Ext.Loader","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>"},"private":null,"static":null,"name":"setPath","doc":"<p>Sets the path of a namespace.\nFor example:</p>\n\n<pre><code><a href=\"#!/api/Ext.Loader-method-setPath\" rel=\"Ext.Loader-method-setPath\" class=\"docClass\">Ext.Loader.setPath</a>('Ext', '.');\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"method-setPath","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Synchronously loads all classes by the given names and all their direct dependencies; optionally executes the given c...","method_calls":null,"owner":"Ext.Loader","inheritable":null,"params":[{"type":"String/Array","tagname":"params","doc":"<p>Can either be a string or an array of string</p>\n","name":"expressions","html_type":"String/Array"},{"type":"Function","tagname":"params","doc":"<p>The callback function</p>\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The execution scope (<code>this</code>) of the callback function</p>\n","name":"scope","optional":true,"html_type":"Object"},{"type":"String/Array","tagname":"params","doc":"<p>Classes to be excluded, useful when being used with expressions</p>\n","name":"excludes","optional":true,"html_type":"String/Array"}],"tagname":"method","files":[{"linenr":394,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"private":null,"static":null,"name":"syncRequire","doc":"<p>Synchronously loads all classes by the given names and all their direct dependencies; optionally executes the given callback function when finishes, within the optional scope. This method is aliased by <a href=\"#!/api/Ext-method-syncRequire\" rel=\"Ext-method-syncRequire\" class=\"docClass\">Ext.syncRequire</a> for convenience</p>\n","chainable":false,"inheritdoc":null,"id":"method-syncRequire","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["require"],"owner":"Ext.Loader","inheritable":null,"params":[{"type":"Object","name":"force","html_type":"Object"}],"tagname":"method","files":[{"linenr":970,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Loader.js"}],"return":{"type":"Ext.Loader","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>"},"private":true,"static":null,"name":"triggerReady","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-triggerReady","fires":[],"linenr":null}],"author":[{"email":"jacky@sencha.com","tagname":"author","name":"Jacky Nguyen"}],"alternateClassNames":[],"doc":"<p><a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a> is the heart of the new dynamic dependency loading capability in Ext JS 4+. It is most commonly used\nvia the <a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a> shorthand. <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a> supports both asynchronous and synchronous loading\napproaches, and leverage their advantages for the best development flow.\nWe'll discuss about the pros and cons of each approach.</p>\n\n<p><strong>Note:</strong> The Loader is only enabled by default in development versions of the library (eg sencha-touch-debug.js). To\nexplicitly enable the loader, use <code><a href=\"#!/api/Ext.Loader-method-setConfig\" rel=\"Ext.Loader-method-setConfig\" class=\"docClass\">Ext.Loader.setConfig</a>({ enabled: true });</code> before the start of your script.</p>\n\n<h2>Asynchronous Loading</h2>\n\n<ul>\n<li><p>Advantages:</p>\n\n<ul>\n<li>Cross-domain</li>\n<li>No web server needed: you can run the application via the file system protocol (i.e: <code>file://path/to/your/index\n.html</code>)</li>\n<li>Best possible debugging experience: error messages come with the exact file name and line number</li>\n</ul>\n</li>\n<li><p>Disadvantages:</p>\n\n<ul>\n<li>Dependencies need to be specified before-hand</li>\n</ul>\n</li>\n</ul>\n\n\n<h3>Method 1: Explicitly include what you need:</h3>\n\n<pre><code>// Syntax\n// <a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>({String/Array} expressions);\n\n// Example: Single alias\n<a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>('widget.window');\n\n// Example: Single class name\n<a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>('Ext.window.Window');\n\n// Example: Multiple aliases / class names mix\n<a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>(['widget.window', 'layout.border', '<a href=\"#!/api/Ext.data.Connection\" rel=\"Ext.data.Connection\" class=\"docClass\">Ext.data.Connection</a>']);\n\n// Wildcards\n<a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>(['widget.*', 'layout.*', 'Ext.data.*']);\n</code></pre>\n\n<h3>Method 2: Explicitly exclude what you don't need:</h3>\n\n<pre><code>// Syntax: Note that it must be in this chaining format.\n// <a href=\"#!/api/Ext-method-exclude\" rel=\"Ext-method-exclude\" class=\"docClass\">Ext.exclude</a>({String/Array} expressions)\n//    .require({String/Array} expressions);\n\n// Include everything except Ext.data.*\n<a href=\"#!/api/Ext-method-exclude\" rel=\"Ext-method-exclude\" class=\"docClass\">Ext.exclude</a>('Ext.data.*').require('*');\n\n// Include all widgets except widget.checkbox*,\n// which will match widget.checkbox, widget.checkboxfield, widget.checkboxgroup, etc.\n<a href=\"#!/api/Ext-method-exclude\" rel=\"Ext-method-exclude\" class=\"docClass\">Ext.exclude</a>('widget.checkbox*').require('widget.*');\n</code></pre>\n\n<h1>Synchronous Loading on Demand</h1>\n\n<ul>\n<li><p><em>Advantages:</em></p>\n\n<ul>\n<li>There's no need to specify dependencies before-hand, which is always the convenience of including ext-all.js\nbefore</li>\n</ul>\n</li>\n<li><p><em>Disadvantages:</em></p>\n\n<ul>\n<li>Not as good debugging experience since file name won't be shown (except in Firebug at the moment)</li>\n<li>Must be from the same domain due to XHR restriction</li>\n<li>Need a web server, same reason as above</li>\n</ul>\n</li>\n</ul>\n\n\n<p>There's one simple rule to follow: Instantiate everything with <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a> instead of the <code>new</code> keyword</p>\n\n<pre><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('widget.window', {}); // Instead of new Ext.window.Window({...});\n\n<a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('Ext.window.Window', {}); // Same as above, using full class name instead of alias\n\n<a href=\"#!/api/Ext-method-widget\" rel=\"Ext-method-widget\" class=\"docClass\">Ext.widget</a>('window', {}); // Same as above, all you need is the traditional `xtype`\n</code></pre>\n\n<p>Behind the scene, <a href=\"#!/api/Ext.ClassManager\" rel=\"Ext.ClassManager\" class=\"docClass\">Ext.ClassManager</a> will automatically check whether the given class name / alias has already\n existed on the page. If it's not, <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a> will immediately switch itself to synchronous mode and automatic load the given\n class and all its dependencies.</p>\n\n<h1>Hybrid Loading - The Best of Both Worlds</h1>\n\n<p>It has all the advantages combined from asynchronous and synchronous loading. The development flow is simple:</p>\n\n<h3>Step 1: Start writing your application using synchronous approach.</h3>\n\n<p><a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a> will automatically fetch all dependencies on demand as they're\nneeded during run-time. For example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-onReady\" rel=\"Ext-method-onReady\" class=\"docClass\">Ext.onReady</a>(function(){\n    var window = <a href=\"#!/api/Ext-method-createWidget\" rel=\"Ext-method-createWidget\" class=\"docClass\">Ext.createWidget</a>('window', {\n        width: 500,\n        height: 300,\n        layout: {\n            type: 'border',\n            padding: 5\n        },\n        title: 'Hello Dialog',\n        items: [{\n            title: 'Navigation',\n            collapsible: true,\n            region: 'west',\n            width: 200,\n            html: 'Hello',\n            split: true\n        }, {\n            title: 'TabPanel',\n            region: 'center'\n        }]\n    });\n\n    window.show();\n});\n</code></pre>\n\n<h3>Step 2: Along the way, when you need better debugging ability, watch the console for warnings like these:</h3>\n\n<pre><code>[<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>] Synchronously loading 'Ext.window.Window'; consider adding <a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>('Ext.window.Window') before your application's code\nClassManager.js:432\n[<a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>] Synchronously loading 'Ext.layout.container.Border'; consider adding <a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>('Ext.layout.container.Border') before your application's code\n</code></pre>\n\n<p>Simply copy and paste the suggested code above <code><a href=\"#!/api/Ext-method-onReady\" rel=\"Ext-method-onReady\" class=\"docClass\">Ext.onReady</a></code>, i.e:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>('Ext.window.Window');\n<a href=\"#!/api/Ext-method-require\" rel=\"Ext-method-require\" class=\"docClass\">Ext.require</a>('Ext.layout.container.Border');\n\n<a href=\"#!/api/Ext-method-onReady\" rel=\"Ext-method-onReady\" class=\"docClass\">Ext.onReady</a>(function () {\n    // ...\n});\n</code></pre>\n\n<p>Everything should now load via asynchronous mode.</p>\n\n<h1>Deployment</h1>\n\n<p>It's important to note that dynamic loading should only be used during development on your local machines.\nDuring production, all dependencies should be combined into one single JavaScript file. <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a> makes\nthe whole process of transitioning from / to between development / maintenance and production as easy as\npossible. Internally <a href=\"#!/api/Ext.Loader-property-history\" rel=\"Ext.Loader-property-history\" class=\"docClass\">Ext.Loader.history</a> maintains the list of all dependencies your application\nneeds in the exact loading sequence. It's as simple as concatenating all files in this array into one,\nthen include it on top of your application.</p>\n\n<p>This process will be automated with Sencha Command, to be released and documented towards Ext JS 4 Final.</p>\n","name":"Ext.Loader","id":"class-Ext.Loader"}