{"autodetected":{"members":true},"short_doc":"Restores compatibility for the old Ext.Router.draw syntax. ...","singleton":true,"aliases":{},"files":[{"linenr":95,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/app/Router.js"}],"tagname":"class","members":[{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Application's onDependenciesLoaded has a deprecated-wrapped line that calls this. ...","method_calls":null,"owner":"Ext.Router","inheritable":null,"params":[{"type":"Object","name":"app","html_type":"Object"}],"tagname":"method","files":[{"linenr":106,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/app/Router.js"}],"private":null,"static":null,"name":"setAppInstance","doc":"<p>Application's <a href=\"#!/api/Ext.app.Application-method-onDependenciesLoaded\" rel=\"Ext.app.Application-method-onDependenciesLoaded\" class=\"docClass\">onDependenciesLoaded</a> has a deprecated-wrapped line that calls this. Basic idea is that once an\napp has been instantiated we set that at <a href=\"#!/api/Ext.Router\" rel=\"Ext.Router\" class=\"docClass\">Ext.Router</a>'s <code>appInstance</code> and then redirect any calls to\n<a href=\"#!/api/Ext.app.Router-method-draw\" rel=\"Ext.app.Router-method-draw\" class=\"docClass\">Ext.Router.draw</a> to that app's Router. We keep a <code>drawStack</code> above so that we can call <a href=\"#!/api/Ext.app.Router-method-draw\" rel=\"Ext.app.Router-method-draw\" class=\"docClass\">Ext.Router.draw</a> one or\nmore times before the application is even instantiated and it will simply link it up once everything is\npresent.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setAppInstance","fires":null,"linenr":null}],"alternateClassNames":[],"private":true,"doc":"<p>Restores compatibility for the old <code>Ext.Router.draw</code> syntax. This needs to be here because apps often include\n<em>routes.js</em> just after <em>app.js</em>, so this is our only opportunity to hook this in. There is a small piece of code\ninside Application's <a href=\"#!/api/Ext.app.Application-method-onDependenciesLoaded\" rel=\"Ext.app.Application-method-onDependenciesLoaded\" class=\"docClass\">onDependenciesLoaded</a> that sets up the other end of this.</p>\n","name":"Ext.Router","id":"class-Ext.Router"}