{"autodetected":{},"short_doc":"This object has been deprecated in Sencha Touch 2.0.0. ...","singleton":true,"aliases":{},"files":[{"linenr":6,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/EventManager.js"}],"tagname":"class","members":[{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Appends an event handler to an element. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"String/HTMLElement","tagname":"params","doc":"<p>The HTML element or <code>id</code> to assign the event handler to.</p>\n","name":"el","html_type":"String/HTMLElement"},{"type":"String","tagname":"params","doc":"<p>The name of the event to listen for.</p>\n","name":"eventName","html_type":"String"},{"type":"Function","tagname":"params","properties":[{"type":"Ext.EventObject","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">EventObject</a> describing the event.</p>\n","name":"evt","html_type":"<a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.EventObject</a>"},{"type":"Ext.Element","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Element</a> which was the target of the event.\nNote that this may be filtered by using the <code>delegate</code> option.</p>\n","name":"t","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object","tagname":"params","doc":"<p>The options object from the addListener call.</p>\n","name":"o","html_type":"Object"}],"doc":"<p>The handler function the event invokes. This function is passed\nthe following parameters:</p>\n","name":"handler","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>Defaults to the Element</strong>.</p>\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>Defaults to the Element</strong>.</p>\n","name":"scope","optional":true,"html_type":"Object"},{"type":"String","tagname":"params","doc":"<p>A simple selector to filter the target or look for a descendant of the target.</p>\n","name":"delegate","optional":true,"html_type":"String"},{"type":"Boolean","tagname":"params","doc":"<p><code>true</code> to stop the event. That is stop propagation, and prevent the default action.</p>\n","name":"stopEvent","optional":true,"html_type":"Boolean"},{"type":"Boolean","tagname":"params","doc":"<p><code>true</code> to prevent the default action.</p>\n","name":"preventDefault","optional":true,"html_type":"Boolean"},{"type":"Boolean","tagname":"params","doc":"<p><code>true</code> to prevent event propagation.</p>\n","name":"stopPropagation","optional":true,"html_type":"Boolean"},{"type":"Boolean","tagname":"params","doc":"<p><code>false</code> to pass a browser event to the handler function instead of an <a href=\"#!/api/Ext.event.Event\" rel=\"Ext.event.Event\" class=\"docClass\">Ext.EventObject</a>.</p>\n","name":"normalized","optional":true,"html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n","name":"delay","optional":true,"html_type":"Number"},{"type":"Boolean","tagname":"params","doc":"<p><code>true</code> to add a handler to handle just the next firing of the event, and then remove itself.</p>\n","name":"single","optional":true,"html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\nby the specified number of milliseconds. If the event fires again within that time, the original\nhandler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n","name":"buffer","optional":true,"html_type":"Number"},{"type":"Ext.Element","tagname":"params","doc":"<p>Only call the handler if the event was fired on the target Element, <em>not</em> if the event was bubbled up from a child node.</p>\n\n<p>See <a href=\"#!/api/Ext.dom.Element-method-addListener\" rel=\"Ext.dom.Element-method-addListener\" class=\"docClass\">Ext.Element.addListener</a> for examples of how to use these options.</p>\n","name":"target","optional":true,"html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"}],"doc":"<p>An object containing handler configuration properties.\nThis may contain any of the following properties:</p>\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":20,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/EventManager.js"}],"private":null,"static":null,"name":"addListener","doc":"<p>Appends an event handler to an element.  The shorthand version <a href=\"#!/api/Ext.EventManager-method-on\" rel=\"Ext.EventManager-method-on\" class=\"docClass\">on</a> is equivalent.  Typically you will\nuse <a href=\"#!/api/Ext.dom.Element-method-addListener\" rel=\"Ext.dom.Element-method-addListener\" class=\"docClass\">Ext.Element.addListener</a> directly on an Element in favor of calling this version.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addListener","deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext.dom.Element-method-addListener\" rel=\"Ext.dom.Element-method-addListener\" class=\"docClass\">addListener</a> on an instance of <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> instead.</p>\n","version":"2.0.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Appends an event handler to an element. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"String/HTMLElement","tagname":"params","doc":"<p>The html element or id to assign the event handler to.</p>\n","name":"el","html_type":"String/HTMLElement"},{"type":"String","tagname":"params","doc":"<p>The name of the event to listen for.</p>\n","name":"eventName","html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>The handler function the event invokes.</p>\n","name":"handler","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>(<code>this</code> reference) in which the handler function executes. <strong>Defaults to the Element</strong>.</p>\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>An object containing standard <a href=\"#!/api/Ext.EventManager-method-addListener\" rel=\"Ext.EventManager-method-addListener\" class=\"docClass\">addListener</a> options</p>\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":127,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/EventManager.js"}],"private":null,"static":null,"name":"on","doc":"<p>Appends an event handler to an element.  Shorthand for <a href=\"#!/api/Ext.EventManager-method-addListener\" rel=\"Ext.EventManager-method-addListener\" class=\"docClass\">addListener</a>.</p>\n","chainable":null,"inheritdoc":null,"id":"method-on","deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext.dom.Element-method-addListener\" rel=\"Ext.dom.Element-method-addListener\" class=\"docClass\">addListener</a> on an instance of <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> instead.</p>\n","version":"2.0.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds a listener to be notified when the document is ready (before onload and before images are loaded). ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":87,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/EventManager.js"}],"private":null,"static":null,"name":"onDocumentReady","doc":"<p>Adds a listener to be notified when the document is ready (before <code>onload</code> and before images are loaded).</p>\n","chainable":false,"inheritdoc":null,"id":"method-onDocumentReady","removed":{"text":"<p>Please use <a href=\"#!/api/Ext-method-onReady\" rel=\"Ext-method-onReady\" class=\"docClass\">onReady</a></p>\n","version":"2.0.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds a listener to be notified when the browser window is resized and provides resize event buffering (50 millisecond...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"Function","tagname":"params","doc":"<p>The handler function the window resize event invokes.</p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function executes. Defaults to the browser window.</p>\n","name":"scope","html_type":"Object"},{"type":"Boolean","tagname":"params","doc":"<p>Options object as passed to <a href=\"#!/api/Ext.dom.Element-method-addListener\" rel=\"Ext.dom.Element-method-addListener\" class=\"docClass\">Ext.Element.addListener</a></p>\n","name":"options","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":97,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/EventManager.js"}],"private":null,"static":null,"name":"onWindowResize","doc":"<p>Adds a listener to be notified when the browser window is resized and provides resize event buffering (50 milliseconds),\npasses new viewport width and height to handlers.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onWindowResize","deprecated":{"text":"<p>Please listen to the <a href=\"#!/api/Ext.Viewport-event-resize\" rel=\"Ext.Viewport-event-resize\" class=\"docClass\">resize</a> on <a href=\"#!/api/Ext.Viewport\" rel=\"Ext.Viewport\" class=\"docClass\">Ext.Viewport</a> instead.</p>\n","version":"2.0.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all event handers from an element. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"String/HTMLElement","tagname":"params","doc":"<p>The id or html element from which to remove all event handlers.</p>\n","name":"el","html_type":"String/HTMLElement"}],"tagname":"method","files":[{"linenr":74,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/EventManager.js"}],"private":null,"static":null,"name":"removeAll","doc":"<p>Removes all event handers from an element.  Typically you will use <a href=\"#!/api/Ext.dom.Element-method-clearListeners\" rel=\"Ext.dom.Element-method-clearListeners\" class=\"docClass\">Ext.Element.clearListeners</a>\ndirectly on an Element in favor of calling this version.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeAll","deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext.dom.Element-method-clearListeners\" rel=\"Ext.dom.Element-method-clearListeners\" class=\"docClass\">clearListeners</a> on an instance of <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> instead.</p>\n","version":"2.0.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes an event handler from an element. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"String/HTMLElement","tagname":"params","doc":"<p>The id or html element from which to remove the listener.</p>\n","name":"el","html_type":"String/HTMLElement"},{"type":"String","tagname":"params","doc":"<p>The name of the event.</p>\n","name":"eventName","html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>The handler function to remove. <strong>This must be a reference to the function passed into the <a href=\"#!/api/Ext.EventManager-method-addListener\" rel=\"Ext.EventManager-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If a scope (<code>this</code> reference) was specified when the listener was added,\nthen this must refer to the same object.</p>\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":57,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/EventManager.js"}],"private":null,"static":null,"name":"removeListener","doc":"<p>Removes an event handler from an element.  The shorthand version <a href=\"#!/api/Ext.EventManager-method-un\" rel=\"Ext.EventManager-method-un\" class=\"docClass\">un</a> is equivalent.  Typically\nyou will use <a href=\"#!/api/Ext.dom.Element-method-removeListener\" rel=\"Ext.dom.Element-method-removeListener\" class=\"docClass\">Ext.Element.removeListener</a> directly on an Element in favor of calling this version.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeListener","deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext.dom.Element-method-removeListener\" rel=\"Ext.dom.Element-method-removeListener\" class=\"docClass\">removeListener</a> on an instance of <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> instead.</p>\n","version":"2.0.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes an event handler from an element. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"String/HTMLElement","tagname":"params","doc":"<p>The id or html element from which to remove the listener.</p>\n","name":"el","html_type":"String/HTMLElement"},{"type":"String","tagname":"params","doc":"<p>The name of the event.</p>\n","name":"eventName","html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>The handler function to remove. <strong>This must be a reference to the function passed into the <a href=\"#!/api/Ext.EventManager-method-on\" rel=\"Ext.EventManager-method-on\" class=\"docClass\">on</a> call.</strong></p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If a scope (<code>this</code> reference) was specified when the listener was added,\nthen this must refer to the same object.</p>\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":140,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/EventManager.js"}],"private":null,"static":null,"name":"un","doc":"<p>Removes an event handler from an element.  Shorthand for <a href=\"#!/api/Ext.EventManager-method-removeListener\" rel=\"Ext.EventManager-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n","chainable":null,"inheritdoc":null,"id":"method-un","deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext.dom.Element-method-removeListener\" rel=\"Ext.dom.Element-method-removeListener\" class=\"docClass\">removeListener</a> on an instance of <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> instead.</p>\n","version":"2.0.0"},"fires":null,"linenr":null}],"alternateClassNames":[],"private":true,"doc":"<p>This object has been deprecated in Sencha Touch 2.0.0. Please refer to the method documentation for specific alternatives.</p>\n","name":"Ext.EventManager","id":"class-Ext.EventManager","deprecated":{"text":"\n","version":"2.0.0"}}