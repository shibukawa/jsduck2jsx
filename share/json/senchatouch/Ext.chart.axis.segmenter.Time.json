{"autodetected":{"aliases":true,"requires":true,"uses":true,"members":true,"alternateClassNames":true,"code_type":true,"mixins":true},"aliases":{"segmenter":["time"]},"requires":[],"files":[{"linenr":1,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/chart/axis/segmenter/Time.js"}],"tagname":"class","uses":[],"members":[{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Ext.chart.axis.Axis","default":null,"owner":"Ext.chart.axis.segmenter.Segmenter","accessor":true,"inheritable":null,"tagname":"cfg","files":[{"linenr":14,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/chart/axis/segmenter/Segmenter.js"}],"private":null,"static":null,"name":"axis","properties":null,"doc":"<p>The axis that the Segmenter is bound.</p>\n","inheritdoc":null,"id":"cfg-axis","html_type":"<a href=\"#!/api/Ext.chart.axis.Axis\" rel=\"Ext.chart.axis.Axis\" class=\"docClass\">Ext.chart.axis.Axis</a>","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Object","default":null,"owner":"Ext.chart.axis.segmenter.Time","accessor":true,"inheritable":null,"tagname":"cfg","files":[{"linenr":12,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/chart/axis/segmenter/Time.js"}],"private":null,"static":null,"name":"step","properties":null,"doc":"<p>If specified, the will override the result of <a href=\"#!/api/Ext.chart.axis.segmenter.Time-method-preferredStep\" rel=\"Ext.chart.axis.segmenter.Time-method-preferredStep\" class=\"docClass\">preferredStep</a>.</p>\n","inheritdoc":null,"id":"cfg-step","html_type":"Object","evented":null,"linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.Class","short_doc":"Get the reference to the current class from which this object was instantiated. ...","default":null,"owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":995,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"protected":true,"private":null,"static":null,"name":"self","properties":null,"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","inheritdoc":null,"id":"property-self","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","linenr":null},{"autodetected":{"type":true,"default":true,"readonly":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":true,"readonly":null,"tagname":"property","files":[{"linenr":99,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"$onExtended","doc":"\n","inheritdoc":null,"id":"static-property-S-onExtended","html_type":"Array","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["initConfig"],"owner":"Ext.chart.axis.segmenter.Segmenter","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":20,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/chart/axis/segmenter/Segmenter.js"}],"return":{"type":"Ext.chart.axis.segmenter.Segmenter","doc":"\n","html_type":"<a href=\"#!/api/Ext.chart.axis.segmenter.Segmenter\" rel=\"Ext.chart.axis.segmenter.Segmenter\" class=\"docClass\">Ext.chart.axis.segmenter.Segmenter</a>"},"private":null,"static":null,"name":"constructor","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-constructor","fires":[],"linenr":20},{"overrides":[{"owner":"Ext.chart.axis.segmenter.Segmenter","link":"<a href=\"#!/api/Ext.chart.axis.segmenter.Segmenter-method-add\" rel=\"Ext.chart.axis.segmenter.Segmenter-method-add\" class=\"docClass\">Ext.chart.axis.segmenter.Segmenter.add</a>","name":"add"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add step units to the value. ...","method_calls":null,"owner":"Ext.chart.axis.segmenter.Time","inheritable":null,"params":[{"type":"Object","name":"value","html_type":"Object"},{"type":"Object","name":"step","html_type":"Object"},{"type":"Object","name":"unit","html_type":"Object"}],"tagname":"method","files":[{"linenr":57,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/chart/axis/segmenter/Time.js"}],"private":null,"static":null,"name":"add","doc":"<p>Add <code>step</code> <code>unit</code>s to the value.</p>\n","chainable":null,"inheritdoc":null,"id":"method-add","fires":null,"linenr":57},{"overrides":[{"owner":"Ext.chart.axis.segmenter.Segmenter","link":"<a href=\"#!/api/Ext.chart.axis.segmenter.Segmenter-method-align\" rel=\"Ext.chart.axis.segmenter.Segmenter-method-align\" class=\"docClass\">Ext.chart.axis.segmenter.Segmenter.align</a>","name":"align"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Align value with step of units. ...","method_calls":null,"owner":"Ext.chart.axis.segmenter.Time","inheritable":null,"params":[{"type":"Object","name":"date","html_type":"Object"},{"type":"Object","name":"step","html_type":"Object"},{"type":"Object","name":"unit","html_type":"Object"}],"tagname":"method","files":[{"linenr":47,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/chart/axis/segmenter/Time.js"}],"return":{"type":"*","properties":null,"doc":"<p>Aligned value.</p>\n","name":"return","html_type":"*"},"private":null,"static":null,"name":"align","doc":"<p>Align value with step of units.\nFor example, for the date segmenter, if The unit is \"Month\" and step is 3, the value will be aligned by\nseasons.</p>\n","chainable":null,"inheritdoc":null,"id":"method-align","fires":null,"linenr":47},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the original method that was previously overridden with override,\n\nThis method is deprecated as callParent does ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":958,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the overridden method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callOverridden","doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a>,</p>\n\n<p>This method is deprecated as <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> does the same thing.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        var instance = this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n\n        return instance;\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-callOverridden","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the \"parent\" method of the current method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":764,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the parent method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callParent","doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10)); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","chainable":false,"inheritdoc":null,"id":"method-callParent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":879,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the superclass method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callSuper","doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","chainable":false,"inheritdoc":null,"id":"method-callSuper","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.mixin.Observable","link":"<a href=\"#!/api/Ext.mixin.Observable-method-destroy\" rel=\"Ext.mixin.Observable-method-destroy\" class=\"docClass\">Ext.mixin.Observable.destroy</a>","name":"destroy"},{"owner":"Ext.draw.sprite.Sprite","link":"<a href=\"#!/api/Ext.draw.sprite.Sprite-method-destroy\" rel=\"Ext.draw.sprite.Sprite-method-destroy\" class=\"docClass\">Ext.draw.sprite.Sprite.destroy</a>","name":"destroy"},{"owner":"Ext.Container","link":"<a href=\"#!/api/Ext.Container-method-destroy\" rel=\"Ext.Container-method-destroy\" class=\"docClass\">Ext.Container.destroy</a>","name":"destroy"},{"owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">Ext.Base.destroy</a>","name":"destroy"},{"owner":"Ext.dataview.DataView","link":"<a href=\"#!/api/Ext.dataview.DataView-method-destroy\" rel=\"Ext.dataview.DataView-method-destroy\" class=\"docClass\">Ext.dataview.DataView.destroy</a>","name":"destroy"},{"owner":"Ext.Component","link":"<a href=\"#!/api/Ext.Component-method-destroy\" rel=\"Ext.Component-method-destroy\" class=\"docClass\">Ext.Component.destroy</a>","name":"destroy"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1327,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"protected":true,"private":null,"static":null,"name":"destroy","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-destroy","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.chart.axis.segmenter.Segmenter","link":"<a href=\"#!/api/Ext.chart.axis.segmenter.Segmenter-method-diff\" rel=\"Ext.chart.axis.segmenter.Segmenter-method-diff\" class=\"docClass\">Ext.chart.axis.segmenter.Segmenter.diff</a>","name":"diff"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the difference between the min and max value based on the given unit scale. ...","method_calls":null,"owner":"Ext.chart.axis.segmenter.Time","inheritable":null,"params":[{"type":"Object","name":"min","html_type":"Object"},{"type":"Object","name":"max","html_type":"Object"},{"type":"Object","name":"unit","html_type":"Object"}],"tagname":"method","files":[{"linenr":36,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/chart/axis/segmenter/Time.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The number of <code>unit</code>s between min and max. It is the minimum n that min + n * unit >= max.</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"diff","doc":"<p>Returns the difference between the min and max value based on the given unit scale.</p>\n","chainable":null,"inheritdoc":null,"id":"method-diff","fires":null,"linenr":36},{"overrides":[{"owner":"Ext.chart.axis.segmenter.Segmenter","link":"<a href=\"#!/api/Ext.chart.axis.segmenter.Segmenter-method-from\" rel=\"Ext.chart.axis.segmenter.Segmenter-method-from\" class=\"docClass\">Ext.chart.axis.segmenter.Segmenter.from</a>","name":"from"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Convert from any data into the target type. ...","method_calls":null,"owner":"Ext.chart.axis.segmenter.Time","inheritable":null,"params":[{"type":"Object","name":"value","html_type":"Object"}],"tagname":"method","files":[{"linenr":32,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/chart/axis/segmenter/Time.js"}],"return":{"type":"*","properties":null,"doc":"<p>The converted value.</p>\n","name":"return","html_type":"*"},"private":null,"static":null,"name":"from","doc":"<p>Convert from any data into the target type.</p>\n","chainable":false,"inheritdoc":null,"id":"method-from","fires":null,"linenr":32},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Returns the value of axis. ...","owner":"Ext.chart.axis.segmenter.Segmenter","inheritable":null,"params":[],"files":[{"linenr":14,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/chart/axis/segmenter/Segmenter.js"}],"tagname":"method","return":{"type":"Ext.chart.axis.Axis","doc":"\n","html_type":"<a href=\"#!/api/Ext.chart.axis.Axis\" rel=\"Ext.chart.axis.Axis\" class=\"docClass\">Ext.chart.axis.Axis</a>"},"static":null,"private":null,"properties":null,"doc":"<p>Returns the value of <a href=\"#!/api/Ext.chart.axis.segmenter.Segmenter-cfg-axis\" rel=\"Ext.chart.axis.segmenter.Segmenter-cfg-axis\" class=\"docClass\">axis</a>.</p>\n","name":"getAxis","id":"method-getAxis","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":1216,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":null,"name":"getConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1150,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":null,"name":"getCurrentConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getCurrentConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the initial configuration passed to constructor. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>When supplied, value for particular configuration\noption is returned, otherwise the full config object is returned.</p>\n","name":"name","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":1230,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"return":{"type":"Object/Mixed","properties":null,"doc":"\n","name":"return","html_type":"Object/Mixed"},"private":null,"static":null,"name":"getInitialConfig","doc":"<p>Returns the initial configuration passed to constructor.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getInitialConfig","fires":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Returns the value of step. ...","owner":"Ext.chart.axis.segmenter.Time","inheritable":null,"params":[],"files":[{"linenr":12,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/chart/axis/segmenter/Time.js"}],"tagname":"method","return":{"type":"Object","doc":"\n","html_type":"Object"},"static":null,"private":null,"properties":null,"doc":"<p>Returns the value of <a href=\"#!/api/Ext.chart.axis.segmenter.Time-cfg-step\" rel=\"Ext.chart.axis.segmenter.Time-cfg-step\" class=\"docClass\">step</a>.</p>\n","name":"getStep","id":"method-getStep","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":1223,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":null,"name":"hasConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-hasConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Initialize configuration for this class. ...","method_calls":["beforeInitConfig","hasOwnProperty"],"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"instanceConfig","html_type":"Object"}],"tagname":"method","files":[{"linenr":1043,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>mixins The mixin prototypes as key - value pairs</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"initConfig","doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"method-initConfig","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"name","html_type":"String"},{"type":"Mixed","tagname":"params","doc":"\n","name":"value","html_type":"Mixed"}],"tagname":"method","files":[{"linenr":1282,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"return":{"type":"Mixed","properties":null,"doc":"\n","name":"return","html_type":"Mixed"},"private":true,"static":null,"name":"link","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-link","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"names","html_type":"Object"},{"type":"Object","name":"callback","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":1248,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":null,"name":"onConfigUpdate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onConfigUpdate","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.chart.axis.segmenter.Segmenter","link":"<a href=\"#!/api/Ext.chart.axis.segmenter.Segmenter-method-preferredStep\" rel=\"Ext.chart.axis.segmenter.Segmenter-method-preferredStep\" class=\"docClass\">Ext.chart.axis.segmenter.Segmenter.preferredStep</a>","name":"preferredStep"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Given a start point and estimated step size of a range, determine the preferred step size. ...","method_calls":["diff","getStep"],"owner":"Ext.chart.axis.segmenter.Time","inheritable":null,"params":[{"type":"Object","name":"min","html_type":"Object"},{"type":"Object","name":"estStepSize","html_type":"Object"}],"tagname":"method","files":[{"linenr":61,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/chart/axis/segmenter/Time.js"}],"return":{"type":"Object","properties":[{"type":"Number","tagname":"return","doc":"<p>The step count of units.</p>\n","name":"step","html_type":"Number"},{"type":"Number|Object","tagname":"return","doc":"<p>The unit.</p>\n","name":"unit","html_type":"Number|Object"}],"doc":"<p>Return the step size by an object of step x unit.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"preferredStep","doc":"<p>Given a start point and estimated step size of a range, determine the preferred step size.</p>\n","chainable":null,"inheritdoc":null,"id":"method-preferredStep","fires":[],"linenr":61},{"overrides":[{"owner":"Ext.chart.axis.segmenter.Segmenter","link":"<a href=\"#!/api/Ext.chart.axis.segmenter.Segmenter-method-renderer\" rel=\"Ext.chart.axis.segmenter.Segmenter-method-renderer\" class=\"docClass\">Ext.chart.axis.segmenter.Segmenter.renderer</a>","name":"renderer"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method formats the value. ...","method_calls":null,"owner":"Ext.chart.axis.segmenter.Time","inheritable":null,"params":[{"type":"Object","name":"value","html_type":"Object"},{"type":"Object","name":"context","html_type":"Object"}],"tagname":"method","files":[{"linenr":19,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/chart/axis/segmenter/Time.js"}],"return":{"type":"String","properties":null,"doc":"\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"renderer","doc":"<p>This method formats the value.</p>\n","chainable":false,"inheritdoc":null,"id":"method-renderer","fires":null,"linenr":19},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Sets the value of axis. ...","owner":"Ext.chart.axis.segmenter.Segmenter","inheritable":null,"params":[{"type":"Ext.chart.axis.Axis","name":"axis","doc":"<p>The new value.</p>\n","html_type":"<a href=\"#!/api/Ext.chart.axis.Axis\" rel=\"Ext.chart.axis.Axis\" class=\"docClass\">Ext.chart.axis.Axis</a>"}],"files":[{"linenr":14,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/chart/axis/segmenter/Segmenter.js"}],"tagname":"method","static":null,"private":null,"properties":null,"doc":"<p>Sets the value of <a href=\"#!/api/Ext.chart.axis.segmenter.Segmenter-cfg-axis\" rel=\"Ext.chart.axis.segmenter.Segmenter-cfg-axis\" class=\"docClass\">axis</a>.</p>\n","name":"setAxis","id":"method-setAxis","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"},{"type":"Object","name":"applyIfNotSet","html_type":"Object"}],"tagname":"method","files":[{"linenr":1167,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"return":{"type":"Ext.Base","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"static":null,"name":"setConfig","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-setConfig","fires":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Sets the value of step. ...","owner":"Ext.chart.axis.segmenter.Time","inheritable":null,"params":[{"type":"Object","name":"step","doc":"<p>The new value.</p>\n","html_type":"Object"}],"files":[{"linenr":12,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/chart/axis/segmenter/Time.js"}],"tagname":"method","static":null,"private":null,"properties":null,"doc":"<p>Sets the value of <a href=\"#!/api/Ext.chart.axis.segmenter.Time-cfg-step\" rel=\"Ext.chart.axis.segmenter.Time-cfg-step\" class=\"docClass\">step</a>.</p>\n","name":"setStep","id":"method-setStep","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the reference to the class from which this object was instantiated. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":696,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"protected":true,"return":{"type":"Ext.Class","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"private":null,"static":null,"name":"statics","doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();                    // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-statics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1302,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"return":{"type":"Ext.Base","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"static":null,"name":"unlink","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-unlink","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"config","html_type":"Object"},{"type":"Object","name":"fullMerge","html_type":"Object"}],"tagname":"method","files":[{"linenr":138,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"addConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-addConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":219,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"addInheritableStatics","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addInheritableStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"member","html_type":"Object"}],"tagname":"method","files":[{"linenr":313,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"addMember","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addMember","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add methods / properties to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":262,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"static":true,"private":null,"name":"addMembers","doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre class='inline-example '><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        // ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addMembers","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add / override static properties of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":180,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"addStatics","doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    // this.se\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() {  },    // My.cool.Class.method1 = function() { ... };\n    method2: function() {  }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"xtype","html_type":"Object"}],"tagname":"method","files":[{"linenr":656,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"addXtype","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addXtype","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Borrow another class' members to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Ext.Base","tagname":"params","doc":"<p>The class to borrow members from</p>\n","name":"fromClass","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"type":"Array/String","tagname":"params","doc":"<p>The names of the members to borrow</p>\n","name":"members","html_type":"Array/String"}],"tagname":"method","files":[{"linenr":341,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":true,"name":"borrow","doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    // ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-borrow","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"args","html_type":"Object"}],"tagname":"method","files":[{"linenr":545,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"protected":true,"static":true,"private":null,"name":"callParent","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-callParent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create a new instance of this Class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":31,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"return":{"type":"Object","properties":null,"doc":"<p>the created instance.</p>\n","name":"return","html_type":"Object"},"static":true,"private":null,"name":"create","doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    // ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-create","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create aliases for existing prototype methods. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","name":"alias","html_type":"String/Object"},{"type":"String/Object","tagname":"params","doc":"<p>The original method name</p>\n","name":"origin","html_type":"String/Object"}],"tagname":"method","files":[{"linenr":622,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"static":true,"private":null,"name":"createAlias","doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() {  },\n    method2: function() {  }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"static-method-createAlias","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"parent","html_type":"Object"}],"tagname":"method","files":[{"linenr":52,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"extend","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-extend","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the current class' name in string format. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":603,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"return":{"type":"String","properties":null,"doc":"<p>className</p>\n","name":"return","html_type":"String"},"static":true,"private":null,"name":"getName","doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"static-method-getName","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":332,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"implement","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-implement","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Used internally by the mixins pre-processor ...","method_calls":["addConfig"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"mixinClass","html_type":"Object"}],"tagname":"method","files":[{"linenr":560,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"mixin","doc":"<p>Used internally by the mixins pre-processor</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-mixin","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":124,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"onExtended","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-onExtended","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Override members of this class. ...","method_calls":["addConfig"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":408,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this class</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"override","doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        var instance = this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n\n        return instance;\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 2.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        var instance = this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n\n        return instance;\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","chainable":true,"inheritdoc":null,"id":"static-method-override","deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n","version":"2.1.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":106,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"triggerExtended","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-triggerExtended","fires":null,"linenr":null}],"extends":"Ext.chart.axis.segmenter.Segmenter","alternateClassNames":[],"code_type":"ext_define","mixins":[],"doc":"<p>Time data type.</p>\n","name":"Ext.chart.axis.segmenter.Time","id":"class-Ext.chart.axis.segmenter.Time"}