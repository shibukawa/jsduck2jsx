{"autodetected":{"aliases":true,"requires":true,"uses":true,"extends":true,"members":true,"alternateClassNames":true,"code_type":true,"mixins":true},"short_doc":"The LocalStorageProxy uses the new HTML5 localStorage API to save Model data locally on the\nclient browser. ...","aliases":{"proxy":["localstorage"]},"requires":[],"aside":[{"type":"guide","tagname":"aside","name":"proxies"}],"files":[{"linenr":1,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/LocalStorage.js"}],"tagname":"class","uses":[],"extends":"Ext.data.proxy.WebStorage","members":[{"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"True to batch actions of a particular type when synchronizing the store. ...","default":"true","owner":"Ext.data.proxy.Proxy","accessor":true,"inheritable":null,"tagname":"cfg","files":[{"linenr":56,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"private":null,"static":null,"name":"batchActions","properties":null,"doc":"<p>True to batch actions of a particular type when synchronizing the store.</p>\n","inheritdoc":null,"id":"cfg-batchActions","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":"Comma-separated ordering 'create', 'update' and 'destroy' actions when batching. ...","default":"'create,update,destroy'","owner":"Ext.data.proxy.Proxy","accessor":true,"inheritable":null,"tagname":"cfg","files":[{"linenr":48,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"private":null,"static":null,"name":"batchOrder","properties":null,"doc":"<p>Comma-separated ordering 'create', 'update' and 'destroy' actions when batching. Override this to set a different\norder for the batched CRUD actions to be executed in.</p>\n","inheritdoc":null,"id":"cfg-batchOrder","html_type":"String","evented":null,"linenr":null},{"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String/String[]","default":null,"owner":"Ext.mixin.Observable","accessor":true,"inheritable":null,"tagname":"cfg","files":[{"linenr":88,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":null,"static":null,"name":"bubbleEvents","properties":null,"doc":"<p>The event name to bubble, or an Array of event names.</p>\n","inheritdoc":null,"id":"cfg-bubbleEvents","html_type":"String/String[]","evented":null,"linenr":null},{"autodetected":{"type":true,"default":true,"accessor":true,"inheritable":true,"tagname":"cfg","static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":" ...","default":"'Y-m-d H:i:s.u'","owner":"Ext.data.proxy.WebStorage","accessor":true,"inheritable":null,"tagname":"cfg","files":[{"linenr":39,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"private":true,"static":null,"name":"defaultDateFormat","doc":"\n","inheritdoc":null,"id":"cfg-defaultDateFormat","html_type":"String","evented":null,"linenr":39},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"This can be set to true if you want the webstorage proxy to comply\nto the paging params set on the store. ...","default":"false","owner":"Ext.data.proxy.WebStorage","accessor":true,"inheritable":null,"tagname":"cfg","files":[{"linenr":33,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"private":null,"static":null,"name":"enablePagingParams","properties":null,"doc":"<p>This can be set to true if you want the webstorage proxy to comply\nto the paging params set on the store.</p>\n","inheritdoc":null,"id":"cfg-enablePagingParams","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","default":null,"owner":"Ext.data.proxy.WebStorage","accessor":true,"inheritable":null,"tagname":"cfg","files":[{"linenr":15,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"private":null,"static":null,"name":"id","properties":null,"doc":"<p>The unique ID used as the key in which all record data are stored in the local storage object.</p>\n","inheritdoc":null,"id":"cfg-id","html_type":"String","evented":null,"linenr":null},{"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Object","short_doc":"A config object containing one or more event handlers to be added to this object during initialization. ...","default":null,"owner":"Ext.mixin.Observable","accessor":true,"inheritable":null,"tagname":"cfg","files":[{"linenr":73,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":null,"static":null,"name":"listeners","properties":null,"doc":"<p>A config object containing one or more event handlers to be added to this object during initialization. This\nshould be a valid listeners <code>config</code> object as specified in the <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching\nmultiple handlers at once.</p>\n\n<p>See the <a href=\"#!/guide/events\">Event guide</a> for more</p>\n\n<p><strong>Note:</strong> It is bad practice to specify a listener's <code>config</code> when you are defining a class using <code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>()</code>.\nInstead, only specify listeners when you are instantiating your class with <code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>()</code>.</p>\n","inheritdoc":null,"id":"cfg-listeners","html_type":"Object","evented":null,"linenr":null},{"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"required":true,"type":"String/Ext.data.Model","short_doc":"The name of the Model to tie to this Proxy. ...","default":null,"owner":"Ext.data.proxy.Proxy","accessor":true,"inheritable":null,"tagname":"cfg","files":[{"linenr":63,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"private":null,"static":null,"name":"model","properties":null,"doc":"<p>The name of the Model to tie to this Proxy. Can be either the string name of the Model, or a reference to the\nModel constructor.</p>\n","inheritdoc":null,"id":"cfg-model","html_type":"String/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>","evented":null,"linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"Cached map of records already retrieved by this Proxy. ...","default":"{}","owner":"Ext.data.proxy.WebStorage","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":49,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"private":null,"static":null,"name":"cache","properties":null,"doc":"<p>Cached map of records already retrieved by this Proxy. Ensures that the same instance is always retrieved.</p>\n","inheritdoc":null,"id":"property-cache","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'ext-'","owner":"Ext.mixin.Identifiable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":19,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Identifiable.js"}],"private":true,"static":null,"name":"defaultIdPrefix","doc":"\n","inheritdoc":null,"id":"property-defaultIdPrefix","html_type":"String","linenr":19},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'-'","owner":"Ext.mixin.Identifiable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":21,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Identifiable.js"}],"private":true,"static":null,"name":"defaultIdSeparator","doc":"\n","inheritdoc":null,"id":"property-defaultIdSeparator","html_type":"String","linenr":21},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"false","owner":"Ext.mixin.Observable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":70,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"eventFiringSuspended","doc":"\n","inheritdoc":null,"id":"property-eventFiringSuspended","html_type":"Boolean","linenr":70},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"RegExp","short_doc":" ...","default":"/\\.|[^\\w\\-]/g","owner":"Ext.mixin.Identifiable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":17,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Identifiable.js"}],"private":true,"static":null,"name":"idCleanRegex","doc":"\n","inheritdoc":null,"id":"property-idCleanRegex","html_type":"RegExp","linenr":17},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"false","owner":"Ext.Evented","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":53,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/Evented.js"}],"private":true,"static":null,"name":"initialized","doc":"\n","inheritdoc":null,"id":"property-initialized","html_type":"Boolean","linenr":53},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.mixin.Identifiable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":13,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Identifiable.js"}],"private":true,"static":null,"name":"isIdentifiable","doc":"\n","inheritdoc":null,"id":"property-isIdentifiable","html_type":"Boolean","linenr":13},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.mixin.Observable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":59,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"isObservable","doc":"\n","inheritdoc":null,"id":"property-isObservable","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.data.proxy.Proxy","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":92,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"private":true,"static":null,"name":"isProxy","doc":"\n","inheritdoc":null,"id":"property-isProxy","html_type":"Boolean","linenr":92},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"RegExp","short_doc":" ...","default":"/^(?:delegate|single|delay|buffer|args|prepend)$/","owner":"Ext.mixin.Observable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":68,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"listenerOptionsRegex","doc":"\n","inheritdoc":null,"id":"property-listenerOptionsRegex","html_type":"RegExp","linenr":68},{"overrides":[{"owner":"Ext.mixin.Sortable","link":"<a href=\"#!/api/Ext.mixin.Sortable-property-mixinConfig\" rel=\"Ext.mixin.Sortable-property-mixinConfig\" class=\"docClass\">Ext.mixin.Sortable.mixinConfig</a>","name":"mixinConfig"}],"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{id: 'observable', hooks: {destroy: 'destroy'}}","owner":"Ext.mixin.Observable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":50,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"mixinConfig","doc":"\n","inheritdoc":null,"id":"property-mixinConfig","html_type":"Object","linenr":50},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'identifiable'","owner":"Ext.mixin.Identifiable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":15,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Identifiable.js"}],"private":true,"static":null,"name":"mixinId","doc":"\n","inheritdoc":null,"id":"property-mixinId","html_type":"String","linenr":15},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'#'","owner":"Ext.mixin.Observable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":66,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"observableIdPrefix","doc":"\n","inheritdoc":null,"id":"property-observableIdPrefix","html_type":"String","linenr":66},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'observable'","owner":"Ext.mixin.Observable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":62,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"observableType","doc":"\n","inheritdoc":null,"id":"property-observableType","html_type":"String","linenr":62},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.Class","short_doc":"Get the reference to the current class from which this object was instantiated. ...","default":null,"owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":995,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"protected":true,"private":null,"static":null,"name":"self","properties":null,"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","inheritdoc":null,"id":"property-self","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"RegExp","short_doc":" ...","default":"/^([\\w\\-]+)$/","owner":"Ext.mixin.Observable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":64,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"validIdRegex","doc":"\n","inheritdoc":null,"id":"property-validIdRegex","html_type":"RegExp","linenr":64},{"autodetected":{"type":true,"default":true,"readonly":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":true,"readonly":null,"tagname":"property","files":[{"linenr":99,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"$onExtended","doc":"\n","inheritdoc":null,"id":"static-property-S-onExtended","html_type":"Array","linenr":null},{"overrides":[{"owner":"Ext.Evented","link":"<a href=\"#!/api/Ext.Evented-method-constructor\" rel=\"Ext.Evented-method-constructor\" class=\"docClass\">Ext.Evented.constructor</a>","name":"constructor"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates the proxy, throws an error if local storage is not supported in the current browser. ...","method_calls":["callParent","getStorageObject"],"owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>Config object.</p>\n","name":"config","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":42,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"return":{"type":"Ext.data.proxy.WebStorage","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.proxy.WebStorage\" rel=\"Ext.data.proxy.WebStorage\" class=\"docClass\">Ext.data.proxy.WebStorage</a>"},"private":null,"static":null,"name":"constructor","doc":"<p>Creates the proxy, throws an error if local storage is not supported in the current browser.</p>\n","chainable":false,"inheritdoc":null,"id":"method-constructor","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Appends an after-event handler. ...","method_calls":["addListener"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"String/String[]/Object","tagname":"params","doc":"<p>The name of the event to listen for.</p>\n\n","name":"eventName","html_type":"String/String[]/Object"},{"type":"Function/String","tagname":"params","doc":"<p>The method the event invokes.</p>\n\n","name":"fn","html_type":"Function/String"},{"type":"Object","tagname":"params","doc":"<p>The scope for <code>fn</code>.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>An object containing handler configuration.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":604,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":null,"static":null,"name":"addAfterListener","doc":"<p>Appends an after-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set to <code>'after'</code>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addAfterListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Appends a before-event handler. ...","method_calls":["addListener"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"String/String[]/Object","tagname":"params","doc":"<p>The name of the event to listen for.</p>\n\n","name":"eventName","html_type":"String/String[]/Object"},{"type":"Function/String","tagname":"params","doc":"<p>The method the event invokes.</p>\n\n","name":"fn","html_type":"Function/String"},{"type":"Object","tagname":"params","doc":"<p>The scope for <code>fn</code>.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>An object containing handler configuration.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":590,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":null,"static":null,"name":"addBeforeListener","doc":"<p>Appends a before-event handler.  Returning <code>false</code> from the handler will stop the event.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> with <code>order</code> set to <code>'before'</code>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addBeforeListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getEventDispatcher"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"Object","name":"selector","html_type":"Object"},{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"},{"type":"Object","name":"options","html_type":"Object"},{"type":"Object","name":"order","html_type":"Object"}],"tagname":"method","files":[{"linenr":313,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"addDispatcherListener","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-addDispatcherListener","fires":[],"linenr":313},{"autodetected":{},"short_doc":"Adds the specified events to the list of events which this Observable may fire. ...","owner":"Ext.mixin.Observable","params":[{"type":"Object/String...","tagname":"params","doc":"<p>Either an object with event names as properties with a value of <code>true</code>\nor the first event name string if multiple event names are being passed as separate parameters.</p>\n","name":"eventNames","html_type":"Object/String..."}],"tagname":"method","files":[{"linenr":891,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"name":"addEvents","doc":"<p>Adds the specified events to the list of events which this Observable may fire.</p>\n","id":"method-addEvents","deprecated":{"text":"<p>It's no longer needed to add events before firing.</p>\n","version":"2.0"}},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Appends an event handler to this object. ...","method_calls":["changeListener"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"String/String[]/Object","tagname":"params","doc":"<p>The name of the event to listen for. May also be an object who's property names are\nevent names.</p>\n\n","name":"eventName","html_type":"String/String[]/Object"},{"type":"Function/String","tagname":"params","doc":"<p>The method the event invokes.  Will be called with arguments given to\n<a href=\"#!/api/Ext.mixin.Observable-method-fireEvent\" rel=\"Ext.mixin.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> plus the <code>options</code> parameter described below.</p>\n\n","name":"fn","html_type":"Function/String"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If\nomitted, defaults to the object which fired the event.</strong></p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. If omitted, defaults to the object\nwhich fired the event.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Number","tagname":"params","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n\n","name":"delay","optional":true,"html_type":"Number"},{"type":"Boolean","tagname":"params","doc":"<p><code>true</code> to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n","name":"single","optional":true,"html_type":"Boolean"},{"type":"String","default":"current","tagname":"params","doc":"<p>The order of when the listener should be added into the listener queue.</p>\n\n\n\n\n<p>If you set an order of <code>before</code> and the event you are listening to is preventable, you can return <code>false</code> and it will stop the event.</p>\n\n\n\n\n<p>Available options are <code>before</code>, <code>current</code> and <code>after</code>.</p>\n\n","name":"order","optional":true,"html_type":"String"},{"type":"Number","tagname":"params","doc":"<p>Causes the handler to be delayed by the specified number of milliseconds. If the event fires again within that\ntime, the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","name":"buffer","optional":true,"html_type":"Number"},{"type":"String","tagname":"params","doc":"<p>Allows you to add a listener onto a element of this component using the elements reference.</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>', {\n    listeners: {\n        element: 'element',\n        tap: function() {\n            alert('element tap!');\n        }\n    }\n});\n</code></pre>\n\n\n\n\n<p>All components have the <code>element</code> reference, which is the outer most element of the component. <a href=\"#!/api/Ext.Container\" rel=\"Ext.Container\" class=\"docClass\">Ext.Container</a> also has the\n<code>innerElement</code> element which contains all children. In most cases <code>element</code> is adequate.</p>\n\n","name":"element","optional":true,"html_type":"String"},{"type":"String","tagname":"params","doc":"<p>Uses <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">Ext.ComponentQuery</a> to delegate events to a specified query selector within this item.</p>\n\n\n\n\n<pre><code>// Create a container with a two children; a button and a toolbar\nvar container = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.Container\" rel=\"Ext.Container\" class=\"docClass\">Ext.Container</a>', {\n    items: [\n        {\n            xtype: 'toolbar',\n            docked: 'top',\n            title: 'My Toolbar'\n        },\n        {\n           xtype: 'button',\n           text: 'My Button'\n        }\n    ]\n});\n\ncontainer.addListener({\n    // Ext.Buttons have an xtype of 'button', so we use that are a selector for our delegate\n    delegate: 'button',\n\n    tap: function() {\n        alert('Button tapped!');\n    }\n});\n</code></pre>\n\n","name":"delegate","optional":true,"html_type":"String"}],"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","name":"options","optional":true,"html_type":"Object"},{"type":"String","default":"'current'","tagname":"params","doc":"<p>The order of when the listener should be added into the listener queue.\nPossible values are <code>before</code>, <code>current</code> and <code>after</code>.</p>\n\n","name":"order","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":481,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":null,"static":null,"name":"addListener","doc":"<p>Appends an event handler to this object. You can review the available handlers by looking at the 'events'\nsection of the documentation for the component you are working with.</p>\n\n<h2>Combining Options</h2>\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n<p>A delayed, one-time listener:</p>\n\n<pre><code>container.addListener('tap', this.handleTap, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n<h2>Attaching multiple handlers in 1 call</h2>\n\n<p>The method also allows for a single argument to be passed which is a config object containing properties which\nspecify multiple events. For example:</p>\n\n<pre><code>container.addListener({\n    tap  : this.onTap,\n    swipe: this.onSwipe,\n\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>container.addListener({\n    tap  : { fn: this.onTap, scope: this, single: true },\n    swipe: { fn: button.onSwipe, scope: button }\n});\n</code></pre>\n\n<p>See the <a href=\"#!/guide/events\">Events Guide</a> for more.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addListener","fires":[],"linenr":null},{"autodetected":{},"short_doc":"Adds listeners to any Observable object (or Element) which are automatically removed when this Component\nis destroyed. ...","owner":"Ext.mixin.Observable","params":[{"type":"Ext.mixin.Observable/HTMLElement","tagname":"params","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","name":"object","html_type":"<a href=\"#!/api/Ext.mixin.Observable\" rel=\"Ext.mixin.Observable\" class=\"docClass\">Ext.mixin.Observable</a>/HTMLElement"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"eventName","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>eventName</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>eventName</code> parameter was an event name, this is the scope in which\nthe handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>If the <code>eventName</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":900,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"name":"addManagedListener","doc":"<p>Adds listeners to any Observable object (or Element) which are automatically removed when this Component\nis destroyed.</p>\n","id":"method-addManagedListener","deprecated":{"text":"<p>All listeners are now automatically managed where necessary. Simply use <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n","version":"2.0"}},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["enableBubble"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"Object","name":"bubbleEvents","html_type":"Object"}],"tagname":"method","files":[{"linenr":105,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"applyBubbleEvents","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-applyBubbleEvents","fires":[],"linenr":105},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["addListener"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"Object","name":"listeners","html_type":"Object"}],"tagname":"method","files":[{"linenr":99,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"applyListeners","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-applyListeners","fires":[],"linenr":99},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.proxy.Proxy","inheritable":null,"params":[{"type":"Object","name":"model","html_type":"Object"}],"tagname":"method","files":[{"linenr":94,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"private":true,"static":null,"name":"applyModel","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-applyModel","fires":null,"linenr":94},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.proxy.Proxy","inheritable":null,"params":[{"type":"Object","name":"reader","html_type":"Object"},{"type":"Object","name":"currentReader","html_type":"Object"}],"tagname":"method","files":[{"linenr":119,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"private":true,"static":null,"name":"applyReader","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-applyReader","fires":null,"linenr":119},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.proxy.Proxy","inheritable":null,"params":[{"type":"Object","name":"writer","html_type":"Object"},{"type":"Object","name":"currentWriter","html_type":"Object"}],"tagname":"method","files":[{"linenr":156,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"private":true,"static":null,"name":"applyWriter","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-applyWriter","fires":null,"linenr":156},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Performs a batch of Operations, in the order specified by batchOrder. ...","method_calls":["getBatchActions","getBatchOrder","getModel"],"owner":"Ext.data.proxy.Proxy","inheritable":null,"params":[{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","doc":"<p>Object containing the Model instances to act upon, keyed by action name</p>\n","name":"operations","html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>Event listeners object passed straight through to the Batch -\nsee <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a> for details</p>\n","name":"listeners","optional":true,"html_type":"Object"},{"type":"Ext.data.Batch/Object","tagname":"params","doc":"<p>A <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a> object (or batch config to apply\nto the created batch). If unspecified a default batch will be auto-created.</p>\n","name":"batch","optional":true,"html_type":"<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>/Object"},{"type":"Function","tagname":"params","properties":[{"type":"Ext.data.Batch","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">batch</a> that was processed,\ncontaining all operations in their current state after processing</p>\n","name":"batch","html_type":"<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>"},{"type":"Object","tagname":"params","doc":"<p>The options argument that was originally passed into batch</p>\n","name":"options","html_type":"Object"}],"doc":"<p>The function to be called upon completion of processing the batch.\nThe callback is called regardless of success or failure and is passed the following parameters:</p>\n","name":"callback","optional":true,"html_type":"Function"},{"type":"Function","tagname":"params","properties":[{"type":"Ext.data.Batch","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">batch</a> that was processed,\ncontaining all operations in their current state after processing</p>\n","name":"batch","html_type":"<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>"},{"type":"Object","tagname":"params","doc":"<p>The options argument that was originally passed into batch</p>\n","name":"options","html_type":"Object"}],"doc":"<p>The function to be called upon successful completion of the batch. The\nsuccess function is called only if no exceptions were reported in any operations. If one or more exceptions\noccurred then the <code>failure</code> function will be called instead. The success function is called\nwith the following parameters:</p>\n","name":"success","optional":true,"html_type":"Function"},{"type":"Function","tagname":"params","properties":[{"type":"Ext.data.Batch","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">batch</a> that was processed,\ncontaining all operations in their current state after processing</p>\n","name":"batch","html_type":"<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>"},{"type":"Object","tagname":"params","doc":"<p>The options argument that was originally passed into batch</p>\n","name":"options","html_type":"Object"}],"doc":"<p>The function to be called upon unsuccessful completion of the batch. The\nfailure function is called when one or more operations returns an exception during processing (even if some\noperations were also successful). The failure function is called with the following parameters:</p>\n","name":"failure","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope in which to execute any callbacks (i.e. the <code>this</code> object inside\nthe callback, success and/or failure functions). Defaults to the proxy.</p>\n","name":"scope","optional":true,"html_type":"Object"}],"doc":"<p>Object containing one or more properties supported by the batch method:</p>\n","name":"options","html_type":"Object"}],"tagname":"method","files":[{"linenr":205,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"return":{"type":"Ext.data.Batch","properties":null,"doc":"<p>The newly created Batch</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>"},"private":null,"static":null,"name":"batch","doc":"<p>Performs a batch of <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Operations</a>, in the order specified by <a href=\"#!/api/Ext.data.proxy.Proxy-cfg-batchOrder\" rel=\"Ext.data.proxy.Proxy-cfg-batchOrder\" class=\"docClass\">batchOrder</a>. Used\ninternally by <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>'s <a href=\"#!/api/Ext.data.Store-method-sync\" rel=\"Ext.data.Store-method-sync\" class=\"docClass\">sync</a> method. Example usage:</p>\n\n<pre><code>myProxy.batch({\n    create : [myModel1, myModel2],\n    update : [myModel3],\n    destroy: [myModel4, myModel5]\n});\n</code></pre>\n\n<p>Where the myModel* above are <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a> instances - in this case 1 and 2 are new instances and\nhave not been saved before, 3 has been saved previously but needs to be updated, and 4 and 5 have already been\nsaved but should now be destroyed.</p>\n","chainable":false,"inheritdoc":null,"id":"method-batch","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the original method that was previously overridden with override,\n\nThis method is deprecated as callParent does ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":958,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the overridden method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callOverridden","doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a>,</p>\n\n<p>This method is deprecated as <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> does the same thing.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        var instance = this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n\n        return instance;\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-callOverridden","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the \"parent\" method of the current method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":764,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the parent method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callParent","doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10));     // alerts 10\n alert(My.Derived2.method(10)); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10)); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","chainable":false,"inheritdoc":null,"id":"method-callParent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":879,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the superclass method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callSuper","doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","chainable":false,"inheritdoc":null,"id":"method-callSuper","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"Object","name":"actionFn","html_type":"Object"},{"type":"Object","name":"eventName","html_type":"Object"},{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"},{"type":"Object","name":"options","html_type":"Object"},{"type":"Object","name":"order","html_type":"Object"}],"tagname":"method","files":[{"linenr":405,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"return":{"type":"Ext.mixin.Observable","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.mixin.Observable\" rel=\"Ext.mixin.Observable\" class=\"docClass\">Ext.mixin.Observable</a>"},"private":true,"static":null,"name":"changeListener","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-changeListener","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.data.proxy.Client","link":"<a href=\"#!/api/Ext.data.proxy.Client-method-clear\" rel=\"Ext.data.proxy.Client-method-clear\" class=\"docClass\">Ext.data.proxy.Client.clear</a>","name":"clear"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Destroys all records stored in the proxy and removes all keys and values used to support the proxy from the\nstorage o...","method_calls":["getId","getIds","getStorageObject","removeRecord"],"owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":456,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"private":null,"static":null,"name":"clear","doc":"<p>Destroys all records stored in the proxy and removes all keys and values used to support the proxy from the\nstorage object.</p>\n","chainable":false,"inheritdoc":null,"id":"method-clear","fires":["exception"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all listeners for this object. ...","method_calls":["getEventDispatcher","getUsedSelectors"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":662,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":null,"static":null,"name":"clearListeners","doc":"<p>Removes all listeners for this object.</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearListeners","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["clearManagedListeners","doRemoveListener"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"Object","name":"object","html_type":"Object"}],"tagname":"method","files":[{"linenr":355,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"clearManagedListeners","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-clearManagedListeners","fires":[],"linenr":355},{"overrides":[{"owner":"Ext.data.proxy.Proxy","link":"<a href=\"#!/api/Ext.data.proxy.Proxy-method-create\" rel=\"Ext.data.proxy.Proxy-method-create\" class=\"docClass\">Ext.data.proxy.Proxy.create</a>","name":"create"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"inherit docs ...","method_calls":["getIds","getModel","setIds","setRecord"],"owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[{"type":"Object","name":"operation","html_type":"Object"},{"type":"Object","name":"callback","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":70,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"private":null,"static":null,"name":"create","doc":"<p>inherit docs</p>\n","chainable":null,"inheritdoc":null,"id":"method-create","fires":["exception"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getBubbleTarget"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"Object","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":823,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"createEventBubbler","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-createEventBubbler","fires":[],"linenr":823},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates an event handling function which re-fires the event from this object as the passed event name. ...","method_calls":["doFireEvent"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"newName","html_type":"String"}],"tagname":"method","files":[{"linenr":783,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"return":{"type":"Function","properties":null,"doc":"\n","name":"return","html_type":"Function"},"private":true,"static":null,"name":"createEventRelayer","doc":"<p>Creates an event handling function which re-fires the event from this object as the passed event name.</p>\n","chainable":false,"inheritdoc":null,"id":"method-createEventRelayer","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.data.proxy.Proxy","link":"<a href=\"#!/api/Ext.data.proxy.Proxy-method-destroy\" rel=\"Ext.data.proxy.Proxy-method-destroy\" class=\"docClass\">Ext.data.proxy.Proxy.destroy</a>","name":"destroy"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"inherit ...","method_calls":["getIds","removeRecord","setIds"],"owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[{"type":"Object","name":"operation","html_type":"Object"},{"type":"Object","name":"callback","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":199,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"private":null,"static":null,"name":"destroy","doc":"<p>inherit</p>\n","chainable":null,"inheritdoc":null,"id":"method-destroy","fires":["exception"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["addDispatcherListener","getManagedListeners","getObservableId","getUsedSelectors"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"},{"type":"Object","name":"options","html_type":"Object"},{"type":"Object","name":"order","html_type":"Object"}],"tagname":"method","files":[{"linenr":268,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"\n","name":"return","html_type":"Boolean"},"private":true,"static":null,"name":"doAddListener","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-doAddListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getEventDispatcher","getObservableId"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"Object","name":"eventName","html_type":"Object"},{"type":"Object","name":"args","html_type":"Object"},{"type":"Object","name":"action","html_type":"Object"},{"type":"Object","name":"connectedController","html_type":"Object"}],"tagname":"method","files":[{"linenr":250,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"doFireEvent","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-doFireEvent","fires":[],"linenr":250},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getManagedListeners","getObservableId","removeDispatcherListener"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"},{"type":"Object","name":"options","html_type":"Object"},{"type":"Object","name":"order","html_type":"Object"}],"tagname":"method","files":[{"linenr":317,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"doRemoveListener","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-doRemoveListener","fires":[],"linenr":317},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Evented","inheritable":null,"params":[{"type":"Object","name":"me","html_type":"Object"},{"type":"Object","name":"value","html_type":"Object"},{"type":"Object","name":"oldValue","html_type":"Object"},{"type":"Object","name":"options","html_type":"Object"}],"tagname":"method","files":[{"linenr":65,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/Evented.js"}],"private":true,"static":null,"name":"doSet","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-doSet","fires":null,"linenr":65},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling this.getBubbleTarget() if\npresent. ...","method_calls":["addListener","createEventBubbler"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"String/String[]","tagname":"params","doc":"<p>The event name to bubble, or an Array of event names.</p>\n","name":"events","html_type":"String/String[]"}],"tagname":"method","files":[{"linenr":795,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":null,"static":null,"name":"enableBubble","doc":"<p>Enables events fired by this Observable to bubble up an owner hierarchy by calling <code>this.getBubbleTarget()</code> if\npresent. There is no implementation in the Observable base class.</p>\n","chainable":false,"inheritdoc":null,"id":"method-enableBubble","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fires the specified event with the passed parameters and execute a function (action)\nat the end if there are no liste...","method_calls":["doFireEvent"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to fire.</p>\n","name":"eventName","html_type":"String"},{"type":"Array","tagname":"params","doc":"<p>Arguments to pass to handers.</p>\n","name":"args","html_type":"Array"},{"type":"Function","tagname":"params","doc":"<p>Action.</p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>Scope of fn.</p>\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":219,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"fireAction","doc":"<p>Fires the specified event with the passed parameters and execute a function (action)\nat the end if there are no listeners that return <code>false</code>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireAction","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fires the specified event with the passed parameters (minus the event name, plus the options object passed\nto addList...","method_calls":["doFireEvent"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to fire.</p>\n","name":"eventName","html_type":"String"},{"type":"Object...","tagname":"params","doc":"<p>Variable number of parameters are passed to handlers.</p>\n","name":"args","html_type":"Object..."}],"tagname":"method","files":[{"linenr":183,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>Returns <code>false</code> if any of the handlers return <code>false</code>.</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"fireEvent","doc":"<p>Fires the specified event with the passed parameters (minus the event name, plus the <code>options</code> object passed\nto <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>The first argument is the name of the event. Every other argument passed will be available when you listen for\nthe event.</p>\n\n<h2>Example</h2>\n\n<p>Firstly, we set up a listener for our new event.</p>\n\n<pre><code>this.on('myevent', function(arg1, arg2, arg3, arg4, options, e) {\n    console.log(arg1); // true\n    console.log(arg2); // 2\n    console.log(arg3); // { test: 'foo' }\n    console.log(arg4); // 14\n    console.log(options); // the options added when adding the listener\n    console.log(e); // the event object with information about the event\n});\n</code></pre>\n\n<p>And then we can fire off the event.</p>\n\n<pre><code>this.fireEvent('myevent', true, 2, { test: 'foo' }, 14);\n</code></pre>\n\n<p>An event may be set to bubble up an Observable parent hierarchy by calling <a href=\"#!/api/Ext.mixin.Observable-method-enableBubble\" rel=\"Ext.mixin.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireEvent","fires":[],"linenr":null},{"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Returns the value of batchActions. ...","owner":"Ext.data.proxy.Proxy","inheritable":null,"params":[],"files":[{"linenr":56,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"tagname":"method","return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"static":null,"private":null,"properties":null,"doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.proxy.Proxy-cfg-batchActions\" rel=\"Ext.data.proxy.Proxy-cfg-batchActions\" class=\"docClass\">batchActions</a>.</p>\n","name":"getBatchActions","id":"method-getBatchActions","linenr":null},{"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Returns the value of batchOrder. ...","owner":"Ext.data.proxy.Proxy","inheritable":null,"params":[],"files":[{"linenr":48,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"tagname":"method","return":{"type":"String","doc":"\n","html_type":"String"},"static":null,"private":null,"properties":null,"doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.proxy.Proxy-cfg-batchOrder\" rel=\"Ext.data.proxy.Proxy-cfg-batchOrder\" class=\"docClass\">batchOrder</a>.</p>\n","name":"getBatchOrder","id":"method-getBatchOrder","linenr":null},{"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Returns the value of bubbleEvents. ...","owner":"Ext.mixin.Observable","inheritable":null,"params":[],"files":[{"linenr":88,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"tagname":"method","return":{"type":"String/String[]","doc":"\n","html_type":"String/String[]"},"static":null,"private":null,"properties":null,"doc":"<p>Returns the value of <a href=\"#!/api/Ext.mixin.Observable-cfg-bubbleEvents\" rel=\"Ext.mixin.Observable-cfg-bubbleEvents\" class=\"docClass\">bubbleEvents</a>.</p>\n","name":"getBubbleEvents","id":"method-getBubbleEvents","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.mixin.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":833,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"getBubbleTarget","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getBubbleTarget","fires":null,"linenr":833},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":1216,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":null,"name":"getConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1150,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":null,"name":"getCurrentConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getCurrentConfig","fires":null,"linenr":null},{"autodetected":{"type":true,"default":true,"accessor":true,"inheritable":true,"tagname":"cfg","static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Returns the value of defaultDateFormat. ...","owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[],"files":[{"linenr":39,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"tagname":"method","return":{"type":"String","doc":"\n","html_type":"String"},"static":null,"private":null,"doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.proxy.WebStorage-cfg-defaultDateFormat\" rel=\"Ext.data.proxy.WebStorage-cfg-defaultDateFormat\" class=\"docClass\">defaultDateFormat</a>.</p>\n","name":"getDefaultDateFormat","id":"method-getDefaultDateFormat","linenr":39},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Returns the value of enablePagingParams. ...","owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[],"files":[{"linenr":33,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"tagname":"method","return":{"type":"Boolean","doc":"\n","html_type":"Boolean"},"static":null,"private":null,"properties":null,"doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.proxy.WebStorage-cfg-enablePagingParams\" rel=\"Ext.data.proxy.WebStorage-cfg-enablePagingParams\" class=\"docClass\">enablePagingParams</a>.</p>\n","name":"getEnablePagingParams","id":"method-getEnablePagingParams","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getBubbleEvents","getListeners"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":137,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"getEventDispatcher","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getEventDispatcher","fires":[],"linenr":137},{"overrides":[{"owner":"Ext.mixin.Identifiable","link":"<a href=\"#!/api/Ext.mixin.Identifiable-method-getId\" rel=\"Ext.mixin.Identifiable-method-getId\" class=\"docClass\">Ext.mixin.Identifiable.getId</a>","name":"getId"}],"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Returns the value of id. ...","owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[],"files":[{"linenr":15,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"tagname":"method","return":{"type":"String","doc":"\n","html_type":"String"},"static":null,"private":null,"properties":null,"doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.proxy.WebStorage-cfg-id\" rel=\"Ext.data.proxy.WebStorage-cfg-id\" class=\"docClass\">id</a>.</p>\n","name":"getId","id":"method-getId","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the array of record IDs stored in this Proxy ...","method_calls":["getId","getStorageObject"],"owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":371,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"return":{"type":"Number[]","properties":null,"doc":"<p>The record IDs. Each is cast as a Number</p>\n","name":"return","html_type":"Number[]"},"private":true,"static":null,"name":"getIds","doc":"<p>Returns the array of record IDs stored in this Proxy</p>\n","chainable":false,"inheritdoc":null,"id":"method-getIds","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the initial configuration passed to constructor. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>When supplied, value for particular configuration\noption is returned, otherwise the full config object is returned.</p>\n","name":"name","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":1230,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"return":{"type":"Object/Mixed","properties":null,"doc":"\n","name":"return","html_type":"Object/Mixed"},"private":null,"static":null,"name":"getInitialConfig","doc":"<p>Returns the initial configuration passed to constructor.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getInitialConfig","fires":null,"linenr":null},{"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Returns the value of listeners. ...","owner":"Ext.mixin.Observable","inheritable":null,"params":[],"files":[{"linenr":73,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"tagname":"method","return":{"type":"Object","doc":"\n","html_type":"Object"},"static":null,"private":null,"properties":null,"doc":"<p>Returns the value of <a href=\"#!/api/Ext.mixin.Observable-cfg-listeners\" rel=\"Ext.mixin.Observable-cfg-listeners\" class=\"docClass\">listeners</a>.</p>\n","name":"getListeners","id":"method-getListeners","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"Object","name":"object","html_type":"Object"},{"type":"Object","name":"eventName","html_type":"Object"}],"tagname":"method","files":[{"linenr":149,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"getManagedListeners","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getManagedListeners","fires":null,"linenr":149},{"required":true,"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Returns the value of model. ...","owner":"Ext.data.proxy.Proxy","inheritable":null,"params":[],"files":[{"linenr":63,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"tagname":"method","return":{"type":"String/Ext.data.Model","doc":"\n","html_type":"String/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"static":null,"private":null,"properties":null,"doc":"<p>Returns the value of <a href=\"#!/api/Ext.data.proxy.Proxy-cfg-model\" rel=\"Ext.data.proxy.Proxy-cfg-model\" class=\"docClass\">model</a>.</p>\n","name":"getModel","id":"method-getModel","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getUniqueId"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":115,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"getObservableId","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getObservableId","fires":[],"linenr":115},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.mixin.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":133,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"getOptimizedEventDispatcher","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getOptimizedEventDispatcher","fires":null,"linenr":133},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.mixin.Identifiable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":23,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Identifiable.js"}],"private":true,"static":null,"name":"getOptimizedId","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getOptimizedId","fires":null,"linenr":23},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.mixin.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":111,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"getOptimizedObservableId","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getOptimizedObservableId","fires":null,"linenr":111},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fetches a model instance from the Proxy by ID. ...","method_calls":["getModel","getRecordKey","getStorageObject","readDate"],"owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The record's unique ID</p>\n","name":"id","html_type":"String"}],"tagname":"method","files":[{"linenr":226,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"return":{"type":"Ext.data.Model","properties":null,"doc":"<p>The model instance or undefined if the record did not exist in the storage.</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"private":true,"static":null,"name":"getRecord","doc":"<p>Fetches a model instance from the Proxy by ID. Runs each field's decode function (if present) to decode the data.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getRecord","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Given the id of a record, returns a unique string based on that id and the id of this proxy. ...","method_calls":["getId"],"owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[{"type":"String/Number/Ext.data.Model","tagname":"params","doc":"<p>The record id, or a Model instance</p>\n","name":"id","html_type":"String/Number/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"tagname":"method","files":[{"linenr":356,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"return":{"type":"String","properties":null,"doc":"<p>The unique key for this record</p>\n","name":"return","html_type":"String"},"private":true,"static":null,"name":"getRecordKey","doc":"<p>Given the id of a record, returns a unique string based on that id and the id of this proxy. This is used when\nstoring data in the local storage object and should prevent naming collisions.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getRecordKey","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.data.proxy.WebStorage","link":"<a href=\"#!/api/Ext.data.proxy.WebStorage-method-getStorageObject\" rel=\"Ext.data.proxy.WebStorage-method-getStorageObject\" class=\"docClass\">Ext.data.proxy.WebStorage.getStorageObject</a>","name":"getStorageObject"}],"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"inherit docs ...","method_calls":null,"owner":"Ext.data.proxy.LocalStorage","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":68,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/LocalStorage.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The storage object</p>\n","name":"return","html_type":"Object"},"private":true,"static":null,"name":"getStorageObject","doc":"<p>inherit docs</p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-getStorageObject","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.mixin.Identifiable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":27,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Identifiable.js"}],"private":true,"static":null,"name":"getUniqueId","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getUniqueId","fires":null,"linenr":27},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.mixin.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":172,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"getUsedSelectors","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getUsedSelectors","fires":null,"linenr":172},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":1223,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":null,"name":"hasConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-hasConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Checks to see if this object has any listeners for a specified event ...","method_calls":["getEventDispatcher","getObservableId"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to check for</p>\n","name":"eventName","html_type":"String"}],"tagname":"method","files":[{"linenr":677,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>True if the event is being listened for, else false</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"hasListener","doc":"<p>Checks to see if this object has any listeners for a specified event</p>\n","chainable":false,"inheritdoc":null,"id":"method-hasListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Initialize configuration for this class. ...","method_calls":["beforeInitConfig","hasOwnProperty"],"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"instanceConfig","html_type":"Object"}],"tagname":"method","files":[{"linenr":1043,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>mixins The mixin prototypes as key - value pairs</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"initConfig","doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"method-initConfig","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.Evented","link":"<a href=\"#!/api/Ext.Evented-method-initialize\" rel=\"Ext.Evented-method-initialize\" class=\"docClass\">Ext.Evented.initialize</a>","name":"initialize"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets up the Proxy by claiming the key in the storage object that corresponds to the unique id of this Proxy. ...","method_calls":["callParent","fireEvent","getId","getStorageObject"],"owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":441,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"private":true,"static":null,"name":"initialize","doc":"<p>Sets up the Proxy by claiming the key in the storage object that corresponds to the unique id of this Proxy. Called\nautomatically by the constructor, this should not need to be called again unless <a href=\"#!/api/Ext.data.proxy.WebStorage-method-clear\" rel=\"Ext.data.proxy.WebStorage-method-clear\" class=\"docClass\">clear</a> has been called.</p>\n","chainable":false,"inheritdoc":null,"id":"method-initialize","fires":["exception"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"name","html_type":"String"},{"type":"Mixed","tagname":"params","doc":"\n","name":"value","html_type":"Mixed"}],"tagname":"method","files":[{"linenr":1282,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"return":{"type":"Mixed","properties":null,"doc":"\n","name":"return","html_type":"Mixed"},"private":true,"static":null,"name":"link","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-link","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Alias for addManagedListener. ...","method_calls":null,"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"Ext.mixin.Observable/HTMLElement","tagname":"params","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","name":"object","html_type":"<a href=\"#!/api/Ext.mixin.Observable\" rel=\"Ext.mixin.Observable\" class=\"docClass\">Ext.mixin.Observable</a>/HTMLElement"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"eventName","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>eventName</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>eventName</code> parameter was an event name, this is the scope in which\nthe handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>If the <code>eventName</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":933,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"return":null,"private":null,"static":null,"name":"mon","doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-addManagedListener\" rel=\"Ext.mixin.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-mon","deprecated":{"text":"<p>This is now done automatically</p>\n","version":"2.0.0"},"fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Alias for removeManagedListener. ...","method_calls":null,"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"Ext.mixin.Observable/HTMLElement","tagname":"params","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","name":"object","html_type":"<a href=\"#!/api/Ext.mixin.Observable\" rel=\"Ext.mixin.Observable\" class=\"docClass\">Ext.mixin.Observable</a>/HTMLElement"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"eventName","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>eventName</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>eventName</code> parameter was an event name, this is the scope in which\nthe handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":940,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"return":null,"private":null,"static":null,"name":"mun","doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-removeManagedListener\" rel=\"Ext.mixin.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-mun","deprecated":{"text":"<p>This is now done automatically</p>\n","version":"2.0.0"},"fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Alias for addListener. ...","method_calls":null,"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"String/String[]/Object","tagname":"params","doc":"<p>The name of the event to listen for. May also be an object who's property names are\nevent names.</p>\n\n","name":"eventName","html_type":"String/String[]/Object"},{"type":"Function/String","tagname":"params","doc":"<p>The method the event invokes.  Will be called with arguments given to\n<a href=\"#!/api/Ext.mixin.Observable-method-fireEvent\" rel=\"Ext.mixin.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> plus the <code>options</code> parameter described below.</p>\n\n","name":"fn","html_type":"Function/String"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If\nomitted, defaults to the object which fired the event.</strong></p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. If omitted, defaults to the object\nwhich fired the event.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Number","tagname":"params","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n\n","name":"delay","optional":true,"html_type":"Number"},{"type":"Boolean","tagname":"params","doc":"<p><code>true</code> to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n","name":"single","optional":true,"html_type":"Boolean"},{"type":"String","default":"current","tagname":"params","doc":"<p>The order of when the listener should be added into the listener queue.</p>\n\n\n\n\n<p>If you set an order of <code>before</code> and the event you are listening to is preventable, you can return <code>false</code> and it will stop the event.</p>\n\n\n\n\n<p>Available options are <code>before</code>, <code>current</code> and <code>after</code>.</p>\n\n","name":"order","optional":true,"html_type":"String"},{"type":"Number","tagname":"params","doc":"<p>Causes the handler to be delayed by the specified number of milliseconds. If the event fires again within that\ntime, the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","name":"buffer","optional":true,"html_type":"Number"},{"type":"String","tagname":"params","doc":"<p>Allows you to add a listener onto a element of this component using the elements reference.</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>', {\n    listeners: {\n        element: 'element',\n        tap: function() {\n            alert('element tap!');\n        }\n    }\n});\n</code></pre>\n\n\n\n\n<p>All components have the <code>element</code> reference, which is the outer most element of the component. <a href=\"#!/api/Ext.Container\" rel=\"Ext.Container\" class=\"docClass\">Ext.Container</a> also has the\n<code>innerElement</code> element which contains all children. In most cases <code>element</code> is adequate.</p>\n\n","name":"element","optional":true,"html_type":"String"},{"type":"String","tagname":"params","doc":"<p>Uses <a href=\"#!/api/Ext.ComponentQuery\" rel=\"Ext.ComponentQuery\" class=\"docClass\">Ext.ComponentQuery</a> to delegate events to a specified query selector within this item.</p>\n\n\n\n\n<pre><code>// Create a container with a two children; a button and a toolbar\nvar container = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.Container\" rel=\"Ext.Container\" class=\"docClass\">Ext.Container</a>', {\n    items: [\n        {\n            xtype: 'toolbar',\n            docked: 'top',\n            title: 'My Toolbar'\n        },\n        {\n           xtype: 'button',\n           text: 'My Button'\n        }\n    ]\n});\n\ncontainer.addListener({\n    // Ext.Buttons have an xtype of 'button', so we use that are a selector for our delegate\n    delegate: 'button',\n\n    tap: function() {\n        alert('Button tapped!');\n    }\n});\n</code></pre>\n\n","name":"delegate","optional":true,"html_type":"String"}],"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","name":"options","optional":true,"html_type":"Object"},{"type":"String","default":"'current'","tagname":"params","doc":"<p>The order of when the listener should be added into the listener queue.\nPossible values are <code>before</code>, <code>current</code> and <code>after</code>.</p>\n\n","name":"order","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":852,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"return":null,"private":null,"static":null,"name":"on","doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-on","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Alias for addAfterListener. ...","method_calls":null,"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"String/String[]/Object","tagname":"params","doc":"<p>The name of the event to listen for.</p>\n\n","name":"eventName","html_type":"String/String[]/Object"},{"type":"Function/String","tagname":"params","doc":"<p>The method the event invokes.</p>\n\n","name":"fn","html_type":"Function/String"},{"type":"Object","tagname":"params","doc":"<p>The scope for <code>fn</code>.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>An object containing handler configuration.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":870,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"return":null,"private":null,"static":null,"name":"onAfter","doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-addAfterListener\" rel=\"Ext.mixin.Observable-method-addAfterListener\" class=\"docClass\">addAfterListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-onAfter","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"The internal callback that the proxy uses to call any specified user callbacks after completion of a batch ...","method_calls":null,"owner":"Ext.data.proxy.Proxy","inheritable":null,"params":[{"type":"Object","name":"batchOptions","html_type":"Object"},{"type":"Object","name":"batch","html_type":"Object"}],"tagname":"method","files":[{"linenr":313,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"private":true,"static":null,"name":"onBatchComplete","doc":"<p>The internal callback that the proxy uses to call any specified user callbacks after completion of a batch</p>\n","chainable":false,"inheritdoc":null,"id":"method-onBatchComplete","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Alias for addBeforeListener. ...","method_calls":null,"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"String/String[]/Object","tagname":"params","doc":"<p>The name of the event to listen for.</p>\n\n","name":"eventName","html_type":"String/String[]/Object"},{"type":"Function/String","tagname":"params","doc":"<p>The method the event invokes.</p>\n\n","name":"fn","html_type":"Function/String"},{"type":"Object","tagname":"params","doc":"<p>The scope for <code>fn</code>.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>An object containing handler configuration.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":864,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"return":null,"private":null,"static":null,"name":"onBefore","doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-addBeforeListener\" rel=\"Ext.mixin.Observable-method-addBeforeListener\" class=\"docClass\">addBeforeListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-onBefore","fires":null,"linenr":null},{"type":null,"overrides":[{"owner":"Ext.Evented","link":"<a href=\"#!/api/Ext.Evented-method-onClassExtended\" rel=\"Ext.Evented-method-onClassExtended\" class=\"docClass\">Ext.Evented.onClassExtended</a>","name":"onClassExtended"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.proxy.Proxy","inheritable":null,"params":[{"type":"Object","name":"cls","html_type":"Object"},{"type":"Object","name":"data","html_type":"Object"}],"tagname":"method","files":[{"linenr":335,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"return":null,"private":true,"static":null,"name":"onClassExtended","doc":"<p><deprecated product=touch since=2.0></deprecated></p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-onClassExtended","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"names","html_type":"Object"},{"type":"Object","name":"callback","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":1248,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":null,"name":"onConfigUpdate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onConfigUpdate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getReader","getWriter"],"owner":"Ext.data.proxy.Proxy","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":200,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"private":true,"static":null,"name":"onDestroy","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onDestroy","fires":[],"linenr":200},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["fireEvent","getModel","getReader","setModel"],"owner":"Ext.data.proxy.Proxy","inheritable":null,"params":[{"type":"Object","name":"data","html_type":"Object"}],"tagname":"method","files":[{"linenr":141,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"private":true,"static":null,"name":"onMetaChange","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onMetaChange","fires":["<a href=\"#!/api/Ext.data.proxy.Proxy-event-metachange\" rel=\"Ext.data.proxy.Proxy-event-metachange\" class=\"docClass\">metachange</a>"],"linenr":141},{"overrides":[{"owner":"Ext.data.proxy.Proxy","link":"<a href=\"#!/api/Ext.data.proxy.Proxy-method-read\" rel=\"Ext.data.proxy.Proxy-method-read\" class=\"docClass\">Ext.data.proxy.Proxy.read</a>","name":"read"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"inherit docs ...","method_calls":["getEnablePagingParams","getIds","getModel","getRecord"],"owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[{"type":"Object","name":"operation","html_type":"Object"},{"type":"Object","name":"callback","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":103,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"private":null,"static":null,"name":"read","doc":"<p>inherit docs</p>\n","chainable":null,"inheritdoc":null,"id":"method-read","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getDefaultDateFormat"],"owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[{"type":"Object","name":"field","html_type":"Object"},{"type":"Object","name":"date","html_type":"Object"}],"tagname":"method","files":[{"linenr":425,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"private":true,"static":null,"name":"readDate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-readDate","fires":[],"linenr":425},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["doFireEvent"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"Object","name":"args","html_type":"Object"},{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"},{"type":"Object","name":"options","html_type":"Object"},{"type":"Object","name":"order","html_type":"Object"}],"tagname":"method","files":[{"linenr":758,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"relayEvent","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-relayEvent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Relays selected events from the specified Observable as if the events were fired by this. ...","method_calls":["createEventRelayer"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The Observable whose events this object is to relay.</p>\n","name":"object","html_type":"Object"},{"type":"String/Array/Object","tagname":"params","doc":"<p>Array of event names to relay.</p>\n","name":"events","html_type":"String/Array/Object"}],"tagname":"method","files":[{"linenr":721,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"return":{"type":"Ext.mixin.Observable","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.mixin.Observable\" rel=\"Ext.mixin.Observable\" class=\"docClass\">Ext.mixin.Observable</a>"},"private":null,"static":null,"name":"relayEvents","doc":"<p>Relays selected events from the specified Observable as if the events were fired by <code>this</code>.</p>\n","chainable":true,"inheritdoc":null,"id":"method-relayEvents","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes a before-event handler. ...","method_calls":["removeListener"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"String/String[]/Object","tagname":"params","doc":"<p>The name of the event the handler was associated with.</p>\n\n","name":"eventName","html_type":"String/String[]/Object"},{"type":"Function/String","tagname":"params","doc":"<p>The handler to remove.</p>\n\n","name":"fn","html_type":"Function/String"},{"type":"Object","tagname":"params","doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>Extra options object.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":648,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":null,"static":null,"name":"removeAfterListener","doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'after'</code>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeAfterListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes a before-event handler. ...","method_calls":["removeListener"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"String/String[]/Object","tagname":"params","doc":"<p>The name of the event the handler was associated with.</p>\n\n","name":"eventName","html_type":"String/String[]/Object"},{"type":"Function/String","tagname":"params","doc":"<p>The handler to remove.</p>\n\n","name":"fn","html_type":"Function/String"},{"type":"Object","tagname":"params","doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>Extra options object.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":634,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":null,"static":null,"name":"removeBeforeListener","doc":"<p>Removes a before-event handler.</p>\n\n<p>Same as <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a> with <code>order</code> set to <code>'before'</code>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeBeforeListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getEventDispatcher"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"Object","name":"selector","html_type":"Object"},{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"},{"type":"Object","name":"order","html_type":"Object"}],"tagname":"method","files":[{"linenr":351,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"removeDispatcherListener","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-removeDispatcherListener","fires":[],"linenr":351},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes an event handler. ...","method_calls":["changeListener"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"String/String[]/Object","tagname":"params","doc":"<p>The type of event the handler was associated with.</p>\n\n","name":"eventName","html_type":"String/String[]/Object"},{"type":"Function/String","tagname":"params","doc":"<p>The handler to remove. <strong>This must be a reference to the function passed into the\n<a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","name":"fn","html_type":"Function/String"},{"type":"Object","tagname":"params","doc":"<p>The scope originally specified for the handler. It must be the same as the\nscope argument specified in the original call to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> or the listener will not be removed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>Extra options object. See <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> for details.</p>\n\n","name":"options","optional":true,"html_type":"Object"},{"type":"String","default":"'current'","tagname":"params","doc":"<p>The order of the listener to remove.\nPossible values are <code>before</code>, <code>current</code> and <code>after</code>.</p>\n\n","name":"order","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":618,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":null,"static":null,"name":"removeListener","doc":"<p>Removes an event handler.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeListener","fires":[],"linenr":null},{"autodetected":{},"short_doc":"Adds listeners to any Observable object (or Element) which are automatically removed when this Component\nis destroyed. ...","owner":"Ext.mixin.Observable","params":[{"type":"Ext.mixin.Observable/HTMLElement","tagname":"params","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","name":"object","html_type":"<a href=\"#!/api/Ext.mixin.Observable\" rel=\"Ext.mixin.Observable\" class=\"docClass\">Ext.mixin.Observable</a>/HTMLElement"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"eventName","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>eventName</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>eventName</code> parameter was an event name, this is the scope in which\nthe handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":917,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"name":"removeManagedListener","doc":"<p>Adds listeners to any Observable object (or Element) which are automatically removed when this Component\nis destroyed.</p>\n","id":"method-removeManagedListener","deprecated":{"text":"<p>All listeners are now automatically managed where necessary. Simply use <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n","version":"2.0"}},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Physically removes a given record from the local storage. ...","method_calls":["getIds","getRecordKey","getStorageObject","setIds"],"owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[{"type":"String/Number/Ext.data.Model","tagname":"params","doc":"<p>The id of the record to remove,\nor an <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> instance.</p>\n","name":"id","html_type":"String/Number/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"type":"Boolean","tagname":"params","doc":"<p>False to skip saving the array of ids\nrepresenting the set of all records in the Proxy.</p>\n","name":"updateIds","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":329,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"private":true,"static":null,"name":"removeRecord","doc":"<p>Physically removes a given record from the local storage. Used internally\nby <a href=\"#!/api/Ext.data.proxy.WebStorage-method-destroy\" rel=\"Ext.data.proxy.WebStorage-method-destroy\" class=\"docClass\">destroy</a>, which you should use instead because it updates the\nlist of currently-stored record ids.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeRecord","fires":["exception"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Resumes firing events (see suspendEvents). ...","method_calls":null,"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>Pass as true to discard any queued events.</p>\n","name":"discardQueuedEvents","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":697,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":null,"static":null,"name":"resumeEvents","doc":"<p>Resumes firing events (see <a href=\"#!/api/Ext.mixin.Observable-method-suspendEvents\" rel=\"Ext.mixin.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n","chainable":false,"inheritdoc":null,"id":"method-resumeEvents","fires":null,"linenr":null},{"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Sets the value of batchActions. ...","owner":"Ext.data.proxy.Proxy","inheritable":null,"params":[{"type":"Boolean","name":"batchActions","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"files":[{"linenr":56,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"tagname":"method","static":null,"private":null,"properties":null,"doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.proxy.Proxy-cfg-batchActions\" rel=\"Ext.data.proxy.Proxy-cfg-batchActions\" class=\"docClass\">batchActions</a>.</p>\n","name":"setBatchActions","id":"method-setBatchActions","linenr":null},{"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Sets the value of batchOrder. ...","owner":"Ext.data.proxy.Proxy","inheritable":null,"params":[{"type":"String","name":"batchOrder","doc":"<p>The new value.</p>\n","html_type":"String"}],"files":[{"linenr":48,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"tagname":"method","static":null,"private":null,"properties":null,"doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.proxy.Proxy-cfg-batchOrder\" rel=\"Ext.data.proxy.Proxy-cfg-batchOrder\" class=\"docClass\">batchOrder</a>.</p>\n","name":"setBatchOrder","id":"method-setBatchOrder","linenr":null},{"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Sets the value of bubbleEvents. ...","owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"String/String[]","name":"bubbleEvents","doc":"<p>The new value.</p>\n","html_type":"String/String[]"}],"files":[{"linenr":88,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"tagname":"method","static":null,"private":null,"properties":null,"doc":"<p>Sets the value of <a href=\"#!/api/Ext.mixin.Observable-cfg-bubbleEvents\" rel=\"Ext.mixin.Observable-cfg-bubbleEvents\" class=\"docClass\">bubbleEvents</a>.</p>\n","name":"setBubbleEvents","id":"method-setBubbleEvents","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"},{"type":"Object","name":"applyIfNotSet","html_type":"Object"}],"tagname":"method","files":[{"linenr":1167,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"return":{"type":"Ext.Base","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"static":null,"name":"setConfig","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-setConfig","fires":null,"linenr":null},{"autodetected":{"type":true,"default":true,"accessor":true,"inheritable":true,"tagname":"cfg","static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Sets the value of defaultDateFormat. ...","owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[{"type":"String","name":"defaultDateFormat","doc":"<p>The new value.</p>\n","html_type":"String"}],"files":[{"linenr":39,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"tagname":"method","static":null,"private":null,"doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.proxy.WebStorage-cfg-defaultDateFormat\" rel=\"Ext.data.proxy.WebStorage-cfg-defaultDateFormat\" class=\"docClass\">defaultDateFormat</a>.</p>\n","name":"setDefaultDateFormat","id":"method-setDefaultDateFormat","linenr":39},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Sets the value of enablePagingParams. ...","owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[{"type":"Boolean","name":"enablePagingParams","doc":"<p>The new value.</p>\n","html_type":"Boolean"}],"files":[{"linenr":33,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"tagname":"method","static":null,"private":null,"properties":null,"doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.proxy.WebStorage-cfg-enablePagingParams\" rel=\"Ext.data.proxy.WebStorage-cfg-enablePagingParams\" class=\"docClass\">enablePagingParams</a>.</p>\n","name":"setEnablePagingParams","id":"method-setEnablePagingParams","linenr":null},{"overrides":[{"owner":"Ext.mixin.Identifiable","link":"<a href=\"#!/api/Ext.mixin.Identifiable-method-setId\" rel=\"Ext.mixin.Identifiable-method-setId\" class=\"docClass\">Ext.mixin.Identifiable.setId</a>","name":"setId"}],"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Sets the value of id. ...","owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[{"type":"String","name":"id","doc":"<p>The new value.</p>\n","html_type":"String"}],"files":[{"linenr":15,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"tagname":"method","static":null,"private":null,"properties":null,"doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.proxy.WebStorage-cfg-id\" rel=\"Ext.data.proxy.WebStorage-cfg-id\" class=\"docClass\">id</a>.</p>\n","name":"setId","id":"method-setId","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Saves the array of ids representing the set of all records in the Proxy ...","method_calls":["fireEvent","getId","getStorageObject"],"owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[{"type":"Number[]","tagname":"params","doc":"<p>The ids to set</p>\n","name":"ids","html_type":"Number[]"}],"tagname":"method","files":[{"linenr":388,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"private":true,"static":null,"name":"setIds","doc":"<p>Saves the array of ids representing the set of all records in the Proxy</p>\n","chainable":false,"inheritdoc":null,"id":"method-setIds","fires":["exception"],"linenr":null},{"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Sets the value of listeners. ...","owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"Object","name":"listeners","doc":"<p>The new value.</p>\n","html_type":"Object"}],"files":[{"linenr":73,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"tagname":"method","static":null,"private":null,"properties":null,"doc":"<p>Sets the value of <a href=\"#!/api/Ext.mixin.Observable-cfg-listeners\" rel=\"Ext.mixin.Observable-cfg-listeners\" class=\"docClass\">listeners</a>.</p>\n","name":"setListeners","id":"method-setListeners","linenr":null},{"required":true,"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"short_doc":"Sets the value of model. ...","owner":"Ext.data.proxy.Proxy","inheritable":null,"params":[{"type":"String/Ext.data.Model","name":"model","doc":"<p>The new value.</p>\n","html_type":"String/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"files":[{"linenr":63,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"tagname":"method","static":null,"private":null,"properties":null,"doc":"<p>Sets the value of <a href=\"#!/api/Ext.data.proxy.Proxy-cfg-model\" rel=\"Ext.data.proxy.Proxy-cfg-model\" class=\"docClass\">model</a>.</p>\n","name":"setModel","id":"method-setModel","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Saves the given record in the Proxy. ...","method_calls":["fireEvent","getModel","getRecordKey","getStorageObject","writeDate"],"owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[{"type":"Ext.data.Model","tagname":"params","doc":"<p>The model instance</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"type":"String","tagname":"params","doc":"<p>The id to save the record under (defaults to the value of the record's getId() function)</p>\n","name":"id","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":271,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"private":null,"static":null,"name":"setRecord","doc":"<p>Saves the given record in the Proxy. Runs each field's encode function (if present) to encode the data.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setRecord","fires":["exception"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the reference to the class from which this object was instantiated. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":696,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"protected":true,"return":{"type":"Ext.Class","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"private":null,"static":null,"name":"statics","doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self();                    // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-statics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Suspends the firing of all events. ...","method_calls":null,"owner":"Ext.mixin.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":687,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":null,"static":null,"name":"suspendEvents","doc":"<p>Suspends the firing of all events.</p>\n\n<p>All events will be queued but you can discard the queued events by passing false in\nthe <a href=\"#!/api/Ext.mixin.Observable-method-resumeEvents\" rel=\"Ext.mixin.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call</p>\n","chainable":false,"inheritdoc":null,"id":"method-suspendEvents","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["changeListener"],"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"Object","name":"toggle","html_type":"Object"},{"type":"Object","name":"eventName","html_type":"Object"},{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"},{"type":"Object","name":"options","html_type":"Object"},{"type":"Object","name":"order","html_type":"Object"}],"tagname":"method","files":[{"linenr":586,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"private":true,"static":null,"name":"toggleListener","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-toggleListener","fires":[],"linenr":586},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Alias for removeListener. ...","method_calls":null,"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"String/String[]/Object","tagname":"params","doc":"<p>The type of event the handler was associated with.</p>\n\n","name":"eventName","html_type":"String/String[]/Object"},{"type":"Function/String","tagname":"params","doc":"<p>The handler to remove. <strong>This must be a reference to the function passed into the\n<a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","name":"fn","html_type":"Function/String"},{"type":"Object","tagname":"params","doc":"<p>The scope originally specified for the handler. It must be the same as the\nscope argument specified in the original call to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> or the listener will not be removed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>Extra options object. See <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">addListener</a> for details.</p>\n\n","name":"options","optional":true,"html_type":"Object"},{"type":"String","default":"'current'","tagname":"params","doc":"<p>The order of the listener to remove.\nPossible values are <code>before</code>, <code>current</code> and <code>after</code>.</p>\n\n","name":"order","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":858,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"return":null,"private":null,"static":null,"name":"un","doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-removeListener\" rel=\"Ext.mixin.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-un","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Alias for removeAfterListener. ...","method_calls":null,"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"String/String[]/Object","tagname":"params","doc":"<p>The name of the event the handler was associated with.</p>\n\n","name":"eventName","html_type":"String/String[]/Object"},{"type":"Function/String","tagname":"params","doc":"<p>The handler to remove.</p>\n\n","name":"fn","html_type":"Function/String"},{"type":"Object","tagname":"params","doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>Extra options object.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":882,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"return":null,"private":null,"static":null,"name":"unAfter","doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-removeAfterListener\" rel=\"Ext.mixin.Observable-method-removeAfterListener\" class=\"docClass\">removeAfterListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-unAfter","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Alias for removeBeforeListener. ...","method_calls":null,"owner":"Ext.mixin.Observable","inheritable":null,"params":[{"type":"String/String[]/Object","tagname":"params","doc":"<p>The name of the event the handler was associated with.</p>\n\n","name":"eventName","html_type":"String/String[]/Object"},{"type":"Function/String","tagname":"params","doc":"<p>The handler to remove.</p>\n\n","name":"fn","html_type":"Function/String"},{"type":"Object","tagname":"params","doc":"<p>The scope originally specified for <code>fn</code>.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>Extra options object.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":876,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/mixin/Observable.js"}],"return":null,"private":null,"static":null,"name":"unBefore","doc":"<p>Alias for <a href=\"#!/api/Ext.mixin.Observable-method-removeBeforeListener\" rel=\"Ext.mixin.Observable-method-removeBeforeListener\" class=\"docClass\">removeBeforeListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-unBefore","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1302,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"return":{"type":"Ext.Base","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"static":null,"name":"unlink","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-unlink","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.data.proxy.Proxy","link":"<a href=\"#!/api/Ext.data.proxy.Proxy-method-update\" rel=\"Ext.data.proxy.Proxy-method-update\" class=\"docClass\">Ext.data.proxy.Proxy.update</a>","name":"update"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"inherit docs ...","method_calls":["getIds","setIds","setRecord"],"owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[{"type":"Object","name":"operation","html_type":"Object"},{"type":"Object","name":"callback","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":169,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"private":null,"static":null,"name":"update","doc":"<p>inherit docs</p>\n","chainable":null,"inheritdoc":null,"id":"method-update","fires":["exception"],"linenr":null},{"type":null,"overrides":[{"owner":"Ext.data.proxy.Proxy","link":"<a href=\"#!/api/Ext.data.proxy.Proxy-method-updateModel\" rel=\"Ext.data.proxy.Proxy-method-updateModel\" class=\"docClass\">Ext.data.proxy.Proxy.updateModel</a>","name":"updateModel"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["callParent","getId","setId"],"owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[{"type":"Object","name":"model","html_type":"Object"}],"tagname":"method","files":[{"linenr":62,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"return":null,"private":true,"static":null,"name":"updateModel","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-updateModel","fires":[],"linenr":62},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getModel","setModel"],"owner":"Ext.data.proxy.Proxy","inheritable":null,"params":[{"type":"Object","name":"reader","html_type":"Object"}],"tagname":"method","files":[{"linenr":123,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"private":true,"static":null,"name":"updateReader","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-updateReader","fires":[],"linenr":123},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getDefaultDateFormat"],"owner":"Ext.data.proxy.WebStorage","inheritable":null,"params":[{"type":"Object","name":"field","html_type":"Object"},{"type":"Object","name":"date","html_type":"Object"}],"tagname":"method","files":[{"linenr":409,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/WebStorage.js"}],"private":true,"static":null,"name":"writeDate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-writeDate","fires":[],"linenr":409},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"config","html_type":"Object"},{"type":"Object","name":"fullMerge","html_type":"Object"}],"tagname":"method","files":[{"linenr":138,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"addConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-addConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":219,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"addInheritableStatics","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addInheritableStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"member","html_type":"Object"}],"tagname":"method","files":[{"linenr":313,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"addMember","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addMember","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add methods / properties to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":262,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"static":true,"private":null,"name":"addMembers","doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre class='inline-example '><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        // ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat();\n kitty.meow();\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addMembers","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add / override static properties of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":180,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"addStatics","doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    // this.se\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() {  },    // My.cool.Class.method1 = function() { ... };\n    method2: function() {  }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"xtype","html_type":"Object"}],"tagname":"method","files":[{"linenr":656,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"addXtype","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addXtype","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Borrow another class' members to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Ext.Base","tagname":"params","doc":"<p>The class to borrow members from</p>\n","name":"fromClass","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"type":"Array/String","tagname":"params","doc":"<p>The names of the members to borrow</p>\n","name":"members","html_type":"Array/String"}],"tagname":"method","files":[{"linenr":341,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":true,"name":"borrow","doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    // ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-borrow","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"args","html_type":"Object"}],"tagname":"method","files":[{"linenr":545,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"protected":true,"static":true,"private":null,"name":"callParent","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-callParent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create a new instance of this Class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":31,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"return":{"type":"Object","properties":null,"doc":"<p>the created instance.</p>\n","name":"return","html_type":"Object"},"static":true,"private":null,"name":"create","doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    // ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-create","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create aliases for existing prototype methods. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","name":"alias","html_type":"String/Object"},{"type":"String/Object","tagname":"params","doc":"<p>The original method name</p>\n","name":"origin","html_type":"String/Object"}],"tagname":"method","files":[{"linenr":622,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"static":true,"private":null,"name":"createAlias","doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() {  },\n    method2: function() {  }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"static-method-createAlias","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"parent","html_type":"Object"}],"tagname":"method","files":[{"linenr":52,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"extend","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-extend","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the current class' name in string format. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":603,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"return":{"type":"String","properties":null,"doc":"<p>className</p>\n","name":"return","html_type":"String"},"static":true,"private":null,"name":"getName","doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"static-method-getName","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":332,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"implement","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-implement","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Used internally by the mixins pre-processor ...","method_calls":["addConfig"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"mixinClass","html_type":"Object"}],"tagname":"method","files":[{"linenr":560,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"mixin","doc":"<p>Used internally by the mixins pre-processor</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-mixin","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":124,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"onExtended","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-onExtended","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Override members of this class. ...","method_calls":["addConfig"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":408,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this class</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"override","doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        var instance = this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n\n        return instance;\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 2.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        var instance = this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n\n        return instance;\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","chainable":true,"inheritdoc":null,"id":"static-method-override","deprecated":{"text":"<p>Please use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n","version":"2.1.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":106,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/class/Base.js"}],"private":true,"static":true,"name":"triggerExtended","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-triggerExtended","fires":null,"linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"short_doc":"Fires whenever the server has sent back new metadata to reconfigure the Reader. ...","owner":"Ext.data.proxy.Proxy","inheritable":null,"params":[{"type":"Ext.data.Proxy","tagname":"params","doc":"\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.Proxy</a>"},{"type":"Object","tagname":"params","doc":"<p>The metadata sent back from the server</p>\n","name":"data","html_type":"Object"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.mixin.Observable-method-addListener\" rel=\"Ext.mixin.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":147,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/data/proxy/Proxy.js"}],"private":null,"static":null,"name":"metachange","doc":"<p>Fires whenever the server has sent back new metadata to reconfigure the Reader.</p>\n","inheritdoc":null,"id":"event-metachange","linenr":null}],"author":[{"email":null,"tagname":"author","name":"Ed Spencer"}],"alternateClassNames":["Ext.data.LocalStorageProxy"],"code_type":"ext_define","mixins":[],"doc":"<p>The LocalStorageProxy uses the new HTML5 localStorage API to save <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a> data locally on the\nclient browser. HTML5 localStorage is a key-value store (e.g. cannot save complex objects like JSON), so\nLocalStorageProxy automatically serializes and deserializes data when saving and retrieving it.</p>\n\n<p>localStorage is extremely useful for saving user-specific information without needing to build server-side\ninfrastructure to support it. Let's imagine we're writing a Twitter search application and want to save the user's\nsearches locally so they can easily perform a saved search again later. We'd start by creating a Search model:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Search', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    config: {\n        fields: ['id', 'query'],\n        proxy: {\n            type: 'localstorage',\n            id  : 'twitter-Searches'\n        }\n    }\n});\n</code></pre>\n\n<p>Our Search model contains just two fields - id and query - plus a Proxy definition. The only configuration we need to\npass to the LocalStorage proxy is an <a href=\"#!/api/Ext.data.proxy.LocalStorage-cfg-id\" rel=\"Ext.data.proxy.LocalStorage-cfg-id\" class=\"docClass\">id</a>. This is important as it separates the Model data in this Proxy from\nall others. The localStorage API puts all data into a single shared namespace, so by setting an id we enable\nLocalStorageProxy to manage the saved Search data.</p>\n\n<p>Saving our data into localStorage is easy and would usually be done with a <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Store</a>:</p>\n\n<pre><code>//our Store automatically picks up the LocalStorageProxy defined on the Search model\nvar store = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n    model: \"Search\"\n});\n\n//loads any existing Search data from localStorage\nstore.load();\n\n//now add some Searches\nstore.add({query: 'Sencha Touch'});\nstore.add({query: 'Ext JS'});\n\n//finally, save our Search data to localStorage\nstore.sync();\n</code></pre>\n\n<p>The LocalStorageProxy automatically gives our new Searches an id when we call store.sync(). It encodes the Model data\nand places it into localStorage. We can also save directly to localStorage, bypassing the Store altogether:</p>\n\n<pre><code>var search = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('Search', {query: 'Sencha Animator'});\n\n//uses the configured LocalStorageProxy to save the new Search to localStorage\nsearch.save();\n</code></pre>\n\n<h1>Limitations</h1>\n\n<p>If this proxy is used in a browser where local storage is not supported, the constructor will throw an error. A local\nstorage proxy requires a unique ID which is used as a key in which all record data are stored in the local storage\nobject.</p>\n\n<p>It's important to supply this unique ID as it cannot be reliably determined otherwise. If no id is provided but the\nattached store has a storeId, the storeId will be used. If neither option is presented the proxy will throw an error.</p>\n","name":"Ext.data.proxy.LocalStorage","id":"class-Ext.data.proxy.LocalStorage"}