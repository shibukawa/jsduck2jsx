{"autodetected":{},"short_doc":"Modified version of Douglas Crockford's json.js that doesn't\nmess with the Object prototype. ...","singleton":true,"aliases":{},"files":[{"linenr":5,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/lang/JSON.js"}],"tagname":"class","members":[{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Decodes (parses) a JSON string to an object. ...","method_calls":null,"owner":"Ext.JSON","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The JSON string.</p>\n","name":"json","html_type":"String"},{"type":"Boolean","tagname":"params","doc":"<p>Whether to return <code>null</code> or throw an exception if the JSON is invalid.</p>\n","name":"safe","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":144,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/lang/JSON.js"}],"return":{"type":"Object/null","properties":null,"doc":"<p>The resulting object.</p>\n","name":"return","html_type":"Object/null"},"private":null,"static":null,"name":"decode","doc":"<p>Decodes (parses) a JSON string to an object. If the JSON is invalid, this function throws a Error unless the safe option is set.</p>\n","chainable":null,"inheritdoc":null,"id":"method-decode","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Encodes an Object, Array or other value. ...","method_calls":null,"owner":"Ext.JSON","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The variable to encode.</p>\n","name":"o","html_type":"Object"}],"tagname":"method","files":[{"linenr":126,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/lang/JSON.js"}],"return":{"type":"String","properties":null,"doc":"<p>The JSON string.</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"encode","doc":"<p>Encodes an Object, Array or other value.</p>\n","chainable":null,"inheritdoc":null,"id":"method-encode","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Encodes a Date. ...","method_calls":null,"owner":"Ext.JSON","inheritable":null,"params":[{"type":"Date","tagname":"params","doc":"<p>The Date to encode.</p>\n","name":"d","html_type":"Date"}],"tagname":"method","files":[{"linenr":102,"filename":"/Users/yshibukawa/personal/senchatouch/touch-2.3.0/src/core/lang/JSON.js"}],"return":{"type":"String","properties":null,"doc":"<p>The string literal to use in a JSON string.</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"encodeDate","doc":"<p>Encodes a Date. This returns the actual string which is inserted into the JSON string as the literal expression.\n<strong>The returned value includes enclosing double quotation marks.</strong></p>\n\n<p>The default return format is \"yyyy-mm-ddThh:mm:ss\".</p>\n\n<p>To override this:</p>\n\n<pre><code><a href=\"#!/api/Ext.JSON-method-encodeDate\" rel=\"Ext.JSON-method-encodeDate\" class=\"docClass\">Ext.JSON.encodeDate</a> = function(d) {\n    return <a href=\"#!/api/Ext.Date-method-format\" rel=\"Ext.Date-method-format\" class=\"docClass\">Ext.Date.format</a>(d, '\"Y-m-d\"');\n};\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-encodeDate","fires":null,"linenr":null}],"alternateClassNames":[],"doc":"<p>Modified version of Douglas Crockford's json.js that doesn't\nmess with the Object prototype.\n<a href=\"http://www.json.org/js.html\">http://www.json.org/js.html</a></p>\n","name":"Ext.JSON","id":"class-Ext.JSON"}