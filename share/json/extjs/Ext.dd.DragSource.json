{"autodetected":{"aliases":true,"requires":true,"uses":true,"extends":true,"members":true,"alternateClassNames":true,"code_type":true,"mixins":true},"aliases":{},"requires":["Ext.dd.StatusProxy","Ext.dd.DragDropManager"],"files":[{"linenr":21,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"tagname":"class","uses":[],"extends":"Ext.dd.DDProxy","members":[{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"If true, animates the proxy element back to the position of the handle element used to trigger the drag. ...","default":"true","owner":"Ext.dd.DragSource","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":55,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":null,"static":null,"name":"animRepair","properties":null,"doc":"<p>If true, animates the proxy element back to the position of the handle element used to trigger the drag.</p>\n","inheritdoc":null,"id":"cfg-animRepair","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{},"type":"String","short_doc":"A named drag drop group to which this object belongs. ...","default":null,"owner":"Ext.dd.DragSource","tagname":"cfg","files":[{"linenr":31,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"name":"ddGroup","properties":null,"doc":"<p>A named drag drop group to which this object belongs.  If a group is specified, then this object will only\ninteract with other drag drop objects in the same group.</p>\n","id":"cfg-ddGroup","html_type":"String"},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":"The CSS class returned to the drag source when drop is allowed. ...","default":"Ext.baseCSSPrefix + 'dd-drop-ok'","owner":"Ext.dd.DragSource","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":44,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":null,"static":null,"name":"dropAllowed","properties":null,"doc":"<p>The CSS class returned to the drag source when drop is allowed.</p>\n","inheritdoc":null,"id":"cfg-dropAllowed","html_type":"String","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":"The CSS class returned to the drag source when drop is not allowed. ...","default":"Ext.baseCSSPrefix + 'dd-drop-nodrop'","owner":"Ext.dd.DragSource","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":49,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":null,"static":null,"name":"dropNotAllowed","properties":null,"doc":"<p>The CSS class returned to the drag source when drop is not allowed.</p>\n","inheritdoc":null,"id":"cfg-dropNotAllowed","html_type":"String","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":"The color to use when visually highlighting the drag source in the afterRepair\nmethod after a failed drop (defaults t...","default":"'c3daf9'","owner":"Ext.dd.DragSource","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":61,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":null,"static":null,"name":"repairHighlightColor","properties":null,"doc":"<p>The color to use when visually highlighting the drag source in the afterRepair\nmethod after a failed drop (defaults to light blue). The color must be a 6 digit hex value, without\na preceding '#'.</p>\n","inheritdoc":null,"id":"cfg-repairHighlightColor","html_type":"String","evented":null,"linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'Ext.Base'","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":763,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"$className","doc":"\n","inheritdoc":null,"id":"property-S-className","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"Internal typeof flag ...","default":"true","owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":238,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"__ygDragDrop","properties":null,"doc":"<p>Internal typeof flag</p>\n","inheritdoc":null,"id":"property-__ygDragDrop","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":231,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"_domRef","properties":null,"doc":"<p>Cached reference to the linked element</p>\n","inheritdoc":null,"id":"property-_domRef","html_type":"Object","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"The available property is false until the linked dom element is accessible. ...","default":"false","owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":320,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"available","properties":null,"doc":"<p>The available property is false until the linked dom element is accessible.</p>\n","inheritdoc":null,"id":"property-available","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"By default the frame is positioned exactly where the drag element is, so\nwe use the cursor offset provided by Ext.dd.DD. ...","default":"false","owner":"Ext.dd.DDProxy","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":76,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DDProxy.js"}],"private":null,"static":null,"name":"centerFrame","properties":null,"doc":"<p>By default the frame is positioned exactly where the drag element is, so\nwe use the cursor offset provided by <a href=\"#!/api/Ext.dd.DD\" rel=\"Ext.dd.DD\" class=\"docClass\">Ext.dd.DD</a>.  Another option that works only if\nyou do not have constraints on the obj is to have the drag frame centered\naround the cursor.  Set centerFrame to true for this effect.</p>\n","inheritdoc":null,"id":"property-centerFrame","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":105,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"config","properties":null,"doc":"<p>Configuration attributes passed into the constructor</p>\n","inheritdoc":null,"id":"property-config","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":772,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configMap","doc":"\n","inheritdoc":null,"id":"property-configMap","html_type":"Object","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"Set to true when horizontal contraints are applied ...","default":"false","owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":245,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"constrainX","properties":null,"doc":"<p>Set to true when horizontal contraints are applied</p>\n","inheritdoc":null,"id":"property-constrainX","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"Set to true when vertical contraints are applied ...","default":"false","owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":252,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"constrainY","properties":null,"doc":"<p>Set to true when vertical contraints are applied</p>\n","inheritdoc":null,"id":"property-constrainY","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"Provides default constraint padding to \"constrainTo\" elements. ...","default":"{left: 0, right: 0, top: 0, bottom: 0}","owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":465,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"defaultPadding","properties":null,"doc":"<p>Provides default constraint padding to \"constrainTo\" elements.</p>\n","inheritdoc":null,"id":"property-defaultPadding","html_type":"Object","linenr":null},{"autodetected":{},"type":"Object","short_doc":"This property contains the data representing the dragged object. ...","default":null,"owner":"Ext.dd.DragSource","tagname":"property","files":[{"linenr":37,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"name":"dragData","properties":null,"doc":"<p>This property contains the data representing the dragged object. This data is set up by the implementation of the\n<a href=\"#!/api/Ext.dd.DragSource-method-getDragData\" rel=\"Ext.dd.DragSource-method-getDragData\" class=\"docClass\">getDragData</a> method. It must contain a ddel property, but can contain any other data according to the\napplication's needs.</p>\n","id":"property-dragData","html_type":"Object"},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":"The id of the element that will be dragged. ...","default":null,"owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":111,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"dragElId","properties":null,"doc":"<p>The id of the element that will be dragged.  By default this is same\nas the linked element, but could be changed to another element. Ex:\n<a href=\"#!/api/Ext.dd.DDProxy\" rel=\"Ext.dd.DDProxy\" class=\"docClass\">Ext.dd.DDProxy</a></p>\n","inheritdoc":null,"id":"property-dragElId","html_type":"String","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"The group defines a logical collection of DragDrop objects that are\nrelated. ...","default":null,"owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":176,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"groups","properties":null,"doc":"<p>The group defines a logical collection of DragDrop objects that are\nrelated.  Instances only get events when interacting with other\nDragDrop object in the same group.  This lets us define multiple\ngroups using a single DragDrop subclass if we want.</p>\n\n<p>An object in the format {'group1':true, 'group2':true}</p>\n","inheritdoc":null,"id":"property-groups","html_type":"Object","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":"The ID of the element that initiates the drag operation. ...","default":null,"owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":120,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"handleElId","properties":null,"doc":"<p>The ID of the element that initiates the drag operation.  By default\nthis is the linked element, but could be changed to be a child of this\nelement.  This lets us do things like only starting the drag when the\nheader element within the linked html element is clicked.</p>\n","inheritdoc":null,"id":"property-handleElId","html_type":"String","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"By default, drags can only be initiated if the mousedown occurs in the\nregion the linked element is. ...","default":"false","owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":326,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"hasOuterHandles","properties":null,"doc":"<p>By default, drags can only be initiated if the mousedown occurs in the\nregion the linked element is.  This is done in part to work around a\nbug in some browsers that mis-report the mousedown if the previous\nmouseup happened outside of the window.  This property is set to true\nif outer handles are defined. Defaults to false.</p>\n","inheritdoc":null,"id":"property-hasOuterHandles","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":"The id of the element associated with this object. ...","default":null,"owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":96,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"id","properties":null,"doc":"<p>The id of the element associated with this object.  This is what we\nrefer to as the \"linked element\" because the size and position of\nthis element is used to determine when the drag and drop objects have\ninteracted.</p>\n","inheritdoc":null,"id":"property-id","html_type":"String","linenr":null},{"autodetected":{},"type":"Boolean","short_doc":"Set to false to enable a DragDrop object to fire drag events while dragging\nover its own Element. ...","default":null,"owner":"Ext.dd.DragDrop","tagname":"property","files":[{"linenr":89,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"name":"ignoreSelf","properties":null,"doc":"<p>Set to false to enable a DragDrop object to fire drag events while dragging\nover its own Element. Defaults to true - DragDrop objects do not by default\nfire drag events to themselves.</p>\n","id":"property-ignoreSelf","html_type":"Boolean"},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":769,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigList","doc":"\n","inheritdoc":null,"id":"property-initConfigList","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":775,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigMap","doc":"\n","inheritdoc":null,"id":"property-initConfigMap","html_type":"Object","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String[]","default":null,"owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":154,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"invalidHandleClasses","properties":null,"doc":"<p>An Array of CSS class names for elements to be considered in valid as drag handles.</p>\n","inheritdoc":null,"id":"property-invalidHandleClasses","html_type":"String[]","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"An object who's property names identify the IDs of elements to be considered invalid as drag handles. ...","default":null,"owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":142,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"invalidHandleIds","properties":null,"doc":"<p>An object who's property names identify the IDs of elements to be considered invalid as drag handles.\nA non-null property value identifies the ID as invalid. For example, to prevent\ndragging from being initiated on element ID \"foo\", use:</p>\n\n<pre><code>{\n    foo: true\n}\n</code></pre>\n","inheritdoc":null,"id":"property-invalidHandleIds","html_type":"Object","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"An object who's property names identify HTML tags to be considered invalid as drag handles. ...","default":null,"owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":130,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"invalidHandleTypes","properties":null,"doc":"<p>An object who's property names identify HTML tags to be considered invalid as drag handles.\nA non-null property value identifies the tag as invalid. Defaults to the\nfollowing value which prevents drag operations from being initiated by <code>&lt;a&gt;</code> elements:</p>\n\n<pre><code>{\n    A: \"A\"\n}\n</code></pre>\n","inheritdoc":null,"id":"property-invalidHandleTypes","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"isInstance","doc":"\n","inheritdoc":null,"id":"property-isInstance","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"By default, all instances can be a drop target. ...","default":"true","owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":216,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"isTarget","properties":null,"doc":"<p>By default, all instances can be a drop target.  This can be disabled by\nsetting isTarget to false.</p>\n","inheritdoc":null,"id":"property-isTarget","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"Individual drag/drop instances can be locked. ...","default":"false","owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":187,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"locked","properties":null,"doc":"<p>Individual drag/drop instances can be locked.  This will prevent\nonmousedown start drag.</p>\n","inheritdoc":null,"id":"property-locked","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"Maintain offsets when we resetconstraints. ...","default":"false","owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":287,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"maintainOffset","properties":null,"doc":"<p>Maintain offsets when we resetconstraints.  Set to true when you want\nthe position of the element relative to its parent to stay the same\nwhen the page changes</p>\n","inheritdoc":null,"id":"property-maintainOffset","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"The right constraint ...","default":"0","owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":266,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"maxX","properties":null,"doc":"<p>The right constraint</p>\n","inheritdoc":null,"id":"property-maxX","html_type":"Number","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"The down constraint ...","default":"0","owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":280,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"maxY","properties":null,"doc":"<p>The down constraint</p>\n","inheritdoc":null,"id":"property-maxY","html_type":"Number","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"The left constraint ...","default":"0","owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":259,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"minX","properties":null,"doc":"<p>The left constraint</p>\n","inheritdoc":null,"id":"property-minX","html_type":"Number","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"The up constraint ...","default":"0","owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":273,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"minY","properties":null,"doc":"<p>The up constraint</p>\n","inheritdoc":null,"id":"property-minY","html_type":"Number","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"When set to true, other DD objects in cooperating DDGroups do not receive\nnotification events when this DD object is ...","default":"false","owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":202,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"moveOnly","properties":null,"doc":"<p>When set to true, other DD objects in cooperating DDGroups do not receive\nnotification events when this DD object is dragged over them.</p>\n","inheritdoc":null,"id":"property-moveOnly","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number[]","short_doc":"The padding configured for this drag and drop object for calculating\nthe drop zone intersection with this object. ...","default":null,"owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":223,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"padding","properties":null,"doc":"<p>The padding configured for this drag and drop object for calculating\nthe drop zone intersection with this object.\nAn array containing the 4 padding values: [top, right, bottom, left]</p>\n","inheritdoc":null,"id":"property-padding","html_type":"Number[]","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"By default the drag and drop instance will only respond to the primary\nbutton click (left button for a right-handed m...","default":"true","owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":311,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"primaryButtonOnly","properties":null,"doc":"<p>By default the drag and drop instance will only respond to the primary\nbutton click (left button for a right-handed mouse).  Set to true to\nallow drag and drop to start with any mouse click that is propogated\nby the browser</p>\n","inheritdoc":null,"id":"property-primaryButtonOnly","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"By default we resize the drag frame to be the same size as the element\nwe want to drag (this is to get the frame effe...","default":"true","owner":"Ext.dd.DDProxy","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":68,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DDProxy.js"}],"private":null,"static":null,"name":"resizeFrame","properties":null,"doc":"<p>By default we resize the drag frame to be the same size as the element\nwe want to drag (this is to get the frame effect).  We can turn it off\nif we want a different behavior.</p>\n","inheritdoc":null,"id":"property-resizeFrame","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"When set to true, the utility automatically tries to scroll the browser\nwindow when a drag and drop element is dragge...","default":"true","owner":"Ext.dd.DD","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":51,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DD.js"}],"private":null,"static":null,"name":"scroll","properties":null,"doc":"<p>When set to true, the utility automatically tries to scroll the browser\nwindow when a drag and drop element is dragged near the viewport boundary.</p>\n","inheritdoc":null,"id":"property-scroll","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.Class","short_doc":"Get the reference to the current class from which this object was instantiated. ...","default":null,"owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1045,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"private":null,"static":null,"name":"self","properties":null,"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","inheritdoc":null,"id":"property-self","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"The linked element's absolute X position at the time the drag was\nstarted ...","default":"0","owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":160,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"startPageX","properties":null,"doc":"<p>The linked element's absolute X position at the time the drag was\nstarted</p>\n","inheritdoc":null,"id":"property-startPageX","html_type":"Number","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"The linked element's absolute X position at the time the drag was\nstarted ...","default":"0","owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":168,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"startPageY","properties":null,"doc":"<p>The linked element's absolute X position at the time the drag was\nstarted</p>\n","inheritdoc":null,"id":"property-startPageY","html_type":"Number","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number[]","short_doc":"Array of pixel locations the element will snap to if we specified a\nhorizontal graduation/interval. ...","default":null,"owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":295,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"xTicks","properties":null,"doc":"<p>Array of pixel locations the element will snap to if we specified a\nhorizontal graduation/interval.  This array is generated automatically\nwhen you define a tick interval.</p>\n","inheritdoc":null,"id":"property-xTicks","html_type":"Number[]","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number[]","short_doc":"Array of pixel locations the element will snap to if we specified a\nvertical graduation/interval. ...","default":null,"owner":"Ext.dd.DragDrop","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":303,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"yTicks","properties":null,"doc":"<p>Array of pixel locations the element will snap to if we specified a\nvertical graduation/interval.  This array is generated automatically\nwhen you define a tick interval.</p>\n","inheritdoc":null,"id":"property-yTicks","html_type":"Number[]","linenr":null},{"autodetected":{"type":true,"default":true,"readonly":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":true,"readonly":null,"tagname":"property","files":[{"linenr":133,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"$onExtended","doc":"\n","inheritdoc":null,"id":"static-property-S-onExtended","html_type":"Array","linenr":null},{"overrides":[{"owner":"Ext.dd.DDProxy","link":"<a href=\"#!/api/Ext.dd.DDProxy-method-constructor\" rel=\"Ext.dd.DDProxy-method-constructor\" class=\"docClass\">Ext.dd.DDProxy.constructor</a>","name":"constructor"},{"owner":"Ext.dd.DragSource","link":"<a href=\"#!/api/Ext.dd.DragSource-method-constructor\" rel=\"Ext.dd.DragSource-method-constructor\" class=\"docClass\">Ext.dd.DragSource.constructor</a>","name":"constructor"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates new drag-source. ...","method_calls":["callParent"],"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"String/HTMLElement/Ext.Element","tagname":"params","doc":"<p>The container element or ID of it.</p>\n","name":"el","html_type":"String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object","tagname":"params","doc":"<p>Config object.</p>\n","name":"config","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":69,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"return":{"type":"Ext.dd.DragSource","doc":"\n","html_type":"<a href=\"#!/api/Ext.dd.DragSource\" rel=\"Ext.dd.DragSource\" class=\"docClass\">Ext.dd.DragSource</a>"},"private":null,"static":null,"name":"constructor","doc":"<p>Creates new drag-source.</p>\n","chainable":false,"inheritdoc":null,"id":"method-constructor","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"The proxy is automatically resized to the dimensions of the linked\nelement when a drag is initiated, unless resizeFra...","method_calls":["getDragEl","getEl"],"owner":"Ext.dd.DDProxy","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":159,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DDProxy.js"}],"private":true,"static":null,"name":"_resizeProxy","doc":"<p>The proxy is automatically resized to the dimensions of the linked\nelement when a drag is initiated, unless resizeFrame is set to false</p>\n","chainable":false,"inheritdoc":null,"id":"method-_resizeProxy","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Lets you specify a css class of elements that will not initiate a drag ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>the class of the elements you wish to ignore</p>\n","name":"cssClass","html_type":"String"}],"tagname":"method","files":[{"linenr":858,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"addInvalidHandleClass","doc":"<p>Lets you specify a css class of elements that will not initiate a drag</p>\n","chainable":false,"inheritdoc":null,"id":"method-addInvalidHandleClass","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Lets you to specify an element id for a child of a drag handle\nthat should not initiate a drag ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>the element id of the element you wish to ignore</p>\n","name":"id","html_type":"String"}],"tagname":"method","files":[{"linenr":845,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"addInvalidHandleId","doc":"<p>Lets you to specify an element id for a child of a drag handle\nthat should not initiate a drag</p>\n","chainable":false,"inheritdoc":null,"id":"method-addInvalidHandleId","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Allows you to specify a tag name that should not start a drag operation\nwhen clicked. ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>the type of element to exclude</p>\n","name":"tagName","html_type":"String"}],"tagname":"method","files":[{"linenr":833,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"addInvalidHandleType","doc":"<p>Allows you to specify a tag name that should not start a drag operation\nwhen clicked.  This is designed to facilitate embedding links within a\ndrag handle that do something other than start the drag.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addInvalidHandleType","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds this instance to a group of related drag/drop objects. ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>the name of the group</p>\n","name":"sGroup","html_type":"String"}],"tagname":"method","files":[{"linenr":706,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"addToGroup","doc":"<p>Adds this instance to a group of related drag/drop objects.  All\ninstances belong to at least one group, and can belong to as many\ngroups as needed.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addToGroup","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.dd.DDProxy","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":216,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DDProxy.js"}],"private":true,"static":null,"name":"afterDrag","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-afterDrag","fires":null,"linenr":216},{"autodetected":{},"short_doc":"An empty function by default, but provided so that you can perform a custom action\nafter a valid drag drop has occurr...","owner":"Ext.dd.DragSource","params":[{"type":"Ext.dd.DragDrop","tagname":"params","doc":"<p>The drop target</p>\n","name":"target","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"},{"type":"Event","tagname":"params","doc":"<p>The event object</p>\n","name":"e","html_type":"Event"},{"type":"String","tagname":"params","doc":"<p>The id of the dropped element</p>\n","name":"id","html_type":"String"}],"tagname":"method","files":[{"linenr":230,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"name":"afterDragDrop","doc":"<p>An empty function by default, but provided so that you can perform a custom action\nafter a valid drag drop has occurred by providing an implementation.</p>\n","id":"method-afterDragDrop"},{"autodetected":{},"short_doc":"An empty function by default, but provided so that you can perform a custom action\nwhen the dragged item enters the d...","owner":"Ext.dd.DragSource","params":[{"type":"Ext.dd.DragDrop","tagname":"params","doc":"<p>The drop target</p>\n","name":"target","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"},{"type":"Event","tagname":"params","doc":"<p>The event object</p>\n","name":"e","html_type":"Event"},{"type":"String","tagname":"params","doc":"<p>The id of the dragged element</p>\n","name":"id","html_type":"String"}],"tagname":"method","files":[{"linenr":116,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"name":"afterDragEnter","doc":"<p>An empty function by default, but provided so that you can perform a custom action\nwhen the dragged item enters the drop target by providing an implementation.</p>\n","id":"method-afterDragEnter"},{"autodetected":{},"short_doc":"An empty function by default, but provided so that you can perform a custom action\nafter the dragged item is dragged ...","owner":"Ext.dd.DragSource","params":[{"type":"Ext.dd.DragDrop","tagname":"params","doc":"<p>The drop target</p>\n","name":"target","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"},{"type":"Event","tagname":"params","doc":"<p>The event object</p>\n","name":"e","html_type":"Event"},{"type":"String","tagname":"params","doc":"<p>The id of the dragged element</p>\n","name":"id","html_type":"String"}],"tagname":"method","files":[{"linenr":188,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"name":"afterDragOut","doc":"<p>An empty function by default, but provided so that you can perform a custom action\nafter the dragged item is dragged out of the target without dropping.</p>\n","id":"method-afterDragOut"},{"autodetected":{},"short_doc":"An empty function by default, but provided so that you can perform a custom action\nwhile the dragged item is over the...","owner":"Ext.dd.DragSource","params":[{"type":"Ext.dd.DragDrop","tagname":"params","doc":"<p>The drop target</p>\n","name":"target","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"},{"type":"Event","tagname":"params","doc":"<p>The event object</p>\n","name":"e","html_type":"Event"},{"type":"String","tagname":"params","doc":"<p>The id of the dragged element</p>\n","name":"id","html_type":"String"}],"tagname":"method","files":[{"linenr":153,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"name":"afterDragOver","doc":"<p>An empty function by default, but provided so that you can perform a custom action\nwhile the dragged item is over the drop target by providing an implementation.</p>\n","id":"method-afterDragOver"},{"autodetected":{},"short_doc":"An empty function by default, but provided so that you can perform a custom action\nafter an invalid drop has occurred...","owner":"Ext.dd.DragSource","params":[{"type":"Event","tagname":"params","doc":"<p>The event object</p>\n","name":"e","html_type":"Event"},{"type":"String","tagname":"params","doc":"<p>The id of the dropped element</p>\n","name":"id","html_type":"String"}],"tagname":"method","files":[{"linenr":300,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"name":"afterInvalidDrop","doc":"<p>An empty function by default, but provided so that you can perform a custom action\nafter an invalid drop has occurred by providing an implementation.</p>\n","id":"method-afterInvalidDrop"},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.dd.DragSource","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":312,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":true,"static":null,"name":"afterRepair","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-afterRepair","fires":null,"linenr":null},{"autodetected":{},"short_doc":"An empty function by default, but provided so that you can perform a custom action\nafter a valid drop has occurred by...","owner":"Ext.dd.DragSource","params":[{"type":"Object","tagname":"params","doc":"<p>The target DD</p>\n","name":"target","html_type":"Object"},{"type":"Event","tagname":"params","doc":"<p>The event object</p>\n","name":"e","html_type":"Event"},{"type":"String","tagname":"params","doc":"<p>The id of the dropped element</p>\n","name":"id","html_type":"String"}],"tagname":"method","files":[{"linenr":261,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"name":"afterValidDrop","doc":"<p>An empty function by default, but provided so that you can perform a custom action\nafter a valid drop has occurred by providing an implementation.</p>\n","id":"method-afterValidDrop"},{"overrides":[{"owner":"Ext.dd.DD","link":"<a href=\"#!/api/Ext.dd.DD-method-alignElWithMouse\" rel=\"Ext.dd.DD-method-alignElWithMouse\" class=\"docClass\">Ext.dd.DD.alignElWithMouse</a>","name":"alignElWithMouse"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the element to the location of the mousedown or click event,\nmaintaining the cursor location relative to the loc...","method_calls":["callParent"],"owner":"Ext.dd.DragSource","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":369,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":null,"static":null,"name":"alignElWithMouse","doc":"<p>Sets the element to the location of the mousedown or click event,\nmaintaining the cursor location relative to the location on the element\nthat was clicked.  Override this if you want to place the element in a\nlocation other than where the cursor is.</p>\n","chainable":false,"inheritdoc":null,"id":"method-alignElWithMouse","fires":[],"linenr":369},{"overrides":[{"owner":"Ext.dd.DD","link":"<a href=\"#!/api/Ext.dd.DD-method-applyConfig\" rel=\"Ext.dd.DD-method-applyConfig\" class=\"docClass\">Ext.dd.DD.applyConfig</a>","name":"applyConfig"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets up config options specific to this class. ...","method_calls":["callParent","setDragElId"],"owner":"Ext.dd.DDProxy","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":127,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DDProxy.js"}],"private":null,"static":null,"name":"applyConfig","doc":"<p>Sets up config options specific to this class. Overrides\n<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>, but all versions of this method through the\ninheritance chain are called</p>\n","chainable":false,"inheritdoc":null,"id":"method-applyConfig","fires":[],"linenr":127},{"overrides":[{"owner":"Ext.dd.DD","link":"<a href=\"#!/api/Ext.dd.DD-method-autoOffset\" rel=\"Ext.dd.DD-method-autoOffset\" class=\"docClass\">Ext.dd.DD.autoOffset</a>","name":"autoOffset"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the pointer offset to the distance between the linked element's top\nleft corner and the location the element was...","method_calls":["setDelta"],"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Object","name":"x","html_type":"Object"},{"type":"Object","name":"y","html_type":"Object"}],"tagname":"method","files":[{"linenr":428,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":true,"static":null,"name":"autoOffset","doc":"<p>Sets the pointer offset to the distance between the linked element's top\nleft corner and the location the element was clicked.</p>\n","chainable":false,"inheritdoc":null,"id":"method-autoOffset","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Auto-scroll the window if the dragged object has been moved beyond the\nvisible window boundary. ...","method_calls":null,"owner":"Ext.dd.DD","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>the drag element's x position</p>\n","name":"x","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>the drag element's y position</p>\n","name":"y","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>the height of the drag element</p>\n","name":"h","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>the width of the drag element</p>\n","name":"w","html_type":"Number"}],"tagname":"method","files":[{"linenr":162,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DD.js"}],"private":true,"static":null,"name":"autoScroll","doc":"<p>Auto-scroll the window if the dragged object has been moved beyond the\nvisible window boundary.</p>\n","chainable":false,"inheritdoc":null,"id":"method-autoScroll","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.dd.DragDrop","link":"<a href=\"#!/api/Ext.dd.DragDrop-method-b4Drag\" rel=\"Ext.dd.DragDrop-method-b4Drag\" class=\"docClass\">Ext.dd.DragDrop.b4Drag</a>","name":"b4Drag"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Event that fires prior to the onDrag event. ...","method_calls":["setDragElPos"],"owner":"Ext.dd.DD","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":284,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DD.js"}],"private":null,"static":null,"name":"b4Drag","doc":"<p>Event that fires prior to the onDrag event.  Overrides\n<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-b4Drag","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Code that executes immediately before the onDragDrop event ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":404,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"b4DragDrop","doc":"<p>Code that executes immediately before the onDragDrop event</p>\n","chainable":false,"inheritdoc":null,"id":"method-b4DragDrop","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Code that executes immediately before the onDragOut event ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":389,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"b4DragOut","doc":"<p>Code that executes immediately before the onDragOut event</p>\n","chainable":false,"inheritdoc":null,"id":"method-b4DragOut","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Code that executes immediately before the onDragOver event ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":373,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"b4DragOver","doc":"<p>Code that executes immediately before the onDragOver event</p>\n","chainable":false,"inheritdoc":null,"id":"method-b4DragOver","fires":null,"linenr":null},{"type":null,"overrides":[{"owner":"Ext.dd.DDProxy","link":"<a href=\"#!/api/Ext.dd.DDProxy-method-b4EndDrag\" rel=\"Ext.dd.DDProxy-method-b4EndDrag\" class=\"docClass\">Ext.dd.DDProxy.b4EndDrag</a>","name":"b4EndDrag"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"overrides Ext.dd.DragDrop ...","method_calls":null,"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":415,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"return":null,"private":true,"static":null,"name":"b4EndDrag","doc":"<p>overrides <a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a></p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-b4EndDrag","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.dd.DD","link":"<a href=\"#!/api/Ext.dd.DD-method-b4MouseDown\" rel=\"Ext.dd.DD-method-b4MouseDown\" class=\"docClass\">Ext.dd.DD.b4MouseDown</a>","name":"b4MouseDown"},{"owner":"Ext.dd.DDProxy","link":"<a href=\"#!/api/Ext.dd.DDProxy-method-b4MouseDown\" rel=\"Ext.dd.DDProxy-method-b4MouseDown\" class=\"docClass\">Ext.dd.DDProxy.b4MouseDown</a>","name":"b4MouseDown"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"overrides Ext.dd.DragDrop ...","method_calls":["autoOffset","setDragElPos"],"owner":"Ext.dd.DDProxy","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":171,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DDProxy.js"}],"private":null,"static":null,"name":"b4MouseDown","doc":"<p>overrides <a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a></p>\n","chainable":false,"inheritdoc":null,"id":"method-b4MouseDown","fires":[],"linenr":null},{"type":null,"overrides":[{"owner":"Ext.dd.DragDrop","link":"<a href=\"#!/api/Ext.dd.DragDrop-method-b4StartDrag\" rel=\"Ext.dd.DragDrop-method-b4StartDrag\" class=\"docClass\">Ext.dd.DragDrop.b4StartDrag</a>","name":"b4StartDrag"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"overrides Ext.dd.DragDrop ...","method_calls":["showFrame"],"owner":"Ext.dd.DDProxy","inheritable":null,"params":[{"type":"Object","name":"x","html_type":"Object"},{"type":"Object","name":"y","html_type":"Object"}],"tagname":"method","files":[{"linenr":179,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DDProxy.js"}],"return":null,"private":true,"static":null,"name":"b4StartDrag","doc":"<p>overrides <a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a></p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-b4StartDrag","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"An empty function by default, but provided so that you can perform a custom action before the dragged\nitem is dropped...","method_calls":null,"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Ext.dd.DragDrop","tagname":"params","doc":"<p>The drop target</p>\n","name":"target","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"},{"type":"Event","tagname":"params","doc":"<p>The event object</p>\n","name":"e","html_type":"Event"},{"type":"String","tagname":"params","doc":"<p>The id of the dragged element</p>\n","name":"id","html_type":"String"}],"tagname":"method","files":[{"linenr":244,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>isValid True if the drag drop event is valid, else false to cancel</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"beforeDragDrop","template":true,"doc":"<p>An empty function by default, but provided so that you can perform a custom action before the dragged\nitem is dropped onto the target and optionally cancel the onDragDrop.</p>\n","chainable":false,"inheritdoc":null,"id":"method-beforeDragDrop","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"An empty function by default, but provided so that you can perform a custom action\nbefore the dragged item enters the...","method_calls":null,"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Ext.dd.DragDrop","tagname":"params","doc":"<p>The drop target</p>\n","name":"target","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"},{"type":"Event","tagname":"params","doc":"<p>The event object</p>\n","name":"e","html_type":"Event"},{"type":"String","tagname":"params","doc":"<p>The id of the dragged element</p>\n","name":"id","html_type":"String"}],"tagname":"method","files":[{"linenr":129,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>isValid True if the drag event is valid, else false to cancel</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"beforeDragEnter","template":true,"doc":"<p>An empty function by default, but provided so that you can perform a custom action\nbefore the dragged item enters the drop target and optionally cancel the onDragEnter.</p>\n","chainable":false,"inheritdoc":null,"id":"method-beforeDragEnter","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"An empty function by default, but provided so that you can perform a custom action before the dragged\nitem is dragged...","method_calls":null,"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Ext.dd.DragDrop","tagname":"params","doc":"<p>The drop target</p>\n","name":"target","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"},{"type":"Event","tagname":"params","doc":"<p>The event object</p>\n","name":"e","html_type":"Event"},{"type":"String","tagname":"params","doc":"<p>The id of the dragged element</p>\n","name":"id","html_type":"String"}],"tagname":"method","files":[{"linenr":202,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>isValid True if the drag event is valid, else false to cancel</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"beforeDragOut","template":true,"doc":"<p>An empty function by default, but provided so that you can perform a custom action before the dragged\nitem is dragged out of the target without dropping, and optionally cancel the onDragOut.</p>\n","chainable":false,"inheritdoc":null,"id":"method-beforeDragOut","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"An empty function by default, but provided so that you can perform a custom action\nwhile the dragged item is over the...","method_calls":null,"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Ext.dd.DragDrop","tagname":"params","doc":"<p>The drop target</p>\n","name":"target","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"},{"type":"Event","tagname":"params","doc":"<p>The event object</p>\n","name":"e","html_type":"Event"},{"type":"String","tagname":"params","doc":"<p>The id of the dragged element</p>\n","name":"id","html_type":"String"}],"tagname":"method","files":[{"linenr":166,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>isValid True if the drag event is valid, else false to cancel</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"beforeDragOver","template":true,"doc":"<p>An empty function by default, but provided so that you can perform a custom action\nwhile the dragged item is over the drop target and optionally cancel the onDragOver.</p>\n","chainable":false,"inheritdoc":null,"id":"method-beforeDragOver","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"An empty function by default, but provided so that you can perform a custom action after an invalid\ndrop has occurred. ...","method_calls":null,"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Ext.dd.DragDrop","tagname":"params","doc":"<p>The drop target</p>\n","name":"target","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"},{"type":"Event","tagname":"params","doc":"<p>The event object</p>\n","name":"e","html_type":"Event"},{"type":"String","tagname":"params","doc":"<p>The id of the dragged element</p>\n","name":"id","html_type":"String"}],"tagname":"method","files":[{"linenr":321,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>isValid True if the invalid drop should proceed, else false to cancel</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"beforeInvalidDrop","template":true,"doc":"<p>An empty function by default, but provided so that you can perform a custom action after an invalid\ndrop has occurred.</p>\n","chainable":false,"inheritdoc":null,"id":"method-beforeInvalidDrop","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.dd.DDProxy","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":212,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DDProxy.js"}],"private":true,"static":null,"name":"beforeMove","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-beforeMove","fires":null,"linenr":212},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Saves the most recent position so that we can reset the constraints and\ntick marks on-demand. ...","method_calls":["getEl"],"owner":"Ext.dd.DD","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>the current x position (this just makes it so we\ndon't have to look it up again)</p>\n","name":"iPageX","optional":true,"html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>the current y position (this just makes it so we\ndon't have to look it up again)</p>\n","name":"iPageY","optional":true,"html_type":"Number"}],"tagname":"method","files":[{"linenr":141,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DD.js"}],"private":null,"static":null,"name":"cachePosition","doc":"<p>Saves the most recent position so that we can reset the constraints and\ntick marks on-demand.  We need to know this so that we can calculate the\nnumber of pixels the element is offset from its original position.</p>\n","chainable":false,"inheritdoc":null,"id":"method-cachePosition","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":1269,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the overridden method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callOverridden","doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"method-callOverridden","deprecated":{"text":"<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the \"parent\" method of the current method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":846,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the parent method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callParent","doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","chainable":false,"inheritdoc":null,"id":"method-callParent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":961,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the superclass method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callSuper","doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","chainable":false,"inheritdoc":null,"id":"method-callSuper","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Clears any constraints applied to this instance. ...","method_calls":["clearTicks"],"owner":"Ext.dd.DragDrop","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1007,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"clearConstraints","doc":"<p>Clears any constraints applied to this instance.  Also clears ticks\nsince they can't exist independent of a constraint at this time.</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearConstraints","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Clears any tick interval defined for this instance ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1017,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"clearTicks","doc":"<p>Clears any tick interval defined for this instance</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearTicks","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["isValidHandleChild"],"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":826,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"clickValidator","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-clickValidator","fires":[],"linenr":826},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":766,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configClass","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-configClass","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Initializes the drag drop object's constraints to restrict movement to a certain element. ...","method_calls":["getEl","resetConstraints","setXConstraint","setYConstraint"],"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"String/HTMLElement/Ext.Element","tagname":"params","doc":"<p>The element or element ID to constrain to.</p>\n","name":"constrainTo","html_type":"String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/Number","tagname":"params","doc":"<p>Pad provides a way to specify \"padding\" of the constraints,\nand can be either a number for symmetrical padding (4 would be equal to <code>{left:4, right:4, top:4, bottom:4}</code>) or\nan object containing the sides to pad. For example: <code>{right:10, bottom:10}</code></p>\n","name":"pad","optional":true,"html_type":"Object/Number"},{"type":"Boolean","tagname":"params","doc":"<p>Constrain the draggable in the content box of the element (inside padding and borders)</p>\n","name":"inContent","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":476,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"constrainTo","doc":"<p>Initializes the drag drop object's constraints to restrict movement to a certain element.</p>\n\n<p>Usage:</p>\n\n<pre><code>var dd = new <a href=\"#!/api/Ext.dd.DDProxy\" rel=\"Ext.dd.DDProxy\" class=\"docClass\">Ext.dd.DDProxy</a>(\"dragDiv1\", \"proxytest\",\n               { dragElId: \"existingProxyDiv\" });\ndd.startDrag = function(){\n    this.constrainTo(\"parent-id\");\n};\n</code></pre>\n\n<p>Or you can initalize it using the <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a> object:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-get\" rel=\"Ext-method-get\" class=\"docClass\">Ext.get</a>(\"dragDiv1\").initDDProxy(\"proxytest\", {dragElId: \"existingProxyDiv\"}, {\n    startDrag : function(){\n        this.constrainTo(\"parent-id\");\n    }\n});\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-constrainTo","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates the proxy element if it does not yet exist ...","method_calls":["createFrame","getDragEl"],"owner":"Ext.dd.DDProxy","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":85,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DDProxy.js"}],"private":null,"static":null,"name":"createFrame","doc":"<p>Creates the proxy element if it does not yet exist</p>\n","chainable":false,"inheritdoc":null,"id":"method-createFrame","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.dd.DragDrop","link":"<a href=\"#!/api/Ext.dd.DragDrop-method-destroy\" rel=\"Ext.dd.DragDrop-method-destroy\" class=\"docClass\">Ext.dd.DragDrop.destroy</a>","name":"destroy"},{"owner":"Ext.dd.DragSource","link":"<a href=\"#!/api/Ext.dd.DragSource-method-destroy\" rel=\"Ext.dd.DragSource-method-destroy\" class=\"docClass\">Ext.dd.DragSource.destroy</a>","name":"destroy"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Destroy this DragDrop instance ...","method_calls":["callParent"],"owner":"Ext.dd.DragSource","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":433,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":null,"static":null,"name":"destroy","doc":"<p>Destroy this DragDrop instance</p>\n","chainable":false,"inheritdoc":null,"id":"method-destroy","fires":[],"linenr":433},{"overrides":[{"owner":"Ext.dd.DDProxy","link":"<a href=\"#!/api/Ext.dd.DDProxy-method-endDrag\" rel=\"Ext.dd.DDProxy-method-endDrag\" class=\"docClass\">Ext.dd.DDProxy.endDrag</a>","name":"endDrag"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"overrides Ext.dd.DragDrop\nBy default we try to move the element to the last location of the frame. ...","method_calls":["onEndDrag"],"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":419,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":true,"static":null,"name":"endDrag","doc":"<p>overrides <a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>\nBy default we try to move the element to the last location of the frame.\nThis is so that the default behavior mirrors that of <a href=\"#!/api/Ext.dd.DD\" rel=\"Ext.dd.DD\" class=\"docClass\">Ext.dd.DD</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-endDrag","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":1196,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"getConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the data object associated with this drag source ...","method_calls":null,"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":94,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"return":{"type":"Object","properties":null,"doc":"<p>data An object containing arbitrary data</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getDragData","doc":"<p>Returns the data object associated with this drag source</p>\n","chainable":false,"inheritdoc":null,"id":"method-getDragData","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns a reference to the actual element to drag. ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":547,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"return":{"type":"HTMLElement","properties":null,"doc":"<p>the html element</p>\n","name":"return","html_type":"HTMLElement"},"private":null,"static":null,"name":"getDragEl","doc":"<p>Returns a reference to the actual element to drag.  By default this is\nthe same as the html element, but it can be assigned to another\nelement. An example of this can be found in <a href=\"#!/api/Ext.dd.DDProxy\" rel=\"Ext.dd.DDProxy\" class=\"docClass\">Ext.dd.DDProxy</a></p>\n","chainable":false,"inheritdoc":null,"id":"method-getDragEl","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns a reference to the linked element ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":535,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"return":{"type":"HTMLElement","properties":null,"doc":"<p>the html element</p>\n","name":"return","html_type":"HTMLElement"},"private":null,"static":null,"name":"getEl","doc":"<p>Returns a reference to the linked element</p>\n","chainable":false,"inheritdoc":null,"id":"method-getEl","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>Name of the config option to return.</p>\n","name":"name","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":1206,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object/Mixed","properties":null,"doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","name":"return","html_type":"Object/Mixed"},"private":null,"static":null,"name":"getInitialConfig","doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getInitialConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.dd.DD","inheritable":null,"params":[{"type":"Object","name":"el","html_type":"Object"}],"tagname":"method","files":[{"linenr":296,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DD.js"}],"private":true,"static":null,"name":"getLocalX","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getLocalX","fires":null,"linenr":296},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the drag source's underlying Ext.dd.StatusProxy ...","method_calls":null,"owner":"Ext.dd.DragSource","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":393,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"return":{"type":"Ext.dd.StatusProxy","properties":null,"doc":"<p>proxy The StatusProxy</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.dd.StatusProxy\" rel=\"Ext.dd.StatusProxy\" class=\"docClass\">Ext.dd.StatusProxy</a>"},"private":null,"static":null,"name":"getProxy","doc":"<p>Returns the drag source's underlying <a href=\"#!/api/Ext.dd.StatusProxy\" rel=\"Ext.dd.StatusProxy\" class=\"docClass\">Ext.dd.StatusProxy</a></p>\n","chainable":false,"inheritdoc":null,"id":"method-getProxy","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"},{"type":"Object","name":"data","html_type":"Object"}],"tagname":"method","files":[{"linenr":273,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":true,"static":null,"name":"getRepairXY","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getRepairXY","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Finds the location the element should be placed if we want to move\nit to where the mouse location less the click offs...","method_calls":["getTick"],"owner":"Ext.dd.DD","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>the X coordinate of the click</p>\n","name":"iPageX","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>the Y coordinate of the click</p>\n","name":"iPageY","html_type":"Number"}],"tagname":"method","files":[{"linenr":226,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DD.js"}],"return":{"type":"Object","properties":[{"type":"Number","tagname":"return","doc":"\n","name":"x","html_type":"Number"},{"type":"Number","tagname":"return","doc":"\n","name":"y","html_type":"Number"}],"doc":"<p>An object that contains the coordinates (Object.x and Object.y)</p>\n","name":"return","html_type":"Object"},"private":true,"static":null,"name":"getTargetCoord","doc":"<p>Finds the location the element should be placed if we want to move\nit to where the mouse location less the click offset would place us.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getTargetCoord","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Normally the drag element is moved pixel by pixel, but we can specify\nthat it move a number of pixels at a time. ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>where we want to place the object</p>\n","name":"val","html_type":"Number"},{"type":"Number[]","tagname":"params","doc":"<p>sorted array of valid points</p>\n","name":"tickArray","html_type":"Number[]"}],"tagname":"method","files":[{"linenr":1079,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"return":{"type":"Number","properties":null,"doc":"<p>the closest tick</p>\n","name":"return","html_type":"Number"},"private":true,"static":null,"name":"getTick","doc":"<p>Normally the drag element is moved pixel by pixel, but we can specify\nthat it move a number of pixels at a time.  This method resolves the\nlocation when we have it set up like this.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getTick","fires":null,"linenr":null},{"type":null,"overrides":[{"owner":"Ext.dd.DragDrop","link":"<a href=\"#!/api/Ext.dd.DragDrop-method-handleMouseDown\" rel=\"Ext.dd.DragDrop-method-handleMouseDown\" class=\"docClass\">Ext.dd.DragDrop.handleMouseDown</a>","name":"handleMouseDown"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Called when this object is clicked ...","method_calls":["callParent","getDragData","onBeforeDrag"],"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Event","tagname":"params","doc":"\n","name":"e","html_type":"Event"},{"type":"Ext.dd.DragDrop","tagname":"params","doc":"<p>the clicked dd object (this dd obj)</p>\n","name":"oDD","html_type":"<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a>"}],"tagname":"method","files":[{"linenr":334,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"return":null,"private":true,"static":null,"name":"handleMouseDown","doc":"<p>Called when this object is clicked</p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-handleMouseDown","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Executed when the linked element is available ...","method_calls":["onAvailable","resetConstraints"],"owner":"Ext.dd.DragDrop","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":633,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"handleOnAvailable","doc":"<p>Executed when the linked element is available</p>\n","chainable":false,"inheritdoc":null,"id":"method-handleOnAvailable","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1156,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"hasConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-hasConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Hides the drag source's Ext.dd.StatusProxy ...","method_calls":null,"owner":"Ext.dd.DragSource","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":401,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":null,"static":null,"name":"hideProxy","doc":"<p>Hides the drag source's <a href=\"#!/api/Ext.dd.StatusProxy\" rel=\"Ext.dd.StatusProxy\" class=\"docClass\">Ext.dd.StatusProxy</a></p>\n","chainable":false,"inheritdoc":null,"id":"method-hideProxy","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets up the DragDrop object. ...","method_calls":["initTarget"],"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>the id of the linked element</p>\n","name":"id","html_type":"String"},{"type":"String","tagname":"params","doc":"<p>the group of related items</p>\n","name":"sGroup","html_type":"String"},{"type":"Object","tagname":"params","doc":"<p>configuration attributes</p>\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":557,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"init","doc":"<p>Sets up the DragDrop object.  Must be called in the constructor of any\n<a href=\"#!/api/Ext.dd.DragDrop\" rel=\"Ext.dd.DragDrop\" class=\"docClass\">Ext.dd.DragDrop</a> subclass</p>\n","chainable":false,"inheritdoc":null,"id":"method-init","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Initialize configuration for this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1090,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":null,"static":null,"name":"initConfig","doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"method-initConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Initialization for the drag frame element. ...","method_calls":["createFrame"],"owner":"Ext.dd.DDProxy","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":119,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DDProxy.js"}],"private":null,"static":null,"name":"initFrame","doc":"<p>Initialization for the drag frame element.  Must be called in the\nconstructor of all subclasses</p>\n","chainable":false,"inheritdoc":null,"id":"method-initFrame","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Initializes Targeting functionality only... ...","method_calls":["addToGroup","applyConfig","handleOnAvailable","setDragElId"],"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>the id of the linked element</p>\n","name":"id","html_type":"String"},{"type":"String","tagname":"params","doc":"<p>the group of related items</p>\n","name":"sGroup","html_type":"String"},{"type":"Object","tagname":"params","doc":"<p>configuration attributes</p>\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":570,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"initTarget","doc":"<p>Initializes Targeting functionality only... the object does not\nget a mousedown handler.</p>\n","chainable":false,"inheritdoc":null,"id":"method-initTarget","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns true if this instance is locked, or the drag drop mgr is locked\n(meaning that all drag/drop is disabled on th...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":787,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>true if this obj or all drag/drop is locked, else\nfalse</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"isLocked","doc":"<p>Returns true if this instance is locked, or the drag drop mgr is locked\n(meaning that all drag/drop is disabled on the page.)</p>\n","chainable":false,"inheritdoc":null,"id":"method-isLocked","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Checks the tag exclusion list to see if this click should be ignored ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"HTMLElement","tagname":"params","doc":"<p>the HTMLElement to evaluate</p>\n","name":"node","html_type":"HTMLElement"}],"tagname":"method","files":[{"linenr":900,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>true if this is a valid tag type, false if not</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"isValidHandleChild","doc":"<p>Checks the tag exclusion list to see if this click should be ignored</p>\n","chainable":false,"inheritdoc":null,"id":"method-isValidHandleChild","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Locks this instance ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":195,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"lock","doc":"<p>Locks this instance</p>\n","chainable":false,"inheritdoc":null,"id":"method-lock","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Override the onAvailable method to do what is needed after the initial\nposition was determined. ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":458,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"onAvailable","doc":"<p>Override the onAvailable method to do what is needed after the initial\nposition was determined.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onAvailable","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"An empty function by default, but provided so that you can perform a custom action before the initial\ndrag event begi...","method_calls":null,"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>An object containing arbitrary data to be shared with drop targets</p>\n","name":"data","html_type":"Object"},{"type":"Event","tagname":"params","doc":"<p>The event object</p>\n","name":"e","html_type":"Event"}],"tagname":"method","files":[{"linenr":347,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>isValid True if the drag event is valid, else false to cancel</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"onBeforeDrag","template":true,"doc":"<p>An empty function by default, but provided so that you can perform a custom action before the initial\ndrag event begins and optionally cancel it.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onBeforeDrag","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"names","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"callback","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":1224,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"onConfigUpdate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onConfigUpdate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Abstract method called during the onMouseMove event while dragging an\nobject. ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"Event","tagname":"params","doc":"<p>the mousemove event</p>\n","name":"e","html_type":"Event"}],"tagname":"method","files":[{"linenr":356,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"onDrag","doc":"<p>Abstract method called during the onMouseMove event while dragging an\nobject.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onDrag","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.dd.DragDrop","link":"<a href=\"#!/api/Ext.dd.DragDrop-method-onDragDrop\" rel=\"Ext.dd.DragDrop-method-onDragDrop\" class=\"docClass\">Ext.dd.DragDrop.onDragDrop</a>","name":"onDragDrop"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Abstract method called when this item is dropped on another DragDrop\nobj ...","method_calls":["afterDragDrop","beforeDragDrop","onInvalidDrop","onValidDrop"],"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"},{"type":"Object","name":"id","html_type":"Object"}],"tagname":"method","files":[{"linenr":215,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":true,"static":null,"name":"onDragDrop","doc":"<p>Abstract method called when this item is dropped on another DragDrop\nobj</p>\n","chainable":false,"inheritdoc":null,"id":"method-onDragDrop","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.dd.DragDrop","link":"<a href=\"#!/api/Ext.dd.DragDrop-method-onDragEnter\" rel=\"Ext.dd.DragDrop-method-onDragEnter\" class=\"docClass\">Ext.dd.DragDrop.onDragEnter</a>","name":"onDragEnter"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Abstract method called when this element fist begins hovering over\nanother DragDrop obj ...","method_calls":["afterDragEnter","beforeDragEnter"],"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"},{"type":"Object","name":"id","html_type":"Object"}],"tagname":"method","files":[{"linenr":102,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":true,"static":null,"name":"onDragEnter","doc":"<p>Abstract method called when this element fist begins hovering over\nanother DragDrop obj</p>\n","chainable":false,"inheritdoc":null,"id":"method-onDragEnter","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.dd.DragDrop","link":"<a href=\"#!/api/Ext.dd.DragDrop-method-onDragOut\" rel=\"Ext.dd.DragDrop-method-onDragOut\" class=\"docClass\">Ext.dd.DragDrop.onDragOut</a>","name":"onDragOut"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Abstract method called when we are no longer hovering over an element ...","method_calls":["afterDragOut","beforeDragOut"],"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"},{"type":"Object","name":"id","html_type":"Object"}],"tagname":"method","files":[{"linenr":179,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":true,"static":null,"name":"onDragOut","doc":"<p>Abstract method called when we are no longer hovering over an element</p>\n","chainable":false,"inheritdoc":null,"id":"method-onDragOut","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.dd.DragDrop","link":"<a href=\"#!/api/Ext.dd.DragDrop-method-onDragOver\" rel=\"Ext.dd.DragDrop-method-onDragOver\" class=\"docClass\">Ext.dd.DragDrop.onDragOver</a>","name":"onDragOver"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Abstract method called when this element is hovering over another\nDragDrop obj ...","method_calls":["afterDragOver","beforeDragOver"],"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"},{"type":"Object","name":"id","html_type":"Object"}],"tagname":"method","files":[{"linenr":142,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":true,"static":null,"name":"onDragOver","doc":"<p>Abstract method called when this element is hovering over another\nDragDrop obj</p>\n","chainable":false,"inheritdoc":null,"id":"method-onDragOver","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Object","name":"data","html_type":"Object"},{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":424,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":true,"static":null,"name":"onEndDrag","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onEndDrag","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["onStartDrag"],"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Object","name":"x","html_type":"Object"},{"type":"Object","name":"y","html_type":"Object"}],"tagname":"method","files":[{"linenr":384,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":true,"static":null,"name":"onInitDrag","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onInitDrag","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.dd.DragDrop","link":"<a href=\"#!/api/Ext.dd.DragDrop-method-onInvalidDrop\" rel=\"Ext.dd.DragDrop-method-onInvalidDrop\" class=\"docClass\">Ext.dd.DragDrop.onInvalidDrop</a>","name":"onInvalidDrop"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Abstract method called when this item is dropped on an area with no\ndrop target ...","method_calls":["afterInvalidDrop","beforeInvalidDrop","getRepairXY"],"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Object","name":"target","html_type":"Object"},{"type":"Object","name":"e","html_type":"Object"},{"type":"Object","name":"id","html_type":"Object"}],"tagname":"method","files":[{"linenr":278,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":true,"static":null,"name":"onInvalidDrop","doc":"<p>Abstract method called when this item is dropped on an area with no\ndrop target</p>\n","chainable":false,"inheritdoc":null,"id":"method-onInvalidDrop","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Called when a drag/drop obj gets a mousedown ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"Event","tagname":"params","doc":"<p>the mousedown event</p>\n","name":"e","html_type":"Event"}],"tagname":"method","files":[{"linenr":446,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"onMouseDown","doc":"<p>Called when a drag/drop obj gets a mousedown</p>\n","chainable":false,"inheritdoc":null,"id":"method-onMouseDown","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Called when a drag/drop obj gets a mouseup ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"Event","tagname":"params","doc":"<p>the mouseup event</p>\n","name":"e","html_type":"Event"}],"tagname":"method","files":[{"linenr":452,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"onMouseUp","doc":"<p>Called when a drag/drop obj gets a mouseup</p>\n","chainable":false,"inheritdoc":null,"id":"method-onMouseUp","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"An empty function by default, but provided so that you can perform a custom action once the initial\ndrag event has be...","method_calls":null,"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The x position of the click on the dragged object</p>\n","name":"x","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>The y position of the click on the dragged object</p>\n","name":"y","html_type":"Number"}],"tagname":"method","files":[{"linenr":359,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":null,"static":null,"name":"onStartDrag","template":true,"doc":"<p>An empty function by default, but provided so that you can perform a custom action once the initial\ndrag event has begun.  The drag cannot be canceled from this function.</p>\n","chainable":null,"inheritdoc":null,"id":"method-onStartDrag","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["afterValidDrop","hideProxy"],"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Object","name":"target","html_type":"Object"},{"type":"Object","name":"e","html_type":"Object"},{"type":"Object","name":"id","html_type":"Object"}],"tagname":"method","files":[{"linenr":257,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":true,"static":null,"name":"onValidDrop","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onValidDrop","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes this instance from the supplied interaction group ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The group to drop</p>\n","name":"sGroup","html_type":"String"}],"tagname":"method","files":[{"linenr":717,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"removeFromGroup","doc":"<p>Removes this instance from the supplied interaction group</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeFromGroup","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Unsets an invalid css class ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>the class of the element(s) you wish to\nre-enable</p>\n","name":"cssClass","html_type":"String"}],"tagname":"method","files":[{"linenr":887,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"removeInvalidHandleClass","doc":"<p>Unsets an invalid css class</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeInvalidHandleClass","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Unsets an invalid handle id ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>the id of the element to re-enable</p>\n","name":"id","html_type":"String"}],"tagname":"method","files":[{"linenr":876,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"removeInvalidHandleId","doc":"<p>Unsets an invalid handle id</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeInvalidHandleId","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Unsets an excluded tag name set by addInvalidHandleType ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>the type of element to unexclude</p>\n","name":"tagName","html_type":"String"}],"tagname":"method","files":[{"linenr":866,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"removeInvalidHandleType","doc":"<p>Unsets an excluded tag name set by addInvalidHandleType</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeInvalidHandleType","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Must be called if you manually reposition a dd element. ...","method_calls":["setInitPosition","setXConstraint","setYConstraint"],"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"\n","name":"maintainOffset","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":1048,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"resetConstraints","doc":"<p>Must be called if you manually reposition a dd element.</p>\n","chainable":false,"inheritdoc":null,"id":"method-resetConstraints","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"},{"type":"Object","name":"applyIfNotSet","html_type":"Object"}],"tagname":"method","files":[{"linenr":1164,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"static":null,"name":"setConfig","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-setConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the pointer offset. ...","method_calls":null,"owner":"Ext.dd.DD","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>the distance from the left</p>\n","name":"iDeltaX","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>the distance from the top</p>\n","name":"iDeltaY","html_type":"Number"}],"tagname":"method","files":[{"linenr":70,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DD.js"}],"private":null,"static":null,"name":"setDelta","doc":"<p>Sets the pointer offset.  You can call this directly to force the\noffset to be in a particular location (e.g., pass in 0,0 to set it\nto the center of the object)</p>\n","chainable":false,"inheritdoc":null,"id":"method-setDelta","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Allows you to specify that an element other than the linked element\nwill be moved with the cursor during a drag ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>the id of the element that will be used to initiate the drag</p>\n","name":"id","html_type":"String"}],"tagname":"method","files":[{"linenr":729,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"setDragElId","doc":"<p>Allows you to specify that an element other than the linked element\nwill be moved with the cursor during a drag</p>\n","chainable":false,"inheritdoc":null,"id":"method-setDragElId","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the drag element to the location of the mousedown or click event,\nmaintaining the cursor location relative to th...","method_calls":["alignElWithMouse","getDragEl"],"owner":"Ext.dd.DD","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>the X coordinate of the mousedown or drag event</p>\n","name":"iPageX","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>the Y coordinate of the mousedown or drag event</p>\n","name":"iPageY","html_type":"Number"}],"tagname":"method","files":[{"linenr":82,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DD.js"}],"private":null,"static":null,"name":"setDragElPos","doc":"<p>Sets the drag element to the location of the mousedown or click event,\nmaintaining the cursor location relative to the location on the element\nthat was clicked.  Override this if you want to place the element in a\nlocation other than where the cursor is.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setDragElPos","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Allows you to specify a child of the linked element that should be\nused to initiate the drag operation. ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>the id of the element that will be used to\ninitiate the drag.</p>\n","name":"id","html_type":"String"}],"tagname":"method","files":[{"linenr":738,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"setHandleElId","doc":"<p>Allows you to specify a child of the linked element that should be\nused to initiate the drag operation.  An example of this would be if\nyou have a content div with text and links.  Clicking anywhere in the\ncontent area would normally start the drag operation.  Use this method\nto specify that an element inside of the content div is the element\nthat starts the drag operation.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setHandleElId","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Stores the initial placement of the linked element. ...","method_calls":["getEl","setStartPosition"],"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>the X offset, default 0</p>\n","name":"diffX","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>the Y offset, default 0</p>\n","name":"diffY","html_type":"Number"}],"tagname":"method","files":[{"linenr":665,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"setInitPosition","doc":"<p>Stores the initial placement of the linked element.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setInitPosition","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.dd.DD","inheritable":null,"params":[{"type":"Object","name":"el","html_type":"Object"},{"type":"Object","name":"x","html_type":"Object"},{"type":"Object","name":"y","html_type":"Object"}],"tagname":"method","files":[{"linenr":300,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DD.js"}],"private":true,"static":null,"name":"setLocalXY","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-setLocalXY","fires":null,"linenr":300},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Allows you to set an element outside of the linked element as a drag\nhandle ...","method_calls":["setHandleElId"],"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>the id of the element that will be used to initiate the drag</p>\n","name":"id","html_type":"String"}],"tagname":"method","files":[{"linenr":756,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"setOuterHandleElId","doc":"<p>Allows you to set an element outside of the linked element as a drag\nhandle</p>\n","chainable":false,"inheritdoc":null,"id":"method-setOuterHandleElId","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Configures the padding for the target zone in px. ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>Top pad</p>\n","name":"iTop","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>Right pad</p>\n","name":"iRight","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>Bot pad</p>\n","name":"iBot","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>Left pad</p>\n","name":"iLeft","html_type":"Number"}],"tagname":"method","files":[{"linenr":643,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"setPadding","doc":"<p>Configures the padding for the target zone in px.  Effectively expands\n(or reduces) the virtual object size for targeting calculations.\nSupports css-style shorthand; if only one parameter is passed, all sides\nwill have that padding, and if only two are passed, the top and bottom\nwill have the first param, the left and right the second.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setPadding","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the start position of the element. ...","method_calls":["getEl"],"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>current position (from previous lookup)</p>\n","name":"pos","html_type":"Object"}],"tagname":"method","files":[{"linenr":692,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"setStartPosition","doc":"<p>Sets the start position of the element.  This is set when the obj\nis initialized, the reset when a drag is started.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setStartPosition","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"By default, the element can be dragged any place on the screen. ...","method_calls":["setXTicks"],"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>the number of pixels the element can move to the left</p>\n","name":"iLeft","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>the number of pixels the element can move to the\nright</p>\n","name":"iRight","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>parameter for specifying that the\nelement should move iTickSize pixels at a time.</p>\n","name":"iTickSize","optional":true,"html_type":"Number"}],"tagname":"method","files":[{"linenr":986,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"setXConstraint","doc":"<p>By default, the element can be dragged any place on the screen.  Use\nthis method to limit the horizontal travel of the element.  Pass in\n0,0 for the parameters if you want to lock the drag to the y axis.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setXConstraint","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates the array of horizontal tick marks if an interval was specified\nin setXConstraint(). ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"Object","name":"iStartX","html_type":"Object"},{"type":"Object","name":"iTickSize","html_type":"Object"}],"tagname":"method","files":[{"linenr":928,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"setXTicks","doc":"<p>Creates the array of horizontal tick marks if an interval was specified\nin setXConstraint().</p>\n","chainable":false,"inheritdoc":null,"id":"method-setXTicks","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"By default, the element can be dragged any place on the screen. ...","method_calls":["setYTicks"],"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>the number of pixels the element can move up</p>\n","name":"iUp","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>the number of pixels the element can move down</p>\n","name":"iDown","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>parameter for specifying that the\nelement should move iTickSize pixels at a time.</p>\n","name":"iTickSize","optional":true,"html_type":"Number"}],"tagname":"method","files":[{"linenr":1027,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"setYConstraint","doc":"<p>By default, the element can be dragged any place on the screen.  Set\nthis to limit the vertical travel of the element.  Pass in 0,0 for the\nparameters if you want to lock the drag to the x axis.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setYConstraint","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates the array of vertical tick marks if an interval was specified in\nsetYConstraint(). ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[{"type":"Object","name":"iStartY","html_type":"Object"},{"type":"Object","name":"iTickSize","html_type":"Object"}],"tagname":"method","files":[{"linenr":957,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":true,"static":null,"name":"setYTicks","doc":"<p>Creates the array of vertical tick marks if an interval was specified in\nsetYConstraint().</p>\n","chainable":false,"inheritdoc":null,"id":"method-setYTicks","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Resizes the drag frame to the dimensions of the clicked object, positions\nit over the object, and finally displays it ...","method_calls":["_resizeProxy","getDragEl","getEl","setDelta","setDragElPos"],"owner":"Ext.dd.DDProxy","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>X click position</p>\n","name":"iPageX","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>Y click position</p>\n","name":"iPageY","html_type":"Number"}],"tagname":"method","files":[{"linenr":135,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DDProxy.js"}],"private":true,"static":null,"name":"showFrame","doc":"<p>Resizes the drag frame to the dimensions of the clicked object, positions\nit over the object, and finally displays it</p>\n","chainable":false,"inheritdoc":null,"id":"method-showFrame","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.dd.DragDrop","link":"<a href=\"#!/api/Ext.dd.DragDrop-method-startDrag\" rel=\"Ext.dd.DragDrop-method-startDrag\" class=\"docClass\">Ext.dd.DragDrop.startDrag</a>","name":"startDrag"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Abstract method called after a drag/drop object is clicked\nand the drag or mousedown time thresholds have beeen met. ...","method_calls":["onInitDrag"],"owner":"Ext.dd.DragSource","inheritable":null,"params":[{"type":"Object","name":"x","html_type":"Object"},{"type":"Object","name":"y","html_type":"Object"}],"tagname":"method","files":[{"linenr":374,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":true,"static":null,"name":"startDrag","doc":"<p>Abstract method called after a drag/drop object is clicked\nand the drag or mousedown time thresholds have beeen met.</p>\n","chainable":false,"inheritdoc":null,"id":"method-startDrag","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the reference to the class from which this object was instantiated. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":778,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Class","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"private":null,"static":null,"name":"statics","doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-statics","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.dd.DD","link":"<a href=\"#!/api/Ext.dd.DD-method-toString\" rel=\"Ext.dd.DD-method-toString\" class=\"docClass\">Ext.dd.DD.toString</a>","name":"toString"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"toString method ...","method_calls":null,"owner":"Ext.dd.DDProxy","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":220,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DDProxy.js"}],"return":{"type":"String","properties":null,"doc":"<p>string representation of the dd obj</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"toString","doc":"<p>toString method</p>\n","chainable":false,"inheritdoc":null,"id":"method-toString","fires":null,"linenr":220},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.dd.DragSource","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":410,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragSource.js"}],"private":true,"static":null,"name":"triggerCacheRefresh","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-triggerCacheRefresh","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Unlocks this instace ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":209,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"unlock","doc":"<p>Unlocks this instace</p>\n","chainable":false,"inheritdoc":null,"id":"method-unlock","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all drag and drop hooks for this element ...","method_calls":null,"owner":"Ext.dd.DragDrop","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":771,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/dd/DragDrop.js"}],"private":null,"static":null,"name":"unreg","doc":"<p>Removes all drag and drop hooks for this element</p>\n","chainable":false,"inheritdoc":null,"id":"method-unreg","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":176,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-addConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":256,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addInheritableStatics","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addInheritableStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"member","html_type":"Object"}],"tagname":"method","files":[{"linenr":353,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addMember","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addMember","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add methods / properties to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":296,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"addMembers","doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addMembers","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add / override static properties of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":218,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"addStatics","doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"xtype","html_type":"Object"}],"tagname":"method","files":[{"linenr":730,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addXtype","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addXtype","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Borrow another class' members to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Ext.Base","tagname":"params","doc":"<p>The class to borrow members from</p>\n","name":"fromClass","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"type":"Array/String","tagname":"params","doc":"<p>The names of the members to borrow</p>\n","name":"members","html_type":"Array/String"}],"tagname":"method","files":[{"linenr":383,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":true,"name":"borrow","doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-borrow","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-static-method-create\" rel=\"Ext.layout.Layout-static-method-create\" class=\"docClass\">Ext.layout.Layout.create</a>","name":"create"}],"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create a new instance of this Class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":60,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object","properties":null,"doc":"<p>the created instance.</p>\n","name":"return","html_type":"Object"},"static":true,"private":null,"name":"create","doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-create","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create aliases for existing prototype methods. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","name":"alias","html_type":"String/Object"},{"type":"String/Object","tagname":"params","doc":"<p>The original method name</p>\n","name":"origin","html_type":"String/Object"}],"tagname":"method","files":[{"linenr":696,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"createAlias","doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"static-method-createAlias","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":81,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"extend","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-extend","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the current class' name in string format. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":677,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"String","properties":null,"doc":"<p>className</p>\n","name":"return","html_type":"String"},"static":true,"private":null,"name":"getName","doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"static-method-getName","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds members to class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":373,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"implement","doc":"<p>Adds members to class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-implement","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n","version":"4.1"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Used internally by the mixins pre-processor ...","method_calls":["addConfig","hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"mixinClass","html_type":"Object"}],"tagname":"method","files":[{"linenr":595,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"mixin","doc":"<p>Used internally by the mixins pre-processor</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-mixin","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":162,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"onExtended","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-onExtended","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Override members of this class. ...","method_calls":["addConfig","addInheritableStatics"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":452,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this class</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"override","doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","chainable":true,"inheritdoc":null,"id":"static-method-override","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n","version":"4.1.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"triggerExtended","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-triggerExtended","fires":null,"linenr":null}],"alternateClassNames":[],"code_type":"ext_define","mixins":[],"doc":"<p>A simple class that provides the basic implementation needed to make any element draggable.</p>\n","name":"Ext.dd.DragSource","id":"class-Ext.dd.DragSource"}