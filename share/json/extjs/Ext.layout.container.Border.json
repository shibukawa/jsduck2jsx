{"autodetected":{"aliases":true,"requires":true,"uses":true,"extends":true,"members":true,"alternateClassNames":true,"code_type":true,"mixins":true},"short_doc":"This is a multi-pane, application-oriented UI layout style that supports multiple nested panels, automatic bars\nbetwe...","aliases":{"layout":["border"]},"requires":["Ext.resizer.BorderSplitter","Ext.fx.Anim","Ext.layout.container.border.Region"],"files":[{"linenr":21,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"tagname":"class","uses":[],"extends":"Ext.layout.container.Container","members":[{"overrides":[{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-cfg-itemCls\" rel=\"Ext.layout.container.Container-cfg-itemCls\" class=\"docClass\">Ext.layout.container.Container.itemCls</a>","name":"itemCls"}],"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":"An optional extra CSS class that will be added to the container. ...","default":"[Ext.baseCSSPrefix + 'border-item', Ext.baseCSSPrefix + 'box-item']","owner":"Ext.layout.container.Border","inheritable":null,"readonly":null,"tagname":"cfg","files":[{"linenr":100,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":null,"static":null,"properties":null,"name":"itemCls","doc":"<p>An optional extra CSS class that will be added to the container. This can be useful for\nadding customized styles to the container or any of its children using standard CSS\nrules. See <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>.<a href=\"#!/api/Ext.Component-cfg-componentCls\" rel=\"Ext.Component-cfg-componentCls\" class=\"docClass\">componentCls</a> also.</p>\n","inheritdoc":null,"id":"cfg-itemCls","html_type":"String","linenr":100},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Number/String/Object","short_doc":"Sets the padding to be applied to all child items managed by this layout. ...","default":null,"owner":"Ext.layout.container.Border","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":120,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":null,"static":null,"name":"padding","properties":null,"doc":"<p>Sets the padding to be applied to all child items managed by this layout.</p>\n\n<p>This property can be specified as a string containing space-separated, numeric\npadding values. The order of the sides associated with each value matches the way\nCSS processes padding values:</p>\n\n<ul>\n<li>If there is only one value, it applies to all sides.</li>\n<li>If there are two values, the top and bottom borders are set to the first value\nand the right and left are set to the second.</li>\n<li>If there are three values, the top is set to the first value, the left and right\nare set to the second, and the bottom is set to the third.</li>\n<li>If there are four values, they apply to the top, right, bottom, and left,\nrespectively.</li>\n</ul>\n\n","inheritdoc":null,"id":"cfg-padding","html_type":"Number/String/Object","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Object","short_doc":"The default weights to assign to regions in the border layout. ...","default":null,"owner":"Ext.layout.container.Border","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":177,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":null,"static":null,"name":"regionWeights","properties":null,"doc":"<p>The default weights to assign to regions in the border layout. These values are\nused when a region does not contain a <code>weight</code> property. This object must have\nproperties for all regions (\"north\", \"south\", \"east\" and \"west\").</p>\n\n<p><strong>IMPORTANT:</strong> Since this is an object, changing its properties will impact ALL\ninstances of Border layout. If this is not desired, provide a replacement object as\na config option instead:</p>\n\n<pre><code> layout: {\n     type: 'border',\n     regionWeights: {\n         west: 20,\n         north: 10,\n         south: -10,\n         east: -20\n     }\n }\n</code></pre>\n\n<p>The region with the highest weight is assigned space from the border before other\nregions. Regions of equal weight are assigned space based on their position in the\nowner's items list (first come, first served).</p>\n","inheritdoc":null,"id":"cfg-regionWeights","html_type":"Object","evented":null,"linenr":null},{"autodetected":{},"type":"Boolean","short_doc":"This configuration option is to be applied to the child items managed by this layout. ...","default":null,"owner":"Ext.layout.container.Border","tagname":"cfg","files":[{"linenr":106,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"name":"split","properties":null,"doc":"<p>This configuration option is to be applied to the <strong>child <code>items</code></strong> managed by this layout.\nEach region with <code>split:true</code> will get a <a href=\"#!/api/Ext.resizer.BorderSplitter\" rel=\"Ext.resizer.BorderSplitter\" class=\"docClass\">Splitter</a> that\nallows for manual resizing of the container. Except for the <code>center</code> region.</p>\n","id":"cfg-split","html_type":"Boolean"},{"autodetected":{},"type":"Boolean","short_doc":"This configuration option is to be applied to the child items managed by this layout and\nis used in conjunction with ...","default":"true","owner":"Ext.layout.container.Border","tagname":"cfg","files":[{"linenr":113,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"name":"splitterResize","properties":null,"doc":"<p>This configuration option is to be applied to the <strong>child <code>items</code></strong> managed by this layout and\nis used in conjunction with <a href=\"#!/api/Ext.layout.container.Border-cfg-split\" rel=\"Ext.layout.container.Border-cfg-split\" class=\"docClass\">split</a>. By default, when specifying <a href=\"#!/api/Ext.layout.container.Border-cfg-split\" rel=\"Ext.layout.container.Border-cfg-split\" class=\"docClass\">split</a>, the region\ncan be dragged to be resized. Set this option to false to show the split bar but prevent resizing.</p>\n","id":"cfg-splitterResize","html_type":"Boolean"},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'Ext.Base'","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":763,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"$className","doc":"\n","inheritdoc":null,"id":"property-S-className","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"An object which contains boolean properties specifying which properties are to be\nanimated upon flush of child Compon...","default":null,"owner":"Ext.layout.container.Container","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":68,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"animatePolicy","doc":"<p>An object which contains boolean properties specifying which properties are to be\nanimated upon flush of child Component ContextItems. For example, Accordion would\nhave:</p>\n\n<pre><code> {\n     y: true,\n     height: true\n }\n</code></pre>\n","inheritdoc":null,"id":"property-animatePolicy","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{readsWidth: 1, readsHeight: 1, setsWidth: 0, setsHeight: 0}","owner":"Ext.layout.Layout","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":42,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"autoSizePolicy","doc":"\n","inheritdoc":null,"id":"property-autoSizePolicy","html_type":"Object","linenr":42},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"Reused meta-data objects that describe axis properties. ...","default":"{horz: {borderBegin: 'west', borderEnd: 'east', horizontal: true, posProp: 'x', sizeProp: 'width', sizePropCap: 'Width'}, vert: {borderBegin: 'north', borderEnd: 'south', horizontal: false, posProp: 'y', sizeProp: 'height', sizePropCap: 'Height'}}","owner":"Ext.layout.container.Border","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":145,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"axisProps","doc":"<p>Reused meta-data objects that describe axis properties.</p>\n","inheritdoc":null,"id":"property-axisProps","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.layout.container.Border","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":168,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"centerRegion","doc":"\n","inheritdoc":null,"id":"property-centerRegion","html_type":"Object","linenr":null},{"overrides":[{"owner":"Ext.util.ElementContainer","link":"<a href=\"#!/api/Ext.util.ElementContainer-property-childEls\" rel=\"Ext.util.ElementContainer-property-childEls\" class=\"docClass\">Ext.util.ElementContainer.childEls</a>","name":"childEls"}],"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"['overflowPadderEl']","owner":"Ext.layout.container.Container","inheritable":null,"params":null,"readonly":null,"tagname":"property","files":[{"linenr":82,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"return":null,"private":true,"static":null,"name":"childEls","doc":"\n","throws":null,"inheritdoc":null,"id":"property-childEls","html_type":"Array","linenr":82},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":772,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configMap","doc":"\n","inheritdoc":null,"id":"property-configMap","html_type":"Object","linenr":null},{"autodetected":{},"type":"Boolean","short_doc":"Used only during a layout run, this value indicates that a\nlayout has finished its calculations. ...","default":null,"owner":"Ext.layout.Layout","tagname":"property","files":[{"linenr":95,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"name":"done","properties":null,"doc":"<p>Used only during a layout run, this value indicates that a\nlayout has finished its calculations. This flag is set to true prior to the call to\n<a href=\"#!/api/Ext.layout.Layout-method-calculate\" rel=\"Ext.layout.Layout-method-calculate\" class=\"docClass\">calculate</a> and should be set to false if this layout has more work to do.</p>\n","id":"property-done","html_type":"Boolean"},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'left'","owner":"Ext.layout.container.Border","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":141,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"horzMarginProp","doc":"\n","inheritdoc":null,"id":"property-horzMarginProp","html_type":"String","linenr":141},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":769,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigList","doc":"\n","inheritdoc":null,"id":"property-initConfigList","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":775,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigMap","doc":"\n","inheritdoc":null,"id":"property-initConfigMap","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"false","owner":"Ext.layout.Layout","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":39,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"initialized","doc":"\n","inheritdoc":null,"id":"property-initialized","html_type":"Boolean","linenr":39},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.layout.container.Border","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":104,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"isBorderLayout","doc":"\n","inheritdoc":null,"id":"property-isBorderLayout","html_type":"Boolean","linenr":104},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"isInstance","doc":"\n","inheritdoc":null,"id":"property-isInstance","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"true in this class to identify an object as an instantiated Layout, or subclass thereof. ...","default":"true","owner":"Ext.layout.Layout","inheritable":null,"readonly":true,"tagname":"property","files":[{"linenr":33,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":null,"static":null,"name":"isLayout","properties":null,"doc":"<p><code>true</code> in this class to identify an object as an instantiated Layout, or subclass thereof.</p>\n","inheritdoc":null,"id":"property-isLayout","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.layout.container.Border","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":171,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"manageMargins","doc":"\n","inheritdoc":null,"id":"property-manageMargins","html_type":"Boolean","linenr":171},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.Element","default":null,"owner":"Ext.layout.container.Container","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":83,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":null,"static":null,"name":"overflowPadderEl","properties":null,"doc":"<p>The element used to correct body padding during overflow.</p>\n","inheritdoc":null,"id":"property-overflowPadderEl","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'right'","owner":"Ext.layout.container.Border","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":143,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"padNotOnContainerProp","doc":"\n","inheritdoc":null,"id":"property-padNotOnContainerProp","html_type":"String","linenr":143},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'left'","owner":"Ext.layout.container.Border","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":142,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"padOnContainerProp","doc":"\n","inheritdoc":null,"id":"property-padOnContainerProp","html_type":"String","linenr":142},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.layout.container.Border","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":173,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"panelCollapseAnimate","doc":"\n","inheritdoc":null,"id":"property-panelCollapseAnimate","html_type":"Boolean","linenr":173},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'placeholder'","owner":"Ext.layout.container.Border","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":175,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"panelCollapseMode","doc":"\n","inheritdoc":null,"id":"property-panelCollapseMode","html_type":"String","linenr":175},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"RegExp","short_doc":" ...","default":"/(\\d+)%/","owner":"Ext.layout.container.Border","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":139,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"percentageRe","doc":"\n","inheritdoc":null,"id":"property-percentageRe","html_type":"RegExp","linenr":139},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"Flags and configs that get set of regions based on their region property. ...","default":"{center: {isCenter: true, isHorz: false, isVert: false}, north: {isCenter: false, isHorz: false, isVert: true, collapseDirection: 'top'}, south: {isCenter: false, isHorz: false, isVert: true, collapseDirection: 'bottom'}, west: {isCenter: false, isHorz: true, isVert: false, collapseDirection: 'left'}, east: {isCenter: false, isHorz: true, isVert: false, collapseDirection: 'right'}}","owner":"Ext.layout.container.Border","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":773,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"regionFlags","doc":"<p>Flags and configs that get set of regions based on their <code>region</code> property.</p>\n","inheritdoc":null,"id":"property-regionFlags","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.layout.container.Border","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"regionMeta","doc":"<hr />\n\n<p> Misc</p>\n","inheritdoc":null,"id":"property-regionMeta","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"['{%this.renderBody(out,values)%}']","owner":"Ext.layout.container.Container","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":90,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"renderTpl","doc":"\n","inheritdoc":null,"id":"property-renderTpl","html_type":"Array","linenr":90},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"false","owner":"Ext.layout.Layout","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":40,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"running","doc":"\n","inheritdoc":null,"id":"property-running","html_type":"Boolean","linenr":40},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.Class","short_doc":"Get the reference to the current class from which this object was instantiated. ...","default":null,"owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1045,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"private":null,"static":null,"name":"self","properties":null,"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","inheritdoc":null,"id":"property-self","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{vert: {readsWidth: 0, readsHeight: 1, setsWidth: 1, setsHeight: 0}, horz: {readsWidth: 1, readsHeight: 0, setsWidth: 0, setsHeight: 1}, flexAll: {readsWidth: 0, readsHeight: 0, setsWidth: 1, setsHeight: 1}}","owner":"Ext.layout.container.Border","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":855,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"sizePolicies","doc":"\n","inheritdoc":null,"id":"property-sizePolicies","html_type":"Object","linenr":855},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"Ext.baseCSSPrefix + 'border-layout-ct'","owner":"Ext.layout.container.Border","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":98,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"targetCls","doc":"\n","inheritdoc":null,"id":"property-targetCls","html_type":"String","linenr":98},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"Lists the regions that would consider an interior region a neighbor. ...","default":"{center: ['north', 'south', 'east', 'west'], north: ['north', 'east', 'west'], south: ['south', 'east', 'west'], east: ['east', 'north', 'south'], west: ['west', 'north', 'south']}","owner":"Ext.layout.container.Border","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":840,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"touchedRegions","doc":"<p>Lists the regions that would consider an interior region a neighbor. For example,\na north region would consider an east or west region its neighbords (as well as\nan inner north region).</p>\n","inheritdoc":null,"id":"property-touchedRegions","html_type":"Object","linenr":null},{"overrides":[{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-property-type\" rel=\"Ext.layout.container.Container-property-type\" class=\"docClass\">Ext.layout.container.Container.type</a>","name":"type"}],"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'border'","owner":"Ext.layout.container.Border","inheritable":null,"params":null,"readonly":null,"tagname":"property","files":[{"linenr":102,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"return":null,"private":true,"static":null,"name":"type","doc":"\n","throws":null,"inheritdoc":null,"id":"property-type","html_type":"String","linenr":102},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.layout.container.Container","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":94,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"usesContainerHeight","doc":"\n","inheritdoc":null,"id":"property-usesContainerHeight","html_type":"Boolean","linenr":94},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.layout.container.Container","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":95,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"usesContainerWidth","doc":"\n","inheritdoc":null,"id":"property-usesContainerWidth","html_type":"Boolean","linenr":95},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.layout.container.Container","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":96,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"usesHeight","doc":"\n","inheritdoc":null,"id":"property-usesHeight","html_type":"Boolean","linenr":96},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.layout.container.Container","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":97,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"usesWidth","doc":"\n","inheritdoc":null,"id":"property-usesWidth","html_type":"Boolean","linenr":97},{"autodetected":{"type":true,"default":true,"readonly":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":true,"readonly":null,"tagname":"property","files":[{"linenr":133,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"$onExtended","doc":"\n","inheritdoc":null,"id":"static-property-S-onExtended","html_type":"Array","linenr":null},{"overrides":[{"owner":"Ext.util.ElementContainer","link":"<a href=\"#!/api/Ext.util.ElementContainer-method-constructor\" rel=\"Ext.util.ElementContainer-method-constructor\" class=\"docClass\">Ext.util.ElementContainer.constructor</a>","name":"constructor"},{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-constructor\" rel=\"Ext.layout.container.Container-method-constructor\" class=\"docClass\">Ext.layout.container.Container.constructor</a>","name":"constructor"},{"owner":"Ext.layout.container.Box","link":"<a href=\"#!/api/Ext.layout.container.Box-method-constructor\" rel=\"Ext.layout.container.Box-method-constructor\" class=\"docClass\">Ext.layout.container.Box.constructor</a>","name":"constructor"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["callParent"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":99,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"return":{"type":"Ext.layout.container.Container","doc":"\n","html_type":"<a href=\"#!/api/Ext.layout.container.Container\" rel=\"Ext.layout.container.Container\" class=\"docClass\">Ext.layout.container.Container</a>"},"private":null,"static":null,"name":"constructor","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-constructor","fires":[],"linenr":99},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds each argument passed to this method to the childEls array. ...","method_calls":["getChildEls","hasOwnProperty","prune"],"owner":"Ext.util.ElementContainer","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":151,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/ElementContainer.js"}],"private":null,"static":null,"name":"addChildEls","doc":"<p>Adds each argument passed to this method to the <a href=\"#!/api/Ext.AbstractComponent-cfg-childEls\" rel=\"Ext.AbstractComponent-cfg-childEls\" class=\"docClass\">childEls</a> array.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addChildEls","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes layout's itemCls and owning Container's itemCls. ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"}],"tagname":"method","files":[{"linenr":523,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"protected":true,"private":null,"static":null,"name":"afterRemove","doc":"<p>Removes layout's itemCls and owning Container's itemCls.\nClears the managed dimensions flags</p>\n","chainable":false,"inheritdoc":null,"id":"method-afterRemove","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":519,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"afterRenderItem","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-afterRenderItem","fires":null,"linenr":519},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets references to elements inside the component. ...","method_calls":["getChildEls"],"owner":"Ext.util.ElementContainer","inheritable":null,"params":[{"type":"Object","name":"el","html_type":"Object"},{"type":"Object","name":"id","html_type":"Object"}],"tagname":"method","files":[{"linenr":167,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/ElementContainer.js"}],"private":true,"static":null,"name":"applyChildEls","doc":"<p>Sets references to elements inside the component.</p>\n","chainable":false,"inheritdoc":null,"id":"method-applyChildEls","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates the axis objects for the layout. ...","method_calls":null,"owner":"Ext.layout.container.Border","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"},{"type":"Object","name":"regions","html_type":"Object"},{"type":"Object","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":212,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"beginAxis","doc":"<p>Creates the axis objects for the layout. These are only missing size information\nwhich is added during <a href=\"#!/api/Ext.layout.container.Border-method-calculate\" rel=\"Ext.layout.container.Border-method-calculate\" class=\"docClass\">calculate</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-beginAxis","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Called by an owning Panel before the Panel begins its collapse process. ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":54,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"beginCollapse","doc":"<p>Called by an owning Panel before the Panel begins its collapse process.\nMost layouts will not need to override the default <a href=\"#!/api/Ext-property-emptyFn\" rel=\"Ext-property-emptyFn\" class=\"docClass\">Ext.emptyFn</a> implementation.</p>\n","chainable":null,"inheritdoc":null,"id":"method-beginCollapse","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Called by an owning Panel before the Panel begins its expand process. ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":61,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"beginExpand","doc":"<p>Called by an owning Panel before the Panel begins its expand process.\nMost layouts will not need to override the default <a href=\"#!/api/Ext-property-emptyFn\" rel=\"Ext-property-emptyFn\" class=\"docClass\">Ext.emptyFn</a> implementation.</p>\n","chainable":null,"inheritdoc":null,"id":"method-beginExpand","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-beginLayout\" rel=\"Ext.layout.Layout-method-beginLayout\" class=\"docClass\">Ext.layout.Layout.beginLayout</a>","name":"beginLayout"},{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-beginLayout\" rel=\"Ext.layout.container.Container-method-beginLayout\" class=\"docClass\">Ext.layout.container.Container.beginLayout</a>","name":"beginLayout"},{"owner":"Ext.layout.container.Box","link":"<a href=\"#!/api/Ext.layout.container.Box-method-beginLayout\" rel=\"Ext.layout.container.Box-method-beginLayout\" class=\"docClass\">Ext.layout.container.Box.beginLayout</a>","name":"beginLayout"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"In addition to work done by our base classes, containers benefit from some extra\ncached data. ...","method_calls":["beginAxis","callParent","getLayoutItems","getSplitterTarget","setupSplitterNeighbors","sortWeightedItems"],"owner":"Ext.layout.container.Border","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"}],"tagname":"method","files":[{"linenr":302,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":null,"static":null,"name":"beginLayout","doc":"<p>In addition to work done by our base classes, containers benefit from some extra\ncached data. The following properties are added to the ownerContext:</p>\n\n<ul>\n<li>visibleItems: the result of <a href=\"#!/api/Ext.layout.container.Border-method-getVisibleItems\" rel=\"Ext.layout.container.Border-method-getVisibleItems\" class=\"docClass\">getVisibleItems</a></li>\n<li>childItems: the ContextItem[] for each visible item</li>\n<li>targetContext: the ContextItem for the <a href=\"#!/api/Ext.layout.container.Border-method-getTarget\" rel=\"Ext.layout.container.Border-method-getTarget\" class=\"docClass\">getTarget</a> element</li>\n</ul>\n\n","chainable":false,"inheritdoc":null,"id":"method-beginLayout","fires":[],"linenr":302},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-beginLayoutCycle\" rel=\"Ext.layout.Layout-method-beginLayoutCycle\" class=\"docClass\">Ext.layout.Layout.beginLayoutCycle</a>","name":"beginLayoutCycle"},{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-beginLayoutCycle\" rel=\"Ext.layout.container.Container-method-beginLayoutCycle\" class=\"docClass\">Ext.layout.container.Container.beginLayoutCycle</a>","name":"beginLayoutCycle"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Called before any calculation cycles to reset DOM values and prepare for calculation. ...","method_calls":["callParent"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"},{"type":"Object","name":"firstCycle","html_type":"Object"}],"tagname":"method","files":[{"linenr":125,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":null,"static":null,"name":"beginLayoutCycle","doc":"<p>Called before any calculation cycles to reset DOM values and prepare for calculation.</p>\n\n<p>This is a write phase and DOM reads should be strictly avoided when overridding\nthis method.</p>\n","chainable":false,"inheritdoc":null,"id":"method-beginLayoutCycle","fires":[],"linenr":125},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getVisibleItems"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"}],"tagname":"method","files":[{"linenr":140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"cacheChildItems","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-cacheChildItems","fires":[],"linenr":140},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["applyChildEls"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":155,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"cacheElements","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-cacheElements","fires":[],"linenr":155},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-calculate\" rel=\"Ext.layout.Layout-method-calculate\" class=\"docClass\">Ext.layout.Layout.calculate</a>","name":"calculate"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Called to perform the calculations for this layout. ...","method_calls":["calculateChildAxis","finishAxis","finishPositions","getContainerSize"],"owner":"Ext.layout.container.Border","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"}],"tagname":"method","files":[{"linenr":387,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":null,"static":null,"name":"calculate","doc":"<p>Called to perform the calculations for this layout. This method will be called at\nleast once and may be called repeatedly if the <a href=\"#!/api/Ext.layout.container.Border-property-done\" rel=\"Ext.layout.container.Border-property-done\" class=\"docClass\">done</a> property is cleared\nbefore return to indicate that this layout is not yet done. The <a href=\"#!/api/Ext.layout.container.Border-property-done\" rel=\"Ext.layout.container.Border-property-done\" class=\"docClass\">done</a> property\nis always set to <code>true</code> before entering this method.</p>\n\n<p>This is a read phase and DOM writes should be strictly avoided in derived classes.\nInstead, DOM writes need to be written to <a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a> objects to\n be flushed at the next opportunity.</p>\n","chainable":false,"inheritdoc":null,"id":"method-calculate","abstract":true,"fires":[],"linenr":387},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Performs the calculations for a region on a specified axis. ...","method_calls":null,"owner":"Ext.layout.container.Border","inheritable":null,"params":[{"type":"Object","name":"childContext","html_type":"Object"},{"type":"Object","name":"axis","html_type":"Object"}],"tagname":"method","files":[{"linenr":493,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"calculateChildAxis","doc":"<p>Performs the calculations for a region on a specified axis.</p>\n","chainable":false,"inheritdoc":null,"id":"method-calculateChildAxis","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":1269,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the overridden method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callOverridden","doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"method-callOverridden","deprecated":{"text":"<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the \"parent\" method of the current method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":846,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the parent method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callParent","doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","chainable":false,"inheritdoc":null,"id":"method-callParent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":961,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the superclass method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callSuper","doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","chainable":false,"inheritdoc":null,"id":"method-callSuper","fires":null,"linenr":null},{"autodetected":{},"short_doc":"This method (if implemented) is called at the end of the cycle in which this layout\ncompletes (by not setting done to...","owner":"Ext.layout.Layout","params":[{"type":"Ext.layout.ContextItem","tagname":"params","doc":"<p>The context item for the layout's owner\ncomponent.</p>\n","name":"ownerContext","html_type":"<a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a>"}],"tagname":"method","files":[{"linenr":165,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"name":"completeLayout","doc":"<p>This method (if implemented) is called at the end of the cycle in which this layout\ncompletes (by not setting <a href=\"#!/api/Ext.layout.Layout-property-done\" rel=\"Ext.layout.Layout-property-done\" class=\"docClass\">done</a> to <code>false</code> in <a href=\"#!/api/Ext.layout.Layout-method-calculate\" rel=\"Ext.layout.Layout-method-calculate\" class=\"docClass\">calculate</a>). It is\npossible for the layout to complete and yet become invalid before the end of the cycle,\nin which case, this method will not be called. It is also possible for this method to\nbe called and then later the layout becomes invalidated. This will result in\n<a href=\"#!/api/Ext.layout.Layout-method-calculate\" rel=\"Ext.layout.Layout-method-calculate\" class=\"docClass\">calculate</a> being called again, followed by another call to this method.</p>\n\n<p>This is a read phase and DOM writes should be strictly avoided in derived classes.\nInstead, DOM writes need to be written to <a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a> objects to\nbe flushed at the next opportunity.</p>\n\n<p>This method need not be implemented by derived classes and, in fact, should only be\nimplemented when needed.</p>\n","id":"method-completeLayout"},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":766,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configClass","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-configClass","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-configureItem\" rel=\"Ext.layout.Layout-method-configureItem\" class=\"docClass\">Ext.layout.Layout.configureItem</a>","name":"configureItem"},{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-configureItem\" rel=\"Ext.layout.container.Container-method-configureItem\" class=\"docClass\">Ext.layout.container.Container.configureItem</a>","name":"configureItem"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds layout's itemCls and owning Container's itemCls ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"}],"tagname":"method","files":[{"linenr":161,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"protected":true,"private":null,"static":null,"name":"configureItem","doc":"<p>Adds layout's itemCls and owning Container's itemCls</p>\n","chainable":false,"inheritdoc":null,"id":"method-configureItem","fires":null,"linenr":null},{"type":null,"overrides":[{"owner":"Ext.util.ElementContainer","link":"<a href=\"#!/api/Ext.util.ElementContainer-method-destroy\" rel=\"Ext.util.ElementContainer-method-destroy\" class=\"docClass\">Ext.util.ElementContainer.destroy</a>","name":"destroy"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["callParent"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":104,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"return":null,"private":true,"static":null,"name":"destroy","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-destroy","fires":[],"linenr":104},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["renderContent","renderItems"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[{"type":"Object","name":"out","html_type":"Object"},{"type":"Object","name":"renderData","html_type":"Object"}],"tagname":"method","files":[{"linenr":186,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"doRenderBody","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-doRenderBody","fires":[],"linenr":186},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[{"type":"Object","name":"out","html_type":"Object"},{"type":"Object","name":"renderData","html_type":"Object"}],"tagname":"method","files":[{"linenr":194,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"doRenderContainer","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-doRenderContainer","fires":null,"linenr":194},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[{"type":"Object","name":"out","html_type":"Object"},{"type":"Object","name":"renderData","html_type":"Object"}],"tagname":"method","files":[{"linenr":205,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"doRenderItems","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-doRenderItems","fires":null,"linenr":205},{"autodetected":{},"short_doc":"This method (if implemented) is called after all layouts have completed. ...","owner":"Ext.layout.Layout","params":[{"type":"Ext.layout.ContextItem","tagname":"params","doc":"<p>The context item for the layout's owner\ncomponent.</p>\n","name":"ownerContext","html_type":"<a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a>"}],"tagname":"method","files":[{"linenr":185,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"name":"finalizeLayout","doc":"<p>This method (if implemented) is called after all layouts have completed. In most\nways this is similar to <a href=\"#!/api/Ext.layout.Layout-method-completeLayout\" rel=\"Ext.layout.Layout-method-completeLayout\" class=\"docClass\">completeLayout</a>. This call can cause this (or any\nlayout) to be become invalid (see <a href=\"#!/api/Ext.layout.Context-method-invalidate\" rel=\"Ext.layout.Context-method-invalidate\" class=\"docClass\">Ext.layout.Context.invalidate</a>), but this\nis best avoided. This method is intended to be where final reads are made and so it\nis best to avoid invalidating layouts at this point whenever possible. Even so, this\nmethod can be used to perform final checks that may require all other layouts to be\ncomplete and then invalidate some results.</p>\n\n<p>This is a read phase and DOM writes should be strictly avoided in derived classes.\nInstead, DOM writes need to be written to <a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a> objects to\nbe flushed at the next opportunity.</p>\n\n<p>This method need not be implemented by derived classes and, in fact, should only be\nimplemented when needed.</p>\n","id":"method-finalizeLayout"},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Finishes the calculations on an axis. ...","method_calls":null,"owner":"Ext.layout.container.Border","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"},{"type":"Object","name":"axis","html_type":"Object"}],"tagname":"method","files":[{"linenr":542,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"finishAxis","doc":"<p>Finishes the calculations on an axis. This basically just assigns the remaining\nspace to the center region.</p>\n","chainable":false,"inheritdoc":null,"id":"method-finishAxis","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Finishes by setting the positions on the child items. ...","method_calls":null,"owner":"Ext.layout.container.Border","inheritable":null,"params":[{"type":"Object","name":"childItems","html_type":"Object"}],"tagname":"method","files":[{"linenr":559,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"finishPositions","doc":"<p>Finishes by setting the positions on the child items.</p>\n","chainable":false,"inheritdoc":null,"id":"method-finishPositions","fires":null,"linenr":null},{"type":null,"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-finishRender\" rel=\"Ext.layout.Layout-method-finishRender\" class=\"docClass\">Ext.layout.Layout.finishRender</a>","name":"finishRender"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["cacheElements","callParent","finishRenderItems","getLayoutItems","getRenderTarget","getTarget"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":217,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"return":null,"private":true,"static":null,"name":"finishRender","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-finishRender","fires":[],"linenr":217},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["afterRenderItem"],"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"target","html_type":"Object"},{"type":"Object","name":"items","html_type":"Object"}],"tagname":"method","files":[{"linenr":356,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"finishRenderItems","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-finishRenderItems","fires":[],"linenr":356},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is called after all layouts are complete and their calculations flushed\nto the DOM. ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Ext.layout.ContextItem","tagname":"params","doc":"<p>The context item for the layout's owner\ncomponent.</p>\n","name":"ownerContext","html_type":"<a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a>"}],"tagname":"method","files":[{"linenr":206,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":null,"static":null,"name":"finishedLayout","doc":"<p>This method is called after all layouts are complete and their calculations flushed\nto the DOM. No further layouts will be run and this method is only called once per\nlayout run. The base component layout caches <code>lastComponentSize</code>.</p>\n\n<p>This is a write phase and DOM reads should be avoided if possible when overridding\nthis method.</p>\n\n<p>This method need not be implemented by derived classes and, in fact, should only be\nimplemented when needed.</p>\n","chainable":false,"inheritdoc":null,"id":"method-finishedLayout","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":248,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"getAnimatePolicy","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getAnimatePolicy","fires":null,"linenr":248},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getClassChildEls","hasOwnProperty"],"owner":"Ext.util.ElementContainer","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":201,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/ElementContainer.js"}],"private":true,"static":null,"name":"getChildEls","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getChildEls","fires":[],"linenr":201},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getClassChildEls","prune"],"owner":"Ext.util.ElementContainer","inheritable":null,"params":[{"type":"Object","name":"cls","html_type":"Object"}],"tagname":"method","files":[{"linenr":216,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/ElementContainer.js"}],"private":true,"static":null,"name":"getClassChildEls","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getClassChildEls","fires":[],"linenr":216},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":1196,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"getConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the container size (that of the target). ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[{"type":"Ext.layout.ContextItem","tagname":"params","doc":"<p>The owner's context item.</p>\n","name":"ownerContext","html_type":"<a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a>"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True if the container size must be in the DOM.</p>\n","name":"inDom","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":245,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"protected":true,"return":{"type":"Object","properties":[{"type":"Number","tagname":"return","doc":"<p>The width</p>\n","name":"width","html_type":"Number"},{"type":"Number","tagname":"return","doc":"<p>The height</p>\n","name":"height","html_type":"Number"}],"doc":"<p>The size</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getContainerSize","doc":"<p>Returns the container size (that of the target). Only the fixed-sized dimensions can\nbe returned because the shrinkWrap dimensions are based on the contentWidth/Height\nas determined by the container layout.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getContainerSize","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":511,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"getContentTarget","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getContentTarget","fires":null,"linenr":511},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the element into which extra functional DOM elements can be inserted. ...","method_calls":["getRenderTarget"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":391,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"return":{"type":"Ext.Element","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},"private":null,"static":null,"name":"getElementTarget","doc":"<p>Returns the element into which extra functional DOM elements can be inserted. Defaults to the owner Component's encapsulating element.</p>\n\n<p>May be overridden in Component layout managers which implement a <a href=\"#!/api/Ext.layout.container.Container-method-getRenderTarget\" rel=\"Ext.layout.container.Container-method-getRenderTarget\" class=\"docClass\">component render target</a> which must only\ncontain child components.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getElementTarget","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>Name of the config option to return.</p>\n","name":"name","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":1206,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object/Mixed","properties":null,"doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","name":"return","html_type":"Object/Mixed"},"private":null,"static":null,"name":"getInitialConfig","doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getInitialConfig","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-getItemSizePolicy\" rel=\"Ext.layout.Layout-method-getItemSizePolicy\" class=\"docClass\">Ext.layout.Layout.getItemSizePolicy</a>","name":"getItemSizePolicy"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns an object describing how this layout manages the size of the given component. ...","method_calls":null,"owner":"Ext.layout.container.Border","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"}],"protected":true,"tagname":"method","files":[{"linenr":876,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"return":{"type":"Ext.layout.SizePolicy","properties":null,"doc":"<p>An object describing the sizing done by the layout\nfor this item.</p>\n\n","name":"return","html_type":"<a href=\"#!/api/Ext.layout.SizePolicy\" rel=\"Ext.layout.SizePolicy\" class=\"docClass\">Ext.layout.SizePolicy</a>"},"private":null,"static":null,"name":"getItemSizePolicy","doc":"<p>Returns an object describing how this layout manages the size of the given component.\nThis method must be implemented by any layout that manages components.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getItemSizePolicy","fires":null,"linenr":876},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["configureItem"],"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"items","html_type":"Object"},{"type":"Object","name":"renderCfgs","html_type":"Object"}],"tagname":"method","files":[{"linenr":312,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"getItemsRenderTree","doc":"<hr />\n","chainable":false,"inheritdoc":null,"id":"method-getItemsRenderTree","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-getLayoutItems\" rel=\"Ext.layout.Layout-method-getLayoutItems\" class=\"docClass\">Ext.layout.Layout.getLayoutItems</a>","name":"getLayoutItems"},{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-getLayoutItems\" rel=\"Ext.layout.container.Container-method-getLayoutItems\" class=\"docClass\">Ext.layout.container.Container.getLayoutItems</a>","name":"getLayoutItems"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns an array of child components either for a render phase (Performed in the beforeLayout\nmethod of the layout's ...","method_calls":null,"owner":"Ext.layout.container.Border","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":576,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"return":{"type":"Ext.Component[]","properties":null,"doc":"<p>of child components</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>[]"},"private":null,"static":null,"name":"getLayoutItems","doc":"<p>Returns an array of child components either for a render phase (Performed in the beforeLayout\nmethod of the layout's base class), or the layout phase (onLayout).</p>\n","chainable":false,"inheritdoc":null,"id":"method-getLayoutItems","fires":null,"linenr":576},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Border","inheritable":null,"params":[{"type":"Object","name":"comp","html_type":"Object"}],"tagname":"method","files":[{"linenr":617,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"getPlaceholder","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getPlaceholder","fires":null,"linenr":617},{"type":null,"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-getPositionOffset\" rel=\"Ext.layout.Layout-method-getPositionOffset\" class=\"docClass\">Ext.layout.Layout.getPositionOffset</a>","name":"getPositionOffset"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is used to offset the DOM position when checking\nwhether the element is a certain child of the target. ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[{"type":"Object","name":"position","html_type":"Object"}],"tagname":"method","files":[{"linenr":316,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"return":null,"private":true,"static":null,"name":"getPositionOffset","doc":"<p>This method is used to offset the DOM position when checking\nwhether the element is a certain child of the target. This is\nrequired in cases where the extra elements prepended to the target\nbefore any of the items. An example of this is when using labelAlign: 'top'\non a field. The label appears first in the DOM before any child items are\ncreated, so when we check the position we need to add an extra offset.\nContainers that create an innerCt are exempt because this new element\npreserves the order</p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-getPositionOffset","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":346,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"getRenderData","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getRenderData","fires":null,"linenr":346},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the element into which rendering must take place. ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":379,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"return":{"type":"Ext.Element","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},"private":null,"static":null,"name":"getRenderTarget","doc":"<p>Returns the element into which rendering must take place. Defaults to the owner Container's\ntarget element.</p>\n\n<p>May be overridden in layout managers which implement an inner element.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getRenderTarget","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":402,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"getRenderTpl","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getRenderTpl","fires":null,"linenr":402},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getItemsRenderTree","getLayoutItems"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":415,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"getRenderTree","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getRenderTree","fires":[],"linenr":415},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns all items that are rendered ...","method_calls":["getLayoutItems","getRenderTarget","isValidParent"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":356,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"protected":true,"return":{"type":"Array","properties":null,"doc":"<p>All matching items</p>\n","name":"return","html_type":"Array"},"private":null,"static":null,"name":"getRenderedItems","doc":"<p>Returns all items that are rendered</p>\n","chainable":false,"inheritdoc":null,"id":"method-getRenderedItems","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[{"type":"Object","name":"width","html_type":"Object"},{"type":"Object","name":"height","html_type":"Object"},{"type":"Object","name":"contentWidth","html_type":"Object"},{"type":"Object","name":"contentHeight","html_type":"Object"}],"tagname":"method","files":[{"linenr":444,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"getScrollbarsNeeded","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getScrollbarsNeeded","fires":null,"linenr":444},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Border","inheritable":null,"params":[{"type":"Object","name":"splitter","html_type":"Object"}],"tagname":"method","files":[{"linenr":621,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"getSplitterTarget","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getSplitterTarget","fires":null,"linenr":621},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the owner component's resize element. ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":473,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"return":{"type":"Ext.Element","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},"private":null,"static":null,"name":"getTarget","doc":"<p>Returns the owner component's resize element.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getTarget","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns all items that are both rendered and visible ...","method_calls":["getLayoutItems","getRenderTarget","isValidParent"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":481,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"protected":true,"return":{"type":"Array","properties":null,"doc":"<p>All matching items</p>\n","name":"return","html_type":"Array"},"private":null,"static":null,"name":"getVisibleItems","doc":"<p>Returns all items that are both rendered and visible</p>\n","chainable":false,"inheritdoc":null,"id":"method-getVisibleItems","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1156,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"hasConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-hasConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Initialize configuration for this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1090,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":null,"static":null,"name":"initConfig","doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"method-initConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"A one-time initialization method called just before rendering. ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":495,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"protected":true,"private":null,"static":null,"name":"initLayout","doc":"<p>A one-time initialization method called just before rendering.</p>\n","chainable":false,"inheritdoc":null,"id":"method-initLayout","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Inserts the splitter for a given region. ...","method_calls":null,"owner":"Ext.layout.container.Border","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"},{"type":"Object","name":"index","html_type":"Object"},{"type":"Object","name":"hidden","html_type":"Object"},{"type":"Object","name":"splitterCfg","html_type":"Object"}],"tagname":"method","files":[{"linenr":642,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"insertSplitter","doc":"<p>Inserts the splitter for a given region. A reference to the splitter is also stored\non the component as \"splitter\".</p>\n","chainable":false,"inheritdoc":null,"id":"method-insertSplitter","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-isItemBoxParent\" rel=\"Ext.layout.Layout-method-isItemBoxParent\" class=\"docClass\">Ext.layout.Layout.isItemBoxParent</a>","name":"isItemBoxParent"}],"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Border","inheritable":null,"params":[{"type":"Object","name":"itemContext","html_type":"Object"}],"tagname":"method","files":[{"linenr":631,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"return":null,"private":true,"static":null,"name":"isItemBoxParent","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-isItemBoxParent","fires":null,"linenr":631},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"}],"tagname":"method","files":[{"linenr":269,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"isItemLayoutRoot","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-isItemLayoutRoot","fires":null,"linenr":269},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-isItemShrinkWrap\" rel=\"Ext.layout.Layout-method-isItemShrinkWrap\" class=\"docClass\">Ext.layout.Layout.isItemShrinkWrap</a>","name":"isItemShrinkWrap"}],"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Border","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"}],"tagname":"method","files":[{"linenr":635,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"return":null,"private":true,"static":null,"name":"isItemShrinkWrap","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-isItemShrinkWrap","fires":null,"linenr":635},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":288,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"isRunning","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-isRunning","fires":null,"linenr":288},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Validates item is in the proper place in the dom. ...","method_calls":["getPositionOffset"],"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"},{"type":"Object","name":"target","html_type":"Object"},{"type":"Object","name":"position","html_type":"Object"}],"tagname":"method","files":[{"linenr":410,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"protected":true,"private":null,"static":null,"name":"isValidParent","doc":"<p>Validates item is in the proper place in the dom.</p>\n","chainable":false,"inheritdoc":null,"id":"method-isValidParent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Moves Component to the provided target instead. ...","method_calls":["configureItem"],"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"},{"type":"Object","name":"target","html_type":"Object"},{"type":"Object","name":"position","html_type":"Object"}],"tagname":"method","files":[{"linenr":469,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"moveItem","doc":"<p>Moves Component to the provided target instead.</p>\n","chainable":false,"inheritdoc":null,"id":"method-moveItem","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-notifyOwner\" rel=\"Ext.layout.Layout-method-notifyOwner\" class=\"docClass\">Ext.layout.Layout.notifyOwner</a>","name":"notifyOwner"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Called for every layout in the layout context after all the layouts have been finally flushed ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":237,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"notifyOwner","doc":"<p>Called for every layout in the layout context after all the layouts have been finally flushed</p>\n","chainable":false,"inheritdoc":null,"id":"method-notifyOwner","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-onAdd\" rel=\"Ext.layout.Layout-method-onAdd\" class=\"docClass\">Ext.layout.Layout.onAdd</a>","name":"onAdd"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Called when a region (actually when any component) is added to the container. ...","method_calls":["callParent","insertSplitter"],"owner":"Ext.layout.container.Border","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"},{"type":"Object","name":"index","html_type":"Object"}],"tagname":"method","files":[{"linenr":666,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"onAdd","doc":"<p>Called when a region (actually when any component) is added to the container. The\nregion is decorated with some helpful properties (isCenter, isHorz, isVert) and its\nsplitter is added if its \"split\" property is true.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onAdd","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"names","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"callback","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":1224,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"onConfigUpdate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onConfigUpdate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is called when a child item changes in some way. ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Ext.Component","tagname":"params","doc":"<p>The child item that has changed.</p>\n","name":"child","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"}],"tagname":"method","files":[{"linenr":483,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>True if this layout has handled the content change.</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"onContentChange","doc":"<p>This method is called when a child item changes in some way. By default this calls\n<a href=\"#!/api/Ext.AbstractComponent-method-updateLayout\" rel=\"Ext.AbstractComponent-method-updateLayout\" class=\"docClass\">Ext.AbstractComponent.updateLayout</a> on this layout's owner.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onContentChange","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-onDestroy\" rel=\"Ext.layout.Layout-method-onDestroy\" class=\"docClass\">Ext.layout.Layout.onDestroy</a>","name":"onDestroy"}],"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["callParent"],"owner":"Ext.layout.container.Border","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":732,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"return":null,"private":true,"static":null,"name":"onDestroy","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-onDestroy","fires":[],"linenr":732},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-onRemove\" rel=\"Ext.layout.Layout-method-onRemove\" class=\"docClass\">Ext.layout.Layout.onRemove</a>","name":"onRemove"}],"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["callParent"],"owner":"Ext.layout.container.Border","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"}],"tagname":"method","files":[{"linenr":737,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"return":null,"private":true,"static":null,"name":"onRemove","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-onRemove","fires":[],"linenr":737},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.util.ElementContainer","inheritable":null,"params":[{"type":"Object","name":"childEls","html_type":"Object"},{"type":"Object","name":"shared","html_type":"Object"}],"tagname":"method","files":[{"linenr":268,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/ElementContainer.js"}],"private":true,"static":null,"name":"prune","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-prune","fires":null,"linenr":268},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes items in the childEls array based on the return value of a supplied test\nfunction. ...","method_calls":["getChildEls"],"owner":"Ext.util.ElementContainer","inheritable":null,"params":[{"type":"Function","tagname":"params","doc":"<p>The test function.</p>\n","name":"testFn","html_type":"Function"}],"tagname":"method","files":[{"linenr":293,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/ElementContainer.js"}],"private":null,"static":null,"name":"removeChildEls","doc":"<p>Removes items in the childEls array based on the return value of a supplied test\nfunction. The function is called with a entry in childEls and if the test function\nreturn true, that entry is removed. If false, that entry is kept.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeChildEls","fires":[],"linenr":null},{"type":null,"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-renderChildren\" rel=\"Ext.layout.Layout-method-renderChildren\" class=\"docClass\">Ext.layout.Layout.renderChildren</a>","name":"renderChildren"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getLayoutItems","getRenderTarget","renderItems"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":428,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"return":null,"private":true,"static":null,"name":"renderChildren","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-renderChildren","fires":[],"linenr":428},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Renders the given Component into the target Element. ...","method_calls":["afterRenderItem","configureItem"],"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Ext.Component","tagname":"params","doc":"<p>The Component to render</p>\n","name":"item","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},{"type":"Ext.dom.Element","tagname":"params","doc":"<p>The target Element</p>\n","name":"target","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"type":"Number","tagname":"params","doc":"<p>The position within the target to render the item to</p>\n","name":"position","html_type":"Number"}],"tagname":"method","files":[{"linenr":453,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"renderItem","doc":"<p>Renders the given Component into the target Element.</p>\n","chainable":false,"inheritdoc":null,"id":"method-renderItem","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Iterates over all passed items, ensuring they are rendered. ...","method_calls":["configureItem","isValidParent","moveItem","renderItem"],"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"items","html_type":"Object"},{"type":"Object","name":"target","html_type":"Object"}],"tagname":"method","files":[{"linenr":382,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"protected":true,"private":null,"static":null,"name":"renderItems","doc":"<p>Iterates over all passed items, ensuring they are rendered.  If the items are already rendered,\nalso determines if the items are in the proper place in the dom.</p>\n","chainable":false,"inheritdoc":null,"id":"method-renderItems","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"},{"type":"Object","name":"applyIfNotSet","html_type":"Object"}],"tagname":"method","files":[{"linenr":1164,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"static":null,"name":"setConfig","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-setConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the layout owner ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"owner","html_type":"Object"}],"tagname":"method","files":[{"linenr":503,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"setOwner","doc":"<p>Sets the layout owner</p>\n","chainable":false,"inheritdoc":null,"id":"method-setOwner","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[{"type":"Object","name":"renderTpl","html_type":"Object"}],"tagname":"method","files":[{"linenr":503,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"setupRenderTpl","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-setupRenderTpl","fires":null,"linenr":503},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Border","inheritable":null,"params":[{"type":"Object","name":"items","html_type":"Object"}],"tagname":"method","files":[{"linenr":787,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Border.js"}],"private":true,"static":null,"name":"setupSplitterNeighbors","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-setupSplitterNeighbors","fires":null,"linenr":787},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"items","html_type":"Object"},{"type":"Object","name":"reverseProp","html_type":"Object"}],"tagname":"method","files":[{"linenr":574,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"sortWeightedItems","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-sortWeightedItems","fires":null,"linenr":574},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the reference to the class from which this object was instantiated. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":778,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Class","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"private":null,"static":null,"name":"statics","doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-statics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":246,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"undoLayout","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-undoLayout","fires":null,"linenr":246},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":176,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-addConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":256,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addInheritableStatics","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addInheritableStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"member","html_type":"Object"}],"tagname":"method","files":[{"linenr":353,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addMember","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addMember","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add methods / properties to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":296,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"addMembers","doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addMembers","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add / override static properties of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":218,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"addStatics","doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"xtype","html_type":"Object"}],"tagname":"method","files":[{"linenr":730,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addXtype","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addXtype","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Borrow another class' members to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Ext.Base","tagname":"params","doc":"<p>The class to borrow members from</p>\n","name":"fromClass","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"type":"Array/String","tagname":"params","doc":"<p>The names of the members to borrow</p>\n","name":"members","html_type":"Array/String"}],"tagname":"method","files":[{"linenr":383,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":true,"name":"borrow","doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-borrow","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-static-method-create\" rel=\"Ext.layout.Layout-static-method-create\" class=\"docClass\">Ext.layout.Layout.create</a>","name":"create"}],"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create a new instance of this Class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":60,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object","properties":null,"doc":"<p>the created instance.</p>\n","name":"return","html_type":"Object"},"static":true,"private":null,"name":"create","doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-create","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create aliases for existing prototype methods. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","name":"alias","html_type":"String/Object"},{"type":"String/Object","tagname":"params","doc":"<p>The original method name</p>\n","name":"origin","html_type":"String/Object"}],"tagname":"method","files":[{"linenr":696,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"createAlias","doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"static-method-createAlias","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":81,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"extend","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-extend","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the current class' name in string format. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":677,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"String","properties":null,"doc":"<p>className</p>\n","name":"return","html_type":"String"},"static":true,"private":null,"name":"getName","doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"static-method-getName","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds members to class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":373,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"implement","doc":"<p>Adds members to class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-implement","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n","version":"4.1"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Used internally by the mixins pre-processor ...","method_calls":["addConfig","hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"mixinClass","html_type":"Object"}],"tagname":"method","files":[{"linenr":595,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"mixin","doc":"<p>Used internally by the mixins pre-processor</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-mixin","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":162,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"onExtended","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-onExtended","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Override members of this class. ...","method_calls":["addConfig","addInheritableStatics"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":452,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this class</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"override","doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","chainable":true,"inheritdoc":null,"id":"static-method-override","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n","version":"4.1.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"triggerExtended","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-triggerExtended","fires":null,"linenr":null}],"alternateClassNames":["Ext.layout.BorderLayout"],"code_type":"ext_define","mixins":[],"doc":"<p>This is a multi-pane, application-oriented UI layout style that supports multiple nested panels, automatic bars\nbetween regions and built-in <a href=\"#!/api/Ext.panel.Panel-cfg-collapsible\" rel=\"Ext.panel.Panel-cfg-collapsible\" class=\"docClass\">expanding and collapsing</a> of regions.</p>\n\n<p>This class is intended to be extended or created via the <code>layout:'border'</code> <a href=\"#!/api/Ext.container.Container-cfg-layout\" rel=\"Ext.container.Container-cfg-layout\" class=\"docClass\">Ext.container.Container.layout</a>\nconfig, and should generally not need to be created directly via the new keyword.</p>\n\n<pre class='inline-example '><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>', {\n    width: 500,\n    height: 300,\n    title: 'Border Layout',\n    layout: 'border',\n    items: [{\n        title: 'South Region is resizable',\n        region: 'south',     // position for region\n        xtype: 'panel',\n        height: 100,\n        split: true,         // enable resizing\n        margins: '0 5 5 5'\n    },{\n        // xtype: 'panel' implied by default\n        title: 'West Region is collapsible',\n        region:'west',\n        xtype: 'panel',\n        margins: '5 0 0 5',\n        width: 200,\n        collapsible: true,   // make collapsible\n        id: 'west-region-container',\n        layout: 'fit'\n    },{\n        title: 'Center Region',\n        region: 'center',     // center region is required, no width/height specified\n        xtype: 'panel',\n        layout: 'fit',\n        margins: '5 5 0 0'\n    }],\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>()\n});\n</code></pre>\n\n<h1>Notes</h1>\n\n<ul>\n<li><p>When using the split option, the layout will automatically insert a <a href=\"#!/api/Ext.resizer.Splitter\" rel=\"Ext.resizer.Splitter\" class=\"docClass\">Ext.resizer.Splitter</a>\ninto the appropriate place. This will modify the underlying\n<a href=\"#!/api/Ext.container.Container-property-items\" rel=\"Ext.container.Container-property-items\" class=\"docClass\">items</a> collection in the container.</p></li>\n<li><p>Any Container using the Border layout <strong>must</strong> have a child item with <code>region:'center'</code>.\nThe child item in the center region will always be resized to fill the remaining space\nnot used by the other regions in the layout.</p></li>\n<li><p>Any child items with a region of <code>west</code> or <code>east</code> may be configured with either an initial\n<code>width</code>, or a <a href=\"#!/api/Ext.layout.container.Box-cfg-flex\" rel=\"Ext.layout.container.Box-cfg-flex\" class=\"docClass\">Ext.layout.container.Box.flex</a> value, or an initial percentage width\n<strong>string</strong> (Which is simply divided by 100 and used as a flex value).\nThe 'center' region has a flex value of <code>1</code>.</p></li>\n<li><p>Any child items with a region of <code>north</code> or <code>south</code> may be configured with either an initial\n<code>height</code>, or a <a href=\"#!/api/Ext.layout.container.Box-cfg-flex\" rel=\"Ext.layout.container.Box-cfg-flex\" class=\"docClass\">Ext.layout.container.Box.flex</a> value, or an initial percentage height\n<strong>string</strong> (Which is simply divided by 100 and used as a flex value).\nThe 'center' region has a flex value of <code>1</code>.</p></li>\n<li><p><strong>There is no BorderLayout.Region class in ExtJS 4.0+</strong></p></li>\n</ul>\n\n","name":"Ext.layout.container.Border","id":"class-Ext.layout.container.Border"}