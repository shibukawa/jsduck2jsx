{"autodetected":{"aliases":true,"requires":true,"uses":true,"extends":true,"members":true,"alternateClassNames":true,"code_type":true,"mixins":true},"short_doc":"The TreeStore is a store implementation that is backed by by an Ext.data.Tree. ...","aliases":{"store":["tree"]},"requires":["Ext.util.Sorter","Ext.data.Tree","Ext.data.NodeInterface"],"files":[{"linenr":21,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"tagname":"class","uses":[],"extends":"Ext.data.AbstractStore","members":[{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean/Object","short_doc":"If data is not specified, and if autoLoad is true or an Object, this store's load method is automatically called\nafte...","default":null,"since":"2.3.0","owner":"Ext.data.AbstractStore","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":121,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"autoLoad","properties":null,"doc":"<p>If data is not specified, and if autoLoad is true or an Object, this store's load method is automatically called\nafter creation. If the value of autoLoad is an Object, this Object will be passed to the store's load method.</p>\n","inheritdoc":null,"id":"cfg-autoLoad","html_type":"Boolean/Object","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"True to automatically sync the Store with its Proxy after every edit to one of its Records. ...","default":"false","owner":"Ext.data.AbstractStore","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":129,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"autoSync","properties":null,"doc":"<p>True to automatically sync the Store with its Proxy after every edit to one of its Records. Defaults to false.</p>\n","inheritdoc":null,"id":"cfg-autoSync","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":"Sets the updating behavior based on batch synchronization. ...","default":"'operation'","owner":"Ext.data.AbstractStore","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":135,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"batchUpdateMode","properties":null,"doc":"<p>Sets the updating behavior based on batch synchronization. 'operation' (the default) will update the Store's\ninternal representation of the data after each operation of the batch has completed, 'complete' will wait until\nthe entire batch has been completed before updating the Store's data. 'complete' is a good choice for local\nstorage proxies, 'operation' is better for remote proxies, where there is a comparatively high latency.</p>\n","inheritdoc":null,"id":"cfg-batchUpdateMode","html_type":"String","evented":null,"linenr":null},{"autodetected":{"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"Remove previously existing child nodes before loading. ...","default":"true","owner":"Ext.data.TreeStore","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":69,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":null,"static":null,"name":"clearOnLoad","properties":null,"doc":"<p>Remove previously existing child nodes before loading.</p>\n","inheritdoc":null,"id":"cfg-clearOnLoad","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"If true, when a node is reloaded, any records in the removed record collection that were previously descendants of th...","default":"true","owner":"Ext.data.TreeStore","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":75,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":null,"static":null,"name":"clearRemovedOnLoad","properties":null,"doc":"<p>If <code>true</code>, when a node is reloaded, any records in the <a href=\"#!/api/Ext.data.TreeStore-property-removed\" rel=\"Ext.data.TreeStore-property-removed\" class=\"docClass\">removed</a> record collection that were previously descendants of the node being reloaded will be cleared from the <a href=\"#!/api/Ext.data.TreeStore-property-removed\" rel=\"Ext.data.TreeStore-property-removed\" class=\"docClass\">removed</a> collection.\nOnly applicable if <a href=\"#!/api/Ext.data.TreeStore-cfg-clearOnLoad\" rel=\"Ext.data.TreeStore-cfg-clearOnLoad\" class=\"docClass\">clearOnLoad</a> is <code>true</code>.</p>\n","inheritdoc":null,"id":"cfg-clearRemovedOnLoad","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":"The default root id. ...","default":"\"root\"","owner":"Ext.data.TreeStore","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":88,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":null,"static":null,"name":"defaultRootId","properties":null,"doc":"<p>The default root id.</p>\n","inheritdoc":null,"id":"cfg-defaultRootId","html_type":"String","evented":null,"linenr":null},{"autodetected":{"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":"The root property to specify on the reader if one is not explicitly defined. ...","default":"\"children\"","owner":"Ext.data.TreeStore","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":100,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":null,"static":null,"name":"defaultRootProperty","properties":null,"doc":"<p>The root property to specify on the reader if one is not explicitly defined.</p>\n","inheritdoc":null,"id":"cfg-defaultRootProperty","html_type":"String","evented":null,"linenr":null},{"autodetected":{"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":"The default root text (if not specified)/ ...","default":"\"Root\"","owner":"Ext.data.TreeStore","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":94,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":null,"static":null,"name":"defaultRootText","properties":null,"doc":"<p>The default root text (if not specified)/</p>\n","inheritdoc":null,"id":"cfg-defaultRootText","html_type":"String","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":"The default sort direction to use if one is not specified. ...","default":"\"ASC\"","owner":"Ext.util.Sortable","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":37,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":null,"static":null,"name":"defaultSortDirection","properties":null,"doc":"<p>The default sort direction to use if one is not specified.</p>\n","inheritdoc":null,"id":"cfg-defaultSortDirection","html_type":"String","evented":null,"linenr":null},{"autodetected":{},"type":"Object[]","short_doc":"This may be used in place of specifying a model configuration. ...","default":null,"since":"2.3.0","owner":"Ext.data.AbstractStore","tagname":"cfg","files":[{"linenr":195,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"fields","properties":null,"doc":"<p>This may be used in place of specifying a <a href=\"#!/api/Ext.data.AbstractStore-cfg-model\" rel=\"Ext.data.AbstractStore-cfg-model\" class=\"docClass\">model</a> configuration. The fields should be a\nset of <a href=\"#!/api/Ext.data.Field\" rel=\"Ext.data.Field\" class=\"docClass\">Ext.data.Field</a> configuration objects. The store will automatically create a <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>\nwith these fields. In general this configuration option should only be used for simple stores like\na two-field store of ComboBox. For anything more complicated, such as specifying a particular id property or\nassociations, a <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> should be defined and specified for the <a href=\"#!/api/Ext.data.AbstractStore-cfg-model\" rel=\"Ext.data.AbstractStore-cfg-model\" class=\"docClass\">model</a>\nconfig.</p>\n","id":"cfg-fields","html_type":"Object[]"},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"If true, any filters attached to this Store will be run after loading data, before the datachanged event is fired. ...","default":"true","owner":"Ext.data.AbstractStore","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":144,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"filterOnLoad","properties":null,"doc":"<p>If true, any filters attached to this Store will be run after loading data, before the datachanged event is fired.\nDefaults to true, ignored if <a href=\"#!/api/Ext.data.Store-cfg-remoteFilter\" rel=\"Ext.data.Store-cfg-remoteFilter\" class=\"docClass\">remoteFilter</a> is true</p>\n","inheritdoc":null,"id":"cfg-filterOnLoad","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{},"type":"Object[]/Function[]","short_doc":"Array of Filters for this store. ...","default":null,"owner":"Ext.data.AbstractStore","tagname":"cfg","files":[{"linenr":212,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"filters","properties":null,"doc":"<p>Array of <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Filters</a> for this store. Can also be passed array of\nfunctions which will be used as the <a href=\"#!/api/Ext.util.Filter-cfg-filterFn\" rel=\"Ext.util.Filter-cfg-filterFn\" class=\"docClass\">filterFn</a> config\nfor filters:</p>\n\n<pre><code>filters: [\n    function(item) {\n        return item.weight &gt; 0;\n    }\n]\n</code></pre>\n\n<p>To filter after the grid is loaded use the <a href=\"#!/api/Ext.data.Store-method-filterBy\" rel=\"Ext.data.Store-method-filterBy\" class=\"docClass\">filterBy</a> function.</p>\n","id":"cfg-filters","html_type":"Object[]/Function[]"},{"autodetected":{"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"Set to true to automatically prepend a leaf sorter. ...","default":"false","owner":"Ext.data.TreeStore","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":111,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":null,"static":null,"name":"folderSort","properties":null,"doc":"<p>Set to true to automatically prepend a leaf sorter.</p>\n","inheritdoc":null,"id":"cfg-folderSort","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{},"type":"Object","short_doc":"A config object containing one or more event handlers to be added to this object during initialization. ...","default":null,"owner":"Ext.util.Observable","tagname":"cfg","files":[{"linenr":197,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"name":"listeners","properties":null,"doc":"<p>A config object containing one or more event handlers to be added to this object during initialization. This\nshould be a valid listeners config object as specified in the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching multiple\nhandlers at once.</p>\n\n<p><strong>DOM events from Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></strong></p>\n\n<p>While <em>some</em> Ext JS Component classes export selected DOM events (e.g. \"click\", \"mouseover\" etc), this is usually\nonly done when extra value can be added. For example the <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>'s <strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong> event passing the node clicked on. To access DOM events directly from a\nchild element of a Component, we need to specify the <code>element</code> option to identify the Component property to add a\nDOM listener to:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n","id":"cfg-listeners","html_type":"Object"},{"autodetected":{},"type":"String","short_doc":"Name of the Model associated with this store. ...","default":null,"owner":"Ext.data.AbstractStore","tagname":"cfg","files":[{"linenr":206,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"model","properties":null,"doc":"<p>Name of the <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a> associated with this store.\nThe string is used as an argument for <a href=\"#!/api/Ext.ModelManager-method-getModel\" rel=\"Ext.ModelManager-method-getModel\" class=\"docClass\">Ext.ModelManager.getModel</a>.</p>\n","id":"cfg-model","html_type":"String"},{"autodetected":{"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":"The name of the parameter sent to the server which contains the identifier of the node. ...","default":"\"node\"","owner":"Ext.data.TreeStore","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":82,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":null,"static":null,"name":"nodeParam","properties":null,"doc":"<p>The name of the parameter sent to the server which contains the identifier of the node.</p>\n","inheritdoc":null,"id":"cfg-nodeParam","html_type":"String","evented":null,"linenr":null},{"autodetected":{},"type":"String/Ext.data.proxy.Proxy/Object","short_doc":"The Proxy to use for this Store. ...","default":null,"since":"1.1.0","owner":"Ext.data.AbstractStore","tagname":"cfg","files":[{"linenr":114,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"proxy","properties":null,"doc":"<p>The Proxy to use for this Store. This can be either a string, a config object or a Proxy instance -\nsee <a href=\"#!/api/Ext.data.AbstractStore-method-setProxy\" rel=\"Ext.data.AbstractStore-method-setProxy\" class=\"docClass\">setProxy</a> for details.</p>\n","id":"cfg-proxy","html_type":"String/<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a>/Object"},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"True to defer any filtering operation to the server. ...","default":"false","owner":"Ext.data.AbstractStore","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":108,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"remoteFilter","properties":null,"doc":"<p>True to defer any filtering operation to the server. If false, filtering is done locally on the client.</p>\n","inheritdoc":null,"id":"cfg-remoteFilter","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"True to defer any sorting operation to the server. ...","default":"false","owner":"Ext.data.AbstractStore","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":102,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"remoteSort","properties":null,"doc":"<p>True to defer any sorting operation to the server. If false, sorting is done locally on the client.</p>\n","inheritdoc":null,"id":"cfg-remoteSort","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{},"type":"Ext.data.Model/Ext.data.NodeInterface/Object","short_doc":"The root node for this store. ...","default":null,"owner":"Ext.data.TreeStore","tagname":"cfg","files":[{"linenr":51,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"name":"root","properties":null,"doc":"<p>The root node for this store. For example:</p>\n\n<pre><code>root: {\n    expanded: true,\n    text: \"My Root\",\n    children: [\n        { text: \"Child 1\", leaf: true },\n        { text: \"Child 2\", expanded: true, children: [\n            { text: \"GrandChild\", leaf: true }\n        ] }\n    ]\n}\n</code></pre>\n\n<p>Setting the <code>root</code> config option is the same as calling <a href=\"#!/api/Ext.data.TreeStore-method-setRootNode\" rel=\"Ext.data.TreeStore-method-setRootNode\" class=\"docClass\">setRootNode</a>.</p>\n","id":"cfg-root","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>/Object"},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"If true, any sorters attached to this Store will be run after loading data, before the datachanged event is fired. ...","default":"true","owner":"Ext.data.AbstractStore","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":151,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"sortOnLoad","properties":null,"doc":"<p>If true, any sorters attached to this Store will be run after loading data, before the datachanged event is fired.\nDefaults to true, igored if <a href=\"#!/api/Ext.data.Store-cfg-remoteSort\" rel=\"Ext.data.Store-cfg-remoteSort\" class=\"docClass\">remoteSort</a> is true</p>\n","inheritdoc":null,"id":"cfg-sortOnLoad","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{},"type":"String","default":null,"owner":"Ext.util.Sortable","tagname":"cfg","files":[{"linenr":71,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"name":"sortRoot","properties":null,"doc":"<p>The property in each item that contains the data to sort.</p>\n","id":"cfg-sortRoot","html_type":"String"},{"autodetected":{},"type":"Ext.util.Sorter[]/Object[]","default":null,"owner":"Ext.util.Sortable","tagname":"cfg","files":[{"linenr":76,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"name":"sorters","properties":null,"doc":"<p>The initial set of <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Sorters</a></p>\n","id":"cfg-sorters","html_type":"<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]/Object[]"},{"autodetected":{},"type":"Boolean","short_doc":"Configure as true to have the filters saved when a client grid saves its state. ...","default":"false","owner":"Ext.data.AbstractStore","tagname":"cfg","files":[{"linenr":227,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"statefulFilters","properties":null,"doc":"<p>Configure as <code>true</code> to have the filters saved when a client <a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">grid</a> saves its state.</p>\n","id":"cfg-statefulFilters","html_type":"Boolean"},{"autodetected":{},"type":"String","short_doc":"Unique identifier for this store. ...","default":null,"owner":"Ext.data.AbstractStore","tagname":"cfg","files":[{"linenr":187,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"storeId","properties":null,"doc":"<p>Unique identifier for this store. If present, this Store will be registered with the <a href=\"#!/api/Ext.data.StoreManager\" rel=\"Ext.data.StoreManager\" class=\"docClass\">Ext.data.StoreManager</a>,\nmaking it easy to reuse elsewhere.</p>\n\n<p>Note that when store is instatiated by Controller, the storeId will be overridden by the name of the store.</p>\n","id":"cfg-storeId","html_type":"String"},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'Ext.Base'","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":763,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"$className","doc":"\n","inheritdoc":null,"id":"property-S-className","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":772,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configMap","doc":"\n","inheritdoc":null,"id":"property-configMap","html_type":"Object","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":"The string type of the Proxy to create if none is specified. ...","default":"'memory'","owner":"Ext.data.AbstractStore","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":166,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"defaultProxyType","properties":null,"doc":"<p>The string type of the Proxy to create if none is specified. This defaults to creating a\n<a href=\"#!/api/Ext.data.proxy.Memory\" rel=\"Ext.data.proxy.Memory\" class=\"docClass\">memory proxy</a>.</p>\n","inheritdoc":null,"id":"property-defaultProxyType","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"Initial suspended call count. ...","default":"0","owner":"Ext.util.Observable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":237,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"eventsSuspended","doc":"<p>Initial suspended call count. Incremented when <a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a> is called, decremented when <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> is called.</p>\n","inheritdoc":null,"id":"property-eventsSuspended","html_type":"Number","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"If we have no fields declare for the store, add some defaults. ...","default":null,"owner":"Ext.data.TreeStore","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":125,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":null,"static":null,"name":"fields","doc":"<p>If we have no fields declare for the store, add some defaults.\nThese will be ignored if a model is explicitly specified.</p>\n","inheritdoc":null,"id":"property-fields","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":" ...","default":"0","owner":"Ext.data.TreeStore","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":109,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":true,"static":null,"name":"fillCount","doc":"\n","inheritdoc":null,"id":"property-fillCount","html_type":"Number","linenr":109},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.util.MixedCollection","default":null,"owner":"Ext.data.AbstractStore","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":429,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"filters","properties":null,"doc":"<p>The collection of <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Filters</a> currently applied to this Store</p>\n","inheritdoc":null,"id":"property-filters","html_type":"<a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>","linenr":null},{"autodetected":{},"type":"Object","short_doc":"This object holds a key for any event that has a listener. ...","default":null,"owner":"Ext.util.Observable","readonly":true,"tagname":"property","files":[{"linenr":243,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"name":"hasListeners","properties":null,"doc":"<p>This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class (via <a href=\"#!/api/Ext.util.Observable-static-method-observe\" rel=\"Ext.util.Observable-static-method-observe\" class=\"docClass\">observe</a>) or\non the <a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.</p>\n\n<p>The intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n","id":"property-hasListeners","html_type":"Object"},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"True if a model was created implicitly for this Store. ...","default":"false","owner":"Ext.data.AbstractStore","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":158,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"implicitModel","properties":null,"doc":"<p>True if a model was created implicitly for this Store. This happens if a fields array is passed to the Store's\nconstructor instead of a model constructor or name.</p>\n","inheritdoc":null,"id":"property-implicitModel","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":769,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigList","doc":"\n","inheritdoc":null,"id":"property-initConfigList","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":775,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigMap","doc":"\n","inheritdoc":null,"id":"property-initConfigMap","html_type":"Object","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"True if the Store has already been destroyed. ...","default":"false","since":"3.4.0","owner":"Ext.data.AbstractStore","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":173,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"isDestroyed","properties":null,"doc":"<p>True if the Store has already been destroyed. If this is true, the reference to Store should be deleted\nas it will not function correctly any more.</p>\n","inheritdoc":null,"id":"property-isDestroyed","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"isInstance","doc":"\n","inheritdoc":null,"id":"property-isInstance","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"true in this class to identify an object as an instantiated Observable, or subclass thereof. ...","default":"true","owner":"Ext.util.Observable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":231,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"isObservable","properties":null,"doc":"<p><code>true</code> in this class to identify an object as an instantiated Observable, or subclass thereof.</p>\n","inheritdoc":null,"id":"property-isObservable","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"true in this class to identify an object as an instantiated Sortable, or subclass thereof. ...","default":"true","owner":"Ext.util.Sortable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":31,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":null,"static":null,"name":"isSortable","properties":null,"doc":"<p><code>true</code> in this class to identify an object as an instantiated Sortable, or subclass thereof.</p>\n","inheritdoc":null,"id":"property-isSortable","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"true in this class to identify an object as an instantiated Store, or subclass thereof. ...","default":"true","owner":"Ext.data.AbstractStore","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":181,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"isStore","properties":null,"doc":"<p><code>true</code> in this class to identify an object as an instantiated Store, or subclass thereof.</p>\n","inheritdoc":null,"id":"property-isStore","html_type":"Boolean","linenr":null},{"autodetected":{},"type":"Object","short_doc":"A set of default values to be applied to every model instance added via insert or created\nvia createModel. ...","default":null,"owner":"Ext.data.AbstractStore","tagname":"property","files":[{"linenr":371,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"name":"modelDefaults","properties":null,"doc":"<p>A set of default values to be applied to every model instance added via <a href=\"#!/api/Ext.data.Store-method-insert\" rel=\"Ext.data.Store-method-insert\" class=\"docClass\">insert</a> or created\nvia <a href=\"#!/api/Ext.data.Store-method-createModel\" rel=\"Ext.data.Store-method-createModel\" class=\"docClass\">createModel</a>. This is used internally by associations to set foreign keys and\nother fields. See the Association classes source code for examples. This should not need to be used by application developers.</p>\n","id":"property-modelDefaults","html_type":"Object"},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.data.Model[]","short_doc":"Temporary cache in which removed model instances are kept until successfully synchronised with a Proxy,\nat which poin...","default":"[]","owner":"Ext.data.AbstractStore","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":355,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"protected":true,"private":null,"static":null,"name":"removed","properties":null,"doc":"<p>Temporary cache in which removed model instances are kept until successfully synchronised with a Proxy,\nat which point this is cleared.</p>\n","inheritdoc":null,"id":"property-removed","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":"Keep a copy of the default so we know if it's been changed in a subclass/config ...","default":"'children'","owner":"Ext.data.TreeStore","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":106,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":true,"static":null,"name":"rootProperty","doc":"<p>Keep a copy of the default so we know if it's been changed in a subclass/config</p>\n","inheritdoc":null,"id":"property-rootProperty","html_type":"String","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.Class","short_doc":"Get the reference to the current class from which this object was instantiated. ...","default":null,"owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1045,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"private":null,"static":null,"name":"self","properties":null,"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","inheritdoc":null,"id":"property-self","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.util.MixedCollection","default":null,"owner":"Ext.util.Sortable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":89,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":null,"static":null,"name":"sorters","properties":null,"doc":"<p>The collection of <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Sorters</a> currently applied to this Store</p>\n","inheritdoc":null,"id":"property-sorters","html_type":"<a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>","linenr":null},{"autodetected":{"type":true,"default":true,"readonly":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":true,"readonly":null,"tagname":"property","files":[{"linenr":133,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"$onExtended","doc":"\n","inheritdoc":null,"id":"static-property-S-onExtended","html_type":"Array","linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-constructor\" rel=\"Ext.data.AbstractStore-method-constructor\" class=\"docClass\">Ext.data.AbstractStore.constructor</a>","name":"constructor"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"documented above ...","method_calls":["callParent","onBeforeSort","setRootNode"],"owner":"Ext.data.TreeStore","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":117,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":{"type":"Ext.data.TreeStore","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">Ext.data.TreeStore</a>"},"private":null,"static":null,"name":"constructor","doc":"<p>documented above</p>\n","chainable":false,"inheritdoc":null,"id":"method-constructor","fires":["beforesort","<a href=\"#!/api/Ext.data.TreeStore-event-sort\" rel=\"Ext.data.TreeStore-event-sort\" class=\"docClass\">sort</a>"],"linenr":117},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds the specified events to the list of events which this Observable may fire. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Object/String...","tagname":"params","doc":"<p>Either an object with event names as properties with\na value of <code>true</code>. For example:</p>\n\n<pre><code>this.addEvents({\n    storeloaded: true,\n    storecleared: true\n});\n</code></pre>\n\n<p>Or any number of event names as separate parameters. For example:</p>\n\n<pre><code>this.addEvents('storeloaded', 'storecleared');\n</code></pre>\n","name":"eventNames","html_type":"Object/String..."}],"tagname":"method","files":[{"linenr":800,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"addEvents","doc":"<p>Adds the specified events to the list of events which this Observable may fire.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addEvents","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.AbstractComponent","link":"<a href=\"#!/api/Ext.AbstractComponent-method-addListener\" rel=\"Ext.AbstractComponent-method-addListener\" class=\"docClass\">Ext.AbstractComponent.addListener</a>","name":"addListener"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Appends an event handler to this object. ...","method_calls":["addListener"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","name":"eventName","html_type":"String/Object"},{"type":"Function","tagname":"params","doc":"<p>The method the event invokes, or <em>if <code>scope</code> is specified, the </em>name* of the method within\nthe specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> plus the <code>options</code> parameter described below.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","name":"scope","html_type":"Object"},{"type":"Number","tagname":"params","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n\n","name":"delay","html_type":"Number"},{"type":"Boolean","tagname":"params","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n","name":"single","html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","name":"buffer","html_type":"Number"},{"type":"Ext.util.Observable","tagname":"params","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the event\n  was bubbled up from a child Observable.</p>\n\n","name":"target","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"type":"String","tagname":"params","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an element to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to elements of\n  <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the Component is rendered.\n  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n","name":"element","html_type":"String"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>When specified as <code>true</code>, the function returns A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call.</p>\n\n","name":"destroyable","optional":true,"html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n","name":"priority","optional":true,"html_type":"Number"}],"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> Unlike in ExtJS 3.x, the options object will also be passed as the last\nargument to every event handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":502,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"addListener","doc":"<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"mouseover\", this.onMouseOver, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: this.onCellClick,\n    mouseover: this.onMouseOver,\n    mouseout: this.onMouseOut,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: this.onCellClick, scope: this, single: true},\n    mouseover: {fn: panel.onMouseOver, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used. Note that\n<code>scope</code> MUST be specified to use this option:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: 'onCellClick', scope: this, single: true},\n    mouseover: {fn: 'onMouseOver', scope: panel}\n});\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-addListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds listeners to any Observable object (or Ext.Element) which are automatically removed when this Component is\ndestr...","method_calls":["addManagedListener"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":295,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"addManagedListener","doc":"<p>Adds listeners to any Observable object (or <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>) which are automatically removed when this Component is\ndestroyed.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addManagedListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"A model instance should call this method on the Store it has been joined to. ...","since":"3.4.0","method_calls":["fireEvent","onUpdate"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Ext.data.Model","tagname":"params","doc":"<p>The model instance that was edited</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"tagname":"method","files":[{"linenr":929,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"afterCommit","doc":"<p>A model instance should call this method on the Store it has been <a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">joined</a> to.</p>\n","chainable":false,"inheritdoc":null,"id":"method-afterCommit","fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-update\" rel=\"Ext.data.AbstractStore-event-update\" class=\"docClass\">update</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"A model instance should call this method on the Store it has been joined to. ...","since":"3.4.0","method_calls":["fireEvent","onUpdate","sync"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Ext.data.Model","tagname":"params","doc":"<p>The model instance that was edited</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"type":"String[]","tagname":"params","doc":"<p>Array of field names changed during edit.</p>\n","name":"modifiedFieldNames","html_type":"String[]"}],"tagname":"method","files":[{"linenr":886,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"afterEdit","doc":"<p>A model instance should call this method on the Store it has been <a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">joined</a> to.</p>\n","chainable":false,"inheritdoc":null,"id":"method-afterEdit","fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-beforesync\" rel=\"Ext.data.AbstractStore-event-beforesync\" class=\"docClass\">beforesync</a>","<a href=\"#!/api/Ext.data.AbstractStore-event-update\" rel=\"Ext.data.AbstractStore-event-update\" class=\"docClass\">update</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"A model instance should call this method on the Store it has been joined to.. ...","since":"3.4.0","method_calls":["fireEvent","onUpdate"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Ext.data.Model","tagname":"params","doc":"<p>The model instance that was edited</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"tagname":"method","files":[{"linenr":913,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"afterReject","doc":"<p>A model instance should call this method on the Store it has been <a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">joined</a> to..</p>\n","chainable":false,"inheritdoc":null,"id":"method-afterReject","fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-update\" rel=\"Ext.data.AbstractStore-event-update\" class=\"docClass\">update</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Restores state to the passed state ...","method_calls":["decodeFilters","decodeGroupers","decodeSorters","filter","reload","sort"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"state","html_type":"Object"}],"tagname":"method","files":[{"linenr":1033,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"applyState","doc":"<p>Restores state to the passed state</p>\n","chainable":false,"inheritdoc":null,"id":"method-applyState","fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-beforeload\" rel=\"Ext.data.AbstractStore-event-beforeload\" class=\"docClass\">beforeload</a>","beforeprefetch","beforesort","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.AbstractStore-event-datachanged\" rel=\"Ext.data.AbstractStore-event-datachanged\" class=\"docClass\">datachanged</a>","filterchange","groupchange","guaranteedrange","<a href=\"#!/api/Ext.data.AbstractStore-event-load\" rel=\"Ext.data.AbstractStore-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.AbstractStore-event-refresh\" rel=\"Ext.data.AbstractStore-event-refresh\" class=\"docClass\">refresh</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":1269,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the overridden method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callOverridden","doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"method-callOverridden","deprecated":{"text":"<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the \"parent\" method of the current method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":846,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the parent method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callParent","doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","chainable":false,"inheritdoc":null,"id":"method-callParent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":961,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the superclass method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callSuper","doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","chainable":false,"inheritdoc":null,"id":"method-callSuper","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Object","name":"o","html_type":"Object"},{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":127,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"captureArgs","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-captureArgs","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.TreeStore","inheritable":null,"params":[{"type":"Object","name":"node","html_type":"Object"},{"type":"Object","name":"records","html_type":"Object"}],"tagname":"method","files":[{"linenr":691,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":true,"static":null,"name":"cleanRecords","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-cleanRecords","fires":null,"linenr":691},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"to be implemented by subclasses ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1099,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"clearData","doc":"<p>to be implemented by subclasses</p>\n","chainable":null,"inheritdoc":null,"id":"method-clearData","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"supressEvent","html_type":"Object"}],"tagname":"method","files":[{"linenr":733,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"clearFilter","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-clearFilter","fires":null,"linenr":733},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all listeners for this object including the managed listeners ...","method_calls":["clearManagedListeners"],"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":729,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"clearListeners","doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearListeners","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all managed listeners for this object. ...","method_calls":["removeManagedListenerItem"],"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"clearManagedListeners","doc":"<p>Removes all managed listeners for this object.</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearManagedListeners","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all records that used to be descendants of the passed node from the removed array ...","method_calls":["getNodeById","getRootNode"],"owner":"Ext.data.TreeStore","inheritable":null,"params":[{"type":"Ext.data.NodeInterface","tagname":"params","doc":"\n","name":"node","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"}],"tagname":"method","files":[{"linenr":520,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":true,"static":null,"name":"clearRemoved","doc":"<p>Removes all records that used to be descendants of the passed node from the removed array</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearRemoved","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":766,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configClass","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-configClass","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Continue to fire event. ...","method_calls":["getBubbleParent"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"eventName","html_type":"String"},{"type":"Array","tagname":"params","doc":"\n","name":"args","html_type":"Array"},{"type":"Boolean","tagname":"params","doc":"\n","name":"bubbles","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":456,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"continueFireEvent","doc":"<p>Continue to fire event.</p>\n","chainable":false,"inheritdoc":null,"id":"method-continueFireEvent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"saves any phantom records ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"data","html_type":"Object"},{"type":"Object","name":"options","html_type":"Object"}],"tagname":"method","files":[{"linenr":480,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"create","doc":"<p>saves any phantom records</p>\n","chainable":false,"inheritdoc":null,"id":"method-create","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates an event handling function which refires the event from this object as the passed event name. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name under which to refire the passed parameters.</p>\n","name":"newName","html_type":"String"},{"type":"Array","tagname":"params","doc":"<p>The caller can specify on which indices to slice.</p>\n","name":"beginEnd","optional":true,"html_type":"Array"}],"tagname":"method","files":[{"linenr":981,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Function","properties":null,"doc":"\n","name":"return","html_type":"Function"},"private":true,"static":null,"name":"createRelayer","doc":"<p>Creates an event handling function which refires the event from this object as the passed event name.</p>\n","chainable":false,"inheritdoc":null,"id":"method-createRelayer","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Normalizes an array of filter objects, ensuring that they are all Ext.util.Filter instances ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object[]","tagname":"params","doc":"<p>The filters array</p>\n","name":"filters","html_type":"Object[]"}],"tagname":"method","files":[{"linenr":687,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"return":{"type":"Ext.util.Filter[]","properties":null,"doc":"<p>Array of <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a> objects</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>[]"},"private":true,"static":null,"name":"decodeFilters","doc":"<p>Normalizes an array of filter objects, ensuring that they are all <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a> instances</p>\n","chainable":false,"inheritdoc":null,"id":"method-decodeFilters","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Normalizes an array of sorter objects, ensuring that they are all Ext.util.Sorter instances ...","method_calls":null,"owner":"Ext.util.Sortable","inheritable":null,"params":[{"type":"Object[]","tagname":"params","doc":"<p>The sorters array</p>\n","name":"sorters","html_type":"Object[]"}],"tagname":"method","files":[{"linenr":219,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"return":{"type":"Ext.util.Sorter[]","properties":null,"doc":"<p>Array of <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a> objects</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]"},"private":true,"static":null,"name":"decodeSorters","doc":"<p>Normalizes an array of sorter objects, ensuring that they are all <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a> instances</p>\n","chainable":false,"inheritdoc":null,"id":"method-decodeSorters","fires":null,"linenr":null},{"type":null,"overrides":[{"owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">Ext.Base.destroy</a>","name":"destroy"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"tells the attached proxy to destroy the given records ...","since":"3.4.0","method_calls":["getRemovedRecords"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"options","html_type":"Object"}],"tagname":"method","files":[{"linenr":569,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"return":null,"private":true,"static":null,"name":"destroy","doc":"<p>tells the attached proxy to destroy the given records</p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-destroy","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"private ...","method_calls":["clearData","clearListeners"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":949,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"destroyStore","doc":"<p>private</p>\n","chainable":false,"inheritdoc":null,"id":"method-destroyStore","fires":[],"linenr":null},{"type":null,"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-doSort\" rel=\"Ext.data.AbstractStore-method-doSort\" class=\"docClass\">Ext.data.AbstractStore.doSort</a>","name":"doSort"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"inherit docs ...","method_calls":["fireEvent","load"],"owner":"Ext.data.TreeStore","inheritable":null,"params":[{"type":"Object","name":"sorterFn","html_type":"Object"}],"tagname":"method","files":[{"linenr":723,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":null,"private":true,"static":null,"name":"doSort","doc":"<p>inherit docs</p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-doSort","fires":["<a href=\"#!/api/Ext.data.TreeStore-event-datachanged\" rel=\"Ext.data.TreeStore-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.TreeStore-event-refresh\" rel=\"Ext.data.TreeStore-event-refresh\" class=\"docClass\">refresh</a>","<a href=\"#!/api/Ext.data.TreeStore-event-sort\" rel=\"Ext.data.TreeStore-event-sort\" class=\"docClass\">sort</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.util.Sortable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":213,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":true,"static":null,"name":"emptyComparator","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-emptyComparator","fires":null,"linenr":213},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling this.getBubbleTarget() if\npresent. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String/String[]","tagname":"params","doc":"<p>The event name to bubble, or an Array of event names.</p>\n","name":"eventNames","html_type":"String/String[]"}],"tagname":"method","files":[{"linenr":995,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"enableBubble","doc":"<p>Enables events fired by this Observable to bubble up an owner hierarchy by calling <code>this.getBubbleTarget()</code> if\npresent. There is no implementation in the Observable base class.</p>\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers.\nSee <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>. The default implementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> returns the\nComponent's immediate owner. But if a known target is required, this can be overridden to access the\nrequired target more quickly.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.overrides.form.field.Base', {\n    override: '<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>',\n\n    //  Add functionality to Field's initComponent to enable the change event to bubble\n    initComponent: function () {\n        this.callParent();\n        this.enableBubble('change');\n    }\n});\n\nvar myForm = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-enableBubble","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fills a node with a series of child records. ...","method_calls":["fireEvent"],"owner":"Ext.data.TreeStore","inheritable":null,"params":[{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>The node to fill</p>\n","name":"node","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Ext.data.Model[]","tagname":"params","doc":"<p>The records to add</p>\n","name":"newNodes","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"}],"tagname":"method","files":[{"linenr":575,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":true,"static":null,"name":"fillNode","doc":"<p>Fills a node with a series of child records.</p>\n","chainable":false,"inheritdoc":null,"id":"method-fillNode","fires":["beforefill","fillcomplete"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"filters","html_type":"Object"},{"type":"Object","name":"value","html_type":"Object"}],"tagname":"method","files":[{"linenr":683,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"filter","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-filter","fires":null,"linenr":683},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":741,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"filterBy","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-filterBy","fires":null,"linenr":741},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Filter function for new records. ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"}],"tagname":"method","files":[{"linenr":630,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"filterNew","doc":"<p>Filter function for new records.</p>\n","chainable":false,"inheritdoc":null,"id":"method-filterNew","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Filter function for updated records. ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"}],"tagname":"method","files":[{"linenr":666,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"filterUpdated","doc":"<p>Filter function for updated records.</p>\n","chainable":false,"inheritdoc":null,"id":"method-filterUpdated","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fires the specified event with the passed parameters (minus the event name, plus the options object passed\nto addList...","method_calls":["fireEventArgs"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to fire.</p>\n","name":"eventName","html_type":"String"},{"type":"Object...","tagname":"params","doc":"<p>Variable number of parameters are passed to handlers.</p>\n","name":"args","html_type":"Object..."}],"tagname":"method","files":[{"linenr":416,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"fireEvent","doc":"<p>Fires the specified event with the passed parameters (minus the event name, plus the <code>options</code> object passed\nto <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireEvent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fires the specified event with the passed parameter list. ...","method_calls":["continueFireEvent"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to fire.</p>\n","name":"eventName","html_type":"String"},{"type":"Object[]","tagname":"params","doc":"<p>An array of parameters which are passed to handlers.</p>\n","name":"args","html_type":"Object[]"}],"tagname":"method","files":[{"linenr":431,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"fireEventArgs","doc":"<p>Fires the specified event with the passed parameter list.</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireEventArgs","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns a comparator function which compares two items and returns -1, 0, or 1 depending\non the currently defined set...","method_calls":["createComparator"],"owner":"Ext.util.Sortable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":201,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":null,"static":null,"name":"generateComparator","doc":"<p>Returns a comparator function which compares two items and returns -1, 0, or 1 depending\non the currently defined set of <a href=\"#!/api/Ext.util.Sortable-cfg-sorters\" rel=\"Ext.util.Sortable-cfg-sorters\" class=\"docClass\">sorters</a>.</p>\n\n<p>If there are no <a href=\"#!/api/Ext.util.Sortable-cfg-sorters\" rel=\"Ext.util.Sortable-cfg-sorters\" class=\"docClass\">sorters</a> defined, it returns a function which returns <code>0</code> meaning\nthat no sorting will occur.</p>\n","chainable":false,"inheritdoc":null,"id":"method-generateComparator","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns an object which is passed in as the listeners argument to proxy.batch inside this.sync. ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":819,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The listeners object</p>\n","name":"return","html_type":"Object"},"private":true,"static":null,"name":"getBatchListeners","doc":"<p>Returns an object which is passed in as the listeners argument to proxy.batch inside this.sync.\nThis is broken out into a separate function to allow for customisation of the listeners</p>\n","chainable":false,"inheritdoc":null,"id":"method-getBatchListeners","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the bubbling parent for an Observable ...","method_calls":["getBubbleTarget"],"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":489,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Ext.util.Observable","properties":null,"doc":"<p>The bubble parent. null is returned if no bubble target exists</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},"private":true,"static":null,"name":"getBubbleParent","doc":"<p>Gets the bubbling parent for an Observable</p>\n","chainable":false,"inheritdoc":null,"id":"method-getBubbleParent","fires":[],"linenr":null},{"type":null,"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-getById\" rel=\"Ext.data.AbstractStore-method-getById\" class=\"docClass\">Ext.data.AbstractStore.getById</a>","name":"getById"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"inherit docs ...","method_calls":["getNodeById"],"owner":"Ext.data.TreeStore","inheritable":null,"params":[{"type":"Object","name":"id","html_type":"Object"}],"tagname":"method","files":[{"linenr":463,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":null,"private":true,"static":null,"name":"getById","doc":"<p>inherit docs</p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-getById","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":1196,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"getConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"to be implemented by subclasses ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1102,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"getCount","doc":"<p>to be implemented by subclasses</p>\n","chainable":null,"inheritdoc":null,"id":"method-getCount","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the first sorter from the sorters collection, excluding\nany groupers that may be in place ...","method_calls":null,"owner":"Ext.util.Sortable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":283,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"protected":true,"return":{"type":"Ext.util.Sorter","properties":null,"doc":"<p>The sorter, null if none exist</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>"},"private":null,"static":null,"name":"getFirstSorter","doc":"<p>Gets the first sorter from the sorters collection, excluding\nany groupers that may be in place</p>\n","chainable":false,"inheritdoc":null,"id":"method-getFirstSorter","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>Name of the config option to return.</p>\n","name":"name","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":1206,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object/Mixed","properties":null,"doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","name":"return","html_type":"Object/Mixed"},"private":null,"static":null,"name":"getInitialConfig","doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getInitialConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets all records added or updated since the last commit. ...","method_calls":["getNewRecords","getUpdatedRecords"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":656,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"return":{"type":"Ext.data.Model[]","properties":null,"doc":"<p>The added and updated Model instances</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"private":null,"static":null,"name":"getModifiedRecords","doc":"<p>Gets all <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">records</a> added or updated since the last commit. Note that the order of records\nreturned is not deterministic and does not indicate the order in which records were modified. Note also that\nremoved records are not included (use <a href=\"#!/api/Ext.data.AbstractStore-method-getRemovedRecords\" rel=\"Ext.data.AbstractStore-method-getRemovedRecords\" class=\"docClass\">getRemovedRecords</a> for that).</p>\n","chainable":false,"inheritdoc":null,"id":"method-getModifiedRecords","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-getNewRecords\" rel=\"Ext.data.AbstractStore-method-getNewRecords\" class=\"docClass\">Ext.data.AbstractStore.getNewRecords</a>","name":"getNewRecords"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"inherit docs ...","method_calls":null,"owner":"Ext.data.TreeStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":342,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":{"type":"Ext.data.Model[]","properties":null,"doc":"<p>The Model instances</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"private":null,"static":null,"name":"getNewRecords","doc":"<p>inherit docs</p>\n","chainable":false,"inheritdoc":null,"id":"method-getNewRecords","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the record node by id ...","method_calls":null,"owner":"Ext.data.TreeStore","inheritable":null,"params":[{"type":"Object","name":"id","html_type":"Object"}],"tagname":"method","files":[{"linenr":455,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":{"type":"Ext.data.NodeInterface","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"private":null,"static":null,"name":"getNodeById","doc":"<p>Returns the record node by id</p>\n","chainable":false,"inheritdoc":null,"id":"method-getNodeById","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the proxy currently attached to this proxy instance ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":467,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"return":{"type":"Ext.data.proxy.Proxy","properties":null,"doc":"<p>The Proxy instance</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a>"},"private":null,"static":null,"name":"getProxy","doc":"<p>Returns the proxy currently attached to this proxy instance</p>\n","chainable":false,"inheritdoc":null,"id":"method-getProxy","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns any records that have been removed from the store but not yet destroyed on the proxy. ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":675,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"return":{"type":"Ext.data.Model[]","properties":null,"doc":"<p>The removed Model instances</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"private":null,"static":null,"name":"getRemovedRecords","doc":"<p>Returns any records that have been removed from the store but not yet destroyed on the proxy.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getRemovedRecords","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the root node for this tree. ...","method_calls":null,"owner":"Ext.data.TreeStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":447,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":{"type":"Ext.data.NodeInterface","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"private":null,"static":null,"name":"getRootNode","doc":"<p>Returns the root node for this tree.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getRootNode","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.util.Sortable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":279,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":true,"static":null,"name":"getSorters","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getSorters","fires":null,"linenr":279},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the grouping, sorting and filtered state of this Store. ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":977,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"getState","doc":"<p>Returns the grouping, sorting and filtered state of this Store.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getState","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-getUpdatedRecords\" rel=\"Ext.data.AbstractStore-method-getUpdatedRecords\" class=\"docClass\">Ext.data.AbstractStore.getUpdatedRecords</a>","name":"getUpdatedRecords"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"inherit docs ...","method_calls":null,"owner":"Ext.data.TreeStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":347,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":{"type":"Ext.data.Model[]","properties":null,"doc":"<p>The updated Model instances</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"private":null,"static":null,"name":"getUpdatedRecords","doc":"<p>inherit docs</p>\n","chainable":false,"inheritdoc":null,"id":"method-getUpdatedRecords","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1156,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"hasConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-hasConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Checks to see if this object has any listeners for a specified event, or whether the event bubbles. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to check for</p>\n","name":"eventName","html_type":"String"}],"tagname":"method","files":[{"linenr":833,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p><code>true</code> if the event is being listened for or bubbles, else <code>false</code></p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"hasListener","doc":"<p>Checks to see if this object has any listeners for a specified event, or whether the event bubbles. The answer\nindicates whether the event needs firing or not.</p>\n","chainable":false,"inheritdoc":null,"id":"method-hasListener","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Initialize configuration for this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1090,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":null,"static":null,"name":"initConfig","doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"method-initConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Performs initialization of this mixin. ...","method_calls":["decodeSorters"],"owner":"Ext.util.Sortable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":81,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":null,"static":null,"name":"initSortable","doc":"<p>Performs initialization of this mixin. Component classes using this mixin should call this method during their\nown initialization.</p>\n","chainable":false,"inheritdoc":null,"id":"method-initSortable","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":737,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"isFiltered","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-isFiltered","fires":null,"linenr":737},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns true if the Store is currently performing a load operation ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1119,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>True if the Store is currently loading</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"isLoading","doc":"<p>Returns true if the Store is currently performing a load operation</p>\n","chainable":false,"inheritdoc":null,"id":"method-isLoading","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-load\" rel=\"Ext.data.AbstractStore-method-load\" class=\"docClass\">Ext.data.AbstractStore.load</a>","name":"load"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Loads the Store using its configured proxy. ...","method_calls":["callParent","clearRemoved","setRootNode"],"owner":"Ext.data.TreeStore","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>config object. This is passed into the <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Operation</a>\nobject that is created and then sent to the proxy's <a href=\"#!/api/Ext.data.proxy.Proxy-method-read\" rel=\"Ext.data.proxy.Proxy-method-read\" class=\"docClass\">Ext.data.proxy.Proxy.read</a> function.\nThe options can also contain a node, which indicates which node is to be loaded. If not specified, it will\ndefault to the root node.</p>\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":468,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":null,"static":null,"name":"load","doc":"<p>Loads the Store using its configured <a href=\"#!/api/Ext.data.TreeStore-cfg-proxy\" rel=\"Ext.data.TreeStore-cfg-proxy\" class=\"docClass\">proxy</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-load","fires":[],"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for addManagedListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1134,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"mon","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-addManagedListener\" rel=\"Ext.util.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-mon","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for removeManagedListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":null,"private":null,"static":null,"name":"mun","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-removeManagedListener\" rel=\"Ext.util.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-mun","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for addListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","name":"eventName","html_type":"String/Object"},{"type":"Function","tagname":"params","doc":"<p>The method the event invokes, or <em>if <code>scope</code> is specified, the </em>name* of the method within\nthe specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> plus the <code>options</code> parameter described below.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","name":"scope","html_type":"Object"},{"type":"Number","tagname":"params","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n\n","name":"delay","html_type":"Number"},{"type":"Boolean","tagname":"params","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n","name":"single","html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","name":"buffer","html_type":"Number"},{"type":"Ext.util.Observable","tagname":"params","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the event\n  was bubbled up from a child Observable.</p>\n\n","name":"target","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"type":"String","tagname":"params","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an element to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to elements of\n  <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the Component is rendered.\n  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n","name":"element","html_type":"String"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>When specified as <code>true</code>, the function returns A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call.</p>\n\n","name":"destroyable","optional":true,"html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n","name":"priority","optional":true,"html_type":"Number"}],"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> Unlike in ExtJS 3.x, the options object will also be passed as the last\nargument to every event handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1122,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"on","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-on","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Attached as the 'complete' event listener to a proxy's Batch object. ...","method_calls":["fireEvent","onProxyWrite","resumeEvents","suspendEvents"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"batch","html_type":"Object"},{"type":"Object","name":"operation","html_type":"Object"}],"tagname":"method","files":[{"linenr":596,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"onBatchComplete","doc":"<p>Attached as the 'complete' event listener to a proxy's Batch object. Iterates over the batch operations\nand updates the Store's internal data MixedCollection.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onBatchComplete","fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-datachanged\" rel=\"Ext.data.AbstractStore-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.AbstractStore-event-refresh\" rel=\"Ext.data.AbstractStore-event-refresh\" class=\"docClass\">refresh</a>","<a href=\"#!/api/Ext.data.AbstractStore-event-write\" rel=\"Ext.data.AbstractStore-event-write\" class=\"docClass\">write</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"batch","html_type":"Object"},{"type":"Object","name":"operation","html_type":"Object"}],"tagname":"method","files":[{"linenr":619,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"onBatchException","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onBatchException","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Attached as the 'operationcomplete' event listener to a proxy's Batch object. ...","method_calls":["onProxyWrite"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"batch","html_type":"Object"},{"type":"Object","name":"operation","html_type":"Object"}],"tagname":"method","files":[{"linenr":587,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"onBatchOperationComplete","doc":"<p>Attached as the 'operationcomplete' event listener to a proxy's Batch object. By default just calls through\nto onProxyWrite.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onBatchOperationComplete","fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-datachanged\" rel=\"Ext.data.AbstractStore-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.AbstractStore-event-refresh\" rel=\"Ext.data.AbstractStore-event-refresh\" class=\"docClass\">refresh</a>","<a href=\"#!/api/Ext.data.AbstractStore-event-write\" rel=\"Ext.data.AbstractStore-event-write\" class=\"docClass\">write</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fired by the root node. ...","method_calls":["fillNode","getProxy","on","read"],"owner":"Ext.data.TreeStore","inheritable":null,"params":[{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>The node being expanded.</p>\n","name":"node","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Function","tagname":"params","doc":"<p>The function to run after the expand finishes</p>\n","name":"callback","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope in which to run the callback function</p>\n","name":"scope","html_type":"Object"},{"type":"Array","tagname":"params","doc":"<p>The extra args to pass to the callback after the new child nodes</p>\n","name":"args","html_type":"Array"}],"tagname":"method","files":[{"linenr":279,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":true,"static":null,"name":"onBeforeNodeExpand","doc":"<p>Fired by the root node.</p>\n\n<p>Called before a node is expanded.</p>\n\n<p>This ensures that the child nodes are available before calling the passed callback.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onBeforeNodeExpand","fires":["beforefill","fillcomplete"],"linenr":null},{"type":null,"overrides":[{"owner":"Ext.util.Sortable","link":"<a href=\"#!/api/Ext.util.Sortable-method-onBeforeSort\" rel=\"Ext.util.Sortable-method-onBeforeSort\" class=\"docClass\">Ext.util.Sortable.onBeforeSort</a>","name":"onBeforeSort"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"inherit docs ...","method_calls":["sort"],"owner":"Ext.data.TreeStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":269,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":null,"private":true,"static":null,"name":"onBeforeSort","doc":"<p>inherit docs</p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-onBeforeSort","fires":["beforesort","<a href=\"#!/api/Ext.data.TreeStore-event-sort\" rel=\"Ext.data.TreeStore-event-sort\" class=\"docClass\">sort</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"cls","html_type":"Object"},{"type":"Object","name":"data","html_type":"Object"},{"type":"Object","name":"hooks","html_type":"Object"}],"tagname":"method","files":[{"linenr":84,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"onClassExtended","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onClassExtended","fires":null,"linenr":84},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"names","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"callback","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":1224,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"onConfigUpdate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onConfigUpdate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"may be implemented by store subclasses ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":550,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"onCreateRecords","doc":"<p>may be implemented by store subclasses</p>\n","chainable":null,"inheritdoc":null,"id":"method-onCreateRecords","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes any records when a write is returned from the server. ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Ext.data.Model[]","tagname":"params","doc":"<p>The array of removed records</p>\n","name":"records","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"type":"Ext.data.Operation","tagname":"params","doc":"<p>The operation that just completed</p>\n","name":"operation","html_type":"<a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a>"},{"type":"Boolean","tagname":"params","doc":"<p>True if the operation was successful</p>\n","name":"success","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":556,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"onDestroyRecords","doc":"<p>Removes any records when a write is returned from the server.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onDestroyRecords","fires":null,"linenr":null},{"type":null,"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-onIdChanged\" rel=\"Ext.data.AbstractStore-method-onIdChanged\" class=\"docClass\">Ext.data.AbstractStore.onIdChanged</a>","name":"onIdChanged"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["callParent"],"owner":"Ext.data.TreeStore","inheritable":null,"params":[{"type":"Object","name":"model","html_type":"Object"},{"type":"Object","name":"oldId","html_type":"Object"},{"type":"Object","name":"newId","html_type":"Object"},{"type":"Object","name":"oldInternalId","html_type":"Object"}],"tagname":"method","files":[{"linenr":654,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":null,"private":true,"static":null,"name":"onIdChanged","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-onIdChanged","fires":[],"linenr":654},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"private ...","method_calls":["fireEvent"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"proxy","html_type":"Object"},{"type":"Object","name":"meta","html_type":"Object"}],"tagname":"method","files":[{"linenr":475,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"onMetaChange","doc":"<p>private</p>\n","chainable":false,"inheritdoc":null,"id":"method-onMetaChange","fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-metachange\" rel=\"Ext.data.AbstractStore-event-metachange\" class=\"docClass\">metachange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["fillNode","getProxy","sync"],"owner":"Ext.data.TreeStore","inheritable":null,"params":[{"type":"Object","name":"parent","html_type":"Object"},{"type":"Object","name":"node","html_type":"Object"}],"tagname":"method","files":[{"linenr":368,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":true,"static":null,"name":"onNodeAdded","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onNodeAdded","fires":["beforefill","<a href=\"#!/api/Ext.data.TreeStore-event-beforesync\" rel=\"Ext.data.TreeStore-event-beforesync\" class=\"docClass\">beforesync</a>","fillcomplete"],"linenr":368},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["sync"],"owner":"Ext.data.TreeStore","inheritable":null,"params":[{"type":"Object","name":"parent","html_type":"Object"},{"type":"Object","name":"node","html_type":"Object"},{"type":"Object","name":"isMove","html_type":"Object"}],"tagname":"method","files":[{"linenr":352,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":true,"static":null,"name":"onNodeRemove","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onNodeRemove","fires":["<a href=\"#!/api/Ext.data.TreeStore-event-beforesync\" rel=\"Ext.data.TreeStore-event-beforesync\" class=\"docClass\">beforesync</a>"],"linenr":352},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["sync"],"owner":"Ext.data.TreeStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":392,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":true,"static":null,"name":"onNodeSort","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onNodeSort","fires":["<a href=\"#!/api/Ext.data.TreeStore-event-beforesync\" rel=\"Ext.data.TreeStore-event-beforesync\" class=\"docClass\">beforesync</a>"],"linenr":392},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"inherit docs ...","method_calls":["cleanRecords","fillNode","fireEvent"],"owner":"Ext.data.TreeStore","inheritable":null,"params":[{"type":"Object","name":"operation","html_type":"Object"}],"tagname":"method","files":[{"linenr":659,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":true,"static":null,"name":"onProxyLoad","doc":"<p>inherit docs</p>\n","chainable":false,"inheritdoc":null,"id":"method-onProxyLoad","fires":["beforefill","fillcomplete","<a href=\"#!/api/Ext.data.TreeStore-event-load\" rel=\"Ext.data.TreeStore-event-load\" class=\"docClass\">load</a>","read"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Callback for any write Operation over the Proxy. ...","method_calls":["fireEvent","onCreateRecords","onDestroyRecords","onUpdateRecords"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"operation","html_type":"Object"}],"tagname":"method","files":[{"linenr":519,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"onProxyWrite","doc":"<p>Callback for any write Operation over the Proxy. Updates the Store's MixedCollection to reflect\nthe updates provided by the Proxy</p>\n","chainable":false,"inheritdoc":null,"id":"method-onProxyWrite","fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-datachanged\" rel=\"Ext.data.AbstractStore-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.AbstractStore-event-refresh\" rel=\"Ext.data.AbstractStore-event-refresh\" class=\"docClass\">refresh</a>","<a href=\"#!/api/Ext.data.AbstractStore-event-write\" rel=\"Ext.data.AbstractStore-event-write\" class=\"docClass\">write</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":943,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"onUpdate","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-onUpdate","fires":null,"linenr":943},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"may be implemented by store subclasses ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":553,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"onUpdateRecords","doc":"<p>may be implemented by store subclasses</p>\n","chainable":null,"inheritdoc":null,"id":"method-onUpdateRecords","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Prepares a given class for observable instances. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Function","tagname":"params","doc":"<p>The class constructor to prepare.</p>\n","name":"T","html_type":"Function"}],"tagname":"method","files":[{"linenr":164,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"prepareClass","doc":"<p>Prepares a given class for observable instances. This method is called when a\nclass derives from this class or uses this class as a mixin.</p>\n","chainable":false,"inheritdoc":null,"id":"method-prepareClass","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":500,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"read","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-read","fires":null,"linenr":500},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Relays selected events from the specified Observable as if the events were fired by this. ...","method_calls":["createRelayer","mon"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The Observable whose events this object is to relay.</p>\n","name":"origin","html_type":"Object"},{"type":"String[]","tagname":"params","doc":"<p>Array of event names to relay.</p>\n","name":"events","html_type":"String[]"},{"type":"String","tagname":"params","doc":"<p>A common prefix to prepend to the event names. For example:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Now the grid will forward 'load' and 'clear' events of store as 'storeload' and 'storeclear'.</p>\n","name":"prefix","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":928,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which, when destroyed, removes all relayers. For example:</p>\n\n<pre><code>this.storeRelayers = this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Can be undone by calling</p>\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.storeRelayers);\n</code></pre>\n\n<p>or\n    this.store.relayers.destroy();</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"relayEvents","doc":"<p>Relays selected events from the specified Observable as if the events were fired by <code>this</code>.</p>\n\n<p>For example if you are extending Grid, you might decide to forward some events from store.\nSo you can do this inside your initComponent:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>The grid instance will then have an observable 'load' event which will be passed the\nparameters of the store's load event and any function fired with the grid's load event\nwould have access to the grid using the <code>this</code> keyword.</p>\n","chainable":false,"inheritdoc":null,"id":"method-relayEvents","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Reloads the store using the last options passed to the load method. ...","method_calls":["load"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>A config object which contains options which may override the options passed to the previous load call.</p>\n","name":"options","html_type":"Object"}],"tagname":"method","files":[{"linenr":878,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"reload","doc":"<p>Reloads the store using the last options passed to the <a href=\"#!/api/Ext.data.AbstractStore-method-load\" rel=\"Ext.data.AbstractStore-method-load\" class=\"docClass\">load</a> method.</p>\n","chainable":false,"inheritdoc":null,"id":"method-reload","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-removeAll\" rel=\"Ext.data.AbstractStore-method-removeAll\" class=\"docClass\">Ext.data.AbstractStore.removeAll</a>","name":"removeAll"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"inherit docs ...","since":"1.1.0","method_calls":["fireEvent","getRootNode"],"owner":"Ext.data.TreeStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":714,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"private":null,"static":null,"name":"removeAll","doc":"<p>inherit docs</p>\n","chainable":null,"inheritdoc":null,"id":"method-removeAll","fires":["<a href=\"#!/api/Ext.data.TreeStore-event-clear\" rel=\"Ext.data.TreeStore-event-clear\" class=\"docClass\">clear</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes an event handler. ...","method_calls":["removeListener"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The type of event the handler was associated with.</p>\n\n","name":"eventName","html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>The handler to remove. <strong>This must be a reference to the function passed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope originally specified for the handler. It must be the same as the\nscope argument specified in the original call to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> or the listener will not be removed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":688,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"removeListener","doc":"<p>Removes an event handler.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes listeners that were added by the mon method. ...","method_calls":["removeManagedListener","removeManagedListenerItem"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":375,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"removeManagedListener","doc":"<p>Removes listeners that were added by the <a href=\"#!/api/Ext.util.Observable-method-mon\" rel=\"Ext.util.Observable-method-mon\" class=\"docClass\">mon</a> method.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeManagedListener","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.AbstractComponent","link":"<a href=\"#!/api/Ext.AbstractComponent-method-removeManagedListenerItem\" rel=\"Ext.AbstractComponent-method-removeManagedListenerItem\" class=\"docClass\">Ext.AbstractComponent.removeManagedListenerItem</a>","name":"removeManagedListenerItem"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Remove a single managed listener item ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>True if this is being called during a clear</p>\n","name":"isClear","html_type":"Boolean"},{"type":"Object","tagname":"params","doc":"<p>The managed listener item\nSee removeManagedListener for other args</p>\n","name":"managedListener","html_type":"Object"}],"tagname":"method","files":[{"linenr":775,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"removeManagedListenerItem","doc":"<p>Remove a single managed listener item</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeManagedListenerItem","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Resumes automatically syncing the Store with its Proxy. ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1134,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"resumeAutoSync","doc":"<p>Resumes automatically syncing the Store with its Proxy.  Only applicable if <a href=\"#!/api/Ext.data.AbstractStore-cfg-autoSync\" rel=\"Ext.data.AbstractStore-cfg-autoSync\" class=\"docClass\">autoSync</a> is <code>true</code></p>\n","chainable":false,"inheritdoc":null,"id":"method-resumeAutoSync","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Resumes firing of the named event(s). ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String...","tagname":"params","doc":"<p>Multiple event names to resume.</p>\n","name":"eventName","html_type":"String..."}],"tagname":"method","files":[{"linenr":881,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"resumeEvent","doc":"<p>Resumes firing of the named event(s).</p>\n\n<p>After calling this method to resume events, the events will fire when requested to fire.</p>\n\n<p><strong>Note that if the <a href=\"#!/api/Ext.util.Observable-method-suspendEvent\" rel=\"Ext.util.Observable-method-suspendEvent\" class=\"docClass\">suspendEvent</a> method is called multiple times for a certain event,\nthis converse method will have to be called the same number of times for it to resume firing.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-resumeEvent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Resumes firing events (see suspendEvents). ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":905,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"resumeEvents","doc":"<p>Resumes firing events (see <a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n\n<p>If events were suspended using the <code>queueSuspended</code> parameter, then all events fired\nduring event suspension will be sent to any listeners now.</p>\n","chainable":false,"inheritdoc":null,"id":"method-resumeEvents","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Saves all pending changes via the configured proxy. ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":841,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"save","doc":"<p>Saves all pending changes via the configured <a href=\"#!/api/Ext.data.AbstractStore-cfg-proxy\" rel=\"Ext.data.AbstractStore-cfg-proxy\" class=\"docClass\">proxy</a>. Use <a href=\"#!/api/Ext.data.AbstractStore-method-sync\" rel=\"Ext.data.AbstractStore-method-sync\" class=\"docClass\">sync</a> instead.</p>\n","chainable":false,"inheritdoc":null,"id":"method-save","deprecated":{"text":"<p>Will be removed in the next major version</p>\n","version":"4.0.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"},{"type":"Object","name":"applyIfNotSet","html_type":"Object"}],"tagname":"method","files":[{"linenr":1164,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"static":null,"name":"setConfig","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-setConfig","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-setProxy\" rel=\"Ext.data.AbstractStore-method-setProxy\" class=\"docClass\">Ext.data.AbstractStore.setProxy</a>","name":"setProxy"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"inherit docs ...","method_calls":["callParent"],"owner":"Ext.data.TreeStore","inheritable":null,"params":[{"type":"Object","name":"proxy","html_type":"Object"}],"tagname":"method","files":[{"linenr":237,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":{"type":"Ext.data.proxy.Proxy","properties":null,"doc":"<p>The attached Proxy object</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a>"},"private":null,"static":null,"name":"setProxy","doc":"<p>inherit docs</p>\n","chainable":false,"inheritdoc":null,"id":"method-setProxy","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the root node for this store. ...","method_calls":["getProxy"],"owner":"Ext.data.TreeStore","inheritable":null,"params":[{"type":"Ext.data.Model/Ext.data.NodeInterface/Object","tagname":"params","doc":"\n","name":"root","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>/Object"}],"tagname":"method","files":[{"linenr":398,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":{"type":"Ext.data.NodeInterface","properties":null,"doc":"<p>The new root</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},"private":null,"static":null,"name":"setRootNode","doc":"<p>Sets the root node for this store.  See also the <a href=\"#!/api/Ext.data.TreeStore-cfg-root\" rel=\"Ext.data.TreeStore-cfg-root\" class=\"docClass\">root</a> config option.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setRootNode","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sorts the data in the Store by one or more of its properties. ...","method_calls":["decodeSorters","doSort","fireEvent","generateComparator","onBeforeSort"],"owner":"Ext.util.Sortable","inheritable":null,"params":[{"type":"String/Ext.util.Sorter[]","tagname":"params","doc":"<p>Either a string name of one of the fields in this Store's configured\n<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a>, or an array of sorter configurations.</p>\n","name":"sorters","optional":true,"html_type":"String/<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]"},{"type":"String","default":"\"ASC\"","tagname":"params","doc":"<p>The overall direction to sort the data by.</p>\n","name":"direction","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":102,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"return":{"type":"Ext.util.Sorter[]","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]"},"private":null,"static":null,"name":"sort","doc":"<p>Sorts the data in the Store by one or more of its properties. Example usage:</p>\n\n<pre><code>//sort by a single field\nmyStore.sort('myField', 'DESC');\n\n//sorting by multiple fields\nmyStore.sort([\n    {\n        property : 'age',\n        direction: 'ASC'\n    },\n    {\n        property : 'name',\n        direction: 'DESC'\n    }\n]);\n</code></pre>\n\n<p>Internally, Store converts the passed arguments into an array of <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a> instances, and delegates\nthe actual sorting to its internal <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>.</p>\n\n<p>When passing a single string argument to sort, Store maintains a ASC/DESC toggler per field, so this code:</p>\n\n<pre><code>store.sort('myField');\nstore.sort('myField');\n</code></pre>\n\n<p>Is equivalent to this code, because Store handles the toggling automatically:</p>\n\n<pre><code>store.sort('myField', 'ASC');\nstore.sort('myField', 'DESC');\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-sort","fires":["beforesort","sort"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sorter function for sorting records in index order ...","method_calls":null,"owner":"Ext.data.TreeStore","inheritable":null,"params":[{"type":"Ext.data.NodeInterface","tagname":"params","doc":"\n","name":"node1","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Ext.data.NodeInterface","tagname":"params","doc":"\n","name":"node2","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"}],"tagname":"method","files":[{"linenr":643,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":{"type":"Number","properties":null,"doc":"\n","name":"return","html_type":"Number"},"private":true,"static":null,"name":"sortByIndex","doc":"<p>Sorter function for sorting records in index order</p>\n","chainable":false,"inheritdoc":null,"id":"method-sortByIndex","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the reference to the class from which this object was instantiated. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":778,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Class","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"private":null,"static":null,"name":"statics","doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-statics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Suspends automatically syncing the Store with its Proxy. ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1127,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"suspendAutoSync","doc":"<p>Suspends automatically syncing the Store with its Proxy.  Only applicable if <a href=\"#!/api/Ext.data.AbstractStore-cfg-autoSync\" rel=\"Ext.data.AbstractStore-cfg-autoSync\" class=\"docClass\">autoSync</a> is <code>true</code></p>\n","chainable":false,"inheritdoc":null,"id":"method-suspendAutoSync","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Suspends firing of the named event(s). ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String...","tagname":"params","doc":"<p>Multiple event names to suspend.</p>\n","name":"eventName","html_type":"String..."}],"tagname":"method","files":[{"linenr":857,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"suspendEvent","doc":"<p>Suspends firing of the named event(s).</p>\n\n<p>After calling this method to suspend events, the events will no longer fire when requested to fire.</p>\n\n<p><strong>Note that if this is called multiple times for a certain event, the converse method\n<a href=\"#!/api/Ext.util.Observable-method-resumeEvent\" rel=\"Ext.util.Observable-method-resumeEvent\" class=\"docClass\">resumeEvent</a> will have to be called the same number of times for it to resume firing.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-suspendEvent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Suspends the firing of all events. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>Pass as true to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events.</p>\n","name":"queueSuspended","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":844,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"suspendEvents","doc":"<p>Suspends the firing of all events. (see <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n","chainable":false,"inheritdoc":null,"id":"method-suspendEvents","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Synchronizes the store with its proxy. ...","method_calls":["fireEvent","getBatchListeners","getNewRecords","getRemovedRecords","getUpdatedRecords"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","tagname":"params","properties":[{"type":"Ext.data.Batch/Object","tagname":"params","doc":"<p>A <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a> object (or batch config to apply\nto the created batch). If unspecified a default batch will be auto-created as needed.</p>\n","name":"batch","optional":true,"html_type":"<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>/Object"},{"type":"Function","tagname":"params","properties":[{"type":"Ext.data.Batch","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">batch</a> that was processed,\ncontaining all operations in their current state after processing</p>\n","name":"batch","html_type":"<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>"},{"type":"Object","tagname":"params","doc":"<p>The options argument that was originally passed into sync</p>\n","name":"options","html_type":"Object"}],"doc":"<p>The function to be called upon completion of the sync.\nThe callback is called regardless of success or failure and is passed the following parameters:</p>\n","name":"callback","optional":true,"html_type":"Function"},{"type":"Function","tagname":"params","properties":[{"type":"Ext.data.Batch","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">batch</a> that was processed,\ncontaining all operations in their current state after processing</p>\n","name":"batch","html_type":"<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>"},{"type":"Object","tagname":"params","doc":"<p>The options argument that was originally passed into sync</p>\n","name":"options","html_type":"Object"}],"doc":"<p>The function to be called upon successful completion of the sync. The\nsuccess function is called only if no exceptions were reported in any operations. If one or more exceptions\noccurred then the failure function will be called instead. The success function is called\nwith the following parameters:</p>\n","name":"success","optional":true,"html_type":"Function"},{"type":"Function","tagname":"params","properties":[{"type":"Ext.data.Batch","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a> that was processed, containing all\noperations in their current state after processing</p>\n","name":"batch","html_type":"<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>"},{"type":"Object","tagname":"params","doc":"<p>The options argument that was originally passed into sync</p>\n","name":"options","html_type":"Object"}],"doc":"<p>The function to be called upon unsuccessful completion of the sync. The\nfailure function is called when one or more operations returns an exception during processing (even if some\noperations were also successful). In this case you can check the batch's <a href=\"#!/api/Ext.data.Batch-property-exceptions\" rel=\"Ext.data.Batch-property-exceptions\" class=\"docClass\">exceptions</a> array to see exactly which operations had exceptions. The failure function is called with the\nfollowing parameters:</p>\n","name":"failure","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope in which to execute any callbacks (i.e. the <code>this</code> object inside\nthe callback, success and/or failure functions). Defaults to the store's proxy.</p>\n","name":"scope","optional":true,"html_type":"Object"}],"doc":"<p>Object containing one or more properties supported by the sync method (these get\npassed along to the underlying proxy's <a href=\"#!/api/Ext.data.proxy.Proxy-method-batch\" rel=\"Ext.data.proxy.Proxy-method-batch\" class=\"docClass\">batch</a> method):</p>\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":745,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"return":{"type":"Ext.data.Store","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},"private":null,"static":null,"name":"sync","doc":"<p>Synchronizes the store with its <a href=\"#!/api/Ext.data.AbstractStore-cfg-proxy\" rel=\"Ext.data.AbstractStore-cfg-proxy\" class=\"docClass\">proxy</a>. This asks the proxy to batch together any new, updated\nand deleted records in the store, updating the store's internal representation of the records\nas each operation completes.</p>\n","chainable":false,"inheritdoc":null,"id":"method-sync","fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-beforesync\" rel=\"Ext.data.AbstractStore-event-beforesync\" class=\"docClass\">beforesync</a>"],"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for removeListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The type of event the handler was associated with.</p>\n\n","name":"eventName","html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>The handler to remove. <strong>This must be a reference to the function passed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope originally specified for the handler. It must be the same as the\nscope argument specified in the original call to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> or the listener will not be removed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1128,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":null,"private":null,"static":null,"name":"un","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-removeListener\" rel=\"Ext.util.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-un","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getUpdatedRecords"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"options","html_type":"Object"}],"tagname":"method","files":[{"linenr":504,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"update","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-update","fires":[],"linenr":504},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":176,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-addConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":256,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addInheritableStatics","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addInheritableStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"member","html_type":"Object"}],"tagname":"method","files":[{"linenr":353,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addMember","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addMember","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add methods / properties to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":296,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"addMembers","doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addMembers","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add / override static properties of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":218,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"addStatics","doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"xtype","html_type":"Object"}],"tagname":"method","files":[{"linenr":730,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addXtype","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addXtype","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Borrow another class' members to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Ext.Base","tagname":"params","doc":"<p>The class to borrow members from</p>\n","name":"fromClass","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"type":"Array/String","tagname":"params","doc":"<p>The names of the members to borrow</p>\n","name":"members","html_type":"Array/String"}],"tagname":"method","files":[{"linenr":383,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":true,"name":"borrow","doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-borrow","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create aliases for existing prototype methods. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","name":"alias","html_type":"String/Object"},{"type":"String/Object","tagname":"params","doc":"<p>The original method name</p>\n","name":"origin","html_type":"String/Object"}],"tagname":"method","files":[{"linenr":696,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"createAlias","doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"static-method-createAlias","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":81,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"extend","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-extend","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the current class' name in string format. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":677,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"String","properties":null,"doc":"<p>className</p>\n","name":"return","html_type":"String"},"static":true,"private":null,"name":"getName","doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"static-method-getName","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds members to class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":373,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"implement","doc":"<p>Adds members to class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-implement","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n","version":"4.1"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Used internally by the mixins pre-processor ...","method_calls":["addConfig","hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"mixinClass","html_type":"Object"}],"tagname":"method","files":[{"linenr":595,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"mixin","doc":"<p>Used internally by the mixins pre-processor</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-mixin","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":162,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"onExtended","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-onExtended","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Override members of this class. ...","method_calls":["addConfig","addInheritableStatics"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":452,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this class</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"override","doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","chainable":true,"inheritdoc":null,"id":"static-method-override","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n","version":"4.1.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"triggerExtended","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-triggerExtended","fires":null,"linenr":null},{"autodetected":{},"short_doc":"Fired when a Model instance has been added to this Store. ...","since":"1.1.0","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"<p>The store</p>\n","name":"store","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Ext.data.Model[]","tagname":"params","doc":"<p>The Model instances that were added</p>\n","name":"records","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"type":"Number","tagname":"params","doc":"<p>The index at which the instances were inserted</p>\n","name":"index","html_type":"Number"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":239,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"add","doc":"<p>Fired when a Model instance has been added to this Store.</p>\n","id":"event-add"},{"type":null,"autodetected":{},"short_doc":"Fires when a new child node is appended ...","owner":"Ext.data.TreeStore","params":[{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>This node</p>\n\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>The newly appended node</p>\n\n","name":"node","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Number","tagname":"params","doc":"<p>The index of the newly appended node</p>\n\n","name":"index","html_type":"Number"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":154,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":null,"name":"append","doc":"<p>Fires when a new child node is appended</p>\n","throws":null,"inheritdoc":null,"id":"event-append"},{"type":null,"autodetected":{},"short_doc":"Fires before a new child is appended, return false to cancel the append. ...","owner":"Ext.data.TreeStore","params":[{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>This node</p>\n\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>The child node to be appended</p>\n\n","name":"node","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":170,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":null,"name":"beforeappend","doc":"<p>Fires before a new child is appended, return false to cancel the append.</p>\n","throws":null,"inheritdoc":null,"id":"event-beforeappend"},{"type":null,"autodetected":{},"short_doc":"Fires before this node is collapsed. ...","owner":"Ext.data.TreeStore","params":[{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>The collapsing node</p>\n\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":198,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":null,"name":"beforecollapse","doc":"<p>Fires before this node is collapsed.</p>\n","throws":null,"inheritdoc":null,"id":"event-beforecollapse"},{"type":null,"autodetected":{},"short_doc":"Fires before this node is expanded. ...","owner":"Ext.data.TreeStore","params":[{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>The expanding node</p>\n\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":194,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":null,"name":"beforeexpand","doc":"<p>Fires before this node is expanded.</p>\n","throws":null,"inheritdoc":null,"id":"event-beforeexpand"},{"type":null,"autodetected":{},"short_doc":"Fires before a new child is inserted, return false to cancel the insert. ...","owner":"Ext.data.TreeStore","params":[{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>This node</p>\n\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>The child node to be inserted</p>\n\n","name":"node","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>The child node the node is being inserted before</p>\n\n","name":"refNode","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":182,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":null,"name":"beforeinsert","doc":"<p>Fires before a new child is inserted, return false to cancel the insert.</p>\n","throws":null,"inheritdoc":null,"id":"event-beforeinsert"},{"autodetected":{},"short_doc":"Fires before a request is made for a new data object. ...","since":"1.1.0","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"<p>This Store</p>\n","name":"store","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Ext.data.Operation","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a> object that will be passed to the Proxy to\nload the Store</p>\n","name":"operation","html_type":"<a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":302,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"beforeload","doc":"<p>Fires before a request is made for a new data object. If the beforeload handler returns false the load\naction will be canceled.</p>\n","id":"event-beforeload"},{"type":null,"autodetected":{},"short_doc":"Fires before this node is moved to a new location in the tree. ...","owner":"Ext.data.TreeStore","params":[{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>This node</p>\n\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>The parent of this node</p>\n\n","name":"oldParent","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>The new parent this node is moving to</p>\n\n","name":"newParent","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Number","tagname":"params","doc":"<p>The index it is being moved to</p>\n\n","name":"index","html_type":"Number"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":178,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":null,"name":"beforemove","doc":"<p>Fires before this node is moved to a new location in the tree. Return false to cancel the move.</p>\n","throws":null,"inheritdoc":null,"id":"event-beforemove"},{"type":null,"autodetected":{},"short_doc":"Fires before a child is removed, return false to cancel the remove. ...","owner":"Ext.data.TreeStore","params":[{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>This node</p>\n\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>The child node to be removed</p>\n\n","name":"node","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Boolean","tagname":"params","doc":"<p><code>true</code> if the child node is being removed so it can be moved to another position in the tree.\n(a side effect of calling <a href=\"#!/api/Ext.data.NodeInterface-method-appendChild\" rel=\"Ext.data.NodeInterface-method-appendChild\" class=\"docClass\">appendChild</a> or\n<a href=\"#!/api/Ext.data.NodeInterface-method-insertBefore\" rel=\"Ext.data.NodeInterface-method-insertBefore\" class=\"docClass\">insertBefore</a> with a node that already has a parentNode)</p>\n\n","name":"isMove","html_type":"Boolean"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":174,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":null,"name":"beforeremove","doc":"<p>Fires before a child is removed, return false to cancel the remove.</p>\n","throws":null,"inheritdoc":null,"id":"event-beforeremove"},{"autodetected":{},"short_doc":"Fired before a call to sync is executed. ...","owner":"Ext.data.AbstractStore","params":[{"type":"Object","tagname":"params","doc":"<p>Hash of all records to be synchronized, broken down into create, update and destroy</p>\n","name":"options","html_type":"Object"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":330,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"beforesync","doc":"<p>Fired before a call to <a href=\"#!/api/Ext.data.AbstractStore-method-sync\" rel=\"Ext.data.AbstractStore-method-sync\" class=\"docClass\">sync</a> is executed. Return false from any listener to cancel the sync</p>\n","id":"event-beforesync"},{"autodetected":{},"short_doc":"Fired at the end of the remove method when all records in the passed array have been removed. ...","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"<p>The Store object</p>\n","name":"store","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Ext.data.Model[]","tagname":"params","doc":"<p>The array of records that were removed (In the order they appear in the Store)</p>\n","name":"records","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"type":"Number[]","tagname":"params","doc":"<p>The indexes of the records that were removed</p>\n","name":"indexes","html_type":"Number[]"},{"type":"Boolean","tagname":"params","doc":"<p><code>true</code> if the child nodes are being removed so they can be moved to another position in this Store.</p>\n","name":"isMove","html_type":"Boolean"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":261,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"bulkremove","doc":"<p>Fired at the <em>end</em> of the <a href=\"#!/api/Ext.data.Store-method-remove\" rel=\"Ext.data.Store-method-remove\" class=\"docClass\">remove</a> method when all records in the passed array have been removed.</p>\n\n<p>If many records may be removed in one go, then it is more efficient to listen for this event\nand perform any processing for a bulk remove than to listen for many <a href=\"#!/api/Ext.data.AbstractStore-event-remove\" rel=\"Ext.data.AbstractStore-event-remove\" class=\"docClass\">remove</a> events.</p>\n","id":"event-bulkremove"},{"autodetected":{},"short_doc":"Fired after the removeAll method is called. ...","since":"1.1.0","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":335,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"clear","doc":"<p>Fired after the <a href=\"#!/api/Ext.data.AbstractStore-method-removeAll\" rel=\"Ext.data.AbstractStore-method-removeAll\" class=\"docClass\">removeAll</a> method is called.</p>\n","id":"event-clear"},{"type":null,"autodetected":{},"short_doc":"Fires when this node is collapsed. ...","owner":"Ext.data.TreeStore","params":[{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>The collapsing node</p>\n\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":190,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":null,"name":"collapse","doc":"<p>Fires when this node is collapsed.</p>\n","throws":null,"inheritdoc":null,"id":"event-collapse"},{"autodetected":{},"short_doc":"Fires whenever the records in the Store have changed in some way - this could include adding or removing\nrecords, or ...","since":"1.1.0","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"<p>The data store</p>\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":287,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"datachanged","doc":"<p>Fires whenever the records in the Store have changed in some way - this could include adding or removing\nrecords, or updating the data in existing records</p>\n","id":"event-datachanged"},{"type":null,"autodetected":{},"short_doc":"Fires when this node is expanded. ...","owner":"Ext.data.TreeStore","params":[{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>The expanding node</p>\n\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":186,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":null,"name":"expand","doc":"<p>Fires when this node is expanded.</p>\n","throws":null,"inheritdoc":null,"id":"event-expand"},{"type":null,"autodetected":{},"short_doc":"Fires when a new child node is inserted. ...","owner":"Ext.data.TreeStore","params":[{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>This node</p>\n\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>The child node inserted</p>\n\n","name":"node","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>The child node the node was inserted before</p>\n\n","name":"refNode","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":166,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":null,"name":"insert","doc":"<p>Fires when a new child node is inserted.</p>\n","throws":null,"inheritdoc":null,"id":"event-insert"},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-event-load\" rel=\"Ext.data.AbstractStore-event-load\" class=\"docClass\">Ext.data.AbstractStore.load</a>","name":"load"}],"autodetected":{},"short_doc":"Fires whenever the store reads data from a remote data source. ...","owner":"Ext.data.TreeStore","params":[{"type":"Ext.data.TreeStore","tagname":"params","doc":"\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">Ext.data.TreeStore</a>"},{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>The node that was loaded.</p>\n\n","name":"node","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Ext.data.Model[]","tagname":"params","doc":"<p>An array of records.</p>\n\n","name":"records","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"type":"Boolean","tagname":"params","doc":"<p>True if the operation was successful.</p>\n\n","name":"successful","html_type":"Boolean"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":676,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"name":"load","doc":"<p>Fires whenever the store reads data from a remote data source.</p>\n","id":"event-load"},{"autodetected":{},"short_doc":"Fires when this store's underlying reader (available via the proxy) provides new metadata. ...","since":"1.1.0","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Object","tagname":"params","doc":"<p>The JSON metadata</p>\n","name":"meta","html_type":"Object"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":341,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"metachange","doc":"<p>Fires when this store's underlying reader (available via the proxy) provides new metadata.\nMetadata usually consists of new field definitions, but can include any configuration data\nrequired by an application, and can be processed as needed in the event handler.\nThis event is currently only fired for JsonReaders.</p>\n","id":"event-metachange"},{"type":null,"autodetected":{},"short_doc":"Fires when this node is moved to a new location in the tree ...","owner":"Ext.data.TreeStore","params":[{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>This node</p>\n\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>The old parent of this node</p>\n\n","name":"oldParent","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>The new parent of this node</p>\n\n","name":"newParent","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Number","tagname":"params","doc":"<p>The index it was moved to</p>\n\n","name":"index","html_type":"Number"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":162,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":null,"name":"move","doc":"<p>Fires when this node is moved to a new location in the tree</p>\n","throws":null,"inheritdoc":null,"id":"event-move"},{"autodetected":{},"short_doc":"Fires when the data cache has changed in a bulk manner (e.g., it has been sorted, filtered, etc.) and a\nwidget that i...","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"<p>The data store</p>\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":295,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"refresh","doc":"<p>Fires when the data cache has changed in a bulk manner (e.g., it has been sorted, filtered, etc.) and a\nwidget that is using this Store as a Record cache should refresh its view.</p>\n","id":"event-refresh"},{"type":null,"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-event-remove\" rel=\"Ext.data.AbstractStore-event-remove\" class=\"docClass\">Ext.data.AbstractStore.remove</a>","name":"remove"}],"autodetected":{},"short_doc":"Fires when a child node is removed ...","owner":"Ext.data.TreeStore","params":[{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>This node</p>\n\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>The removed node</p>\n\n","name":"node","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Boolean","tagname":"params","doc":"<p><code>true</code> if the child node is being removed so it can be moved to another position in the tree.\n(a side effect of calling <a href=\"#!/api/Ext.data.NodeInterface-method-appendChild\" rel=\"Ext.data.NodeInterface-method-appendChild\" class=\"docClass\">appendChild</a> or\n<a href=\"#!/api/Ext.data.NodeInterface-method-insertBefore\" rel=\"Ext.data.NodeInterface-method-insertBefore\" class=\"docClass\">insertBefore</a> with a node that already has a parentNode)</p>\n\n","name":"isMove","html_type":"Boolean"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":158,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":null,"name":"remove","doc":"<p>Fires when a child node is removed</p>\n","throws":null,"inheritdoc":null,"id":"event-remove"},{"type":null,"autodetected":{},"short_doc":"Fires when this node's childNodes are sorted. ...","owner":"Ext.data.TreeStore","params":[{"type":"Ext.data.NodeInterface","tagname":"params","doc":"<p>This node.</p>\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>"},{"type":"Ext.data.NodeInterface[]","tagname":"params","doc":"<p>The childNodes of this node.</p>\n","name":"childNodes","html_type":"<a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>[]"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":202,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/TreeStore.js"}],"return":null,"name":"sort","doc":"<p>Fires when this node's childNodes are sorted.</p>\n","throws":null,"inheritdoc":null,"id":"event-sort"},{"autodetected":{},"short_doc":"Fires when a Model instance has been updated. ...","since":"1.1.0","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Ext.data.Model","tagname":"params","doc":"<p>The Model instance that was updated</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"type":"String","tagname":"params","doc":"<p>The update operation being performed. Value may be one of:</p>\n\n<pre><code><a href=\"#!/api/Ext.data.Model-static-property-EDIT\" rel=\"Ext.data.Model-static-property-EDIT\" class=\"docClass\">Ext.data.Model.EDIT</a>\n<a href=\"#!/api/Ext.data.Model-static-property-REJECT\" rel=\"Ext.data.Model-static-property-REJECT\" class=\"docClass\">Ext.data.Model.REJECT</a>\n<a href=\"#!/api/Ext.data.Model-static-property-COMMIT\" rel=\"Ext.data.Model-static-property-COMMIT\" class=\"docClass\">Ext.data.Model.COMMIT</a>\n</code></pre>\n","name":"operation","html_type":"String"},{"type":"String[]","tagname":"params","doc":"<p>Array of field names changed during edit.</p>\n","name":"modifiedFieldNames","html_type":"String[]"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":273,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"update","doc":"<p>Fires when a Model instance has been updated.</p>\n","id":"event-update"},{"autodetected":{},"short_doc":"Fires whenever a successful write has been made via the configured Proxy ...","since":"3.4.0","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"<p>This Store</p>\n","name":"store","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Ext.data.Operation","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Operation</a> object that was used in\nthe write</p>\n","name":"operation","html_type":"<a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":321,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"write","doc":"<p>Fires whenever a successful write has been made via the configured <a href=\"#!/api/Ext.data.AbstractStore-cfg-proxy\" rel=\"Ext.data.AbstractStore-cfg-proxy\" class=\"docClass\">Proxy</a></p>\n","id":"event-write"}],"alternateClassNames":[],"code_type":"ext_define","mixins":[],"doc":"<p>The TreeStore is a store implementation that is backed by by an <a href=\"#!/api/Ext.data.Tree\" rel=\"Ext.data.Tree\" class=\"docClass\">Ext.data.Tree</a>.\nIt provides convenience methods for loading nodes, as well as the ability to use\nthe hierarchical tree structure combined with a store. This class is generally used\nin conjunction with <a href=\"#!/api/Ext.tree.Panel\" rel=\"Ext.tree.Panel\" class=\"docClass\">Ext.tree.Panel</a>. This class also relays many events from\nthe Tree for convenience.</p>\n\n<h1>Using Models</h1>\n\n<p>If no Model is specified, an implicit model will be created that implements <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a>.\nThe standard Tree fields will also be copied onto the Model for maintaining their state. These fields are listed\nin the <a href=\"#!/api/Ext.data.NodeInterface\" rel=\"Ext.data.NodeInterface\" class=\"docClass\">Ext.data.NodeInterface</a> documentation.</p>\n\n<h1>Reading Nested Data</h1>\n\n<p>For the tree to read nested data, the <a href=\"#!/api/Ext.data.reader.Reader\" rel=\"Ext.data.reader.Reader\" class=\"docClass\">Ext.data.reader.Reader</a> must be configured with a root property,\nso the reader can find nested data for each node (if a root is not specified, it will default to\n'children'). This will tell the tree to look for any nested tree nodes by the same keyword, i.e., 'children'.\nIf a root is specified in the config make sure that any nested nodes with children have the same name.\nNote that setting <a href=\"#!/api/Ext.data.TreeStore-cfg-defaultRootProperty\" rel=\"Ext.data.TreeStore-cfg-defaultRootProperty\" class=\"docClass\">defaultRootProperty</a> accomplishes the same thing.</p>\n","name":"Ext.data.TreeStore","id":"class-Ext.data.TreeStore"}