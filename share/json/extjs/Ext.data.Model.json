{"autodetected":{"aliases":true,"requires":true,"uses":true,"extends":true,"members":true,"alternateClassNames":true,"code_type":true,"mixins":true},"short_doc":"A Model represents some object that your application manages. ...","aliases":{},"requires":["Ext.ModelManager","Ext.data.IdGenerator","Ext.data.Field","Ext.data.Errors","Ext.data.Operation","Ext.data.validations","Ext.util.MixedCollection"],"files":[{"linenr":21,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"tagname":"class","uses":[],"extends":"Ext.Base","members":[{"autodetected":{},"type":"Object[]","default":null,"owner":"Ext.data.Model","tagname":"cfg","files":[{"linenr":904,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"name":"associations","properties":null,"doc":"<p>An array of <a href=\"#!/api/Ext.data.association.Association\" rel=\"Ext.data.association.Association\" class=\"docClass\">associations</a> for this model.</p>\n","id":"cfg-associations","html_type":"Object[]"},{"autodetected":{},"type":"String/Object/String[]/Object[]","default":null,"owner":"Ext.data.Model","tagname":"cfg","files":[{"linenr":912,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"name":"belongsTo","properties":null,"doc":"<p>One or more <a href=\"#!/api/Ext.data.association.BelongsTo\" rel=\"Ext.data.association.BelongsTo\" class=\"docClass\">BelongsTo associations</a> for this model.</p>\n","id":"cfg-belongsTo","html_type":"String/Object/String[]/Object[]"},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":"The name of a property that is used for submitting this Model's unique client-side identifier\nto the server when mult...","default":null,"owner":"Ext.data.Model","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":860,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"clientIdProperty","properties":null,"doc":"<p>The name of a property that is used for submitting this Model's unique client-side identifier\nto the server when multiple phantom records are saved as part of the same <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Operation</a>.\nIn such a case, the server response should include the client id for each record\nso that the server response data can be used to update the client-side records if necessary.\nThis property cannot have the same name as any of this Model's fields.</p>\n","inheritdoc":null,"id":"cfg-clientIdProperty","html_type":"String","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":"The string type of the default Model Proxy. ...","default":"'ajax'","owner":"Ext.data.Model","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":870,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"defaultProxyType","properties":null,"doc":"<p>The string type of the default Model Proxy. Defaults to 'ajax'.</p>\n","inheritdoc":null,"id":"cfg-defaultProxyType","html_type":"String","evented":null,"linenr":null},{"autodetected":{},"type":"Object[]/String[]","short_doc":"The fields for this model. ...","default":null,"owner":"Ext.data.Model","tagname":"cfg","files":[{"linenr":880,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"name":"fields","properties":null,"doc":"<p>The fields for this model. This is an Array of <strong><a href=\"#!/api/Ext.data.Field\" rel=\"Ext.data.Field\" class=\"docClass\">Field</a></strong> definition objects. A Field\ndefinition may simply be the <em>name</em> of the Field, but a Field encapsulates <a href=\"#!/api/Ext.data.Field-cfg-type\" rel=\"Ext.data.Field-cfg-type\" class=\"docClass\">data type</a>,\n<a href=\"#!/api/Ext.data.Field-cfg-convert\" rel=\"Ext.data.Field-cfg-convert\" class=\"docClass\">custom conversion</a> of raw data, and a <a href=\"#!/api/Ext.data.Field-cfg-mapping\" rel=\"Ext.data.Field-cfg-mapping\" class=\"docClass\">mapping</a>\nproperty to specify by name of index, how to extract a field's value from a raw data object, so it is best practice\nto specify a full set of <a href=\"#!/api/Ext.data.Field\" rel=\"Ext.data.Field\" class=\"docClass\">Field</a> config objects.</p>\n","id":"cfg-fields","html_type":"Object[]/String[]"},{"autodetected":{},"type":"String/Object/String[]/Object[]","default":null,"owner":"Ext.data.Model","tagname":"cfg","files":[{"linenr":908,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"name":"hasMany","properties":null,"doc":"<p>One or more <a href=\"#!/api/Ext.data.association.HasMany\" rel=\"Ext.data.association.HasMany\" class=\"docClass\">HasMany associations</a> for this model.</p>\n","id":"cfg-hasMany","html_type":"String/Object/String[]/Object[]"},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String/Object/Ext.data.Field","short_doc":"The name of the field treated as this Model's unique id. ...","default":"'id'","owner":"Ext.data.Model","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":844,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"idProperty","properties":null,"doc":"<p>The name of the field treated as this Model's unique id. Defaults to 'id'.</p>\n\n<p>This may also be specified as a Field config object. This means that the identifying field can be calculated\nusing a <a href=\"#!/api/Ext.data.Field-cfg-convert\" rel=\"Ext.data.Field-cfg-convert\" class=\"docClass\">convert</a> function which might aggregate several values from the\nraw data object to use as an identifier.</p>\n\n<p>The resulting <a href=\"#!/api/Ext.data.Field\" rel=\"Ext.data.Field\" class=\"docClass\">Field</a> is added to the Model's field collection unless there is already\na configured field with a mapping that reads the same property.</p>\n\n<p>If defining an <strong>abstract</strong> base Model class, the <code>idProperty</code> may be configured as <code>null</code> which will mean that\nno identifying field will be generated.</p>\n","inheritdoc":null,"id":"cfg-idProperty","html_type":"String/Object/<a href=\"#!/api/Ext.data.Field\" rel=\"Ext.data.Field\" class=\"docClass\">Ext.data.Field</a>","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String/Object","short_doc":"The id generator to use for this model. ...","default":null,"owner":"Ext.data.Model","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":732,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"idgen","properties":null,"doc":"<p>The id generator to use for this model. The default id generator does not generate\nvalues for the <a href=\"#!/api/Ext.data.Model-cfg-idProperty\" rel=\"Ext.data.Model-cfg-idProperty\" class=\"docClass\">idProperty</a>.</p>\n\n<p>This can be overridden at the model level to provide a custom generator for a model.\nThe simplest form of this would be:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.data.MyModel', {\n     extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n     requires: ['<a href=\"#!/api/Ext.data.SequentialIdGenerator\" rel=\"Ext.data.SequentialIdGenerator\" class=\"docClass\">Ext.data.SequentialIdGenerator</a>'],\n     idgen: 'sequential',\n     ...\n });\n</code></pre>\n\n<p>The above would generate <a href=\"#!/api/Ext.data.SequentialIdGenerator\" rel=\"Ext.data.SequentialIdGenerator\" class=\"docClass\">sequential</a> id's such\nas 1, 2, 3 etc..</p>\n\n<p>Another useful id generator is <a href=\"#!/api/Ext.data.UuidGenerator\" rel=\"Ext.data.UuidGenerator\" class=\"docClass\">Ext.data.UuidGenerator</a>:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.data.MyModel', {\n     extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n     requires: ['<a href=\"#!/api/Ext.data.UuidGenerator\" rel=\"Ext.data.UuidGenerator\" class=\"docClass\">Ext.data.UuidGenerator</a>'],\n     idgen: 'uuid',\n     ...\n });\n</code></pre>\n\n<p>An id generation can also be further configured:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.data.MyModel', {\n     extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n     idgen: {\n         type: 'sequential',\n         seed: 1000,\n         prefix: 'ID_'\n     }\n });\n</code></pre>\n\n<p>The above would generate id's such as ID_1000, ID_1001, ID_1002 etc..</p>\n\n<p>If multiple models share an id space, a single generator can be shared:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.data.MyModelX', {\n     extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n     idgen: {\n         type: 'sequential',\n         id: 'xy'\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.data.MyModelY', {\n     extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n     idgen: {\n         type: 'sequential',\n         id: 'xy'\n     }\n });\n</code></pre>\n\n<p>For more complex, shared id generators, a custom generator is the best approach.\nSee <a href=\"#!/api/Ext.data.IdGenerator\" rel=\"Ext.data.IdGenerator\" class=\"docClass\">Ext.data.IdGenerator</a> for details on creating custom id generators.</p>\n","inheritdoc":null,"id":"cfg-idgen","html_type":"String/Object","evented":null,"linenr":null},{"autodetected":{},"type":"Object","short_doc":"A config object containing one or more event handlers to be added to this object during initialization. ...","default":null,"owner":"Ext.util.Observable","tagname":"cfg","files":[{"linenr":197,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"name":"listeners","properties":null,"doc":"<p>A config object containing one or more event handlers to be added to this object during initialization. This\nshould be a valid listeners config object as specified in the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching multiple\nhandlers at once.</p>\n\n<p><strong>DOM events from Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></strong></p>\n\n<p>While <em>some</em> Ext JS Component classes export selected DOM events (e.g. \"click\", \"mouseover\" etc), this is usually\nonly done when extra value can be added. For example the <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>'s <strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong> event passing the node clicked on. To access DOM events directly from a\nchild element of a Component, we need to specify the <code>element</code> option to identify the Component property to add a\nDOM listener to:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n","id":"cfg-listeners","html_type":"Object"},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":"The name of the property on this Persistable object that its data is saved to. ...","default":"'data'","owner":"Ext.data.Model","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":821,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"persistenceProperty","properties":null,"doc":"<p>The name of the property on this Persistable object that its data is saved to. Defaults to 'data'\n(i.e: all persistable data resides in <code>this.data</code>.)</p>\n","inheritdoc":null,"id":"cfg-persistenceProperty","html_type":"String","deprecated":{"text":"<p>This config is deprecated. In future this will no longer be configurable and will be data.</p>\n"},"evented":null,"linenr":null},{"autodetected":{},"type":"String/Object/Ext.data.proxy.Proxy","default":null,"owner":"Ext.data.Model","tagname":"cfg","files":[{"linenr":916,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"name":"proxy","properties":null,"doc":"<p>The <a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">proxy</a> to use for this model.</p>\n","id":"cfg-proxy","html_type":"String/Object/<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a>"},{"autodetected":{},"type":"Object[]","default":null,"owner":"Ext.data.Model","tagname":"cfg","files":[{"linenr":898,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"name":"validations","properties":null,"doc":"<p>An array of <a href=\"#!/api/Ext.data.validations\" rel=\"Ext.data.validations\" class=\"docClass\">validations</a> for this model.</p>\n","id":"cfg-validations","html_type":"Object[]"},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'Ext.Base'","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":763,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"$className","doc":"\n","inheritdoc":null,"id":"property-S-className","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"This object is used whenever the set() method is called and given a string as the\nfirst argument. ...","default":"{}","owner":"Ext.data.Model","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1089,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":true,"static":null,"name":"_singleProp","doc":"<p>This object is used whenever the set() method is called and given a string as the\nfirst argument. This approach saves memory (and GC costs) since we could be called\na lot.</p>\n","inheritdoc":null,"id":"property-_singleProp","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":772,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configMap","doc":"\n","inheritdoc":null,"id":"property-configMap","html_type":"Object","linenr":null},{"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"True if this Record has been modified. ...","default":"false","owner":"Ext.data.Model","inheritable":null,"readonly":true,"tagname":"property","files":[{"linenr":814,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"dirty","properties":null,"doc":"<p>True if this Record has been modified.</p>\n","inheritdoc":null,"id":"property-dirty","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"Internal flag used to track whether or not the model instance is currently being edited. ...","default":"false","owner":"Ext.data.Model","inheritable":null,"readonly":true,"tagname":"property","files":[{"linenr":807,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"editing","properties":null,"doc":"<p>Internal flag used to track whether or not the model instance is currently being edited.</p>\n","inheritdoc":null,"id":"property-editing","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":"Used as a dummy source array when constructor is called with no args ...","default":"[]","owner":"Ext.data.Model","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":876,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":true,"static":null,"name":"emptyData","doc":"<p>Used as a dummy source array when constructor is called with no args</p>\n","inheritdoc":null,"id":"property-emptyData","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"false","owner":"Ext.data.Model","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":829,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":true,"static":null,"name":"evented","doc":"\n","inheritdoc":null,"id":"property-evented","html_type":"Boolean","linenr":829},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"Initial suspended call count. ...","default":"0","owner":"Ext.util.Observable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":237,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"eventsSuspended","doc":"<p>Initial suspended call count. Incremented when <a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a> is called, decremented when <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> is called.</p>\n","inheritdoc":null,"id":"property-eventsSuspended","html_type":"Number","linenr":null},{"autodetected":{},"type":"Ext.util.MixedCollection","short_doc":"A Collection of the fields defined for this Model (including fields defined in superclasses)\n\nThis is a collection of...","default":null,"owner":"Ext.data.Model","tagname":"property","files":[{"linenr":888,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"name":"fields","properties":null,"doc":"<p>A <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Collection</a> of the fields defined for this Model (including fields defined in superclasses)</p>\n\n<p>This is a collection of <a href=\"#!/api/Ext.data.Field\" rel=\"Ext.data.Field\" class=\"docClass\">Ext.data.Field</a> instances, each of which encapsulates information that the field was configured with.\nBy default, you can specify a field as simply a String, representing the <em>name</em> of the field, but a Field encapsulates\n<a href=\"#!/api/Ext.data.Field-cfg-type\" rel=\"Ext.data.Field-cfg-type\" class=\"docClass\">data type</a>, <a href=\"#!/api/Ext.data.Field-cfg-convert\" rel=\"Ext.data.Field-cfg-convert\" class=\"docClass\">custom conversion</a> of raw data, and a <a href=\"#!/api/Ext.data.Field-cfg-mapping\" rel=\"Ext.data.Field-cfg-mapping\" class=\"docClass\">mapping</a>\nproperty to specify by name of index, how to extract a field's value from a raw data object.</p>\n","id":"property-fields","html_type":"<a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>"},{"autodetected":{},"type":"Object","short_doc":"This object holds a key for any event that has a listener. ...","default":null,"owner":"Ext.util.Observable","readonly":true,"tagname":"property","files":[{"linenr":243,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"name":"hasListeners","properties":null,"doc":"<p>This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class (via <a href=\"#!/api/Ext.util.Observable-static-method-observe\" rel=\"Ext.util.Observable-static-method-observe\" class=\"docClass\">observe</a>) or\non the <a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.</p>\n\n<p>The intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n","id":"property-hasListeners","html_type":"Object"},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":769,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigList","doc":"\n","inheritdoc":null,"id":"property-initConfigList","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":775,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigMap","doc":"\n","inheritdoc":null,"id":"property-initConfigMap","html_type":"Object","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Number/String","default":null,"owner":"Ext.data.Model","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1064,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":true,"static":null,"name":"internalId","properties":null,"doc":"<p>An internal unique ID for each Model instance, used to identify Models that don't have an ID yet</p>\n","inheritdoc":null,"id":"property-internalId","html_type":"Number/String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"isInstance","doc":"\n","inheritdoc":null,"id":"property-isInstance","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"true in this class to identify an object as an instantiated Model, or subclass thereof. ...","default":"true","owner":"Ext.data.Model","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":831,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"isModel","properties":null,"doc":"<p><code>true</code> in this class to identify an object as an instantiated Model, or subclass thereof.</p>\n","inheritdoc":null,"id":"property-isModel","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"true in this class to identify an object as an instantiated Observable, or subclass thereof. ...","default":"true","owner":"Ext.util.Observable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":231,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"isObservable","properties":null,"doc":"<p><code>true</code> in this class to identify an object as an instantiated Observable, or subclass thereof.</p>\n","inheritdoc":null,"id":"property-isObservable","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"Key: value pairs of all fields whose values have changed ...","default":"{}","owner":"Ext.data.Model","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":961,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"modified","properties":null,"doc":"<p>Key: value pairs of all fields whose values have changed</p>\n","inheritdoc":null,"id":"property-modified","html_type":"Object","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"True when the record does not yet exist in a server-side database (see setDirty). ...","default":"false","owner":"Ext.data.Model","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":837,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"phantom","properties":null,"doc":"<p>True when the record does not yet exist in a server-side database (see <a href=\"#!/api/Ext.data.Model-method-setDirty\" rel=\"Ext.data.Model-method-setDirty\" class=\"docClass\">setDirty</a>).\nAny record which has a real database pk set as its id property is NOT a phantom -- it's real.</p>\n","inheritdoc":null,"id":"property-phantom","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.data.Model","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":956,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"raw","properties":null,"doc":"<p>The raw data used to create this model if created via a reader.</p>\n","inheritdoc":null,"id":"property-raw","html_type":"Object","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.Class","short_doc":"Get the reference to the current class from which this object was instantiated. ...","default":null,"owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1045,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"private":null,"static":null,"name":"self","properties":null,"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","inheritdoc":null,"id":"property-self","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.data.Store","short_doc":"The Store to which this instance belongs. ...","default":null,"owner":"Ext.data.Model","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1748,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"store","properties":null,"doc":"<p>The <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Store</a> to which this instance belongs. NOTE: If this\ninstance is bound to multiple stores, this property will reference only the\nfirst. To examine all the stores, use the <a href=\"#!/api/Ext.data.Model-property-stores\" rel=\"Ext.data.Model-property-stores\" class=\"docClass\">stores</a> property instead.</p>\n","inheritdoc":null,"id":"property-store","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.data.Store[]","short_doc":"The Stores to which this instance is bound. ...","default":"[]","owner":"Ext.data.Model","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1040,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"stores","properties":null,"doc":"<p>The <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Stores</a> to which this instance is bound.</p>\n","inheritdoc":null,"id":"property-stores","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>[]","linenr":null},{"autodetected":{"type":true,"default":true,"readonly":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":true,"readonly":null,"tagname":"property","files":[{"linenr":133,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"$onExtended","doc":"\n","inheritdoc":null,"id":"static-property-S-onExtended","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":" ...","default":"1","owner":"Ext.data.Model","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":686,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"static":true,"private":true,"name":"AUTO_ID","properties":null,"doc":"\n","inheritdoc":null,"id":"static-property-AUTO_ID","html_type":"Number","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":"The update operation of type 'commit'. ...","default":"'commit'","owner":"Ext.data.Model","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":704,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"static":true,"private":null,"name":"COMMIT","properties":null,"doc":"<p>The update operation of type 'commit'. Used by <a href=\"#!/api/Ext.data.Store-event-update\" rel=\"Ext.data.Store-event-update\" class=\"docClass\">Store.update</a> event.</p>\n","inheritdoc":null,"id":"static-property-COMMIT","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":"The update operation of type 'edit'. ...","default":"'edit'","owner":"Ext.data.Model","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":692,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"static":true,"private":null,"name":"EDIT","properties":null,"doc":"<p>The update operation of type 'edit'. Used by <a href=\"#!/api/Ext.data.Store-event-update\" rel=\"Ext.data.Store-event-update\" class=\"docClass\">Store.update</a> event.</p>\n","inheritdoc":null,"id":"static-property-EDIT","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'ext-record'","owner":"Ext.data.Model","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":680,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"static":true,"private":true,"name":"PREFIX","properties":null,"doc":"\n","inheritdoc":null,"id":"static-property-PREFIX","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":"The update operation of type 'reject'. ...","default":"'reject'","owner":"Ext.data.Model","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":698,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"static":true,"private":null,"name":"REJECT","properties":null,"doc":"<p>The update operation of type 'reject'. Used by <a href=\"#!/api/Ext.data.Store-event-update\" rel=\"Ext.data.Store-event-update\" class=\"docClass\">Store.update</a> event.</p>\n","inheritdoc":null,"id":"static-property-REJECT","html_type":"String","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates new Model instance. ...","method_calls":["init","setId"],"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>An object containing keys corresponding to this model's fields, and their associated values</p>\n","name":"data","html_type":"Object"}],"tagname":"method","files":[{"linenr":929,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Ext.data.Model","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"private":null,"static":null,"name":"constructor","doc":"<p>Creates new Model instance.</p>\n","chainable":false,"inheritdoc":null,"id":"method-constructor","fires":["<a href=\"#!/api/Ext.data.Model-event-idchanged\" rel=\"Ext.data.Model-event-idchanged\" class=\"docClass\">idchanged</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds the specified events to the list of events which this Observable may fire. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Object/String...","tagname":"params","doc":"<p>Either an object with event names as properties with\na value of <code>true</code>. For example:</p>\n\n<pre><code>this.addEvents({\n    storeloaded: true,\n    storecleared: true\n});\n</code></pre>\n\n<p>Or any number of event names as separate parameters. For example:</p>\n\n<pre><code>this.addEvents('storeloaded', 'storecleared');\n</code></pre>\n","name":"eventNames","html_type":"Object/String..."}],"tagname":"method","files":[{"linenr":800,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"addEvents","doc":"<p>Adds the specified events to the list of events which this Observable may fire.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addEvents","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.AbstractComponent","link":"<a href=\"#!/api/Ext.AbstractComponent-method-addListener\" rel=\"Ext.AbstractComponent-method-addListener\" class=\"docClass\">Ext.AbstractComponent.addListener</a>","name":"addListener"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Appends an event handler to this object. ...","method_calls":["addListener"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","name":"eventName","html_type":"String/Object"},{"type":"Function","tagname":"params","doc":"<p>The method the event invokes, or <em>if <code>scope</code> is specified, the </em>name* of the method within\nthe specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> plus the <code>options</code> parameter described below.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","name":"scope","html_type":"Object"},{"type":"Number","tagname":"params","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n\n","name":"delay","html_type":"Number"},{"type":"Boolean","tagname":"params","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n","name":"single","html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","name":"buffer","html_type":"Number"},{"type":"Ext.util.Observable","tagname":"params","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the event\n  was bubbled up from a child Observable.</p>\n\n","name":"target","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"type":"String","tagname":"params","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an element to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to elements of\n  <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the Component is rendered.\n  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n","name":"element","html_type":"String"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>When specified as <code>true</code>, the function returns A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call.</p>\n\n","name":"destroyable","optional":true,"html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n","name":"priority","optional":true,"html_type":"Number"}],"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> Unlike in ExtJS 3.x, the options object will also be passed as the last\nargument to every event handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":502,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"addListener","doc":"<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"mouseover\", this.onMouseOver, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: this.onCellClick,\n    mouseover: this.onMouseOver,\n    mouseout: this.onMouseOut,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: this.onCellClick, scope: this, single: true},\n    mouseover: {fn: panel.onMouseOver, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used. Note that\n<code>scope</code> MUST be specified to use this option:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: 'onCellClick', scope: this, single: true},\n    mouseover: {fn: 'onMouseOver', scope: panel}\n});\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-addListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds listeners to any Observable object (or Ext.Element) which are automatically removed when this Component is\ndestr...","method_calls":["addManagedListener"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":295,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"addManagedListener","doc":"<p>Adds listeners to any Observable object (or <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>) which are automatically removed when this Component is\ndestroyed.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addManagedListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"If this Model instance has been joined to a store, the store's\nafterCommit method is called, ...","method_calls":["callStore"],"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"String[]","tagname":"params","doc":"<p>Array of field names changed by syncing this field with the server.</p>\n","name":"modifiedFieldNames","optional":true,"html_type":"String[]"}],"tagname":"method","files":[{"linenr":1785,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":true,"static":null,"name":"afterCommit","doc":"<p>If this Model instance has been <a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">joined</a> to a <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">store</a>, the store's\nafterCommit method is called,</p>\n","chainable":false,"inheritdoc":null,"id":"method-afterCommit","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"If this Model instance has been joined to a store, the store's\nafterEdit method is called. ...","method_calls":["callStore"],"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"String[]","tagname":"params","doc":"<p>Array of field names changed during edit.</p>\n","name":"modifiedFieldNames","optional":true,"html_type":"String[]"}],"tagname":"method","files":[{"linenr":1766,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":true,"static":null,"name":"afterEdit","doc":"<p>If this Model instance has been <a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">joined</a> to a <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">store</a>, the store's\nafterEdit method is called.</p>\n","chainable":false,"inheritdoc":null,"id":"method-afterEdit","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"If this Model instance has been joined to a store, the store's\nafterReject method is called. ...","method_calls":["callStore"],"owner":"Ext.data.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1776,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":true,"static":null,"name":"afterReject","doc":"<p>If this Model instance has been <a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">joined</a> to a <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">store</a>, the store's\nafterReject method is called.</p>\n","chainable":false,"inheritdoc":null,"id":"method-afterReject","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Begins an edit. ...","method_calls":null,"owner":"Ext.data.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1257,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"beginEdit","doc":"<p>Begins an edit. While in edit mode, no events (e.g.. the <code>update</code> event) are relayed to the containing store.\nWhen an edit has begun, it must be followed by either <a href=\"#!/api/Ext.data.Model-method-endEdit\" rel=\"Ext.data.Model-method-endEdit\" class=\"docClass\">endEdit</a> or <a href=\"#!/api/Ext.data.Model-method-cancelEdit\" rel=\"Ext.data.Model-method-cancelEdit\" class=\"docClass\">cancelEdit</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-beginEdit","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":1269,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the overridden method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callOverridden","doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"method-callOverridden","deprecated":{"text":"<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the \"parent\" method of the current method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":846,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the parent method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callParent","doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","chainable":false,"inheritdoc":null,"id":"method-callParent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Helper function used by afterEdit, afterReject and afterCommit. ...","method_calls":null,"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The function to call on the store</p>\n","name":"fn","html_type":"String"}],"tagname":"method","files":[{"linenr":1795,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":true,"static":null,"name":"callStore","doc":"<p>Helper function used by afterEdit, afterReject and afterCommit. Calls the given method on the\n<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">store</a> that this instance has <a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">joined</a>, if any. The store function\nwill always be called with the model instance as its single argument. If this model is joined to\na <a href=\"#!/api/Ext.data.NodeStore\" rel=\"Ext.data.NodeStore\" class=\"docClass\">Ext.data.NodeStore</a>, then this method calls the given method on the NodeStore and the associated <a href=\"#!/api/Ext.data.TreeStore\" rel=\"Ext.data.TreeStore\" class=\"docClass\">Ext.data.TreeStore</a></p>\n","chainable":false,"inheritdoc":null,"id":"method-callStore","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":961,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the superclass method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callSuper","doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","chainable":false,"inheritdoc":null,"id":"method-callSuper","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Cancels all changes made in the current edit operation. ...","method_calls":null,"owner":"Ext.data.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1289,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"cancelEdit","doc":"<p>Cancels all changes made in the current edit operation.</p>\n","chainable":false,"inheritdoc":null,"id":"method-cancelEdit","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Object","name":"o","html_type":"Object"},{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":127,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"captureArgs","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-captureArgs","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["callStore","fireEvent","hasId"],"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Object","name":"oldId","html_type":"Object"},{"type":"Object","name":"newId","html_type":"Object"}],"tagname":"method","files":[{"linenr":1699,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":true,"static":null,"name":"changeId","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-changeId","fires":["<a href=\"#!/api/Ext.data.Model-event-idchanged\" rel=\"Ext.data.Model-event-idchanged\" class=\"docClass\">idchanged</a>"],"linenr":1699},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all listeners for this object including the managed listeners ...","method_calls":["clearManagedListeners"],"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":729,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"clearListeners","doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearListeners","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all managed listeners for this object. ...","method_calls":["removeManagedListenerItem"],"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"clearManagedListeners","doc":"<p>Removes all managed listeners for this object.</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearManagedListeners","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Usually called by the Ext.data.Store which owns the model instance. ...","method_calls":["afterCommit"],"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Boolean","default":"false","tagname":"params","doc":"<p>Pass <code>true</code> to skip notification of the owning store of the change.</p>\n","name":"silent","optional":true,"html_type":"Boolean"},{"type":"String[]","tagname":"params","doc":"<p>Array of field names changed during sync with server if known.\nOmit or pass <code>null</code> if unknown. An empty array means that it is known that no fields were modified\nby the server's response.\nDefaults to false.</p>\n","name":"modifiedFieldNames","optional":true,"html_type":"String[]"}],"tagname":"method","files":[{"linenr":1449,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"commit","doc":"<p>Usually called by the <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> which owns the model instance. Commits all changes made to the\ninstance since either creation or the last commit operation.</p>\n\n<p>Developers should subscribe to the <a href=\"#!/api/Ext.data.Store-event-update\" rel=\"Ext.data.Store-event-update\" class=\"docClass\">Ext.data.Store.update</a> event to have their code notified of commit\noperations.</p>\n","chainable":false,"inheritdoc":null,"id":"method-commit","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Object","name":"f1","html_type":"Object"},{"type":"Object","name":"f2","html_type":"Object"}],"tagname":"method","files":[{"linenr":252,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":true,"static":null,"name":"compareConvertFields","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-compareConvertFields","fires":null,"linenr":252},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":766,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configClass","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-configClass","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Continue to fire event. ...","method_calls":["getBubbleParent"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"eventName","html_type":"String"},{"type":"Array","tagname":"params","doc":"\n","name":"args","html_type":"Array"},{"type":"Boolean","tagname":"params","doc":"\n","name":"bubbles","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":456,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"continueFireEvent","doc":"<p>Continue to fire event.</p>\n","chainable":false,"inheritdoc":null,"id":"method-continueFireEvent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates a copy (clone) of this Model instance. ...","method_calls":null,"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>A new id, defaults to the id of the instance being copied.\nSee <code><a href=\"#!/api/Ext.data.Model-static-method-id\" rel=\"Ext.data.Model-static-method-id\" class=\"docClass\">id</a></code>. To generate a phantom instance with a new id use:</p>\n\n<pre><code>var rec = record.copy(); // clone the record\n<a href=\"#!/api/Ext.data.Model-static-method-id\" rel=\"Ext.data.Model-static-method-id\" class=\"docClass\">Ext.data.Model.id</a>(rec); // automatically generate a unique sequential id\n</code></pre>\n","name":"id","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":1473,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Ext.data.Model","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"private":null,"static":null,"name":"copy","doc":"<p>Creates a copy (clone) of this Model instance.</p>\n","chainable":false,"inheritdoc":null,"id":"method-copy","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Copies data from the passed record into this record. ...","method_calls":["beginEdit","commit","endEdit","isEqual","setId"],"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Ext.data.Model","tagname":"params","doc":"<p>The record to copy data from.</p>\n","name":"sourceRecord","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"tagname":"method","files":[{"linenr":1181,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"String[]","properties":null,"doc":"<p>The names of the fields which changed value.</p>\n","name":"return","html_type":"String[]"},"private":true,"static":null,"name":"copyFrom","doc":"<p>Copies data from the passed record into this record. If the passed record is undefined, does nothing.</p>\n\n<p>If this is a phantom record (represented only in the client, with no corresponding database entry), and\nthe source record is not a phantom, then this record acquires the id of the source record.</p>\n","chainable":false,"inheritdoc":null,"id":"method-copyFrom","fires":["<a href=\"#!/api/Ext.data.Model-event-idchanged\" rel=\"Ext.data.Model-event-idchanged\" class=\"docClass\">idchanged</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates an event handling function which refires the event from this object as the passed event name. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name under which to refire the passed parameters.</p>\n","name":"newName","html_type":"String"},{"type":"Array","tagname":"params","doc":"<p>The caller can specify on which indices to slice.</p>\n","name":"beginEnd","optional":true,"html_type":"Array"}],"tagname":"method","files":[{"linenr":981,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Function","properties":null,"doc":"\n","name":"return","html_type":"Function"},"private":true,"static":null,"name":"createRelayer","doc":"<p>Creates an event handling function which refires the event from this object as the passed event name.</p>\n","chainable":false,"inheritdoc":null,"id":"method-createRelayer","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">Ext.Base.destroy</a>","name":"destroy"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Destroys the model using the configured proxy. ...","method_calls":["clearListeners","getProxy"],"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>Options to pass to the proxy. Config object for <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a>.</p>\n","name":"options","html_type":"Object"}],"tagname":"method","files":[{"linenr":1608,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Ext.data.Model","properties":null,"doc":"<p>The Model instance</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"private":null,"static":null,"name":"destroy","doc":"<p>Destroys the model using the configured proxy.</p>\n","chainable":false,"inheritdoc":null,"id":"method-destroy","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling this.getBubbleTarget() if\npresent. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String/String[]","tagname":"params","doc":"<p>The event name to bubble, or an Array of event names.</p>\n","name":"eventNames","html_type":"String/String[]"}],"tagname":"method","files":[{"linenr":995,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"enableBubble","doc":"<p>Enables events fired by this Observable to bubble up an owner hierarchy by calling <code>this.getBubbleTarget()</code> if\npresent. There is no implementation in the Observable base class.</p>\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers.\nSee <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>. The default implementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> returns the\nComponent's immediate owner. But if a known target is required, this can be overridden to access the\nrequired target more quickly.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.overrides.form.field.Base', {\n    override: '<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>',\n\n    //  Add functionality to Field's initComponent to enable the change event to bubble\n    initComponent: function () {\n        this.callParent();\n        this.enableBubble('change');\n    }\n});\n\nvar myForm = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-enableBubble","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Ends an edit. ...","method_calls":["afterEdit","getModifiedFieldNames"],"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>True to not notify the store of the change</p>\n","name":"silent","optional":true,"html_type":"Boolean"},{"type":"String[]","tagname":"params","doc":"<p>Array of field names changed during edit.</p>\n","name":"modifiedFieldNames","optional":true,"html_type":"String[]"}],"tagname":"method","files":[{"linenr":1304,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"endEdit","doc":"<p>Ends an edit. If any data was modified, the containing store is notified\n(ie, the store's <code>update</code> event will fire).</p>\n","chainable":false,"inheritdoc":null,"id":"method-endEdit","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fires the specified event with the passed parameters (minus the event name, plus the options object passed\nto addList...","method_calls":["fireEventArgs"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to fire.</p>\n","name":"eventName","html_type":"String"},{"type":"Object...","tagname":"params","doc":"<p>Variable number of parameters are passed to handlers.</p>\n","name":"args","html_type":"Object..."}],"tagname":"method","files":[{"linenr":416,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"fireEvent","doc":"<p>Fires the specified event with the passed parameters (minus the event name, plus the <code>options</code> object passed\nto <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireEvent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fires the specified event with the passed parameter list. ...","method_calls":["continueFireEvent"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to fire.</p>\n","name":"eventName","html_type":"String"},{"type":"Object[]","tagname":"params","doc":"<p>An array of parameters which are passed to handlers.</p>\n","name":"args","html_type":"Object[]"}],"tagname":"method","files":[{"linenr":431,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"fireEventArgs","doc":"<p>Fires the specified event with the passed parameter list.</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireEventArgs","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the value of the given field ...","method_calls":null,"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The field to fetch the value for</p>\n","name":"fieldName","html_type":"String"}],"tagname":"method","files":[{"linenr":1080,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The value</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"get","doc":"<p>Returns the value of the given field</p>\n","chainable":false,"inheritdoc":null,"id":"method-get","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets all of the data from this Models loaded associations. ...","method_calls":["prepareAssociatedData"],"owner":"Ext.data.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1843,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The nested data set for the Model's loaded associations</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getAssociatedData","doc":"<p>Gets all of the data from this Models <em>loaded</em> associations. It does this recursively - for example if we have a\nUser which hasMany Orders, and each Order hasMany OrderItems, it will return an object like this:</p>\n\n<pre><code>{\n    orders: [\n        {\n            id: 123,\n            status: 'shipped',\n            orderItems: [\n                ...\n            ]\n        }\n    ]\n}\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-getAssociatedData","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the bubbling parent for an Observable ...","method_calls":["getBubbleTarget"],"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":489,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Ext.util.Observable","properties":null,"doc":"<p>The bubble parent. null is returned if no bubble target exists</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},"private":true,"static":null,"name":"getBubbleParent","doc":"<p>Gets the bubbling parent for an Observable</p>\n","chainable":false,"inheritdoc":null,"id":"method-getBubbleParent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets a hash of only the fields that have been modified since this Model was created or commited. ...","method_calls":["get"],"owner":"Ext.data.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1356,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Object","properties":null,"doc":"\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getChanges","doc":"<p>Gets a hash of only the fields that have been modified since this Model was created or commited.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getChanges","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":1196,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"getConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets all values for each field in this model and returns an object\ncontaining the current data. ...","method_calls":["get","getAssociatedData"],"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>True to also include associated data. Defaults to false.</p>\n","name":"includeAssociated","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":1819,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Object","properties":null,"doc":"<p>An object hash containing all the values in this model</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getData","doc":"<p>Gets all values for each field in this model and returns an object\ncontaining the current data.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getData","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the unique ID allocated to this model instance as defined by idProperty. ...","method_calls":["get"],"owner":"Ext.data.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1676,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Number/String","properties":null,"doc":"<p>The id</p>\n","name":"return","html_type":"Number/String"},"private":null,"static":null,"name":"getId","doc":"<p>Returns the unique ID allocated to this model instance as defined by <a href=\"#!/api/Ext.data.Model-cfg-idProperty\" rel=\"Ext.data.Model-cfg-idProperty\" class=\"docClass\">idProperty</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getId","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>Name of the config option to return.</p>\n","name":"name","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":1206,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object/Mixed","properties":null,"doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","name":"return","html_type":"Object/Mixed"},"private":null,"static":null,"name":"getInitialConfig","doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getInitialConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the names of all the fields that were modified during an edit ...","method_calls":["isEqual"],"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The currently saved data. Defaults to\nthe dataSave property on the object.</p>\n","name":"saved","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1332,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"String[]","properties":null,"doc":"<p>An array of modified field names</p>\n","name":"return","html_type":"String[]"},"private":true,"static":null,"name":"getModifiedFieldNames","doc":"<p>Gets the names of all the fields that were modified during an edit</p>\n","chainable":false,"inheritdoc":null,"id":"method-getModifiedFieldNames","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1684,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":true,"static":null,"name":"getObservableId","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getObservableId","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the configured Proxy for this Model. ...","method_calls":["hasOwnProperty"],"owner":"Ext.data.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1512,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Ext.data.proxy.Proxy","properties":null,"doc":"<p>The proxy</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a>"},"private":null,"static":null,"name":"getProxy","doc":"<p>Returns the configured Proxy for this Model.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getProxy","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1156,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"hasConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-hasConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Checks if this model has an id assigned ...","method_calls":["getId"],"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The id, if not passed it will call getId()</p>\n","name":"id","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1721,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>True if the model has an id</p>\n","name":"return","html_type":"Boolean"},"private":true,"static":null,"name":"hasId","doc":"<p>Checks if this model has an id assigned</p>\n","chainable":false,"inheritdoc":null,"id":"method-hasId","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Checks to see if this object has any listeners for a specified event, or whether the event bubbles. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to check for</p>\n","name":"eventName","html_type":"String"}],"tagname":"method","files":[{"linenr":833,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p><code>true</code> if the event is being listened for or bubbles, else <code>false</code></p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"hasListener","doc":"<p>Checks to see if this object has any listeners for a specified event, or whether the event bubbles. The answer\nindicates whether the event needs firing or not.</p>\n","chainable":false,"inheritdoc":null,"id":"method-hasListener","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Initialize configuration for this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1090,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":null,"static":null,"name":"initConfig","doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"method-initConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Checks if two values are equal, taking into account certain\nspecial factors, for example dates. ...","method_calls":null,"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The first value</p>\n","name":"a","html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>The second value</p>\n","name":"b","html_type":"Object"}],"tagname":"method","files":[{"linenr":1241,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>True if the values are equal</p>\n","name":"return","html_type":"Boolean"},"private":true,"static":null,"name":"isEqual","doc":"<p>Checks if two values are equal, taking into account certain\nspecial factors, for example dates.</p>\n","chainable":false,"inheritdoc":null,"id":"method-isEqual","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns true if the passed field name has been modified since the load or last commit. ...","method_calls":null,"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p><a href=\"#!/api/Ext.data.Field-cfg-name\" rel=\"Ext.data.Field-cfg-name\" class=\"docClass\">Ext.data.Field.name</a></p>\n","name":"fieldName","html_type":"String"}],"tagname":"method","files":[{"linenr":1374,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Boolean","properties":null,"doc":"\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"isModified","doc":"<p>Returns true if the passed field name has been <code><a href=\"#!/api/Ext.data.Model-property-modified\" rel=\"Ext.data.Model-property-modified\" class=\"docClass\">modified</a></code> since the load or last commit.</p>\n","chainable":false,"inheritdoc":null,"id":"method-isModified","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Checks if the model is valid. ...","method_calls":["validate"],"owner":"Ext.data.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1551,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>True if the model is valid.</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"isValid","doc":"<p>Checks if the model is valid. See <a href=\"#!/api/Ext.data.Model-method-validate\" rel=\"Ext.data.Model-method-validate\" class=\"docClass\">validate</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-isValid","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"}],"tagname":"method","files":[{"linenr":266,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":true,"static":null,"name":"itemNameFn","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-itemNameFn","fires":null,"linenr":266},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Tells this model instance that it has been added to a store. ...","method_calls":null,"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Ext.data.Store","tagname":"params","doc":"<p>The store to which this model has been added.</p>\n","name":"store","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"}],"tagname":"method","files":[{"linenr":1734,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"join","doc":"<p>Tells this model instance that it has been added to a store.</p>\n","chainable":false,"inheritdoc":null,"id":"method-join","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1408,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":true,"static":null,"name":"markDirty","doc":"<p><debug></debug></p>\n","chainable":false,"inheritdoc":null,"id":"method-markDirty","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for addManagedListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1134,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"mon","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-addManagedListener\" rel=\"Ext.util.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-mon","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for removeManagedListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":null,"private":null,"static":null,"name":"mun","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-removeManagedListener\" rel=\"Ext.util.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-mun","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for addListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","name":"eventName","html_type":"String/Object"},{"type":"Function","tagname":"params","doc":"<p>The method the event invokes, or <em>if <code>scope</code> is specified, the </em>name* of the method within\nthe specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> plus the <code>options</code> parameter described below.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","name":"scope","html_type":"Object"},{"type":"Number","tagname":"params","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n\n","name":"delay","html_type":"Number"},{"type":"Boolean","tagname":"params","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n","name":"single","html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","name":"buffer","html_type":"Number"},{"type":"Ext.util.Observable","tagname":"params","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the event\n  was bubbled up from a child Observable.</p>\n\n","name":"target","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"type":"String","tagname":"params","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an element to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to elements of\n  <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the Component is rendered.\n  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n","name":"element","html_type":"String"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>When specified as <code>true</code>, the function returns A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call.</p>\n\n","name":"destroyable","optional":true,"html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n","name":"priority","optional":true,"html_type":"Number"}],"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> Unlike in ExtJS 3.x, the options object will also be passed as the last\nargument to every event handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1122,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"on","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-on","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Object","name":"cls","html_type":"Object"},{"type":"Object","name":"data","html_type":"Object"},{"type":"Object","name":"hooks","html_type":"Object"}],"tagname":"method","files":[{"linenr":270,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":true,"static":null,"name":"onClassExtended","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onClassExtended","fires":null,"linenr":270},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"names","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"callback","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":1224,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"onConfigUpdate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onConfigUpdate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This complex-looking method takes a given Model instance and returns an object containing all data from\nall of that M...","method_calls":null,"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>A hash of all the associations we've already seen</p>\n","name":"seenKeys","html_type":"Object"},{"type":"Number","tagname":"params","doc":"<p>The current depth</p>\n","name":"depth","html_type":"Number"}],"tagname":"method","files":[{"linenr":1865,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The nested data set for the Model's loaded associations</p>\n","name":"return","html_type":"Object"},"private":true,"static":null,"name":"prepareAssociatedData","doc":"<p>This complex-looking method takes a given Model instance and returns an object containing all data from\nall of that Model's <em>loaded</em> associations. See <a href=\"#!/api/Ext.data.Model-method-getAssociatedData\" rel=\"Ext.data.Model-method-getAssociatedData\" class=\"docClass\">getAssociatedData</a></p>\n","chainable":false,"inheritdoc":null,"id":"method-prepareAssociatedData","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Prepares a given class for observable instances. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Function","tagname":"params","doc":"<p>The class constructor to prepare.</p>\n","name":"T","html_type":"Function"}],"tagname":"method","files":[{"linenr":164,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"prepareClass","doc":"<p>Prepares a given class for observable instances. This method is called when a\nclass derives from this class or uses this class as a mixin.</p>\n","chainable":false,"inheritdoc":null,"id":"method-prepareClass","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Usually called by the Ext.data.Store to which this model instance has been joined. ...","method_calls":["afterReject"],"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>True to skip notification of the owning store of the change.\nDefaults to false.</p>\n","name":"silent","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":1416,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"reject","doc":"<p>Usually called by the <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a> to which this model instance has been <a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">joined</a>. Rejects\nall changes made to the model instance since either creation, or the last commit operation. Modified fields are\nreverted to their original values.</p>\n\n<p>Developers should subscribe to the <a href=\"#!/api/Ext.data.Store-event-update\" rel=\"Ext.data.Store-event-update\" class=\"docClass\">Ext.data.Store.update</a> event to have their code notified of reject\noperations.</p>\n","chainable":false,"inheritdoc":null,"id":"method-reject","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Relays selected events from the specified Observable as if the events were fired by this. ...","method_calls":["createRelayer","mon"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The Observable whose events this object is to relay.</p>\n","name":"origin","html_type":"Object"},{"type":"String[]","tagname":"params","doc":"<p>Array of event names to relay.</p>\n","name":"events","html_type":"String[]"},{"type":"String","tagname":"params","doc":"<p>A common prefix to prepend to the event names. For example:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Now the grid will forward 'load' and 'clear' events of store as 'storeload' and 'storeclear'.</p>\n","name":"prefix","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":928,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which, when destroyed, removes all relayers. For example:</p>\n\n<pre><code>this.storeRelayers = this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Can be undone by calling</p>\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.storeRelayers);\n</code></pre>\n\n<p>or\n    this.store.relayers.destroy();</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"relayEvents","doc":"<p>Relays selected events from the specified Observable as if the events were fired by <code>this</code>.</p>\n\n<p>For example if you are extending Grid, you might decide to forward some events from store.\nSo you can do this inside your initComponent:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>The grid instance will then have an observable 'load' event which will be passed the\nparameters of the store's load event and any function fired with the grid's load event\nwould have access to the grid using the <code>this</code> keyword.</p>\n","chainable":false,"inheritdoc":null,"id":"method-relayEvents","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes an event handler. ...","method_calls":["removeListener"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The type of event the handler was associated with.</p>\n\n","name":"eventName","html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>The handler to remove. <strong>This must be a reference to the function passed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope originally specified for the handler. It must be the same as the\nscope argument specified in the original call to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> or the listener will not be removed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":688,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"removeListener","doc":"<p>Removes an event handler.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes listeners that were added by the mon method. ...","method_calls":["removeManagedListener","removeManagedListenerItem"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":375,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"removeManagedListener","doc":"<p>Removes listeners that were added by the <a href=\"#!/api/Ext.util.Observable-method-mon\" rel=\"Ext.util.Observable-method-mon\" class=\"docClass\">mon</a> method.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeManagedListener","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.AbstractComponent","link":"<a href=\"#!/api/Ext.AbstractComponent-method-removeManagedListenerItem\" rel=\"Ext.AbstractComponent-method-removeManagedListenerItem\" class=\"docClass\">Ext.AbstractComponent.removeManagedListenerItem</a>","name":"removeManagedListenerItem"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Remove a single managed listener item ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>True if this is being called during a clear</p>\n","name":"isClear","html_type":"Boolean"},{"type":"Object","tagname":"params","doc":"<p>The managed listener item\nSee removeManagedListener for other args</p>\n","name":"managedListener","html_type":"Object"}],"tagname":"method","files":[{"linenr":775,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"removeManagedListenerItem","doc":"<p>Remove a single managed listener item</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeManagedListenerItem","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Resumes firing of the named event(s). ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String...","tagname":"params","doc":"<p>Multiple event names to resume.</p>\n","name":"eventName","html_type":"String..."}],"tagname":"method","files":[{"linenr":881,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"resumeEvent","doc":"<p>Resumes firing of the named event(s).</p>\n\n<p>After calling this method to resume events, the events will fire when requested to fire.</p>\n\n<p><strong>Note that if the <a href=\"#!/api/Ext.util.Observable-method-suspendEvent\" rel=\"Ext.util.Observable-method-suspendEvent\" class=\"docClass\">suspendEvent</a> method is called multiple times for a certain event,\nthis converse method will have to be called the same number of times for it to resume firing.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-resumeEvent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Resumes firing events (see suspendEvents). ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":905,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"resumeEvents","doc":"<p>Resumes firing events (see <a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n\n<p>If events were suspended using the <code>queueSuspended</code> parameter, then all events fired\nduring event suspension will be sent to any listeners now.</p>\n","chainable":false,"inheritdoc":null,"id":"method-resumeEvents","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Saves the model instance using the configured proxy. ...","method_calls":["getProxy"],"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>Options to pass to the proxy. Config object for <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a>.</p>\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1559,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Ext.data.Model","properties":null,"doc":"<p>The Model instance</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"private":null,"static":null,"name":"save","doc":"<p>Saves the model instance using the configured proxy.</p>\n","chainable":false,"inheritdoc":null,"id":"method-save","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the given field to the given value, marks the instance as dirty ...","method_calls":["afterEdit","changeId","isEqual"],"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The field to set, or an object containing key/value pairs</p>\n","name":"fieldName","html_type":"String/Object"},{"type":"Object","tagname":"params","doc":"<p>The value to set</p>\n","name":"newValue","html_type":"Object"}],"tagname":"method","files":[{"linenr":1094,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"String[]","properties":null,"doc":"<p>The array of modified field names or null if nothing was modified.</p>\n","name":"return","html_type":"String[]"},"private":null,"static":null,"name":"set","doc":"<p>Sets the given field to the given value, marks the instance as dirty</p>\n","chainable":false,"inheritdoc":null,"id":"method-set","fires":["<a href=\"#!/api/Ext.data.Model-event-idchanged\" rel=\"Ext.data.Model-event-idchanged\" class=\"docClass\">idchanged</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"},{"type":"Object","name":"applyIfNotSet","html_type":"Object"}],"tagname":"method","files":[{"linenr":1164,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"static":null,"name":"setConfig","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-setConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Marks this Record as dirty. ...","method_calls":["get"],"owner":"Ext.data.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1383,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"setDirty","doc":"<p>Marks this <strong>Record</strong> as <code><a href=\"#!/api/Ext.data.Model-property-dirty\" rel=\"Ext.data.Model-property-dirty\" class=\"docClass\">dirty</a></code>. This method is used interally when adding <code><a href=\"#!/api/Ext.data.Model-property-phantom\" rel=\"Ext.data.Model-property-phantom\" class=\"docClass\">phantom</a></code> records\nto a <a href=\"#!/api/Ext.data.proxy.Server-cfg-writer\" rel=\"Ext.data.proxy.Server-cfg-writer\" class=\"docClass\">writer enabled store</a>.</p>\n\n<p>Marking a record <code><a href=\"#!/api/Ext.data.Model-property-dirty\" rel=\"Ext.data.Model-property-dirty\" class=\"docClass\">dirty</a></code> causes the phantom to be returned by <a href=\"#!/api/Ext.data.Store-method-getUpdatedRecords\" rel=\"Ext.data.Store-method-getUpdatedRecords\" class=\"docClass\">Ext.data.Store.getUpdatedRecords</a>\nwhere it will have a create action composed for it during <a href=\"#!/api/Ext.data.Model-method-save\" rel=\"Ext.data.Model-method-save\" class=\"docClass\">model save</a> operations.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setDirty","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the model instance's id field to the given id. ...","method_calls":["set"],"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Number/String","tagname":"params","doc":"<p>The new id</p>\n","name":"id","html_type":"Number/String"}],"tagname":"method","files":[{"linenr":1691,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"setId","doc":"<p>Sets the model instance's id field to the given id.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setId","fires":["<a href=\"#!/api/Ext.data.Model-event-idchanged\" rel=\"Ext.data.Model-event-idchanged\" class=\"docClass\">idchanged</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the Proxy to use for this model. ...","method_calls":null,"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"String/Object/Ext.data.proxy.Proxy","tagname":"params","doc":"<p>The proxy</p>\n","name":"proxy","html_type":"String/Object/<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a>"}],"tagname":"method","files":[{"linenr":1489,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Ext.data.proxy.Proxy","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a>"},"private":null,"static":null,"name":"setProxy","doc":"<p>Sets the Proxy to use for this model. Accepts any options that can be accepted by\n<a href=\"#!/api/Ext-method-createByAlias\" rel=\"Ext-method-createByAlias\" class=\"docClass\">Ext.createByAlias</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setProxy","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the reference to the class from which this object was instantiated. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":778,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Class","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"private":null,"static":null,"name":"statics","doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-statics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Suspends firing of the named event(s). ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String...","tagname":"params","doc":"<p>Multiple event names to suspend.</p>\n","name":"eventName","html_type":"String..."}],"tagname":"method","files":[{"linenr":857,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"suspendEvent","doc":"<p>Suspends firing of the named event(s).</p>\n\n<p>After calling this method to suspend events, the events will no longer fire when requested to fire.</p>\n\n<p><strong>Note that if this is called multiple times for a certain event, the converse method\n<a href=\"#!/api/Ext.util.Observable-method-resumeEvent\" rel=\"Ext.util.Observable-method-resumeEvent\" class=\"docClass\">resumeEvent</a> will have to be called the same number of times for it to resume firing.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-suspendEvent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Suspends the firing of all events. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>Pass as true to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events.</p>\n","name":"queueSuspended","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":844,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"suspendEvents","doc":"<p>Suspends the firing of all events. (see <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n","chainable":false,"inheritdoc":null,"id":"method-suspendEvents","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for removeListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The type of event the handler was associated with.</p>\n\n","name":"eventName","html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>The handler to remove. <strong>This must be a reference to the function passed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope originally specified for the handler. It must be the same as the\nscope argument specified in the original call to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> or the listener will not be removed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1128,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":null,"private":null,"static":null,"name":"un","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-removeListener\" rel=\"Ext.util.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-un","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Tells this model instance that it has been removed from the store. ...","method_calls":null,"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Ext.data.Store","tagname":"params","doc":"<p>The store from which this model has been removed.</p>\n","name":"store","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"}],"tagname":"method","files":[{"linenr":1757,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"private":null,"static":null,"name":"unjoin","doc":"<p>Tells this model instance that it has been removed from the store.</p>\n","chainable":false,"inheritdoc":null,"id":"method-unjoin","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Validates the current data against all of its configured validations. ...","method_calls":["get"],"owner":"Ext.data.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1520,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Ext.data.Errors","properties":null,"doc":"<p>The errors object</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Errors\" rel=\"Ext.data.Errors\" class=\"docClass\">Ext.data.Errors</a>"},"private":null,"static":null,"name":"validate","doc":"<p>Validates the current data against all of its configured <a href=\"#!/api/Ext.data.Model-cfg-validations\" rel=\"Ext.data.Model-cfg-validations\" class=\"docClass\">validations</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-validate","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":176,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-addConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":256,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addInheritableStatics","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addInheritableStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"member","html_type":"Object"}],"tagname":"method","files":[{"linenr":353,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addMember","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addMember","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add methods / properties to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":296,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"addMembers","doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addMembers","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add / override static properties of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":218,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"addStatics","doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"xtype","html_type":"Object"}],"tagname":"method","files":[{"linenr":730,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addXtype","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addXtype","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Borrow another class' members to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Ext.Base","tagname":"params","doc":"<p>The class to borrow members from</p>\n","name":"fromClass","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"type":"Array/String","tagname":"params","doc":"<p>The names of the members to borrow</p>\n","name":"members","html_type":"Array/String"}],"tagname":"method","files":[{"linenr":383,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":true,"name":"borrow","doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-borrow","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-static-method-create\" rel=\"Ext.layout.Layout-static-method-create\" class=\"docClass\">Ext.layout.Layout.create</a>","name":"create"}],"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create a new instance of this Class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":60,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object","properties":null,"doc":"<p>the created instance.</p>\n","name":"return","html_type":"Object"},"static":true,"private":null,"name":"create","doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-create","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create aliases for existing prototype methods. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","name":"alias","html_type":"String/Object"},{"type":"String/Object","tagname":"params","doc":"<p>The original method name</p>\n","name":"origin","html_type":"String/Object"}],"tagname":"method","files":[{"linenr":696,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"createAlias","doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"static-method-createAlias","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":81,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"extend","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-extend","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns an Array of Field definitions which define this Model's structure\n\nFields are sorted upon Model class definit...","method_calls":null,"owner":"Ext.data.Model","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":601,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Ext.data.Field[]","properties":null,"doc":"<p>The defined Fields for this Model.</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Field\" rel=\"Ext.data.Field\" class=\"docClass\">Ext.data.Field</a>[]"},"private":null,"static":true,"name":"getFields","doc":"<p>Returns an Array of <a href=\"#!/api/Ext.data.Field\" rel=\"Ext.data.Field\" class=\"docClass\">Field</a> definitions which define this Model's structure</p>\n\n<p>Fields are sorted upon Model class definition. Fields with custom <a href=\"#!/api/Ext.data.Field-cfg-convert\" rel=\"Ext.data.Field-cfg-convert\" class=\"docClass\">convert</a> functions\nare moved to <em>after</em> fields with no convert functions. This is so that convert functions which rely on existing\nfield values will be able to read those field values.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-getFields","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the current class' name in string format. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":677,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"String","properties":null,"doc":"<p>className</p>\n","name":"return","html_type":"String"},"static":true,"private":null,"name":"getName","doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"static-method-getName","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the configured Proxy for this Model ...","method_calls":["setProxy"],"owner":"Ext.data.Model","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":509,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Ext.data.proxy.Proxy","properties":null,"doc":"<p>The proxy</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a>"},"static":true,"private":null,"name":"getProxy","doc":"<p>Returns the configured Proxy for this Model</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-getProxy","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Generates a sequential id. ...","method_calls":null,"owner":"Ext.data.Model","inheritable":null,"params":[{"type":"Ext.data.Model","tagname":"params","doc":"<p>The record being created. The record does not exist, it's a <a href=\"#!/api/Ext.data.Model-property-phantom\" rel=\"Ext.data.Model-property-phantom\" class=\"docClass\">phantom</a>.</p>\n","name":"rec","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"tagname":"method","files":[{"linenr":711,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"String","properties":null,"doc":"<p>auto-generated string id, <code>\"ext-record-i++\"</code>;</p>\n","name":"return","html_type":"String"},"static":true,"private":null,"name":"id","doc":"<p>Generates a sequential id. This method is typically called when a record is <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">create</a>d and <a href=\"#!/api/Ext.data.Model-method-constructor\" rel=\"Ext.data.Model-method-constructor\" class=\"docClass\">no id has been specified</a> either as a parameter, or through the <a href=\"#!/api/Ext.data.Model-cfg-idProperty\" rel=\"Ext.data.Model-cfg-idProperty\" class=\"docClass\">idProperty</a>\nin the passed data. The generated id will automatically be assigned to the\nrecord. The returned id takes the form: {PREFIX}-{AUTO_ID}.</p>\n\n<ul>\n<li><strong>PREFIX</strong> : String - <a href=\"#!/api/Ext.data.Model-static-property-PREFIX\" rel=\"Ext.data.Model-static-property-PREFIX\" class=\"docClass\">Ext.data.Model.PREFIX</a> (defaults to 'ext-record')</li>\n<li><strong>AUTO_ID</strong> : String - <a href=\"#!/api/Ext.data.Model-static-property-AUTO_ID\" rel=\"Ext.data.Model-static-property-AUTO_ID\" class=\"docClass\">Ext.data.Model.AUTO_ID</a> (defaults to 1 initially)</li>\n</ul>\n\n","chainable":false,"inheritdoc":null,"id":"static-method-id","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds members to class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":373,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"implement","doc":"<p>Adds members to class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-implement","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n","version":"4.1"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Asynchronously loads a model instance by id. ...","method_calls":["getProxy"],"owner":"Ext.data.Model","inheritable":true,"params":[{"type":"Number/String","tagname":"params","doc":"<p>The id of the model to load</p>\n","name":"id","html_type":"Number/String"},{"type":"Object","tagname":"params","doc":"<p>config object containing success, failure and callback functions, plus\noptional scope</p>\n","name":"config","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":615,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"static":true,"private":null,"name":"load","doc":"<p>Asynchronously loads a model instance by id. Sample usage:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('MyApp.User', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    fields: [\n        {name: 'id', type: 'int'},\n        {name: 'name', type: 'string'}\n    ]\n});\n\nMyApp.User.load(10, {\n    scope: this,\n    failure: function(record, operation) {\n        //do something if the load failed\n        //record is null\n    },\n    success: function(record, operation) {\n        //do something if the load succeeded\n    },\n    callback: function(record, operation, success) {\n        //do something whether the load succeeded or failed\n        //if operation is unsuccessful, record is null\n    }\n});\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"static-method-load","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Used internally by the mixins pre-processor ...","method_calls":["addConfig","hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"mixinClass","html_type":"Object"}],"tagname":"method","files":[{"linenr":595,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"mixin","doc":"<p>Used internally by the mixins pre-processor</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-mixin","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":162,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"onExtended","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-onExtended","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Override members of this class. ...","method_calls":["addConfig","addInheritableStatics"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":452,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this class</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"override","doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","chainable":true,"inheritdoc":null,"id":"static-method-override","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n","version":"4.1.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Apply a new set of field and/or property definitions to the existing model. ...","method_calls":null,"owner":"Ext.data.Model","inheritable":true,"params":[{"type":"Object","name":"fields","html_type":"Object"},{"type":"Object","name":"idProperty","html_type":"Object"},{"type":"Object","name":"clientIdProperty","html_type":"Object"}],"tagname":"method","files":[{"linenr":534,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"static":true,"private":null,"name":"setFields","doc":"<p>Apply a new set of field and/or property definitions to the existing model. This will replace any existing\nfields, including fields inherited from superclasses. Mainly for reconfiguring the\nmodel based on changes in meta data (called from Reader's onMetaChange method).</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-setFields","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the Proxy to use for this model. ...","method_calls":null,"owner":"Ext.data.Model","inheritable":true,"params":[{"type":"String/Object/Ext.data.proxy.Proxy","tagname":"params","doc":"<p>The proxy</p>\n","name":"proxy","html_type":"String/Object/<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a>"}],"tagname":"method","files":[{"linenr":485,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"return":{"type":"Ext.data.proxy.Proxy","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a>"},"static":true,"private":null,"name":"setProxy","doc":"<p>Sets the Proxy to use for this model. Accepts any options that can be accepted by\n<a href=\"#!/api/Ext-method-createByAlias\" rel=\"Ext-method-createByAlias\" class=\"docClass\">Ext.createByAlias</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-setProxy","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"triggerExtended","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-triggerExtended","fires":null,"linenr":null},{"autodetected":{},"short_doc":"Fired when this model's id changes ...","owner":"Ext.data.Model","params":[{"type":"Ext.data.Model","tagname":"params","doc":"\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"type":"Number/String","tagname":"params","doc":"<p>The old id</p>\n","name":"oldId","html_type":"Number/String"},{"type":"Number/String","tagname":"params","doc":"<p>The new id</p>\n","name":"newId","html_type":"Number/String"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":921,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Model.js"}],"name":"idchanged","doc":"<p>Fired when this model's id changes</p>\n","id":"event-idchanged"}],"author":[{"email":null,"tagname":"author","name":"Ed Spencer"}],"alternateClassNames":["Ext.data.Record"],"code_type":"ext_define","mixins":["Ext.util.Observable"],"doc":"<p>A Model represents some object that your application manages. For example, one might define a Model for Users,\nProducts, Cars, or any other real-world object that we want to model in the system. Models are registered via the\n<a href=\"#!/api/Ext.ModelManager\" rel=\"Ext.ModelManager\" class=\"docClass\">model manager</a>, and are used by <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">stores</a>, which are in turn used by many\nof the data-bound components in Ext.</p>\n\n<p>Models are defined as a set of fields and any arbitrary methods and properties relevant to the model. For example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('User', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    fields: [\n        {name: 'name',  type: 'string'},\n        {name: 'age',   type: 'int', convert: null},\n        {name: 'phone', type: 'string'},\n        {name: 'alive', type: 'boolean', defaultValue: true, convert: null}\n    ],\n\n    changeName: function() {\n        var oldName = this.get('name'),\n            newName = oldName + \" The Barbarian\";\n\n        this.set('name', newName);\n    }\n});\n</code></pre>\n\n<p>The fields array is turned into a <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">MixedCollection</a> automatically by the <a href=\"#!/api/Ext.ModelManager\" rel=\"Ext.ModelManager\" class=\"docClass\">ModelManager</a>, and all other functions and properties are copied to the new Model's prototype.</p>\n\n<p>A Model definition always has an <em>identifying field</em> which should yield a unique key for each instance. By default, a field\nnamed \"id\" will be created with a <a href=\"#!/api/Ext.data.Field-cfg-mapping\" rel=\"Ext.data.Field-cfg-mapping\" class=\"docClass\">mapping</a> of \"id\". This happens because of the default\n<a href=\"#!/api/Ext.data.Model-cfg-idProperty\" rel=\"Ext.data.Model-cfg-idProperty\" class=\"docClass\">idProperty</a> provided in Model definitions.</p>\n\n<p>To alter which field is the identifying field, use the <a href=\"#!/api/Ext.data.Model-cfg-idProperty\" rel=\"Ext.data.Model-cfg-idProperty\" class=\"docClass\">idProperty</a> config.</p>\n\n<p>If the Model should not have any identifying field (for example if you are defining ab abstract base class for your\napplication models), configure the {@liknk <a href=\"#!/api/Ext.data.Model-cfg-idProperty\" rel=\"Ext.data.Model-cfg-idProperty\" class=\"docClass\">idProperty</a>} as <code>null</code>.</p>\n\n<p>By default, the built in numeric and boolean field types have a <a href=\"#!/api/Ext.data.Field-cfg-convert\" rel=\"Ext.data.Field-cfg-convert\" class=\"docClass\">Ext.data.Field.convert</a> function which coerces string\nvalues in raw data into the field's type. For better performance with <a href=\"#!/api/Ext.data.reader.Json\" rel=\"Ext.data.reader.Json\" class=\"docClass\">Json</a> or <a href=\"#!/api/Ext.data.reader.Array\" rel=\"Ext.data.reader.Array\" class=\"docClass\">Array</a>\nreaders <em>if you are in control of the data fed into this Model</em>, you can null out the default convert function which will cause\nthe raw property to be copied directly into the Field's value.</p>\n\n<p>Now we can create instances of our User model and call any model logic we defined:</p>\n\n<pre><code>var user = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('User', {\n    id   : 'ABCD12345',\n    name : 'Conan',\n    age  : 24,\n    phone: '555-555-5555'\n});\n\nuser.changeName();\nuser.get('name'); //returns \"Conan The Barbarian\"\n</code></pre>\n\n<h1>Validations</h1>\n\n<p>Models have built-in support for validations, which are executed against the validator functions in <a href=\"#!/api/Ext.data.validations\" rel=\"Ext.data.validations\" class=\"docClass\">Ext.data.validations</a> (<a href=\"#!/api/Ext.data.validations\" rel=\"Ext.data.validations\" class=\"docClass\">see all validation functions</a>). Validations are easy to add to\nmodels:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('User', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    fields: [\n        {name: 'name',     type: 'string'},\n        {name: 'age',      type: 'int'},\n        {name: 'phone',    type: 'string'},\n        {name: 'gender',   type: 'string'},\n        {name: 'username', type: 'string'},\n        {name: 'alive',    type: 'boolean', defaultValue: true}\n    ],\n\n    validations: [\n        {type: 'presence',  field: 'age'},\n        {type: 'length',    field: 'name',     min: 2},\n        {type: 'inclusion', field: 'gender',   list: ['Male', 'Female']},\n        {type: 'exclusion', field: 'username', list: ['Admin', 'Operator']},\n        {type: 'format',    field: 'username', matcher: /([a-z]+)[0-9]{2,3}/}\n    ]\n});\n</code></pre>\n\n<p>The validations can be run by simply calling the <a href=\"#!/api/Ext.data.Model-method-validate\" rel=\"Ext.data.Model-method-validate\" class=\"docClass\">validate</a> function, which returns a <a href=\"#!/api/Ext.data.Errors\" rel=\"Ext.data.Errors\" class=\"docClass\">Ext.data.Errors</a>\nobject:</p>\n\n<pre><code>var instance = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('User', {\n    name: 'Ed',\n    gender: 'Male',\n    username: 'edspencer'\n});\n\nvar errors = instance.validate();\n</code></pre>\n\n<h1>Associations</h1>\n\n<p>Models can have associations with other Models via <a href=\"#!/api/Ext.data.association.HasOne\" rel=\"Ext.data.association.HasOne\" class=\"docClass\">Ext.data.association.HasOne</a>,\n<a href=\"#!/api/Ext.data.association.BelongsTo\" rel=\"Ext.data.association.BelongsTo\" class=\"docClass\">belongsTo</a> and <a href=\"#!/api/Ext.data.association.HasMany\" rel=\"Ext.data.association.HasMany\" class=\"docClass\">hasMany</a> associations.\nFor example, let's say we're writing a blog administration application which deals with Users, Posts and Comments.\nWe can express the relationships between these models like this:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Post', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    fields: ['id', 'user_id'],\n\n    belongsTo: 'User',\n    hasMany  : {model: 'Comment', name: 'comments'}\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Comment', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    fields: ['id', 'user_id', 'post_id'],\n\n    belongsTo: 'Post'\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('User', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    fields: ['id'],\n\n    hasMany: [\n        'Post',\n        {model: 'Comment', name: 'comments'}\n    ]\n});\n</code></pre>\n\n<p>See the docs for <a href=\"#!/api/Ext.data.association.HasOne\" rel=\"Ext.data.association.HasOne\" class=\"docClass\">Ext.data.association.HasOne</a>, <a href=\"#!/api/Ext.data.association.BelongsTo\" rel=\"Ext.data.association.BelongsTo\" class=\"docClass\">Ext.data.association.BelongsTo</a> and\n<a href=\"#!/api/Ext.data.association.HasMany\" rel=\"Ext.data.association.HasMany\" class=\"docClass\">Ext.data.association.HasMany</a> for details on the usage and configuration of associations.\nNote that associations can also be specified like this:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('User', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    fields: ['id'],\n\n    associations: [\n        {type: 'hasMany', model: 'Post',    name: 'posts'},\n        {type: 'hasMany', model: 'Comment', name: 'comments'}\n    ]\n});\n</code></pre>\n\n<h1>Using a Proxy</h1>\n\n<p>Models are great for representing types of data and relationships, but sooner or later we're going to want to load or\nsave that data somewhere. All loading and saving of data is handled via a <a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Proxy</a>, which\ncan be set directly on the Model:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('User', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    fields: ['id', 'name', 'email'],\n\n    proxy: {\n        type: 'rest',\n        url : '/users'\n    }\n});\n</code></pre>\n\n<p>Here we've set up a <a href=\"#!/api/Ext.data.proxy.Rest\" rel=\"Ext.data.proxy.Rest\" class=\"docClass\">Rest Proxy</a>, which knows how to load and save data to and from a\nRESTful backend. Let's see how this works:</p>\n\n<pre><code>var user = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('User', {name: 'Ed Spencer', email: 'ed@sencha.com'});\n\nuser.save(); //POST /users\n</code></pre>\n\n<p>Calling <a href=\"#!/api/Ext.data.Model-method-save\" rel=\"Ext.data.Model-method-save\" class=\"docClass\">save</a> on the new Model instance tells the configured RestProxy that we wish to persist this Model's\ndata onto our server. RestProxy figures out that this Model hasn't been saved before because it doesn't have an id,\nand performs the appropriate action - in this case issuing a POST request to the url we configured (/users). We\nconfigure any Proxy on any Model and always follow this API - see <a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a> for a full list.</p>\n\n<p>Loading data via the Proxy is equally easy:</p>\n\n<pre><code>//get a reference to the User model class\nvar User = <a href=\"#!/api/Ext.ModelManager-method-getModel\" rel=\"Ext.ModelManager-method-getModel\" class=\"docClass\">Ext.ModelManager.getModel</a>('User');\n\n//Uses the configured RestProxy to make a GET request to /users/123\nUser.load(123, {\n    success: function(user) {\n        console.log(user.getId()); //logs 123\n    }\n});\n</code></pre>\n\n<p>Models can also be updated and destroyed easily:</p>\n\n<pre><code>//the user Model we loaded in the last snippet:\nuser.set('name', 'Edward Spencer');\n\n//tells the Proxy to save the Model. In this case it will perform a PUT request to /users/123 as this Model already has an id\nuser.save({\n    success: function() {\n        console.log('The User was updated');\n    }\n});\n\n//tells the Proxy to destroy the Model. Performs a DELETE request to /users/123\nuser.destroy({\n    success: function() {\n        console.log('The User was destroyed!');\n    }\n});\n</code></pre>\n\n<h1>Usage in Stores</h1>\n\n<p>It is very common to want to load a set of Model instances to be displayed and manipulated in the UI. We do this by\ncreating a <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Store</a>:</p>\n\n<pre><code>var store = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n    model: 'User'\n});\n\n//uses the Proxy we set up on Model to load the Store data\nstore.load();\n</code></pre>\n\n<p>A Store is just a collection of Model instances - usually loaded from a server somewhere. Store can also maintain a\nset of added, updated and removed Model instances to be synchronized with the server via the Proxy. See the <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Store docs</a> for more information on Stores.</p>\n","name":"Ext.data.Model","id":"class-Ext.data.Model"}