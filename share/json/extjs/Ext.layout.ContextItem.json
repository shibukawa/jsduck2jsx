{"autodetected":{"aliases":true,"requires":true,"uses":true,"extends":true,"members":true,"alternateClassNames":true,"code_type":true,"mixins":true},"short_doc":"This class manages state information for a component or element during a layout. ...","aliases":{},"requires":["Ext.layout.ClassList"],"files":[{"linenr":21,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"},{"linenr":23,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/diag/layout/ContextItem.js"}],"tagname":"class","uses":[],"extends":"Ext.Base","members":[{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'Ext.Base'","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":763,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"$className","doc":"\n","inheritdoc":null,"id":"property-S-className","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"['border-top-width', 'border-right-width', 'border-bottom-width', 'border-left-width']","owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":623,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"borderNames","doc":"\n","inheritdoc":null,"id":"property-borderNames","html_type":"Array","linenr":623},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":68,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"boxChildren","doc":"<p>plaed here by AbstractComponent.getSizeModel</p>\n","inheritdoc":null,"id":"property-boxChildren","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":72,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"boxParent","doc":"\n","inheritdoc":null,"id":"property-boxParent","html_type":"Object","linenr":72},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":628,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"cacheMissHandlers","doc":"\n","inheritdoc":null,"id":"property-cacheMissHandlers","html_type":"Object","linenr":628},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":75,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"children","doc":"\n","inheritdoc":null,"id":"property-children","html_type":"Array","linenr":75},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":772,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configMap","doc":"\n","inheritdoc":null,"id":"property-configMap","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":" ...","default":"0","owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":90,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"consumersContainerHeight","doc":"\n","inheritdoc":null,"id":"property-consumersContainerHeight","html_type":"Number","linenr":90},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":" ...","default":"0","owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":91,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"consumersContainerWidth","doc":"\n","inheritdoc":null,"id":"property-consumersContainerWidth","html_type":"Number","linenr":91},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":" ...","default":"0","owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":88,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"consumersContentHeight","doc":"\n","inheritdoc":null,"id":"property-consumersContentHeight","html_type":"Number","linenr":88},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":" ...","default":"0","owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":89,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"consumersContentWidth","doc":"\n","inheritdoc":null,"id":"property-consumersContentWidth","html_type":"Number","linenr":89},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":" ...","default":"0","owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":92,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"consumersHeight","doc":"\n","inheritdoc":null,"id":"property-consumersHeight","html_type":"Number","linenr":92},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":" ...","default":"0","owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":93,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"consumersWidth","doc":"\n","inheritdoc":null,"id":"property-consumersWidth","html_type":"Number","linenr":93},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":77,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"dirty","doc":"\n","inheritdoc":null,"id":"property-dirty","html_type":"Object","linenr":77},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"The number of dirty properties ...","default":"0","owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":79,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"dirtyCount","doc":"<p>The number of dirty properties</p>\n","inheritdoc":null,"id":"property-dirtyCount","html_type":"Number","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":82,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"hasRawContent","doc":"\n","inheritdoc":null,"id":"property-hasRawContent","html_type":"Boolean","linenr":82},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":52,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"heightModel","doc":"\n","inheritdoc":null,"id":"property-heightModel","html_type":"Object","linenr":52},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":769,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigList","doc":"\n","inheritdoc":null,"id":"property-initConfigList","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":775,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigMap","doc":"\n","inheritdoc":null,"id":"property-initConfigMap","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":73,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"isBorderBoxValue","doc":"\n","inheritdoc":null,"id":"property-isBorderBoxValue","html_type":"Object","linenr":73},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":84,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"isContextItem","doc":"\n","inheritdoc":null,"id":"property-isContextItem","html_type":"Boolean","linenr":84},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"isInstance","doc":"\n","inheritdoc":null,"id":"property-isInstance","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"false","owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":86,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"isTopLevel","doc":"\n","inheritdoc":null,"id":"property-isTopLevel","html_type":"Boolean","linenr":86},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"['margin-top', 'margin-right', 'margin-bottom', 'margin-left']","owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":624,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"marginNames","doc":"\n","inheritdoc":null,"id":"property-marginNames","html_type":"Array","linenr":624},{"autodetected":{"default":true,"inheritable":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"There are several cases that allow us to skip (opt out) of laying out a component\nand its children as long as its las...","default":"false","owner":"Ext.layout.ContextItem","inheritable":null,"readonly":true,"tagname":"property","files":[{"linenr":56,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"optOut","properties":null,"doc":"<p>There are several cases that allow us to skip (opt out) of laying out a component\nand its children as long as its <code>lastBox</code> is not marked as <code>invalid</code>. If anything\nhappens to change things, the <code>lastBox</code> is marked as <code>invalid</code> by <code>updateLayout</code>\nas it ascends the component hierarchy.</p>\n","inheritdoc":null,"id":"property-optOut","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":95,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"ownerCtContext","doc":"\n","inheritdoc":null,"id":"property-ownerCtContext","html_type":"Object","linenr":95},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":68,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"ownerSizePolicy","doc":"\n","inheritdoc":null,"id":"property-ownerSizePolicy","html_type":"Object","linenr":68},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"['padding-top', 'padding-right', 'padding-bottom', 'padding-left']","owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":625,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"paddingNames","doc":"\n","inheritdoc":null,"id":"property-paddingNames","html_type":"Array","linenr":625},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":99,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"props","doc":"<p>the current set of property values:</p>\n","inheritdoc":null,"id":"property-props","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":" ...","default":"0","owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":97,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"remainingChildDimensions","doc":"\n","inheritdoc":null,"id":"property-remainingChildDimensions","html_type":"Number","linenr":97},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.Class","short_doc":"Get the reference to the current class from which this object was instantiated. ...","default":null,"owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1045,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"private":null,"static":null,"name":"self","properties":null,"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","inheritdoc":null,"id":"property-self","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":54,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"sizeModel","doc":"\n","inheritdoc":null,"id":"property-sizeModel","html_type":"Object","linenr":54},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"State variables that are cleared when invalidated. ...","default":null,"owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":102,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":null,"static":null,"name":"state","properties":null,"doc":"<p>State variables that are cleared when invalidated. Only applies to component items.</p>\n","inheritdoc":null,"id":"property-state","html_type":"Object","linenr":null},{"autodetected":{},"type":"Object","short_doc":"Adds x and y values from a props object to a styles object as \"left\" and \"top\" values. ...","default":null,"owner":"Ext.layout.ContextItem","tagname":"property","files":[{"linenr":552,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"return":{"type":"Number","properties":null,"doc":"<p>count The number of styles that were set.</p>\n","name":"return","html_type":"Number"},"private":true,"name":"styles","properties":null,"doc":"<p>Adds x and y values from a props object to a styles object as \"left\" and \"top\" values.\nOverridden to add the x property as \"right\" in rtl mode.A styles object for an Element</p>\n","id":"property-styles","html_type":"Object"},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{x: 'left', y: 'top'}","owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1637,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"translateProps","doc":"\n","inheritdoc":null,"id":"property-translateProps","html_type":"Object","linenr":1637},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"['top', 'right', 'bottom', 'left']","owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":626,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"trblNames","doc":"\n","inheritdoc":null,"id":"property-trblNames","html_type":"Array","linenr":626},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.layout.ContextItem","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":53,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"widthModel","doc":"\n","inheritdoc":null,"id":"property-widthModel","html_type":"Object","linenr":53},{"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"True if this item wraps a Component (rather than an Element). ...","default":"false","owner":"Ext.layout.ContextItem","inheritable":null,"readonly":true,"tagname":"property","files":[{"linenr":108,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":null,"static":null,"name":"wrapsComponent","properties":null,"doc":"<p>True if this item wraps a Component (rather than an Element).</p>\n","inheritdoc":null,"id":"property-wrapsComponent","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"readonly":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":true,"readonly":null,"tagname":"property","files":[{"linenr":133,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"$onExtended","doc":"\n","inheritdoc":null,"id":"static-property-S-onExtended","html_type":"Array","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":115,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"return":{"type":"Ext.layout.ContextItem","doc":"\n","html_type":"<a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a>"},"private":null,"static":null,"name":"constructor","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-constructor","fires":null,"linenr":115},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds a block. ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the block list ('blocks' or 'domBlocks').</p>\n","name":"name","html_type":"String"},{"type":"Ext.layout.Layout","tagname":"params","doc":"<p>The layout that is blocked.</p>\n","name":"layout","html_type":"<a href=\"#!/api/Ext.layout.Layout\" rel=\"Ext.layout.Layout\" class=\"docClass\">Ext.layout.Layout</a>"},{"type":"String","tagname":"params","doc":"<p>The property name that blocked the layout (e.g., 'width').</p>\n","name":"propName","html_type":"String"}],"tagname":"method","files":[{"linenr":506,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"},{"linenr":34,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/diag/layout/ContextItem.js"}],"private":true,"static":null,"name":"addBlock","doc":"<p>Adds a block.</p>\n\n<p><strong>Overridden in Ext.diag.layout.ContextItem.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-addBlock","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Overridden in Ext.diag.layout.ContextItem. ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"boxChildItem","html_type":"Object"}],"tagname":"method","files":[{"linenr":526,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"},{"linenr":42,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/diag/layout/ContextItem.js"}],"private":true,"static":null,"name":"addBoxChild","doc":"<p><strong>Overridden in Ext.diag.layout.ContextItem.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-addBoxChild","fires":null,"linenr":526},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Queue the addition of a class name (or array of class names) to this ContextItem's target when next flushed. ...","method_calls":["getClassList"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"newCls","html_type":"Object"}],"tagname":"method","files":[{"linenr":492,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":null,"static":null,"name":"addCls","doc":"<p>Queue the addition of a class name (or array of class names) to this ContextItem's target when next flushed.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addCls","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds a trigger. ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The property name that triggers the layout (e.g., 'width').</p>\n","name":"propName","html_type":"String"},{"type":"Boolean","tagname":"params","doc":"<p>True if the trigger list is <code>domTriggers</code>, false if <code>triggers</code>.</p>\n","name":"inDom","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":576,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"},{"linenr":59,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/diag/layout/ContextItem.js"}],"private":true,"static":null,"name":"addTrigger","doc":"<p>Adds a trigger.</p>\n\n<p><strong>Overridden in Ext.diag.layout.ContextItem.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-addTrigger","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Registers a layout in the block list for the given property. ...","method_calls":["addBlock"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Ext.layout.Layout","tagname":"params","doc":"\n","name":"layout","html_type":"<a href=\"#!/api/Ext.layout.Layout\" rel=\"Ext.layout.Layout\" class=\"docClass\">Ext.layout.Layout</a>"},{"type":"String","tagname":"params","doc":"<p>The property name that blocked the layout (e.g., 'width').</p>\n","name":"propName","html_type":"String"}],"tagname":"method","files":[{"linenr":703,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":null,"static":null,"name":"block","doc":"<p>Registers a layout in the block list for the given property. Once the property is\nset in the <a href=\"#!/api/Ext.layout.Context\" rel=\"Ext.layout.Context\" class=\"docClass\">Ext.layout.Context</a>, the layout is unblocked.</p>\n","chainable":false,"inheritdoc":null,"id":"method-block","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["markDirty"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":609,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"boxChildMeasured","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-boxChildMeasured","fires":[],"linenr":609},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":1269,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the overridden method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callOverridden","doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"method-callOverridden","deprecated":{"text":"<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the \"parent\" method of the current method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":846,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the parent method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callParent","doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","chainable":false,"inheritdoc":null,"id":"method-callParent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":961,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the superclass method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callSuper","doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","chainable":false,"inheritdoc":null,"id":"method-callSuper","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Defined in override Ext.diag.layout.ContextItem. ...","method_calls":["getLayoutName"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"prop","html_type":"Object"}],"tagname":"method","files":[{"linenr":74,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/diag/layout/ContextItem.js"}],"private":true,"static":null,"name":"checkAuthority","doc":"<p><strong>Defined in override Ext.diag.layout.ContextItem.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-checkAuthority","fires":[],"linenr":74},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"entry","html_type":"Object"}],"tagname":"method","files":[{"linenr":659,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"checkCache","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-checkCache","fires":null,"linenr":659},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["clearBlocks"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":663,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"clearAllBlocks","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-clearAllBlocks","fires":[],"linenr":663},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes any blocks on a property in the specified set. ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the block list ('blocks' or 'domBlocks').</p>\n","name":"name","html_type":"String"},{"type":"String","tagname":"params","doc":"<p>The property name that blocked the layout (e.g., 'width').</p>\n","name":"propName","html_type":"String"}],"tagname":"method","files":[{"linenr":674,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"},{"linenr":100,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/diag/layout/ContextItem.js"}],"private":true,"static":null,"name":"clearBlocks","doc":"<p>Removes any blocks on a property in the specified set. Any layouts that were blocked\nby this property and are not still blocked (by other properties) will be rescheduled.</p>\n\n<p><strong>Overridden in Ext.diag.layout.ContextItem.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-clearBlocks","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"clears the margin cache so that marginInfo get re-read from the dom on the next call to getMarginInfo()\nThis is neede...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1039,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":null,"static":null,"name":"clearMarginCache","doc":"<p>clears the margin cache so that marginInfo get re-read from the dom on the next call to getMarginInfo()\nThis is needed in some special cases where the margins have changed since the last layout, making the cached\nvalues invalid.  For example collapsed window headers have different margin than expanded ones.</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearMarginCache","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":766,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configClass","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-configClass","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.state.Stateful","link":"<a href=\"#!/api/Ext.state.Stateful-method-destroy\" rel=\"Ext.state.Stateful-method-destroy\" class=\"docClass\">Ext.state.Stateful.destroy</a>","name":"destroy"},{"owner":"Ext.AbstractComponent","link":"<a href=\"#!/api/Ext.AbstractComponent-method-destroy\" rel=\"Ext.AbstractComponent-method-destroy\" class=\"docClass\">Ext.AbstractComponent.destroy</a>","name":"destroy"},{"owner":"Ext.AbstractPlugin","link":"<a href=\"#!/api/Ext.AbstractPlugin-method-destroy\" rel=\"Ext.AbstractPlugin-method-destroy\" class=\"docClass\">Ext.AbstractPlugin.destroy</a>","name":"destroy"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1261,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"destroy","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-destroy","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Registers a layout in the DOM block list for the given property. ...","method_calls":["addBlock"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Ext.layout.Layout","tagname":"params","doc":"\n","name":"layout","html_type":"<a href=\"#!/api/Ext.layout.Layout\" rel=\"Ext.layout.Layout\" class=\"docClass\">Ext.layout.Layout</a>"},{"type":"String","tagname":"params","doc":"<p>The property name that blocked the layout (e.g., 'width').</p>\n","name":"propName","html_type":"String"}],"tagname":"method","files":[{"linenr":714,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":null,"static":null,"name":"domBlock","doc":"<p>Registers a layout in the DOM block list for the given property. Once the property\nflushed to the DOM by the <a href=\"#!/api/Ext.layout.Context\" rel=\"Ext.layout.Context\" class=\"docClass\">Ext.layout.Context</a>, the layout is unblocked.</p>\n","chainable":false,"inheritdoc":null,"id":"method-domBlock","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Reschedules any layouts associated with a given trigger. ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the trigger list ('triggers' or 'domTriggers').</p>\n","name":"name","html_type":"String"},{"type":"String","tagname":"params","doc":"<p>The property name that triggers the layout (e.g., 'width').</p>\n","name":"propName","html_type":"String"}],"tagname":"method","files":[{"linenr":725,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"fireTriggers","doc":"<p>Reschedules any layouts associated with a given trigger.</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireTriggers","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Flushes any updates in the dirty collection to the DOM. ...","method_calls":["writeProps"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":749,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":null,"static":null,"name":"flush","doc":"<p>Flushes any updates in the dirty collection to the DOM. This is only called if there\nare dirty entries because this object is only added to the flushQueue of the\n<a href=\"#!/api/Ext.layout.Context\" rel=\"Ext.layout.Context\" class=\"docClass\">Ext.layout.Context</a> when entries become dirty.</p>\n","chainable":false,"inheritdoc":null,"id":"method-flush","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["peek","writeProps"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":794,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"flushAnimations","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-flushAnimations","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the border information for the element as an object with left, top, right and\nbottom properties holding border s...","method_calls":["checkCache"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":859,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"return":{"type":"Object","properties":null,"doc":"\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getBorderInfo","doc":"<p>Gets the border information for the element as an object with left, top, right and\nbottom properties holding border size in pixels. This object is only read from the\nDOM on first request and is cached.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getBorderInfo","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns a ClassList-like object to buffer access to this item's element's classes. ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":876,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":null,"static":null,"name":"getClassList","doc":"<p>Returns a ClassList-like object to buffer access to this item's element's classes.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getClassList","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":1196,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"getConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets a property of this object if it is correct in the DOM. ...","method_calls":["addTrigger"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The property name (e.g., 'width').</p>\n","name":"propName","html_type":"String"}],"tagname":"method","files":[{"linenr":1080,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The property value or undefined if not yet set or is dirty.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getDomProp","doc":"<p>Gets a property of this object if it is correct in the DOM. Also tracks the current\nlayout as dependent on this property so that DOM writes of it will trigger the\nlayout to be recalculated.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getDomProp","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the context item for an owned element. ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"String/Ext.dom.Element","tagname":"params","doc":"<p>The element or the name of an owned element</p>\n","name":"nameOrEl","html_type":"String/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"type":"Ext.layout.container.Container/Ext.Component","tagname":"params","doc":"<p>The owner of the\nnamed element if the passed \"nameOrEl\" parameter is a String. Defaults to this\nContextItem's \"target\" property.  For more details on owned elements see\n<a href=\"#!/api/Ext.Component-cfg-childEls\" rel=\"Ext.Component-cfg-childEls\" class=\"docClass\">childEls</a> and\n<a href=\"#!/api/Ext.Component-cfg-renderSelectors\" rel=\"Ext.Component-cfg-renderSelectors\" class=\"docClass\">renderSelectors</a></p>\n","name":"owner","optional":true,"html_type":"<a href=\"#!/api/Ext.layout.container.Container\" rel=\"Ext.layout.container.Container\" class=\"docClass\">Ext.layout.container.Container</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"}],"tagname":"method","files":[{"linenr":883,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"},{"linenr":115,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/diag/layout/ContextItem.js"}],"return":{"type":"Ext.layout.ContextItem","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a>"},"private":null,"static":null,"name":"getEl","doc":"<p>Returns the context item for an owned element. This should only be called on a\ncomponent's item. The list of child items is used to manage invalidating calculated\nresults.</p>\n\n<p><strong>Overridden in Ext.diag.layout.ContextItem.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-getEl","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the \"frame\" information for the element as an object with left, top, right and\nbottom properties holding border+...","method_calls":["getBorderInfo"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":926,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"return":{"type":"Object","properties":null,"doc":"\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getFrameInfo","doc":"<p>Gets the \"frame\" information for the element as an object with left, top, right and\nbottom properties holding border+framing size in pixels. This object is calculated\non first request and is cached.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getFrameInfo","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>Name of the config option to return.</p>\n","name":"name","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":1206,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object/Mixed","properties":null,"doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","name":"return","html_type":"Object/Mixed"},"private":null,"static":null,"name":"getInitialConfig","doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getInitialConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the margin information for the element as an object with left, top, right and\nbottom properties holding margin s...","method_calls":["checkCache","parseMargins","setProp"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":955,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"return":{"type":"Object","properties":null,"doc":"\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getMarginInfo","doc":"<p>Gets the margin information for the element as an object with left, top, right and\nbottom properties holding margin size in pixels. This object is only read from the\nDOM on first request and is cached.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getMarginInfo","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the padding information for the element as an object with left, top, right and\nbottom properties holding padding...","method_calls":["checkCache"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1049,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"return":{"type":"Object","properties":null,"doc":"\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getPaddingInfo","doc":"<p>Gets the padding information for the element as an object with left, top, right and\nbottom properties holding padding size in pixels. This object is only read from the\nDOM on first request and is cached.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getPaddingInfo","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets a property of this object. ...","method_calls":["addTrigger"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The property name that blocked the layout (e.g., 'width').</p>\n","name":"propName","html_type":"String"}],"tagname":"method","files":[{"linenr":1066,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The property value or undefined if not yet set.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getProp","doc":"<p>Gets a property of this object. Also tracks the current layout as dependent on this\nproperty so that changes to it will trigger the layout to be recalculated.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getProp","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns a style for this item. ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The CSS style name.</p>\n","name":"styleName","html_type":"String"}],"tagname":"method","files":[{"linenr":1095,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The value of the DOM style (parsed as necessary).</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getStyle","doc":"<p>Returns a style for this item. Each style is read from the DOM only once on first\nrequest and is then cached. If the value is an integer, it is parsed automatically\n(so '5px' is not returned, but rather 5).</p>\n","chainable":false,"inheritdoc":null,"id":"method-getStyle","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns styles for this item. ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"String[]","tagname":"params","doc":"<p>The CSS style names.</p>\n","name":"styleNames","html_type":"String[]"},{"type":"String[]","tagname":"params","doc":"<p>The alternate names for the returned styles. If given,\nthese names must correspond one-for-one to the <code>styleNames</code>.</p>\n","name":"altNames","optional":true,"html_type":"String[]"}],"tagname":"method","files":[{"linenr":1124,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The values of the DOM styles (parsed as necessary).</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getStyles","doc":"<p>Returns styles for this item. Each style is read from the DOM only once on first\nrequest and is then cached. If the value is an integer, it is parsed automatically\n(so '5px' is not returned, but rather 5).</p>\n","chainable":false,"inheritdoc":null,"id":"method-getStyles","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1156,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"hasConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-hasConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns true if the given property is correct in the DOM. ...","method_calls":["getDomProp"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The property name (e.g., 'width').</p>\n","name":"propName","html_type":"String"}],"tagname":"method","files":[{"linenr":1199,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"return":{"type":"Boolean","properties":null,"doc":"\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"hasDomProp","doc":"<p>Returns true if the given property is correct in the DOM. This is equivalent to\ncalling <a href=\"#!/api/Ext.layout.ContextItem-method-getDomProp\" rel=\"Ext.layout.ContextItem-method-getDomProp\" class=\"docClass\">getDomProp</a> and not getting an undefined result. In particular,\nthis call registers the current layout to be triggered by flushes of this property.</p>\n","chainable":false,"inheritdoc":null,"id":"method-hasDomProp","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns true if the given property has been set. ...","method_calls":["getProp"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The property name (e.g., 'width').</p>\n","name":"propName","html_type":"String"}],"tagname":"method","files":[{"linenr":1187,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"return":{"type":"Boolean","properties":null,"doc":"\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"hasProp","doc":"<p>Returns true if the given property has been set. This is equivalent to calling\n<a href=\"#!/api/Ext.layout.ContextItem-method-getProp\" rel=\"Ext.layout.ContextItem-method-getProp\" class=\"docClass\">getProp</a> and not getting an undefined result. In particular, this call\nregisters the current layout to be triggered by changes to this property.</p>\n","chainable":false,"inheritdoc":null,"id":"method-hasProp","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Clears all properties on this object except (perhaps) those not calculated by this\ncomponent. ...","method_calls":["clearAllBlocks","getEl","recoverProp"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>True if all properties are to be invalidated, false to keep\nthose calculated by the ownerCt.</p>\n","name":"full","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":212,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"},{"linenr":125,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/diag/layout/ContextItem.js"}],"return":{"type":"Mixed","properties":null,"doc":"<p>A value to pass as the first argument to <a href=\"#!/api/Ext.layout.ContextItem-method-initContinue\" rel=\"Ext.layout.ContextItem-method-initContinue\" class=\"docClass\">initContinue</a>.</p>\n","name":"return","html_type":"Mixed"},"private":true,"static":null,"name":"init","doc":"<p>Clears all properties on this object except (perhaps) those not calculated by this\ncomponent. This is more complex than it would seem because a layout can decide to\ninvalidate its results and run the component's layouts again, but since some of the\nvalues may be calculated by the container, care must be taken to preserve those\nvalues.</p>\n\n<p><strong>Overridden in Ext.diag.layout.ContextItem.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-init","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":468,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"initAnimation","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-initAnimation","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Initialize configuration for this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1090,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":null,"static":null,"name":"initConfig","doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"method-initConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"full","html_type":"Object"}],"tagname":"method","files":[{"linenr":411,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"initContinue","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-initContinue","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"containerLayoutDone","html_type":"Object"}],"tagname":"method","files":[{"linenr":442,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"initDone","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-initDone","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Invalidates the component associated with this item. ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","doc":"<p>An object to <a href=\"#!/api/Ext-method-apply\" rel=\"Ext-method-apply\" class=\"docClass\">Ext.apply</a> to the <a href=\"#!/api/Ext.layout.ContextItem-property-state\" rel=\"Ext.layout.ContextItem-property-state\" class=\"docClass\">state</a>\n of this item after invalidation clears all other properties.</p>\n","name":"state","html_type":"Object"},{"type":"Function","tagname":"params","properties":[{"type":"Ext.layout.ContextItem","tagname":"params","doc":"<p>This ContextItem.</p>\n","name":"item","html_type":"<a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a>"},{"type":"Object","tagname":"params","doc":"<p>The options object passed to <a href=\"#!/api/Ext.layout.ContextItem-method-invalidate\" rel=\"Ext.layout.ContextItem-method-invalidate\" class=\"docClass\">invalidate</a>.</p>\n","name":"options","html_type":"Object"}],"doc":"<p>A function to call after the context data is cleared\nand before the <a href=\"#!/api/Ext.layout.Layout-method-beginLayoutCycle\" rel=\"Ext.layout.Layout-method-beginLayoutCycle\" class=\"docClass\">Ext.layout.Layout.beginLayoutCycle</a> methods are called.</p>\n","name":"before","html_type":"Function"},{"type":"Function","tagname":"params","properties":[{"type":"Ext.layout.ContextItem","tagname":"params","doc":"<p>This ContextItem.</p>\n","name":"item","html_type":"<a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a>"},{"type":"Object","tagname":"params","doc":"<p>The options object passed to <a href=\"#!/api/Ext.layout.ContextItem-method-invalidate\" rel=\"Ext.layout.ContextItem-method-invalidate\" class=\"docClass\">invalidate</a>.</p>\n","name":"options","html_type":"Object"}],"doc":"<p>A function to call after the context data is cleared\nand after the <a href=\"#!/api/Ext.layout.Layout-method-beginLayoutCycle\" rel=\"Ext.layout.Layout-method-beginLayoutCycle\" class=\"docClass\">Ext.layout.Layout.beginLayoutCycle</a> methods are called.</p>\n","name":"after","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope to use when calling the callback functions.</p>\n","name":"scope","html_type":"Object"}],"doc":"<p>An object describing how to handle the invalidation.</p>\n","name":"options","html_type":"Object"}],"tagname":"method","files":[{"linenr":1211,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"},{"linenr":140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/diag/layout/ContextItem.js"}],"private":null,"static":null,"name":"invalidate","doc":"<p>Invalidates the component associated with this item. The layouts for this component\nand all of its contained items will be re-run after first clearing any computed\nvalues.</p>\n\n<p>If state needs to be carried forward beyond the invalidation, the <code>options</code> parameter\ncan be used.</p>\n\n<p><strong>Overridden in Ext.diag.layout.ContextItem.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-invalidate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1236,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"markDirty","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-markDirty","fires":null,"linenr":1236},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1243,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"onBoxMeasured","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onBoxMeasured","fires":null,"linenr":1243},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"names","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"callback","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":1224,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"onConfigUpdate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onConfigUpdate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["parseMargins"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"comp","html_type":"Object"},{"type":"Object","name":"margins","html_type":"Object"},{"type":"Object","name":"defaultMargins","html_type":"Object"}],"tagname":"method","files":[{"linenr":1255,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"parseMargins","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-parseMargins","fires":[],"linenr":1255},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"propName","html_type":"Object"}],"tagname":"method","files":[{"linenr":1280,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"peek","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-peek","fires":null,"linenr":1280},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Recovers a property value from the last computation and restores its value and\ndirty state. ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the property to recover.</p>\n","name":"propName","html_type":"String"},{"type":"Object","tagname":"params","doc":"<p>The old \"props\" object from which to recover values.</p>\n","name":"oldProps","html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>The old \"dirty\" object from which to recover state.</p>\n","name":"oldDirty","html_type":"Object"}],"tagname":"method","files":[{"linenr":1284,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":null,"static":null,"name":"recoverProp","doc":"<p>Recovers a property value from the last computation and restores its value and\ndirty state.</p>\n","chainable":false,"inheritdoc":null,"id":"method-recoverProp","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["revertProps"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"deep","html_type":"Object"}],"tagname":"method","files":[{"linenr":1307,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"redo","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-redo","fires":[],"linenr":1307},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Queue the removal of a class name (or array of class names) from this ContextItem's target when next flushed. ...","method_calls":["getClassList"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"removeCls","html_type":"Object"}],"tagname":"method","files":[{"linenr":499,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":null,"static":null,"name":"removeCls","doc":"<p>Queue the removal of a class name (or array of class names) from this ContextItem's target when next flushed.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeCls","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes a cached ContextItem that was created using getEl. ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"String/Ext.dom.Element","tagname":"params","doc":"<p>The element or the name of an owned element</p>\n","name":"nameOrEl","html_type":"String/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"type":"Ext.layout.container.Container/Ext.Component","tagname":"params","doc":"<p>The owner of the\nnamed element if the passed \"nameOrEl\" parameter is a String. Defaults to this\nContextItem's \"target\" property.</p>\n","name":"owner","optional":true,"html_type":"<a href=\"#!/api/Ext.layout.container.Container\" rel=\"Ext.layout.container.Container\" class=\"docClass\">Ext.layout.container.Container</a>/<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"}],"tagname":"method","files":[{"linenr":1328,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":null,"static":null,"name":"removeEl","doc":"<p>Removes a cached ContextItem that was created using <a href=\"#!/api/Ext.layout.ContextItem-method-getEl\" rel=\"Ext.layout.ContextItem-method-getEl\" class=\"docClass\">getEl</a>.  It may be\nnecessary to call this method if the dom reference for owned element changes so\nthat <a href=\"#!/api/Ext.layout.ContextItem-method-getEl\" rel=\"Ext.layout.ContextItem-method-getEl\" class=\"docClass\">getEl</a> can be called again to reinitialize the ContextItem with the\nnew element.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeEl","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["writeProps"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"props","html_type":"Object"}],"tagname":"method","files":[{"linenr":1366,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"revertProps","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-revertProps","fires":[],"linenr":1366},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Queue the setting of a DOM attribute on this ContextItem's target when next flushed. ...","method_calls":["markDirty"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"value","html_type":"Object"}],"tagname":"method","files":[{"linenr":1380,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":null,"static":null,"name":"setAttribute","doc":"<p>Queue the setting of a DOM attribute on this ContextItem's target when next flushed.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setAttribute","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["setProp","setSize"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"box","html_type":"Object"}],"tagname":"method","files":[{"linenr":1392,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"setBox","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-setBox","fires":[],"linenr":1392},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"},{"type":"Object","name":"applyIfNotSet","html_type":"Object"}],"tagname":"method","files":[{"linenr":1164,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"static":null,"name":"setConfig","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-setConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the contentHeight property. ...","method_calls":["setProp"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"height","html_type":"Object"},{"type":"Object","name":"measured","html_type":"Object"}],"tagname":"method","files":[{"linenr":1408,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":null,"static":null,"name":"setContentHeight","doc":"<p>Sets the contentHeight property. If the component uses raw content, then only the\nmeasured height is acceptable.</p>\n\n<p>Calculated values can sometimes be NaN or undefined, which generally mean the\ncalculation is not done. To indicate that such as value was passed, 0 is returned.\nOtherwise, 1 is returned.</p>\n\n<p>If the caller is not measuring (i.e., they are calculating) and the component has raw\ncontent, 1 is returned indicating that the caller is done.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setContentHeight","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the contentWidth and contentHeight properties. ...","method_calls":["setContentHeight","setContentWidth"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"width","html_type":"Object"},{"type":"Object","name":"height","html_type":"Object"},{"type":"Object","name":"measured","html_type":"Object"}],"tagname":"method","files":[{"linenr":1446,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":null,"static":null,"name":"setContentSize","doc":"<p>Sets the contentWidth and contentHeight properties. If the component uses raw content,\nthen only the measured values are acceptable.</p>\n\n<p>Calculated values can sometimes be NaN or undefined, which generally means that the\ncalculation is not done. To indicate that either passed value was such a value, false\nreturned. Otherwise, true is returned.</p>\n\n<p>If the caller is not measuring (i.e., they are calculating) and the component has raw\ncontent, true is returned indicating that the caller is done.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setContentSize","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the contentWidth property. ...","method_calls":["setProp"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"width","html_type":"Object"},{"type":"Object","name":"measured","html_type":"Object"}],"tagname":"method","files":[{"linenr":1427,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":null,"static":null,"name":"setContentWidth","doc":"<p>Sets the contentWidth property. If the component uses raw content, then only the\nmeasured width is acceptable.</p>\n\n<p>Calculated values can sometimes be NaN or undefined, which generally means that the\ncalculation is not done. To indicate that such as value was passed, 0 is returned.\nOtherwise, 1 is returned.</p>\n\n<p>If the caller is not measuring (i.e., they are calculating) and the component has raw\ncontent, 1 is returned indicating that the caller is done.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setContentWidth","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the height and constrains the height to min/maxHeight range. ...","method_calls":["getFrameInfo","setProp"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The height.</p>\n","name":"height","html_type":"Number"},{"type":"Boolean","default":"true","tagname":"params","doc":"<p>Specifies if the value is currently in the DOM. A\nvalue of <code>false</code> indicates that the value is already in the DOM.</p>\n","name":"dirty","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":1523,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"},{"linenr":178,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/diag/layout/ContextItem.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The actual height after constraining.</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"setHeight","doc":"<p>Sets the height and constrains the height to min/maxHeight range.</p>\n\n<p><strong>Overridden in Ext.diag.layout.ContextItem.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-setHeight","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets a property value. ...","method_calls":["clearBlocks","fireTriggers","getBorderInfo","getPaddingInfo","markDirty"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The property name (e.g., 'width').</p>\n","name":"propName","html_type":"String"},{"type":"Object","tagname":"params","doc":"<p>The new value of the property.</p>\n","name":"value","html_type":"Object"},{"type":"Boolean","tagname":"params","doc":"<p>Optionally specifies if the value is currently in the DOM\n (default is <code>true</code> which indicates the value is not in the DOM and must be flushed\n at some point).</p>\n","name":"dirty","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":1462,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"},{"linenr":153,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/diag/layout/ContextItem.js"}],"return":{"type":"Number","properties":null,"doc":"<p>1 if this call specified the property value, 0 if not.</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"setProp","doc":"<p>Sets a property value. This will unblock and/or trigger dependent layouts if the\nproperty value is being changed. Values of NaN and undefined are not accepted by\nthis method.</p>\n\n<p><strong>Overridden in Ext.diag.layout.ContextItem.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-setProp","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["setHeight","setWidth"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"width","html_type":"Object"},{"type":"Object","name":"height","html_type":"Object"},{"type":"Object","name":"dirty","html_type":"Object"}],"tagname":"method","files":[{"linenr":1632,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"setSize","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-setSize","fires":[],"linenr":1632},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the height and constrains the width to min/maxWidth range. ...","method_calls":["getFrameInfo","setProp"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The width.</p>\n","name":"width","html_type":"Number"},{"type":"Boolean","default":"true","tagname":"params","doc":"<p>Specifies if the value is currently in the DOM. A\nvalue of <code>false</code> indicates that the value is already in the DOM.</p>\n","name":"dirty","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":1574,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"},{"linenr":186,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/diag/layout/ContextItem.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The actual width after constraining.</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"setWidth","doc":"<p>Sets the height and constrains the width to min/maxWidth range.</p>\n\n<p><strong>Overridden in Ext.diag.layout.ContextItem.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-setWidth","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the reference to the class from which this object was instantiated. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":778,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Class","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"private":null,"static":null,"name":"statics","doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-statics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["revertProps"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"deep","html_type":"Object"}],"tagname":"method","files":[{"linenr":1642,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"undo","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-undo","fires":[],"linenr":1642},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"propName","html_type":"Object"}],"tagname":"method","files":[{"linenr":1663,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"unsetProp","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-unsetProp","fires":null,"linenr":1663},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["addPositionStyles","clearBlocks","fireTriggers"],"owner":"Ext.layout.ContextItem","inheritable":null,"params":[{"type":"Object","name":"dirtyProps","html_type":"Object"},{"type":"Object","name":"flushing","html_type":"Object"}],"tagname":"method","files":[{"linenr":1672,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/ContextItem.js"}],"private":true,"static":null,"name":"writeProps","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-writeProps","fires":[],"linenr":1672},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":176,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-addConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":256,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addInheritableStatics","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addInheritableStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"member","html_type":"Object"}],"tagname":"method","files":[{"linenr":353,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addMember","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addMember","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add methods / properties to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":296,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"addMembers","doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addMembers","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add / override static properties of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":218,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"addStatics","doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"xtype","html_type":"Object"}],"tagname":"method","files":[{"linenr":730,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addXtype","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addXtype","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Borrow another class' members to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Ext.Base","tagname":"params","doc":"<p>The class to borrow members from</p>\n","name":"fromClass","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"type":"Array/String","tagname":"params","doc":"<p>The names of the members to borrow</p>\n","name":"members","html_type":"Array/String"}],"tagname":"method","files":[{"linenr":383,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":true,"name":"borrow","doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-borrow","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-static-method-create\" rel=\"Ext.layout.Layout-static-method-create\" class=\"docClass\">Ext.layout.Layout.create</a>","name":"create"}],"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create a new instance of this Class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":60,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object","properties":null,"doc":"<p>the created instance.</p>\n","name":"return","html_type":"Object"},"static":true,"private":null,"name":"create","doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-create","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create aliases for existing prototype methods. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","name":"alias","html_type":"String/Object"},{"type":"String/Object","tagname":"params","doc":"<p>The original method name</p>\n","name":"origin","html_type":"String/Object"}],"tagname":"method","files":[{"linenr":696,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"createAlias","doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"static-method-createAlias","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":81,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"extend","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-extend","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the current class' name in string format. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":677,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"String","properties":null,"doc":"<p>className</p>\n","name":"return","html_type":"String"},"static":true,"private":null,"name":"getName","doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"static-method-getName","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds members to class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":373,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"implement","doc":"<p>Adds members to class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-implement","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n","version":"4.1"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Used internally by the mixins pre-processor ...","method_calls":["addConfig","hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"mixinClass","html_type":"Object"}],"tagname":"method","files":[{"linenr":595,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"mixin","doc":"<p>Used internally by the mixins pre-processor</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-mixin","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":162,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"onExtended","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-onExtended","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Override members of this class. ...","method_calls":["addConfig","addInheritableStatics"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":452,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this class</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"override","doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","chainable":true,"inheritdoc":null,"id":"static-method-override","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n","version":"4.1.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"triggerExtended","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-triggerExtended","fires":null,"linenr":null}],"alternateClassNames":[],"code_type":"ext_define","private":true,"mixins":[],"doc":"<p>This class manages state information for a component or element during a layout.</p>\n\n<h1>Blocks</h1>\n\n<p>A \"block\" is a required value that is preventing further calculation. When a layout has\nencountered a situation where it cannot possibly calculate results, it can associate\nitself with the context item and missing property so that it will not be rescheduled\nuntil that property is set.</p>\n\n<p>Blocks are a one-shot registration. Once the property changes, the block is removed.</p>\n\n<p>Be careful with blocks. If <em>any</em> further calculations can be made, a block is not the\nright choice.</p>\n\n<h1>Triggers</h1>\n\n<p>Whenever any call to <a href=\"#!/api/Ext.layout.ContextItem-method-getProp\" rel=\"Ext.layout.ContextItem-method-getProp\" class=\"docClass\">getProp</a>, <a href=\"#!/api/Ext.layout.ContextItem-method-getDomProp\" rel=\"Ext.layout.ContextItem-method-getDomProp\" class=\"docClass\">getDomProp</a>, <a href=\"#!/api/Ext.layout.ContextItem-method-hasProp\" rel=\"Ext.layout.ContextItem-method-hasProp\" class=\"docClass\">hasProp</a> or\n<a href=\"#!/api/Ext.layout.ContextItem-method-hasDomProp\" rel=\"Ext.layout.ContextItem-method-hasDomProp\" class=\"docClass\">hasDomProp</a> is made, the current layout is automatically registered as being\ndependent on that property in the appropriate state. Any changes to the property will\ntrigger the layout and it will be queued in the <a href=\"#!/api/Ext.layout.Context\" rel=\"Ext.layout.Context\" class=\"docClass\">Ext.layout.Context</a>.</p>\n\n<p>Triggers, once added, remain for the entire layout. Any changes to the property will\nreschedule all unfinished layouts in their trigger set.</p>\n","name":"Ext.layout.ContextItem","id":"class-Ext.layout.ContextItem"}