{"autodetected":{},"singleton":true,"aliases":{},"files":[{"linenr":25,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/misc/JSON.js"}],"tagname":"class","members":[{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Decodes (parses) a JSON string to an object. ...","method_calls":null,"owner":"Ext.JSON","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The JSON string</p>\n","name":"json","html_type":"String"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True to return null, false to throw an exception if the JSON is invalid.</p>\n","name":"safe","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":252,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/misc/JSON.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The resulting object</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"decode","doc":"<p>Decodes (parses) a JSON string to an object. If the JSON is invalid, this function throws\na SyntaxError unless the safe option is set.</p>\n","chainable":false,"inheritdoc":null,"id":"method-decode","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Encodes an Object, Array or other value. ...","method_calls":null,"owner":"Ext.JSON","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The variable to encode</p>\n","name":"o","html_type":"Object"}],"tagname":"method","files":[{"linenr":233,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/misc/JSON.js"}],"return":{"type":"String","properties":null,"doc":"<p>The JSON string</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"encode","doc":"<p>Encodes an Object, Array or other value.</p>\n\n<p>If the environment's native JSON encoding is not being used (<a href=\"#!/api/Ext-property-USE_NATIVE_JSON\" rel=\"Ext-property-USE_NATIVE_JSON\" class=\"docClass\">Ext.USE_NATIVE_JSON</a> is not set,\nor the environment does not support it), then ExtJS's encoding will be used. This allows the developer\nto add a <code>toJSON</code> method to their classes which need serializing to return a valid JSON representation\nof the object.</p>\n","chainable":false,"inheritdoc":null,"id":"method-encode","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Encodes a Date. ...","method_calls":null,"owner":"Ext.JSON","inheritable":null,"params":[{"type":"Date","tagname":"params","doc":"<p>The Date to encode</p>\n","name":"d","html_type":"Date"}],"tagname":"method","files":[{"linenr":209,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/misc/JSON.js"}],"return":{"type":"String","properties":null,"doc":"<p>The string literal to use in a JSON string.</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"encodeDate","doc":"<p>Encodes a Date. This returns the actual string which is inserted into the JSON string as the literal\nexpression. <strong>The returned value includes enclosing double quotation marks.</strong></p>\n\n<p>The default return format is <code>\"yyyy-mm-ddThh:mm:ss\"</code>.</p>\n\n<p>To override this:</p>\n\n<pre><code><a href=\"#!/api/Ext.JSON-method-encodeDate\" rel=\"Ext.JSON-method-encodeDate\" class=\"docClass\">Ext.JSON.encodeDate</a> = function(d) {\n    return <a href=\"#!/api/Ext.Date-method-format\" rel=\"Ext.Date-method-format\" class=\"docClass\">Ext.Date.format</a>(d, '\"Y-m-d\"');\n};\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-encodeDate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Encodes a String. ...","method_calls":null,"owner":"Ext.JSON","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The String to encode</p>\n","name":"s","html_type":"String"}],"tagname":"method","files":[{"linenr":181,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/misc/JSON.js"}],"return":{"type":"String","properties":null,"doc":"<p>The string literal to use in a JSON string.</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"encodeString","doc":"<p>Encodes a String. This returns the actual string which is inserted into the JSON string as the literal\nexpression. <strong>The returned value includes enclosing double quotation marks.</strong></p>\n\n<p>To override this:</p>\n\n<pre><code><a href=\"#!/api/Ext.JSON-method-encodeString\" rel=\"Ext.JSON-method-encodeString\" class=\"docClass\">Ext.JSON.encodeString</a> = function(s) {\n    return 'Foo' + s;\n};\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"method-encodeString","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"The function which encode uses to encode all javascript values to their JSON representations\nwhen Ext.USE_NATIVE_JSON...","method_calls":null,"owner":"Ext.JSON","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>Any javascript value to be converted to its JSON representation</p>\n","name":"o","html_type":"Object"}],"tagname":"method","files":[{"linenr":197,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/misc/JSON.js"}],"return":{"type":"String","properties":null,"doc":"<p>The JSON representation of the passed value.</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"encodeValue","doc":"<p>The function which <a href=\"#!/api/Ext.JSON-method-encode\" rel=\"Ext.JSON-method-encode\" class=\"docClass\">encode</a> uses to encode all javascript values to their JSON representations\nwhen <a href=\"#!/api/Ext-property-USE_NATIVE_JSON\" rel=\"Ext-property-USE_NATIVE_JSON\" class=\"docClass\">Ext.USE_NATIVE_JSON</a> is <code>false</code>.</p>\n\n<p>This is made public so that it can be replaced with a custom implementation.</p>\n","chainable":null,"inheritdoc":null,"id":"method-encodeValue","fires":null,"linenr":null}],"alternateClassNames":[],"doc":"<p>Modified version of <a href=\"http://www.json.org/js.html\">Douglas Crockford's JSON.js</a> that doesn't\nmess with the Object prototype.</p>\n","name":"Ext.JSON","id":"class-Ext.JSON"}