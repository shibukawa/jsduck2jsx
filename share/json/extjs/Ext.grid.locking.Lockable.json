{"autodetected":{"aliases":true,"requires":true,"uses":true,"extends":true,"members":true,"alternateClassNames":true,"code_type":true,"mixins":true},"short_doc":"Lockable is a private mixin which injects lockable behavior into any\nTablePanel subclass such as GridPanel or TreePanel. ...","aliases":{},"requires":["Ext.grid.locking.View","Ext.grid.header.Container","Ext.grid.locking.HeaderContainer","Ext.view.Table"],"files":[{"linenr":21,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"tagname":"class","uses":[],"extends":"Ext.Base","members":[{"autodetected":{},"type":"Object","default":null,"owner":"Ext.grid.locking.Lockable","tagname":"cfg","files":[{"linenr":88,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"name":"lockedGridConfig","properties":null,"doc":"<p>Any special configuration options for the locked part of the grid</p>\n","id":"cfg-lockedGridConfig","html_type":"Object"},{"autodetected":{},"type":"Object","short_doc":"A view configuration to be applied to the\nlocked side of the grid. ...","default":null,"owner":"Ext.grid.locking.Lockable","tagname":"cfg","files":[{"linenr":68,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"name":"lockedViewConfig","properties":null,"doc":"<p>A view configuration to be applied to the\nlocked side of the grid. Any conflicting configurations between lockedViewConfig\nand viewConfig will be overwritten by the lockedViewConfig.</p>\n","id":"cfg-lockedViewConfig","html_type":"Object"},{"autodetected":{},"type":"Object","default":null,"owner":"Ext.grid.locking.Lockable","tagname":"cfg","files":[{"linenr":93,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"name":"normalGridConfig","properties":null,"doc":"<p>Any special configuration options for the normal part of the grid</p>\n","id":"cfg-normalGridConfig","html_type":"Object"},{"autodetected":{},"type":"Object","short_doc":"A view configuration to be applied to the\nnormal/unlocked side of the grid. ...","default":null,"owner":"Ext.grid.locking.Lockable","tagname":"cfg","files":[{"linenr":74,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"name":"normalViewConfig","properties":null,"doc":"<p>A view configuration to be applied to the\nnormal/unlocked side of the grid. Any conflicting configurations between normalViewConfig\nand viewConfig will be overwritten by the normalViewConfig.</p>\n","id":"cfg-normalViewConfig","html_type":"Object"},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Number","short_doc":"Number of pixels to scroll when scrolling the locked section with mousewheel. ...","default":"40","owner":"Ext.grid.locking.Lockable","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":82,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":null,"static":null,"name":"scrollDelta","properties":null,"doc":"<p>Number of pixels to scroll when scrolling the locked section with mousewheel.</p>\n","inheritdoc":null,"id":"cfg-scrollDelta","html_type":"Number","evented":null,"linenr":null},{"autodetected":{},"type":"String","short_doc":"The xtype of the subgrid to specify. ...","default":null,"owner":"Ext.grid.locking.Lockable","tagname":"cfg","files":[{"linenr":61,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"name":"subGridXType","properties":null,"doc":"<p>The xtype of the subgrid to specify. If this is\nnot specified lockable will determine the subgrid xtype to create by the\nfollowing rule. Use the superclasses xtype if the superclass is NOT\ntablepanel, otherwise use the xtype itself.</p>\n","id":"cfg-subGridXType","html_type":"String"},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"Synchronize rowHeight between the normal and\nlocked grid view. ...","default":"true","owner":"Ext.grid.locking.Lockable","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":53,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":null,"static":null,"name":"syncRowHeight","properties":null,"doc":"<p>Synchronize rowHeight between the normal and\nlocked grid view. This is turned on by default. If your grid is guaranteed\nto have rows of all the same height, you should set this to false to\noptimize performance.</p>\n","inheritdoc":null,"id":"cfg-syncRowHeight","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'Ext.Base'","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":763,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"$className","doc":"\n","inheritdoc":null,"id":"property-S-className","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":"Required for the Lockable Mixin. ...","default":"['invalidateScrollerOnRefresh', 'hideHeaders', 'enableColumnHide', 'enableColumnMove', 'enableColumnResize', 'sortableColumns', 'columnLines', 'rowLines']","owner":"Ext.grid.locking.Lockable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":108,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"bothCfgCopy","doc":"<p>Required for the Lockable Mixin. These are the configurations which will be copied to the\nnormal and locked sub tablepanels</p>\n","inheritdoc":null,"id":"property-bothCfgCopy","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":772,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configMap","doc":"\n","inheritdoc":null,"id":"property-configMap","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":769,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigList","doc":"\n","inheritdoc":null,"id":"property-initConfigList","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":775,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigMap","doc":"\n","inheritdoc":null,"id":"property-initConfigMap","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"isInstance","doc":"\n","inheritdoc":null,"id":"property-isInstance","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'Lock'","owner":"Ext.grid.locking.Lockable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":103,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"lockText","doc":"<p>\n<locale></locale></p>\n","inheritdoc":null,"id":"property-lockText","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.grid.locking.Lockable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":126,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"lockedCfgCopy","doc":"\n","inheritdoc":null,"id":"property-lockedCfgCopy","html_type":"Array","linenr":126},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"['verticalScroller', 'verticalScrollDock', 'verticalScrollerType', 'scroll']","owner":"Ext.grid.locking.Lockable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":120,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"normalCfgCopy","doc":"\n","inheritdoc":null,"id":"property-normalCfgCopy","html_type":"Array","linenr":120},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.Class","short_doc":"Get the reference to the current class from which this object was instantiated. ...","default":null,"owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1045,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"private":null,"static":null,"name":"self","properties":null,"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","inheritdoc":null,"id":"property-self","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":"i8n text ...","default":"'Unlock'","owner":"Ext.grid.locking.Lockable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":100,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"unlockText","doc":"<p>i8n text\n<locale></locale></p>\n","inheritdoc":null,"id":"property-unlockText","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"readonly":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":true,"readonly":null,"tagname":"property","files":[{"linenr":133,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"$onExtended","doc":"\n","inheritdoc":null,"id":"static-property-S-onExtended","html_type":"Array","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Due to automatic component border setting using inline style, to create the scrollbar-replacing\nbottom border, we hav...","method_calls":null,"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":541,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"afterLockedViewLayout","doc":"<p>Due to automatic component border setting using inline style, to create the scrollbar-replacing\nbottom border, we have to postprocess the locked view <em>after</em> render.\nIf there are visible normal columns, we do need the fat bottom border.</p>\n","chainable":false,"inheritdoc":null,"id":"method-afterLockedViewLayout","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":1269,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the overridden method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callOverridden","doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"method-callOverridden","deprecated":{"text":"<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the \"parent\" method of the current method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":846,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the parent method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callParent","doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","chainable":false,"inheritdoc":null,"id":"method-callParent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":961,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the superclass method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callSuper","doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","chainable":false,"inheritdoc":null,"id":"method-callSuper","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":766,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configClass","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-configClass","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1009,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"constructLockableFeatures","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-constructLockableFeatures","fires":null,"linenr":1009},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1050,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"constructLockablePlugins","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-constructLockablePlugins","fires":null,"linenr":1050},{"overrides":[{"owner":"Ext.state.Stateful","link":"<a href=\"#!/api/Ext.state.Stateful-method-destroy\" rel=\"Ext.state.Stateful-method-destroy\" class=\"docClass\">Ext.state.Stateful.destroy</a>","name":"destroy"},{"owner":"Ext.AbstractComponent","link":"<a href=\"#!/api/Ext.AbstractComponent-method-destroy\" rel=\"Ext.AbstractComponent-method-destroy\" class=\"docClass\">Ext.AbstractComponent.destroy</a>","name":"destroy"},{"owner":"Ext.AbstractPlugin","link":"<a href=\"#!/api/Ext.AbstractPlugin-method-destroy\" rel=\"Ext.AbstractPlugin-method-destroy\" class=\"docClass\">Ext.AbstractPlugin.destroy</a>","name":"destroy"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1261,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"destroy","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-destroy","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1100,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"destroyLockable","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-destroyLockable","fires":null,"linenr":1100},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getXTypes"],"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[{"type":"Object","name":"lockedSide","html_type":"Object"}],"tagname":"method","files":[{"linenr":128,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"determineXTypeToCreate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-determineXTypeToCreate","fires":[],"linenr":128},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Used when calculating total locked column width in processColumns\nUse shrinkwrapping of child columns if no top level...","method_calls":["getColumnWidth"],"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[{"type":"Object","name":"column","html_type":"Object"}],"tagname":"method","files":[{"linenr":520,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"getColumnWidth","doc":"<p>Used when calculating total locked column width in processColumns\nUse shrinkwrapping of child columns if no top level width.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getColumnWidth","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":1196,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"getConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>Name of the config option to return.</p>\n","name":"name","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":1206,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object/Mixed","properties":null,"doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","name":"return","html_type":"Object/Mixed"},"private":null,"static":null,"name":"getInitialConfig","doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getInitialConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":450,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"getLockingViewConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getLockingViewConfig","fires":null,"linenr":450},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[{"type":"Object","name":"getMenuItems","html_type":"Object"},{"type":"Object","name":"locked","html_type":"Object"}],"tagname":"method","files":[{"linenr":722,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"getMenuItems","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getMenuItems","fires":null,"linenr":722},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1156,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"hasConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-hasConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Initialize configuration for this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1090,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":null,"static":null,"name":"initConfig","doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"method-initConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"injectLockable will be invoked before initComponent's parent class implementation\nis called, so throughout this metho...","method_calls":["addCls","addEvents","addStateEvents","constructLockableFeatures","constructLockablePlugins","determineXTypeToCreate","findPlugin","getSelectionModel","modifyHeaderCt","processColumns","relayEvents","relayHeaderCtEvents"],"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":156,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"injectLockable","doc":"<p>injectLockable will be invoked before initComponent's parent class implementation\nis called, so throughout this method this. are configurations</p>\n","chainable":false,"inheritdoc":null,"id":"method-injectLockable","fires":["<a href=\"#!/api/Ext.grid.locking.Lockable-event-processcolumns\" rel=\"Ext.grid.locking.Lockable-event-processcolumns\" class=\"docClass\">processcolumns</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Locks the activeHeader as determined by which menu is open OR a header\nas specified. ...","method_calls":["fireEvent","syncLockedWidth"],"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[{"type":"Ext.grid.column.Column","tagname":"params","doc":"<p>Header to unlock from the locked section.\nDefaults to the header which has the menu open currently.</p>\n","name":"header","optional":true,"html_type":"<a href=\"#!/api/Ext.grid.column.Column\" rel=\"Ext.grid.column.Column\" class=\"docClass\">Ext.grid.column.Column</a>"},{"type":"Number","tagname":"params","doc":"<p>The index to move the unlocked header to.\nDefaults to appending as the last item.</p>\n","name":"toIdx","optional":true,"html_type":"Number"}],"tagname":"method","files":[{"linenr":871,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"lock","doc":"<p>Locks the activeHeader as determined by which menu is open OR a header\nas specified.</p>\n","chainable":false,"inheritdoc":null,"id":"method-lock","fires":["<a href=\"#!/api/Ext.grid.locking.Lockable-event-lockcolumn\" rel=\"Ext.grid.locking.Lockable-event-lockcolumn\" class=\"docClass\">lockcolumn</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"inject Lock and Unlock text\nHide/show Lock/Unlock options ...","method_calls":["getMenuItems"],"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":681,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"modifyHeaderCt","doc":"<p>inject Lock and Unlock text\nHide/show Lock/Unlock options</p>\n","chainable":false,"inheritdoc":null,"id":"method-modifyHeaderCt","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"names","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"callback","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":1224,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"onConfigUpdate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onConfigUpdate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["lock"],"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":695,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"onLockMenuClick","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onLockMenuClick","fires":["<a href=\"#!/api/Ext.grid.locking.Lockable-event-lockcolumn\" rel=\"Ext.grid.locking.Lockable-event-lockcolumn\" class=\"docClass\">lockcolumn</a>"],"linenr":695},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["syncLockedWidth"],"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":834,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"onLockedHeaderAdd","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onLockedHeaderAdd","fires":[],"linenr":834},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["syncLockedWidth"],"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":846,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"onLockedHeaderHide","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onLockedHeaderHide","fires":[],"linenr":846},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["syncLockedWidth"],"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":842,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"onLockedHeaderResize","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onLockedHeaderResize","fires":[],"linenr":842},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["syncLockedWidth"],"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":850,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"onLockedHeaderShow","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onLockedHeaderShow","fires":[],"linenr":850},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[{"type":"Object","name":"headerCt","html_type":"Object"},{"type":"Object","name":"header","html_type":"Object"},{"type":"Object","name":"sortState","html_type":"Object"}],"tagname":"method","files":[{"linenr":854,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"onLockedHeaderSortChange","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onLockedHeaderSortChange","fires":null,"linenr":854},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Listen for mousewheel events on the locked section which does not scroll. ...","method_calls":["onNormalViewScroll"],"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":564,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"onLockedViewMouseWheel","doc":"<p>Listen for mousewheel events on the locked section which does not scroll.\nScroll it in response, and the other section will automatically sync.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onLockedViewMouseWheel","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":597,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"onLockedViewScroll","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onLockedViewScroll","fires":null,"linenr":597},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[{"type":"Object","name":"headerCt","html_type":"Object"},{"type":"Object","name":"header","html_type":"Object"},{"type":"Object","name":"sortState","html_type":"Object"}],"tagname":"method","files":[{"linenr":862,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"onNormalHeaderSortChange","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onNormalHeaderSortChange","fires":null,"linenr":862},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":620,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"onNormalViewScroll","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onNormalViewScroll","fires":null,"linenr":620},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["unlock"],"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":691,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"onUnlockMenuClick","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onUnlockMenuClick","fires":["<a href=\"#!/api/Ext.grid.locking.Lockable-event-unlockcolumn\" rel=\"Ext.grid.locking.Lockable-event-unlockcolumn\" class=\"docClass\">unlockcolumn</a>"],"linenr":691},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["fireEvent","getColumnWidth"],"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[{"type":"Object","name":"columns","html_type":"Object"}],"tagname":"method","files":[{"linenr":459,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"processColumns","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-processColumns","fires":["<a href=\"#!/api/Ext.grid.locking.Lockable-event-processcolumns\" rel=\"Ext.grid.locking.Lockable-event-processcolumns\" class=\"docClass\">processcolumns</a>"],"linenr":459},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"we want to totally override the reconfigure behaviour here, since we're creating 2 sub-grids ...","method_calls":["processColumns","syncLockedWidth"],"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[{"type":"Object","name":"store","html_type":"Object"},{"type":"Object","name":"columns","html_type":"Object"}],"tagname":"method","files":[{"linenr":972,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"reconfigureLockable","doc":"<p>we want to totally override the reconfigure behaviour here, since we're creating 2 sub-grids</p>\n","chainable":false,"inheritdoc":null,"id":"method-reconfigureLockable","fires":["<a href=\"#!/api/Ext.grid.locking.Lockable-event-processcolumns\" rel=\"Ext.grid.locking.Lockable-event-processcolumns\" class=\"docClass\">processcolumns</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"},{"type":"Object","name":"applyIfNotSet","html_type":"Object"}],"tagname":"method","files":[{"linenr":1164,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"static":null,"name":"setConfig","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-setConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getMenu"],"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[{"type":"Object","name":"t","html_type":"Object"},{"type":"Object","name":"header","html_type":"Object"}],"tagname":"method","files":[{"linenr":699,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"showMenuBy","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-showMenuBy","fires":[],"linenr":699},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the reference to the class from which this object was instantiated. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":778,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Class","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"private":null,"static":null,"name":"statics","doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-statics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Updates the overall view after columns have been resized, or moved from\nthe locked to unlocked side or vice-versa. ...","method_calls":null,"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":755,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p><code>true</code> if there are visible locked columns which need refreshing.</p>\n","name":"return","html_type":"Boolean"},"private":true,"static":null,"name":"syncLockedWidth","doc":"<p>Updates the overall view after columns have been resized, or moved from\nthe locked to unlocked side or vice-versa.</p>\n\n<p>If all columns are removed from either side, that side must be hidden, and the\nsole remaining column owning grid then becomes <em>the</em> grid. It must flex to occupy the\nwhole of the locking view. And it must also allow scrolling.</p>\n\n<p>If columns are shared between the two sides, the <em>locked</em> grid shrinkwraps the\nwidth of the visible locked columns while the normal grid flexes in what space remains.</p>\n","chainable":false,"inheritdoc":null,"id":"method-syncLockedWidth","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Synchronizes the row heights between the locked and non locked portion of the grid for each\nrow. ...","method_calls":null,"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":652,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":null,"static":null,"name":"syncRowHeights","doc":"<p>Synchronizes the row heights between the locked and non locked portion of the grid for each\nrow. If one row is smaller than the other, the height will be increased to match the larger one.</p>\n","chainable":false,"inheritdoc":null,"id":"method-syncRowHeights","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Unlocks the activeHeader as determined by which menu is open OR a header\nas specified. ...","method_calls":["fireEvent","syncLockedWidth"],"owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[{"type":"Ext.grid.column.Column","tagname":"params","doc":"<p>Header to unlock from the locked section.\nDefaults to the header which has the menu open currently.</p>\n","name":"header","optional":true,"html_type":"<a href=\"#!/api/Ext.grid.column.Column\" rel=\"Ext.grid.column.Column\" class=\"docClass\">Ext.grid.column.Column</a>"},{"type":"Number","default":"0","tagname":"params","doc":"<p>The index to move the unlocked header to.</p>\n","name":"toIdx","optional":true,"html_type":"Number"}],"tagname":"method","files":[{"linenr":930,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":true,"static":null,"name":"unlock","doc":"<p>Unlocks the activeHeader as determined by which menu is open OR a header\nas specified.</p>\n","chainable":false,"inheritdoc":null,"id":"method-unlock","fires":["<a href=\"#!/api/Ext.grid.locking.Lockable-event-unlockcolumn\" rel=\"Ext.grid.locking.Lockable-event-unlockcolumn\" class=\"docClass\">unlockcolumn</a>"],"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":176,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-addConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":256,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addInheritableStatics","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addInheritableStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"member","html_type":"Object"}],"tagname":"method","files":[{"linenr":353,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addMember","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addMember","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add methods / properties to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":296,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"addMembers","doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addMembers","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add / override static properties of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":218,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"addStatics","doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"xtype","html_type":"Object"}],"tagname":"method","files":[{"linenr":730,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addXtype","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addXtype","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Borrow another class' members to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Ext.Base","tagname":"params","doc":"<p>The class to borrow members from</p>\n","name":"fromClass","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"type":"Array/String","tagname":"params","doc":"<p>The names of the members to borrow</p>\n","name":"members","html_type":"Array/String"}],"tagname":"method","files":[{"linenr":383,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":true,"name":"borrow","doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-borrow","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-static-method-create\" rel=\"Ext.layout.Layout-static-method-create\" class=\"docClass\">Ext.layout.Layout.create</a>","name":"create"}],"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create a new instance of this Class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":60,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object","properties":null,"doc":"<p>the created instance.</p>\n","name":"return","html_type":"Object"},"static":true,"private":null,"name":"create","doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-create","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create aliases for existing prototype methods. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","name":"alias","html_type":"String/Object"},{"type":"String/Object","tagname":"params","doc":"<p>The original method name</p>\n","name":"origin","html_type":"String/Object"}],"tagname":"method","files":[{"linenr":696,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"createAlias","doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"static-method-createAlias","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":81,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"extend","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-extend","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the current class' name in string format. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":677,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"String","properties":null,"doc":"<p>className</p>\n","name":"return","html_type":"String"},"static":true,"private":null,"name":"getName","doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"static-method-getName","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds members to class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":373,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"implement","doc":"<p>Adds members to class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-implement","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n","version":"4.1"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Used internally by the mixins pre-processor ...","method_calls":["addConfig","hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"mixinClass","html_type":"Object"}],"tagname":"method","files":[{"linenr":595,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"mixin","doc":"<p>Used internally by the mixins pre-processor</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-mixin","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":162,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"onExtended","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-onExtended","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Override members of this class. ...","method_calls":["addConfig","addInheritableStatics"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":452,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this class</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"override","doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","chainable":true,"inheritdoc":null,"id":"static-method-override","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n","version":"4.1.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"triggerExtended","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-triggerExtended","fires":null,"linenr":null},{"type":null,"autodetected":{"inheritable":true,"static":true,"private":true,"linenr":true},"short_doc":"Fired whenever the filter set changes. ...","owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[{"type":"Ext.data.Store","tagname":"params","doc":"<p>The store.</p>\n","name":"store","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Ext.util.Filter[]","tagname":"params","doc":"<p>The array of Filter objects.</p>\n","name":"filters","html_type":"<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>[]"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":437,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"return":null,"private":null,"static":null,"name":"filterchange","doc":"<p>Fired whenever the filter set changes.</p>\n","throws":null,"inheritdoc":null,"id":"event-filterchange","linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"short_doc":"Fires when a column is locked. ...","owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[{"type":"Ext.grid.Panel","tagname":"params","doc":"<p>The gridpanel.</p>\n","name":"this","html_type":"<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>"},{"type":"Ext.grid.column.Column","tagname":"params","doc":"<p>The column being locked.</p>\n","name":"column","html_type":"<a href=\"#!/api/Ext.grid.column.Column\" rel=\"Ext.grid.column.Column\" class=\"docClass\">Ext.grid.column.Column</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":263,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":null,"static":null,"name":"lockcolumn","doc":"<p>Fires when a column is locked.</p>\n","inheritdoc":null,"id":"event-lockcolumn","linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"short_doc":"Fires when the configured (or reconfigured) column set is split into two depending on the locked flag. ...","owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[{"type":"Ext.grid.column.Column[]","tagname":"params","doc":"<p>The locked columns.</p>\n","name":"lockedColumns","html_type":"<a href=\"#!/api/Ext.grid.column.Column\" rel=\"Ext.grid.column.Column\" class=\"docClass\">Ext.grid.column.Column</a>[]"},{"type":"Ext.grid.column.Column[]","tagname":"params","doc":"<p>The normal columns.</p>\n","name":"normalColumns","html_type":"<a href=\"#!/api/Ext.grid.column.Column\" rel=\"Ext.grid.column.Column\" class=\"docClass\">Ext.grid.column.Column</a>[]"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":255,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":null,"static":null,"name":"processcolumns","doc":"<p>Fires when the configured (or <strong>reconfigured</strong>) column set is split into two depending on the <a href=\"#!/api/Ext.grid.column.Column-cfg-locked\" rel=\"Ext.grid.column.Column-cfg-locked\" class=\"docClass\">locked</a> flag.</p>\n","inheritdoc":null,"id":"event-processcolumns","linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"short_doc":"Fires when a column is unlocked. ...","owner":"Ext.grid.locking.Lockable","inheritable":null,"params":[{"type":"Ext.grid.Panel","tagname":"params","doc":"<p>The gridpanel.</p>\n","name":"this","html_type":"<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>"},{"type":"Ext.grid.column.Column","tagname":"params","doc":"<p>The column being unlocked.</p>\n","name":"column","html_type":"<a href=\"#!/api/Ext.grid.column.Column\" rel=\"Ext.grid.column.Column\" class=\"docClass\">Ext.grid.column.Column</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":271,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/locking/Lockable.js"}],"private":null,"static":null,"name":"unlockcolumn","doc":"<p>Fires when a column is unlocked.</p>\n","inheritdoc":null,"id":"event-unlockcolumn","linenr":null}],"alternateClassNames":["Ext.grid.Lockable"],"code_type":"ext_define","private":true,"mixins":[],"doc":"<p>Lockable is a private mixin which injects lockable behavior into any\nTablePanel subclass such as GridPanel or TreePanel. TablePanel will\nautomatically inject the <a href=\"#!/api/Ext.grid.locking.Lockable\" rel=\"Ext.grid.locking.Lockable\" class=\"docClass\">Ext.grid.locking.Lockable</a> mixin in when one of the\nthese conditions are met:</p>\n\n<ul>\n<li>The TablePanel has the lockable configuration set to true</li>\n<li>One of the columns in the TablePanel has locked set to true/false</li>\n</ul>\n\n\n<p>Each TablePanel subclass must register an alias. It should have an array\nof configurations to copy to the 2 separate tablepanel's that will be generated\nto note what configurations should be copied. These are named normalCfgCopy and\nlockedCfgCopy respectively.</p>\n\n<p>Columns which are locked must specify a fixed width. They do NOT support a\nflex width.</p>\n\n<p>Configurations which are specified in this class will be available on any grid or\ntree which is using the lockable functionality.</p>\n","name":"Ext.grid.locking.Lockable","id":"class-Ext.grid.locking.Lockable"}