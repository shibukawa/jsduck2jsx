{"autodetected":{"aliases":true,"requires":true,"uses":true,"extends":true,"members":true,"alternateClassNames":true,"code_type":true,"mixins":true},"short_doc":"A composite Sprite handles a group of sprites with common methods to a sprite\nsuch as hide, show, setAttributes. ...","aliases":{},"requires":[],"files":[{"linenr":21,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"tagname":"class","uses":[],"extends":"Ext.util.MixedCollection","members":[{"overrides":[{"owner":"Ext.util.AbstractMixedCollection","link":"<a href=\"#!/api/Ext.util.AbstractMixedCollection-cfg-allowFunctions\" rel=\"Ext.util.AbstractMixedCollection-cfg-allowFunctions\" class=\"docClass\">Ext.util.AbstractMixedCollection.allowFunctions</a>","name":"allowFunctions"}],"autodetected":{},"type":"Boolean","default":null,"owner":"Ext.util.MixedCollection","tagname":"cfg","files":[{"linenr":55,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/MixedCollection.js"}],"name":"allowFunctions","properties":null,"doc":"<p>Configure as <code>true</code> if the <a href=\"#!/api/Ext.util.MixedCollection-method-addAll\" rel=\"Ext.util.MixedCollection-method-addAll\" class=\"docClass\">addAll</a> function should add function references to the collection.</p>\n","id":"cfg-allowFunctions","html_type":"Boolean"},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":"The default sort direction to use if one is not specified. ...","default":"\"ASC\"","owner":"Ext.util.Sortable","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":37,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":null,"static":null,"name":"defaultSortDirection","properties":null,"doc":"<p>The default sort direction to use if one is not specified.</p>\n","inheritdoc":null,"id":"cfg-defaultSortDirection","html_type":"String","evented":null,"linenr":null},{"autodetected":{},"type":"Object","short_doc":"A config object containing one or more event handlers to be added to this object during initialization. ...","default":null,"owner":"Ext.util.Observable","tagname":"cfg","files":[{"linenr":197,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"name":"listeners","properties":null,"doc":"<p>A config object containing one or more event handlers to be added to this object during initialization. This\nshould be a valid listeners config object as specified in the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching multiple\nhandlers at once.</p>\n\n<p><strong>DOM events from Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></strong></p>\n\n<p>While <em>some</em> Ext JS Component classes export selected DOM events (e.g. \"click\", \"mouseover\" etc), this is usually\nonly done when extra value can be added. For example the <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>'s <strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong> event passing the node clicked on. To access DOM events directly from a\nchild element of a Component, we need to specify the <code>element</code> option to identify the Component property to add a\nDOM listener to:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n","id":"cfg-listeners","html_type":"Object"},{"autodetected":{},"type":"String","default":null,"owner":"Ext.util.Sortable","tagname":"cfg","files":[{"linenr":71,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"name":"sortRoot","properties":null,"doc":"<p>The property in each item that contains the data to sort.</p>\n","id":"cfg-sortRoot","html_type":"String"},{"autodetected":{},"type":"Ext.util.Sorter[]/Object[]","default":null,"owner":"Ext.util.Sortable","tagname":"cfg","files":[{"linenr":76,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"name":"sorters","properties":null,"doc":"<p>The initial set of <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Sorters</a></p>\n","id":"cfg-sorters","html_type":"<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]/Object[]"},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'Ext.Base'","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":763,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"$className","doc":"\n","inheritdoc":null,"id":"property-S-className","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"false","owner":"Ext.draw.CompositeSprite","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":56,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"private":true,"static":null,"name":"autoDestroy","doc":"\n","inheritdoc":null,"id":"property-autoDestroy","html_type":"Boolean","linenr":56},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":772,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configMap","doc":"\n","inheritdoc":null,"id":"property-configMap","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"Initial suspended call count. ...","default":"0","owner":"Ext.util.Observable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":237,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"eventsSuspended","doc":"<p>Initial suspended call count. Incremented when <a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a> is called, decremented when <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> is called.</p>\n","inheritdoc":null,"id":"property-eventsSuspended","html_type":"Number","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"Mutation counter which is incremented upon add and remove. ...","default":"0","owner":"Ext.util.AbstractMixedCollection","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":38,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"private":true,"static":null,"name":"generation","doc":"<p>Mutation counter which is incremented upon add and remove.</p>\n","inheritdoc":null,"id":"property-generation","html_type":"Number","linenr":null},{"autodetected":{},"type":"Object","short_doc":"This object holds a key for any event that has a listener. ...","default":null,"owner":"Ext.util.Observable","readonly":true,"tagname":"property","files":[{"linenr":243,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"name":"hasListeners","properties":null,"doc":"<p>This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class (via <a href=\"#!/api/Ext.util.Observable-static-method-observe\" rel=\"Ext.util.Observable-static-method-observe\" class=\"docClass\">observe</a>) or\non the <a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.</p>\n\n<p>The intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n","id":"property-hasListeners","html_type":"Object"},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"Mutation counter for the index map which is synchronized with the collection's mutation counter\nwhen the index map is...","default":"0","owner":"Ext.util.AbstractMixedCollection","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":43,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"private":true,"static":null,"name":"indexGeneration","doc":"<p>Mutation counter for the index map which is synchronized with the collection's mutation counter\nwhen the index map is interrogated and found to be out of sync and needed a rebuild.</p>\n","inheritdoc":null,"id":"property-indexGeneration","html_type":"Number","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":769,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigList","doc":"\n","inheritdoc":null,"id":"property-initConfigList","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":775,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigMap","doc":"\n","inheritdoc":null,"id":"property-initConfigMap","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.util.Animate","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":228,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Animate.js"}],"private":true,"static":null,"name":"isAnimate","doc":"\n","inheritdoc":null,"id":"property-isAnimate","html_type":"Boolean","linenr":228},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"End Definitions ...","default":"true","owner":"Ext.draw.CompositeSprite","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":58,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"private":true,"static":null,"name":"isCompositeSprite","doc":"<p>End Definitions</p>\n","inheritdoc":null,"id":"property-isCompositeSprite","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"isInstance","doc":"\n","inheritdoc":null,"id":"property-isInstance","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"true in this class to identify an object as an instantiated MixedCollection, or subclass thereof. ...","default":"true","owner":"Ext.util.AbstractMixedCollection","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":32,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"private":null,"static":null,"name":"isMixedCollection","properties":null,"doc":"<p><code>true</code> in this class to identify an object as an instantiated MixedCollection, or subclass thereof.</p>\n","inheritdoc":null,"id":"property-isMixedCollection","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"true in this class to identify an object as an instantiated Observable, or subclass thereof. ...","default":"true","owner":"Ext.util.Observable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":231,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"isObservable","properties":null,"doc":"<p><code>true</code> in this class to identify an object as an instantiated Observable, or subclass thereof.</p>\n","inheritdoc":null,"id":"property-isObservable","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"true in this class to identify an object as an instantiated Sortable, or subclass thereof. ...","default":"true","owner":"Ext.util.Sortable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":31,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":null,"static":null,"name":"isSortable","properties":null,"doc":"<p><code>true</code> in this class to identify an object as an instantiated Sortable, or subclass thereof.</p>\n","inheritdoc":null,"id":"property-isSortable","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.Class","short_doc":"Get the reference to the current class from which this object was instantiated. ...","default":null,"owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1045,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"private":null,"static":null,"name":"self","properties":null,"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","inheritdoc":null,"id":"property-self","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.util.MixedCollection","default":null,"owner":"Ext.util.Sortable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":89,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":null,"static":null,"name":"sorters","properties":null,"doc":"<p>The collection of <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Sorters</a> currently applied to this Store</p>\n","inheritdoc":null,"id":"property-sorters","html_type":"<a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>","linenr":null},{"autodetected":{"type":true,"default":true,"readonly":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":true,"readonly":null,"tagname":"property","files":[{"linenr":133,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"$onExtended","doc":"\n","inheritdoc":null,"id":"static-property-S-onExtended","html_type":"Array","linenr":null},{"overrides":[{"owner":"Ext.util.MixedCollection","link":"<a href=\"#!/api/Ext.util.MixedCollection-method-constructor\" rel=\"Ext.util.MixedCollection-method-constructor\" class=\"docClass\">Ext.util.MixedCollection.constructor</a>","name":"constructor"},{"owner":"Ext.draw.CompositeSprite","link":"<a href=\"#!/api/Ext.draw.CompositeSprite-method-constructor\" rel=\"Ext.draw.CompositeSprite-method-constructor\" class=\"docClass\">Ext.draw.CompositeSprite.constructor</a>","name":"constructor"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates new MixedCollection. ...","method_calls":["addEvents","callParent"],"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":60,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"return":{"type":"Ext.draw.CompositeSprite","doc":"\n","html_type":"<a href=\"#!/api/Ext.draw.CompositeSprite\" rel=\"Ext.draw.CompositeSprite\" class=\"docClass\">Ext.draw.CompositeSprite</a>"},"private":null,"static":null,"name":"constructor","doc":"<p>Creates new MixedCollection.</p>\n","chainable":false,"inheritdoc":null,"id":"method-constructor","fires":[],"linenr":60},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Performs the actual sorting based on a direction and a sorting function. ...","method_calls":["fireEvent"],"owner":"Ext.util.MixedCollection","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>Property to sort by ('key', 'value', or 'index')</p>\n","name":"property","html_type":"String"},{"type":"String","tagname":"params","doc":"<p>Direction to sort 'ASC' or 'DESC'. Defaults to 'ASC'.</p>\n","name":"dir","optional":true,"html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>Comparison function that defines the sort order.\nDefaults to sorting by numeric value.</p>\n","name":"fn","optional":true,"html_type":"Function"}],"tagname":"method","files":[{"linenr":81,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/MixedCollection.js"}],"private":true,"static":null,"name":"_sort","doc":"<p>Performs the actual sorting based on a direction and a sorting function. Internally,\nthis creates a temporary array of all items in the MixedCollection, sorts it and then writes\nthe sorted array data back into this.items and this.keys</p>\n","chainable":false,"inheritdoc":null,"id":"method-_sort","fires":["sort"],"linenr":null},{"overrides":[{"owner":"Ext.util.AbstractMixedCollection","link":"<a href=\"#!/api/Ext.util.AbstractMixedCollection-method-add\" rel=\"Ext.util.AbstractMixedCollection-method-add\" class=\"docClass\">Ext.util.AbstractMixedCollection.add</a>","name":"add"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Inherit docs from MixedCollection ...","since":"1.1.0","method_calls":["attachEvents","callParent"],"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"Object","name":"key","html_type":"Object"},{"type":"Object","name":"o","html_type":"Object"}],"tagname":"method","files":[{"linenr":135,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The item added.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"add","doc":"<p>Inherit docs from MixedCollection</p>\n","chainable":false,"inheritdoc":null,"id":"method-add","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds all elements of an Array or an Object to the collection. ...","since":"1.1.0","method_calls":["add","insert"],"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"Object/Array","tagname":"params","doc":"<p>An Object containing properties which will be added\nto the collection, or an Array of values, each of which are added to the collection.\nFunctions references will be added to the collection if <code><a href=\"#!/api/Ext.util.AbstractMixedCollection-cfg-allowFunctions\" rel=\"Ext.util.AbstractMixedCollection-cfg-allowFunctions\" class=\"docClass\">allowFunctions</a></code>\nhas been set to <code>true</code>.</p>\n","name":"objs","html_type":"Object/Array"}],"tagname":"method","files":[{"linenr":245,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"private":null,"static":null,"name":"addAll","doc":"<p>Adds all elements of an Array or an Object to the collection.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addAll","fires":["<a href=\"#!/api/Ext.util.AbstractMixedCollection-event-add\" rel=\"Ext.util.AbstractMixedCollection-event-add\" class=\"docClass\">add</a>","<a href=\"#!/api/Ext.util.AbstractMixedCollection-event-remove\" rel=\"Ext.util.AbstractMixedCollection-event-remove\" class=\"docClass\">remove</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds class to all sprites. ...","method_calls":["getSurface"],"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>CSS class name</p>\n","name":"cls","html_type":"String"}],"tagname":"method","files":[{"linenr":285,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"private":null,"static":null,"name":"addCls","doc":"<p>Adds class to all sprites.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addCls","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds the specified events to the list of events which this Observable may fire. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Object/String...","tagname":"params","doc":"<p>Either an object with event names as properties with\na value of <code>true</code>. For example:</p>\n\n<pre><code>this.addEvents({\n    storeloaded: true,\n    storecleared: true\n});\n</code></pre>\n\n<p>Or any number of event names as separate parameters. For example:</p>\n\n<pre><code>this.addEvents('storeloaded', 'storecleared');\n</code></pre>\n","name":"eventNames","html_type":"Object/String..."}],"tagname":"method","files":[{"linenr":800,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"addEvents","doc":"<p>Adds the specified events to the list of events which this Observable may fire.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addEvents","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.AbstractComponent","link":"<a href=\"#!/api/Ext.AbstractComponent-method-addListener\" rel=\"Ext.AbstractComponent-method-addListener\" class=\"docClass\">Ext.AbstractComponent.addListener</a>","name":"addListener"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Appends an event handler to this object. ...","method_calls":["addListener"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","name":"eventName","html_type":"String/Object"},{"type":"Function","tagname":"params","doc":"<p>The method the event invokes, or <em>if <code>scope</code> is specified, the </em>name* of the method within\nthe specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> plus the <code>options</code> parameter described below.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","name":"scope","html_type":"Object"},{"type":"Number","tagname":"params","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n\n","name":"delay","html_type":"Number"},{"type":"Boolean","tagname":"params","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n","name":"single","html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","name":"buffer","html_type":"Number"},{"type":"Ext.util.Observable","tagname":"params","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the event\n  was bubbled up from a child Observable.</p>\n\n","name":"target","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"type":"String","tagname":"params","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an element to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to elements of\n  <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the Component is rendered.\n  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n","name":"element","html_type":"String"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>When specified as <code>true</code>, the function returns A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call.</p>\n\n","name":"destroyable","optional":true,"html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n","name":"priority","optional":true,"html_type":"Number"}],"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> Unlike in ExtJS 3.x, the options object will also be passed as the last\nargument to every event handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":502,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"addListener","doc":"<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"mouseover\", this.onMouseOver, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: this.onCellClick,\n    mouseover: this.onMouseOver,\n    mouseout: this.onMouseOut,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: this.onCellClick, scope: this, single: true},\n    mouseover: {fn: panel.onMouseOver, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used. Note that\n<code>scope</code> MUST be specified to use this option:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: 'onCellClick', scope: this, single: true},\n    mouseover: {fn: 'onMouseOver', scope: panel}\n});\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-addListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds listeners to any Observable object (or Ext.Element) which are automatically removed when this Component is\ndestr...","method_calls":["addManagedListener"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":295,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"addManagedListener","doc":"<p>Adds listeners to any Observable object (or <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>) which are automatically removed when this Component is\ndestroyed.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addManagedListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"process the passed fx configuration. ...","method_calls":["stopAnimation"],"owner":"Ext.util.Animate","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":302,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Animate.js"}],"private":true,"static":null,"name":"anim","doc":"<ul>\n<li>process the passed fx configuration.</li>\n</ul>\n\n","chainable":false,"inheritdoc":null,"id":"method-anim","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Performs custom animation on this object. ...","method_calls":["anim"],"owner":"Ext.util.Animate","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>Configuration for <a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>.\nNote that the <a href=\"#!/api/Ext.fx.Anim-cfg-to\" rel=\"Ext.fx.Anim-cfg-to\" class=\"docClass\">to</a> config is required.</p>\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":230,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Animate.js"}],"return":{"type":"Object","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"animate","doc":"<p>Performs custom animation on this object.</p>\n\n<p>This method is applicable to both the <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Component</a> class and the <a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Sprite</a>\nclass. It performs animated transitions of certain properties of this object over a specified timeline.</p>\n\n<h3>Animating a <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Component</a></h3>\n\n<p>When animating a Component, the following properties may be specified in <code>from</code>, <code>to</code>, and <code>keyframe</code> objects:</p>\n\n<ul>\n<li><p><code>x</code> - The Component's page X position in pixels.</p></li>\n<li><p><code>y</code> - The Component's page Y position in pixels</p></li>\n<li><p><code>left</code> - The Component's <code>left</code> value in pixels.</p></li>\n<li><p><code>top</code> - The Component's <code>top</code> value in pixels.</p></li>\n<li><p><code>width</code> - The Component's <code>width</code> value in pixels.</p></li>\n<li><p><code>height</code> - The Component's <code>height</code> value in pixels.</p></li>\n<li><p><code>dynamic</code> - Specify as true to update the Component's layout (if it is a Container) at every frame of the animation.\n<em>Use sparingly as laying out on every intermediate size change is an expensive operation.</em></p></li>\n</ul>\n\n\n<p>For example, to animate a Window to a new size, ensuring that its internal layout and any shadow is correct:</p>\n\n<pre><code>myWindow = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Ext.window.Window</a>', {\n    title: 'Test Component animation',\n    width: 500,\n    height: 300,\n    layout: {\n        type: 'hbox',\n        align: 'stretch'\n    },\n    items: [{\n        title: 'Left: 33%',\n        margins: '5 0 5 5',\n        flex: 1\n    }, {\n        title: 'Left: 66%',\n        margins: '5 5 5 5',\n        flex: 2\n    }]\n});\nmyWindow.show();\nmyWindow.header.el.on('click', function() {\n    myWindow.animate({\n        to: {\n            width: (myWindow.getWidth() == 500) ? 700 : 500,\n            height: (myWindow.getHeight() == 300) ? 400 : 300\n        }\n    });\n});\n</code></pre>\n\n<p>For performance reasons, by default, the internal layout is only updated when the Window reaches its final <code>\"to\"</code>\nsize. If dynamic updating of the Window's child Components is required, then configure the animation with\n<code>dynamic: true</code> and the two child items will maintain their proportions during the animation.</p>\n","chainable":false,"inheritdoc":null,"id":"method-animate","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"Object","name":"o","html_type":"Object"}],"tagname":"method","files":[{"linenr":122,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"private":true,"static":null,"name":"attachEvents","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-attachEvents","fires":null,"linenr":122},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":1269,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the overridden method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callOverridden","doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"method-callOverridden","deprecated":{"text":"<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the \"parent\" method of the current method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":846,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the parent method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callParent","doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","chainable":false,"inheritdoc":null,"id":"method-callParent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":961,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the superclass method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callSuper","doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","chainable":false,"inheritdoc":null,"id":"method-callSuper","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Object","name":"o","html_type":"Object"},{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":127,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"captureArgs","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-captureArgs","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all items from the collection. ...","since":"1.1.0","method_calls":["fireEvent"],"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":796,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"private":null,"static":null,"name":"clear","doc":"<p>Removes all items from the collection.  Fires the <a href=\"#!/api/Ext.util.AbstractMixedCollection-event-clear\" rel=\"Ext.util.AbstractMixedCollection-event-clear\" class=\"docClass\">clear</a> event when complete.</p>\n","chainable":false,"inheritdoc":null,"id":"method-clear","fires":["<a href=\"#!/api/Ext.util.AbstractMixedCollection-event-clear\" rel=\"Ext.util.AbstractMixedCollection-event-clear\" class=\"docClass\">clear</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all listeners for this object including the managed listeners ...","method_calls":["clearManagedListeners"],"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":729,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"clearListeners","doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearListeners","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all managed listeners for this object. ...","method_calls":["removeManagedListenerItem"],"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"clearManagedListeners","doc":"<p>Removes all managed listeners for this object.</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearManagedListeners","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates a shallow copy of this collection ...","since":"1.1.0","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1112,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Ext.util.MixedCollection","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>"},"private":null,"static":null,"name":"clone","doc":"<p>Creates a shallow copy of this collection</p>\n","chainable":false,"inheritdoc":null,"id":"method-clone","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Collects unique values of a particular property in this MixedCollection ...","method_calls":["extractValues"],"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The property to collect on</p>\n","name":"property","html_type":"String"},{"type":"String","tagname":"params","doc":"<p>'root' property to extract the first argument from. This is used mainly when\nsumming fields in records, where the fields are all stored inside the 'data' object</p>\n","name":"root","optional":true,"html_type":"String"},{"type":"Boolean","tagname":"params","doc":"<p>Pass true to allow null, undefined or empty string values</p>\n","name":"allowBlank","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":862,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Array","properties":null,"doc":"<p>The unique values</p>\n","name":"return","html_type":"Array"},"private":null,"static":null,"name":"collect","doc":"<p>Collects unique values of a particular property in this MixedCollection</p>\n","chainable":false,"inheritdoc":null,"id":"method-collect","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":766,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configClass","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-configClass","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns true if the collection contains the passed Object as an item. ...","since":"1.1.0","method_calls":["getKey"],"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The Object to look for in the collection.</p>\n","name":"o","html_type":"Object"}],"tagname":"method","files":[{"linenr":759,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>True if the collection contains the Object as an item.</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"contains","doc":"<p>Returns true if the collection contains the passed Object as an item.</p>\n","chainable":false,"inheritdoc":null,"id":"method-contains","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns true if the collection contains the passed Object as a key. ...","since":"1.1.0","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The key to look for in the collection.</p>\n","name":"key","html_type":"String"}],"tagname":"method","files":[{"linenr":786,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>True if the collection contains the Object as a key.</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"containsKey","doc":"<p>Returns true if the collection contains the passed Object as a key.</p>\n","chainable":false,"inheritdoc":null,"id":"method-containsKey","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Continue to fire event. ...","method_calls":["getBubbleParent"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"eventName","html_type":"String"},{"type":"Array","tagname":"params","doc":"\n","name":"args","html_type":"Array"},{"type":"Boolean","tagname":"params","doc":"\n","name":"bubbles","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":456,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"continueFireEvent","doc":"<p>Continue to fire event.</p>\n","chainable":false,"inheritdoc":null,"id":"method-continueFireEvent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates an event handling function which refires the event from this object as the passed event name. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name under which to refire the passed parameters.</p>\n","name":"newName","html_type":"String"},{"type":"Array","tagname":"params","doc":"<p>The caller can specify on which indices to slice.</p>\n","name":"beginEnd","optional":true,"html_type":"Array"}],"tagname":"method","files":[{"linenr":981,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Function","properties":null,"doc":"\n","name":"return","html_type":"Function"},"private":true,"static":null,"name":"createRelayer","doc":"<p>Creates an event handling function which refires the event from this object as the passed event name.</p>\n","chainable":false,"inheritdoc":null,"id":"method-createRelayer","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns a regular expression based on the given value and matching options. ...","since":"3.4.0","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The value to create the regex for. This is escaped using <a href=\"#!/api/Ext-method-escapeRe\" rel=\"Ext-method-escapeRe\" class=\"docClass\">Ext.escapeRe</a></p>\n","name":"value","html_type":"String"},{"type":"Boolean","tagname":"params","doc":"<p>True to allow any match - no regex start/end line anchors will be added. Defaults to false</p>\n","name":"anyMatch","html_type":"Boolean"},{"type":"Boolean","tagname":"params","doc":"<p>True to make the regex case sensitive (adds 'i' switch to regex). Defaults to false.</p>\n","name":"caseSensitive","html_type":"Boolean"},{"type":"Boolean","tagname":"params","doc":"<p>True to force exact match (^ and $ characters added to the regex). Defaults to false. Ignored if anyMatch is true.</p>\n","name":"exactMatch","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":1084,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"private":true,"static":null,"name":"createValueMatcher","doc":"<p>Returns a regular expression based on the given value and matching options. This is used internally for finding and filtering,\nand by <a href=\"#!/api/Ext.data.Store-method-filter\" rel=\"Ext.data.Store-method-filter\" class=\"docClass\">Ext.data.Store.filter</a></p>\n","chainable":false,"inheritdoc":null,"id":"method-createValueMatcher","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Normalizes an array of sorter objects, ensuring that they are all Ext.util.Sorter instances ...","method_calls":null,"owner":"Ext.util.Sortable","inheritable":null,"params":[{"type":"Object[]","tagname":"params","doc":"<p>The sorters array</p>\n","name":"sorters","html_type":"Object[]"}],"tagname":"method","files":[{"linenr":219,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"return":{"type":"Ext.util.Sorter[]","properties":null,"doc":"<p>Array of <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a> objects</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]"},"private":true,"static":null,"name":"decodeSorters","doc":"<p>Normalizes an array of sorter objects, ensuring that they are all <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a> instances</p>\n","chainable":false,"inheritdoc":null,"id":"method-decodeSorters","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">Ext.Base.destroy</a>","name":"destroy"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Destroys this CompositeSprite. ...","method_calls":["clearListeners","first","getCount","getSurface","remove"],"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":332,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"private":null,"static":null,"name":"destroy","doc":"<p>Destroys this CompositeSprite.</p>\n","chainable":false,"inheritdoc":null,"id":"method-destroy","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Private multi insert implementation. ...","method_calls":["fireEvent","getKey","indexOfKey","removeAt","resumeEvents","suspendEvents"],"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"Object","name":"index","html_type":"Object"},{"type":"Object","name":"keys","html_type":"Object"},{"type":"Object","name":"objects","html_type":"Object"}],"tagname":"method","files":[{"linenr":386,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"private":true,"static":null,"name":"doInsert","doc":"<p>Private multi insert implementation.</p>\n","chainable":false,"inheritdoc":null,"id":"method-doInsert","fires":["<a href=\"#!/api/Ext.util.AbstractMixedCollection-event-add\" rel=\"Ext.util.AbstractMixedCollection-event-add\" class=\"docClass\">add</a>","<a href=\"#!/api/Ext.util.AbstractMixedCollection-event-remove\" rel=\"Ext.util.AbstractMixedCollection-event-remove\" class=\"docClass\">remove</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["sortBy"],"owner":"Ext.util.MixedCollection","inheritable":null,"params":[{"type":"Object","name":"sorterFn","html_type":"Object"}],"tagname":"method","files":[{"linenr":77,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/MixedCollection.js"}],"private":true,"static":null,"name":"doSort","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-doSort","fires":["sort"],"linenr":77},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Executes the specified function once for every item in the collection. ...","since":"1.1.0","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"Function","tagname":"params","properties":[{"type":"Mixed","tagname":"params","doc":"<p>The collection item.</p>\n","name":"item","html_type":"Mixed"},{"type":"Number","tagname":"params","doc":"<p>The index of item.</p>\n","name":"index","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>Total length of collection.</p>\n","name":"len","html_type":"Number"}],"doc":"<p>The function to execute for each item.</p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference)\nin which the function is executed. Defaults to the current item in the iteration.</p>\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":270,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"private":null,"static":null,"name":"each","doc":"<p>Executes the specified function once for every item in the collection.\nThe function should return a boolean value.\nReturning false from the function will stop the iteration.</p>\n","chainable":false,"inheritdoc":null,"id":"method-each","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Executes the specified function once for every key in the collection, passing each\nkey, and its associated item as th...","since":"1.1.0","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"Function","tagname":"params","properties":[{"type":"String","tagname":"params","doc":"<p>The key of collection item.</p>\n","name":"key","html_type":"String"},{"type":"Mixed","tagname":"params","doc":"<p>The collection item.</p>\n","name":"item","html_type":"Mixed"},{"type":"Number","tagname":"params","doc":"<p>The index of item.</p>\n","name":"index","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>Total length of collection.</p>\n","name":"len","html_type":"Number"}],"doc":"<p>The function to execute for each item.</p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the\nfunction is executed. Defaults to the browser window.</p>\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":298,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"private":null,"static":null,"name":"eachKey","doc":"<p>Executes the specified function once for every key in the collection, passing each\nkey, and its associated item as the first two parameters.</p>\n","chainable":false,"inheritdoc":null,"id":"method-eachKey","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.util.Sortable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":213,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":true,"static":null,"name":"emptyComparator","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-emptyComparator","fires":null,"linenr":213},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling this.getBubbleTarget() if\npresent. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String/String[]","tagname":"params","doc":"<p>The event name to bubble, or an Array of event names.</p>\n","name":"eventNames","html_type":"String/String[]"}],"tagname":"method","files":[{"linenr":995,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"enableBubble","doc":"<p>Enables events fired by this Observable to bubble up an owner hierarchy by calling <code>this.getBubbleTarget()</code> if\npresent. There is no implementation in the Observable base class.</p>\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers.\nSee <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>. The default implementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> returns the\nComponent's immediate owner. But if a known target is required, this can be overridden to access the\nrequired target more quickly.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.overrides.form.field.Base', {\n    override: '<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>',\n\n    //  Add functionality to Field's initComponent to enable the change event to bubble\n    initComponent: function () {\n        this.callParent();\n        this.enableBubble('change');\n    }\n});\n\nvar myForm = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-enableBubble","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Extracts all of the given property values from the items in the MC. ...","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The property to extract</p>\n","name":"property","html_type":"String"},{"type":"String","tagname":"params","doc":"<p>'root' property to extract the first argument from. This is used mainly when\nextracting field data from Model instances, where the fields are stored inside the 'data' object</p>\n","name":"root","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":890,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Array","properties":null,"doc":"<p>The extracted values</p>\n","name":"return","html_type":"Array"},"private":true,"static":null,"name":"extractValues","doc":"<p>Extracts all of the given property values from the items in the MC. Mainly used as a supporting method for\nfunctions like sum and collect.</p>\n","chainable":false,"inheritdoc":null,"id":"method-extractValues","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Filters the objects in this collection by a set of Filters, or by a single\nproperty/value pair with optional paramete...","since":"1.1.0","method_calls":["filterBy"],"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"Ext.util.Filter[]/String","tagname":"params","doc":"<p>A property on your objects, or an array of <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Filter</a> objects</p>\n","name":"property","html_type":"<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>[]/String"},{"type":"String/RegExp","tagname":"params","doc":"<p>Either string that the property values\nshould start with or a RegExp to test against the property</p>\n","name":"value","html_type":"String/RegExp"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True to match any part of the string, not just the beginning</p>\n","name":"anyMatch","optional":true,"html_type":"Boolean"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True for case sensitive comparison.</p>\n","name":"caseSensitive","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":959,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Ext.util.MixedCollection","properties":null,"doc":"<p>The new filtered collection</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>"},"private":null,"static":null,"name":"filter","doc":"<p>Filters the objects in this collection by a set of <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Filter</a>s, or by a single\nproperty/value pair with optional parameters for substring matching and case sensitivity. See\n<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Filter</a> for an example of using Filter objects (preferred). Alternatively,\nMixedCollection can be easily filtered by property like this:</p>\n\n\n<p>   //create a simple store with a few people defined\n   var people = new <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>();\n   people.addAll([\n       {id: 1, age: 25, name: 'Ed'},\n       {id: 2, age: 24, name: 'Tommy'},\n       {id: 3, age: 24, name: 'Arne'},\n       {id: 4, age: 26, name: 'Aaron'}\n   ]);</p>\n\n<p>   //a new MixedCollection containing only the items where age == 24\n   var middleAged = people.filter('age', 24);</p>\n","chainable":false,"inheritdoc":null,"id":"method-filter","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Filter by a function. ...","since":"1.1.0","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"Function","tagname":"params","properties":[{"type":"Mixed","tagname":"params","doc":"<p>The collection item.</p>\n","name":"item","html_type":"Mixed"},{"type":"String","tagname":"params","doc":"<p>The key of collection item.</p>\n","name":"key","html_type":"String"}],"doc":"<p>The function to be called.</p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in\nwhich the function is executed. Defaults to this MixedCollection.</p>\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1006,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Ext.util.MixedCollection","properties":null,"doc":"<p>The new filtered collection</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>"},"private":null,"static":null,"name":"filterBy","doc":"<p>Filter by a function. Returns a <i>new</i> collection that has been filtered.\nThe passed function will be called with each object in the collection.\nIf the function returns true, the value is included otherwise it is filtered.</p>\n","chainable":false,"inheritdoc":null,"id":"method-filterBy","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the first item in the collection which elicits a true return value from the passed selection function. ...","since":"1.1.0","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":348,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"private":null,"static":null,"name":"find","doc":"<p>Returns the first item in the collection which elicits a true return value from the passed selection function.</p>\n","chainable":false,"inheritdoc":null,"id":"method-find","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.util.AbstractMixedCollection-method-findBy\" rel=\"Ext.util.AbstractMixedCollection-method-findBy\" class=\"docClass\">findBy</a> instead.</p>\n","version":"4.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the first item in the collection which elicits a true return value from the\npassed selection function. ...","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"Function","tagname":"params","properties":[{"type":"Mixed","tagname":"params","doc":"<p>The collection item.</p>\n","name":"item","html_type":"Mixed"},{"type":"String","tagname":"params","doc":"<p>The key of collection item.</p>\n","name":"key","html_type":"String"}],"doc":"<p>The selection function to execute for each item.</p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the\nfunction is executed. Defaults to the browser window.</p>\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":322,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The first item in the collection which returned true from the selection\nfunction, or null if none was found.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"findBy","doc":"<p>Returns the first item in the collection which elicits a true return value from the\npassed selection function.</p>\n","chainable":false,"inheritdoc":null,"id":"method-findBy","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Finds the index of the first matching object in this collection by a specific property/value. ...","since":"2.3.0","method_calls":["createValueMatcher","findIndexBy"],"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of a property on your objects.</p>\n","name":"property","html_type":"String"},{"type":"String/RegExp","tagname":"params","doc":"<p>A string that the property values\nshould start with or a RegExp to test against the property.</p>\n","name":"value","html_type":"String/RegExp"},{"type":"Number","default":"0","tagname":"params","doc":"<p>The index to start searching at.</p>\n","name":"start","optional":true,"html_type":"Number"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True to match any part of the string, not just the beginning.</p>\n","name":"anyMatch","optional":true,"html_type":"Boolean"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True for case sensitive comparison.</p>\n","name":"caseSensitive","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":1037,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The matched index or -1</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"findIndex","doc":"<p>Finds the index of the first matching object in this collection by a specific property/value.</p>\n","chainable":false,"inheritdoc":null,"id":"method-findIndex","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Find the index of the first matching object in this collection by a function. ...","since":"2.3.0","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"Function","tagname":"params","properties":[{"type":"Mixed","tagname":"params","doc":"<p>The collection item.</p>\n","name":"item","html_type":"Mixed"},{"type":"String","tagname":"params","doc":"<p>The key of collection item.</p>\n","name":"key","html_type":"String"}],"doc":"<p>The function to be called.</p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the function is executed. Defaults to this MixedCollection.</p>\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Number","default":"0","tagname":"params","doc":"<p>The index to start searching at.</p>\n","name":"start","optional":true,"html_type":"Number"}],"tagname":"method","files":[{"linenr":1058,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The matched index or -1</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"findIndexBy","doc":"<p>Find the index of the first matching object in this collection by a function.\nIf the function returns <i>true</i> it is considered a match.</p>\n","chainable":false,"inheritdoc":null,"id":"method-findIndexBy","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Calculates the insertion index of the new item based upon the comparison function passed, or the current sort order. ...","method_calls":["generateComparator"],"owner":"Ext.util.MixedCollection","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The new object to find the insertion position of.</p>\n","name":"newItem","html_type":"Object"},{"type":"Function","tagname":"params","doc":"<p>The function to sort by. This is the same as the sorting function\npassed to <a href=\"#!/api/Ext.util.MixedCollection-method-sortBy\" rel=\"Ext.util.MixedCollection-method-sortBy\" class=\"docClass\">sortBy</a>. It accepts 2 items from this MixedCollection, and returns -1 0, or 1\ndepending on the relative sort positions of the 2 compared items.</p>\n\n<p>If omitted, a function <a href=\"#!/api/Ext.util.MixedCollection-method-generateComparator\" rel=\"Ext.util.MixedCollection-method-generateComparator\" class=\"docClass\">generated</a> from the currently defined set of\n<a href=\"#!/api/Ext.util.MixedCollection-cfg-sorters\" rel=\"Ext.util.MixedCollection-cfg-sorters\" class=\"docClass\">sorters</a> will be used.</p>\n","name":"sorterFn","optional":true,"html_type":"Function"}],"tagname":"method","files":[{"linenr":173,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/MixedCollection.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The insertion point to add the new item into this MixedCollection at using <a href=\"#!/api/Ext.util.MixedCollection-method-insert\" rel=\"Ext.util.MixedCollection-method-insert\" class=\"docClass\">insert</a></p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"findInsertionIndex","doc":"<p>Calculates the insertion index of the new item based upon the comparison function passed, or the current sort order.</p>\n","chainable":false,"inheritdoc":null,"id":"method-findInsertionIndex","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fires the specified event with the passed parameters (minus the event name, plus the options object passed\nto addList...","method_calls":["fireEventArgs"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to fire.</p>\n","name":"eventName","html_type":"String"},{"type":"Object...","tagname":"params","doc":"<p>Variable number of parameters are passed to handlers.</p>\n","name":"args","html_type":"Object..."}],"tagname":"method","files":[{"linenr":416,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"fireEvent","doc":"<p>Fires the specified event with the passed parameters (minus the event name, plus the <code>options</code> object passed\nto <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireEvent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fires the specified event with the passed parameter list. ...","method_calls":["continueFireEvent"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to fire.</p>\n","name":"eventName","html_type":"String"},{"type":"Object[]","tagname":"params","doc":"<p>An array of parameters which are passed to handlers.</p>\n","name":"args","html_type":"Object[]"}],"tagname":"method","files":[{"linenr":431,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"fireEventArgs","doc":"<p>Fires the specified event with the passed parameter list.</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireEventArgs","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the first item in the collection. ...","since":"1.1.0","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":819,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Object","properties":null,"doc":"<p>the first item in the collection..</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"first","doc":"<p>Returns the first item in the collection.</p>\n","chainable":false,"inheritdoc":null,"id":"method-first","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns a comparator function which compares two items and returns -1, 0, or 1 depending\non the currently defined set...","method_calls":["createComparator"],"owner":"Ext.util.Sortable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":201,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":null,"static":null,"name":"generateComparator","doc":"<p>Returns a comparator function which compares two items and returns -1, 0, or 1 depending\non the currently defined set of <a href=\"#!/api/Ext.util.Sortable-cfg-sorters\" rel=\"Ext.util.Sortable-cfg-sorters\" class=\"docClass\">sorters</a>.</p>\n\n<p>If there are no <a href=\"#!/api/Ext.util.Sortable-cfg-sorters\" rel=\"Ext.util.Sortable-cfg-sorters\" class=\"docClass\">sorters</a> defined, it returns a function which returns <code>0</code> meaning\nthat no sorting will occur.</p>\n","chainable":false,"inheritdoc":null,"id":"method-generateComparator","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the item associated with the passed key OR index. ...","since":"1.1.0","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"String/Number","tagname":"params","doc":"<p>The key or index of the item.</p>\n","name":"key","html_type":"String/Number"}],"tagname":"method","files":[{"linenr":725,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Object","properties":null,"doc":"<p>If the item is found, returns the item.  If the item was not found, returns <code>undefined</code>.\nIf an item was found, but is a Class, returns <code>null</code>.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"get","doc":"<p>Returns the item associated with the passed key OR index.\nKey has priority over index.  This is the equivalent\nof calling <a href=\"#!/api/Ext.util.AbstractMixedCollection-method-getByKey\" rel=\"Ext.util.AbstractMixedCollection-method-getByKey\" class=\"docClass\">getByKey</a> first, then if nothing matched calling <a href=\"#!/api/Ext.util.AbstractMixedCollection-method-getAt\" rel=\"Ext.util.AbstractMixedCollection-method-getAt\" class=\"docClass\">getAt</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-get","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the current animation if this object has any effects actively running or queued, else returns false. ...","method_calls":null,"owner":"Ext.util.Animate","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":372,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Animate.js"}],"return":{"type":"Ext.fx.Anim/Boolean","properties":null,"doc":"<p>Anim if element has active effects, else false</p>\n\n","name":"return","html_type":"<a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>/Boolean"},"private":null,"static":null,"name":"getActiveAnimation","doc":"<p>Returns the current animation if this object has any effects actively running or queued, else returns false.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getActiveAnimation","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the item at the specified index. ...","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The index of the item.</p>\n","name":"index","html_type":"Number"}],"tagname":"method","files":[{"linenr":741,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The item at the specified index.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getAt","doc":"<p>Returns the item at the specified index.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getAt","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the group bounding box. ...","method_calls":null,"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":161,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"return":{"type":"Object","properties":null,"doc":"<p>an object with x, y, width, and height properties.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getBBox","doc":"<p>Returns the group bounding box.\nBehaves like <a href=\"#!/api/Ext.draw.Sprite-method-getBBox\" rel=\"Ext.draw.Sprite-method-getBBox\" class=\"docClass\">Ext.draw.Sprite.getBBox</a> method.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getBBox","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the bubbling parent for an Observable ...","method_calls":["getBubbleTarget"],"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":489,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Ext.util.Observable","properties":null,"doc":"<p>The bubble parent. null is returned if no bubble target exists</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},"private":true,"static":null,"name":"getBubbleParent","doc":"<p>Gets the bubbling parent for an Observable</p>\n","chainable":false,"inheritdoc":null,"id":"method-getBubbleParent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the item associated with the passed key. ...","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"String/Number","tagname":"params","doc":"<p>The key of the item.</p>\n","name":"key","html_type":"String/Number"}],"tagname":"method","files":[{"linenr":750,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The item associated with the passed key.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getByKey","doc":"<p>Returns the item associated with the passed key.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getByKey","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":1196,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"getConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the number of items in the collection. ...","since":"1.1.0","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":659,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Number","properties":null,"doc":"<p>the number of items in the collection.</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"getCount","doc":"<p>Returns the number of items in the collection.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getCount","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the first sorter from the sorters collection, excluding\nany groupers that may be in place ...","method_calls":null,"owner":"Ext.util.Sortable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":283,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"protected":true,"return":{"type":"Ext.util.Sorter","properties":null,"doc":"<p>The sorter, null if none exist</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>"},"private":null,"static":null,"name":"getFirstSorter","doc":"<p>Gets the first sorter from the sorters collection, excluding\nany groupers that may be in place</p>\n","chainable":false,"inheritdoc":null,"id":"method-getFirstSorter","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>Name of the config option to return.</p>\n","name":"name","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":1206,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object/Mixed","properties":null,"doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","name":"return","html_type":"Object/Mixed"},"private":null,"static":null,"name":"getInitialConfig","doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getInitialConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"A function which will be called, passing a newly added object\nwhen the object is added without a separate id. ...","since":"1.1.0","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The item for which to find the key.</p>\n","name":"item","html_type":"Object"}],"tagname":"method","files":[{"linenr":145,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The key for the passed item.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getKey","template":true,"doc":"<p>A function which will be called, passing a newly added object\nwhen the object is added without a separate id.  The function\nshould yield the key by which that object will be indexed.</p>\n\n<p>If no key is yielded, then the object will be added, but it\ncannot be accessed or removed quickly. Finding it in this\ncollection for interrogation or removal will require a linear\nscan of this collection's items.</p>\n\n<p>The default implementation simply returns <code>item.id</code> but you can\nprovide your own implementation to return a different value as\nin the following examples:</p>\n\n<pre><code>// normal way\nvar mc = new <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>();\nmc.add(someEl.dom.id, someEl);\nmc.add(otherEl.dom.id, otherEl);\n//and so on\n\n// using getKey\nvar mc = new <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>({\n    getKey: function(el){\n        return el.dom.id;\n    }\n});\nmc.add(someEl);\nmc.add(otherEl);\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-getKey","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns a range of items in this collection ...","since":"1.1.0","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The starting index. Defaults to 0.</p>\n","name":"startIndex","optional":true,"html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>The ending index. Defaults to the last item.</p>\n","name":"endIndex","optional":true,"html_type":"Number"}],"tagname":"method","files":[{"linenr":919,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Array","properties":null,"doc":"<p>An array of items</p>\n","name":"return","html_type":"Array"},"private":null,"static":null,"name":"getRange","doc":"<p>Returns a range of items in this collection</p>\n","chainable":false,"inheritdoc":null,"id":"method-getRange","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.util.Sortable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":279,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":true,"static":null,"name":"getSorters","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getSorters","fires":null,"linenr":279},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Grab the surface from the items ...","method_calls":["first"],"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":319,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"return":{"type":"Ext.draw.Surface","properties":null,"doc":"<p>The surface, null if not found</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.draw.Surface\" rel=\"Ext.draw.Surface\" class=\"docClass\">Ext.draw.Surface</a>"},"private":true,"static":null,"name":"getSurface","doc":"<p>Grab the surface from the items</p>\n","chainable":false,"inheritdoc":null,"id":"method-getSurface","fires":[],"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Returns the current animation if this object has any effects actively running or queued, else returns false. ...","method_calls":null,"owner":"Ext.util.Animate","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":365,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Animate.js"}],"return":{"type":"Ext.fx.Anim/Boolean","properties":null,"doc":"<p>Anim if element has active effects, else false</p>\n\n","name":"return","html_type":"<a href=\"#!/api/Ext.fx.Anim\" rel=\"Ext.fx.Anim\" class=\"docClass\">Ext.fx.Anim</a>/Boolean"},"private":null,"static":null,"name":"hasActiveFx","doc":"<p>Returns the current animation if this object has any effects actively running or queued, else returns false.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-hasActiveFx","deprecated":{"text":"<p>Replaced by <a href=\"#!/api/Ext.util.Animate-method-getActiveAnimation\" rel=\"Ext.util.Animate-method-getActiveAnimation\" class=\"docClass\">getActiveAnimation</a></p>\n","version":"4.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1156,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"hasConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-hasConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Checks to see if this object has any listeners for a specified event, or whether the event bubbles. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to check for</p>\n","name":"eventName","html_type":"String"}],"tagname":"method","files":[{"linenr":833,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p><code>true</code> if the event is being listened for or bubbles, else <code>false</code></p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"hasListener","doc":"<p>Checks to see if this object has any listeners for a specified event, or whether the event bubbles. The answer\nindicates whether the event needs firing or not.</p>\n","chainable":false,"inheritdoc":null,"id":"method-hasListener","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"For API parity with Store's PageMap class. ...","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"Object","name":"start","html_type":"Object"},{"type":"Object","name":"end","html_type":"Object"}],"tagname":"method","files":[{"linenr":909,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"private":true,"static":null,"name":"hasRange","doc":"<p>For API parity with Store's PageMap class. Buffered rendering checks if the Store has the range\nrequired to render. The Store delegates this question to its backing data object which may be an instance\nof its private PageMap class, or a MixedCollection.</p>\n","chainable":false,"inheritdoc":null,"id":"method-hasRange","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Hides all sprites. ...","method_calls":null,"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>Flag to immediately draw the change.</p>\n","name":"redraw","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":216,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"return":{"type":"Ext.draw.CompositeSprite","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.draw.CompositeSprite\" rel=\"Ext.draw.CompositeSprite\" class=\"docClass\">Ext.draw.CompositeSprite</a>"},"private":null,"static":null,"name":"hide","doc":"<p>Hides all sprites. If <code>true</code> is passed then a redraw will be forced for each sprite.</p>\n","chainable":true,"inheritdoc":null,"id":"method-hide","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns index within the collection of the passed Object. ...","since":"1.1.0","method_calls":["getKey","indexOfKey"],"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The item to find the index of.</p>\n","name":"o","html_type":"Object"}],"tagname":"method","files":[{"linenr":668,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Number","properties":null,"doc":"<p>index of the item. Returns -1 if not found.</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"indexOf","doc":"<p>Returns index within the collection of the passed Object.</p>\n","chainable":false,"inheritdoc":null,"id":"method-indexOf","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns index within the collection of the passed key. ...","since":"1.1.0","method_calls":["rebuildIndexMap"],"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The key to find the index of.</p>\n","name":"key","html_type":"String"}],"tagname":"method","files":[{"linenr":696,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Number","properties":null,"doc":"<p>index of the key.</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"indexOfKey","doc":"<p>Returns index within the collection of the passed key.</p>\n","chainable":false,"inheritdoc":null,"id":"method-indexOfKey","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Initialize configuration for this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1090,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":null,"static":null,"name":"initConfig","doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"method-initConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Performs initialization of this mixin. ...","method_calls":["decodeSorters"],"owner":"Ext.util.Sortable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":81,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":null,"static":null,"name":"initSortable","doc":"<p>Performs initialization of this mixin. Component classes using this mixin should call this method during their\nown initialization.</p>\n","chainable":false,"inheritdoc":null,"id":"method-initSortable","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.util.AbstractMixedCollection","link":"<a href=\"#!/api/Ext.util.AbstractMixedCollection-method-insert\" rel=\"Ext.util.AbstractMixedCollection-method-insert\" class=\"docClass\">Ext.util.AbstractMixedCollection.insert</a>","name":"insert"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Inserts an item at the specified index in the collection. ...","since":"1.1.0","method_calls":["callParent"],"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"Object","name":"index","html_type":"Object"},{"type":"Object","name":"key","html_type":"Object"},{"type":"Object","name":"o","html_type":"Object"}],"tagname":"method","files":[{"linenr":142,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The item inserted or an array of items inserted.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"insert","doc":"<p>Inserts an item at the specified index in the collection. Fires the <a href=\"#!/api/Ext.draw.CompositeSprite-event-add\" rel=\"Ext.draw.CompositeSprite-event-add\" class=\"docClass\">add</a> event when complete.</p>\n","chainable":false,"inheritdoc":null,"id":"method-insert","fires":[],"linenr":142},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the last item in the collection. ...","since":"1.1.0","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":828,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Object","properties":null,"doc":"<p>the last item in the collection..</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"last","doc":"<p>Returns the last item in the collection.</p>\n","chainable":false,"inheritdoc":null,"id":"method-last","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for addManagedListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1134,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"mon","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-addManagedListener\" rel=\"Ext.util.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-mon","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for removeManagedListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":null,"private":null,"static":null,"name":"mun","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-removeManagedListener\" rel=\"Ext.util.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-mun","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for addListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","name":"eventName","html_type":"String/Object"},{"type":"Function","tagname":"params","doc":"<p>The method the event invokes, or <em>if <code>scope</code> is specified, the </em>name* of the method within\nthe specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> plus the <code>options</code> parameter described below.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","name":"scope","html_type":"Object"},{"type":"Number","tagname":"params","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n\n","name":"delay","html_type":"Number"},{"type":"Boolean","tagname":"params","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n","name":"single","html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","name":"buffer","html_type":"Number"},{"type":"Ext.util.Observable","tagname":"params","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the event\n  was bubbled up from a child Observable.</p>\n\n","name":"target","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"type":"String","tagname":"params","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an element to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to elements of\n  <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the Component is rendered.\n  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n","name":"element","html_type":"String"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>When specified as <code>true</code>, the function returns A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call.</p>\n\n","name":"destroyable","optional":true,"html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n","name":"priority","optional":true,"html_type":"Number"}],"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> Unlike in ExtJS 3.x, the options object will also be passed as the last\nargument to every event handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1122,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"on","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-on","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.util.Sortable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":217,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":true,"static":null,"name":"onBeforeSort","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-onBeforeSort","fires":null,"linenr":217},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["fireEvent"],"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":97,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"private":true,"static":null,"name":"onClick","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onClick","fires":["<a href=\"#!/api/Ext.draw.CompositeSprite-event-click\" rel=\"Ext.draw.CompositeSprite-event-click\" class=\"docClass\">click</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"names","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"callback","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":1224,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"onConfigUpdate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onConfigUpdate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["fireEvent"],"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":107,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"private":true,"static":null,"name":"onMouseDown","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onMouseDown","fires":["<a href=\"#!/api/Ext.draw.CompositeSprite-event-mousedown\" rel=\"Ext.draw.CompositeSprite-event-mousedown\" class=\"docClass\">mousedown</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["fireEvent"],"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":117,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"private":true,"static":null,"name":"onMouseOut","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onMouseOut","fires":["<a href=\"#!/api/Ext.draw.CompositeSprite-event-mouseout\" rel=\"Ext.draw.CompositeSprite-event-mouseout\" class=\"docClass\">mouseout</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["fireEvent"],"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":112,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"private":true,"static":null,"name":"onMouseOver","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onMouseOver","fires":["<a href=\"#!/api/Ext.draw.CompositeSprite-event-mouseover\" rel=\"Ext.draw.CompositeSprite-event-mouseover\" class=\"docClass\">mouseover</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["fireEvent"],"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":102,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"private":true,"static":null,"name":"onMouseUp","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onMouseUp","fires":["<a href=\"#!/api/Ext.draw.CompositeSprite-event-mouseup\" rel=\"Ext.draw.CompositeSprite-event-mouseup\" class=\"docClass\">mouseup</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Prepares a given class for observable instances. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Function","tagname":"params","doc":"<p>The class constructor to prepare.</p>\n","name":"T","html_type":"Function"}],"tagname":"method","files":[{"linenr":164,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"prepareClass","doc":"<p>Prepares a given class for observable instances. This method is called when a\nclass derives from this class or uses this class as a mixin.</p>\n","chainable":false,"inheritdoc":null,"id":"method-prepareClass","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":712,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"private":true,"static":null,"name":"rebuildIndexMap","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-rebuildIndexMap","fires":null,"linenr":712},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Force redraw of all sprites. ...","method_calls":["getSurface"],"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":248,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"private":null,"static":null,"name":"redraw","doc":"<p>Force redraw of all sprites.</p>\n","chainable":false,"inheritdoc":null,"id":"method-redraw","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Relays selected events from the specified Observable as if the events were fired by this. ...","method_calls":["createRelayer","mon"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The Observable whose events this object is to relay.</p>\n","name":"origin","html_type":"Object"},{"type":"String[]","tagname":"params","doc":"<p>Array of event names to relay.</p>\n","name":"events","html_type":"String[]"},{"type":"String","tagname":"params","doc":"<p>A common prefix to prepend to the event names. For example:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Now the grid will forward 'load' and 'clear' events of store as 'storeload' and 'storeclear'.</p>\n","name":"prefix","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":928,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which, when destroyed, removes all relayers. For example:</p>\n\n<pre><code>this.storeRelayers = this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Can be undone by calling</p>\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.storeRelayers);\n</code></pre>\n\n<p>or\n    this.store.relayers.destroy();</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"relayEvents","doc":"<p>Relays selected events from the specified Observable as if the events were fired by <code>this</code>.</p>\n\n<p>For example if you are extending Grid, you might decide to forward some events from store.\nSo you can do this inside your initComponent:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>The grid instance will then have an observable 'load' event which will be passed the\nparameters of the store's load event and any function fired with the grid's load event\nwould have access to the grid using the <code>this</code> keyword.</p>\n","chainable":false,"inheritdoc":null,"id":"method-relayEvents","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.util.AbstractMixedCollection","link":"<a href=\"#!/api/Ext.util.AbstractMixedCollection-method-remove\" rel=\"Ext.util.AbstractMixedCollection-method-remove\" class=\"docClass\">Ext.util.AbstractMixedCollection.remove</a>","name":"remove"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Inherit docs from MixedCollection ...","since":"1.1.0","method_calls":["callParent"],"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"Object","name":"o","html_type":"Object"}],"tagname":"method","files":[{"linenr":146,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The item removed or false if no item was removed.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"remove","doc":"<p>Inherit docs from MixedCollection</p>\n","chainable":false,"inheritdoc":null,"id":"method-remove","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Remove all items in the collection. ...","method_calls":["remove","removeAt"],"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"Array","tagname":"params","doc":"<p>An array of items to be removed.</p>\n","name":"items","optional":true,"html_type":"Array"}],"tagname":"method","files":[{"linenr":512,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Ext.util.MixedCollection","properties":null,"doc":"<p>this object</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>"},"private":null,"static":null,"name":"removeAll","doc":"<p>Remove all items in the collection. Can also be used\nto remove only the items in the passed array.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeAll","fires":["<a href=\"#!/api/Ext.util.AbstractMixedCollection-event-remove\" rel=\"Ext.util.AbstractMixedCollection-event-remove\" class=\"docClass\">remove</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Remove an item from a specified index in the collection. ...","since":"1.1.0","method_calls":["fireEvent"],"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The index within the collection of the item to remove.</p>\n","name":"index","html_type":"Number"}],"tagname":"method","files":[{"linenr":542,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The item removed or false if no item was removed.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"removeAt","doc":"<p>Remove an item from a specified index in the collection. Fires the <a href=\"#!/api/Ext.util.AbstractMixedCollection-event-remove\" rel=\"Ext.util.AbstractMixedCollection-event-remove\" class=\"docClass\">remove</a> event when complete.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeAt","fires":["<a href=\"#!/api/Ext.util.AbstractMixedCollection-event-remove\" rel=\"Ext.util.AbstractMixedCollection-event-remove\" class=\"docClass\">remove</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes an item associated with the passed key fom the collection. ...","method_calls":["indexOfKey","removeAt"],"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The key of the item to remove. If <code>null</code> is passed,\nall objects which yielded no key from the configured <a href=\"#!/api/Ext.util.AbstractMixedCollection-method-getKey\" rel=\"Ext.util.AbstractMixedCollection-method-getKey\" class=\"docClass\">getKey</a> function are removed.</p>\n","name":"key","html_type":"String"}],"tagname":"method","files":[{"linenr":634,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Object","properties":null,"doc":"<p>Only returned if removing at a specified key. The item removed or false if no item was removed.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"removeAtKey","doc":"<p>Removes an item associated with the passed key fom the collection.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeAtKey","fires":["<a href=\"#!/api/Ext.util.AbstractMixedCollection-event-remove\" rel=\"Ext.util.AbstractMixedCollection-event-remove\" class=\"docClass\">remove</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes class from all sprites. ...","method_calls":["getSurface"],"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>CSS class name</p>\n","name":"cls","html_type":"String"}],"tagname":"method","files":[{"linenr":302,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"private":null,"static":null,"name":"removeCls","doc":"<p>Removes class from all sprites.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeCls","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes an event handler. ...","method_calls":["removeListener"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The type of event the handler was associated with.</p>\n\n","name":"eventName","html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>The handler to remove. <strong>This must be a reference to the function passed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope originally specified for the handler. It must be the same as the\nscope argument specified in the original call to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> or the listener will not be removed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":688,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"removeListener","doc":"<p>Removes an event handler.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes listeners that were added by the mon method. ...","method_calls":["removeManagedListener","removeManagedListenerItem"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":375,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"removeManagedListener","doc":"<p>Removes listeners that were added by the <a href=\"#!/api/Ext.util.Observable-method-mon\" rel=\"Ext.util.Observable-method-mon\" class=\"docClass\">mon</a> method.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeManagedListener","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.AbstractComponent","link":"<a href=\"#!/api/Ext.AbstractComponent-method-removeManagedListenerItem\" rel=\"Ext.AbstractComponent-method-removeManagedListenerItem\" class=\"docClass\">Ext.AbstractComponent.removeManagedListenerItem</a>","name":"removeManagedListenerItem"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Remove a single managed listener item ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>True if this is being called during a clear</p>\n","name":"isClear","html_type":"Boolean"},{"type":"Object","tagname":"params","doc":"<p>The managed listener item\nSee removeManagedListener for other args</p>\n","name":"managedListener","html_type":"Object"}],"tagname":"method","files":[{"linenr":775,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"removeManagedListenerItem","doc":"<p>Remove a single managed listener item</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeManagedListenerItem","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Remove a range of items starting at a specified index in the collection. ...","method_calls":null,"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The index within the collection of the item to remove.</p>\n","name":"index","html_type":"Number"},{"type":"Number","default":"1","tagname":"params","doc":"<p>The nuber of items to remove beginning at the specified index.</p>\n","name":"removeCount","optional":true,"html_type":"Number"}],"tagname":"method","files":[{"linenr":571,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The last item removed or false if no item was removed.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"removeRange","doc":"<p>Remove a range of items starting at a specified index in the collection.\nDoes not fire the remove event.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeRange","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Reorders each of the items based on a mapping from old index to new index. ...","method_calls":["addAll","clear","fireEvent","resumeEvents","suspendEvents"],"owner":"Ext.util.MixedCollection","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>Mapping from old item index to new item index</p>\n","name":"mapping","html_type":"Object"}],"tagname":"method","files":[{"linenr":208,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/MixedCollection.js"}],"private":null,"static":null,"name":"reorder","doc":"<p>Reorders each of the items based on a mapping from old index to new index. Internally this\njust translates into a sort. The 'sort' event is fired whenever reordering has occured.</p>\n","chainable":false,"inheritdoc":null,"id":"method-reorder","fires":["<a href=\"#!/api/Ext.util.MixedCollection-event-add\" rel=\"Ext.util.MixedCollection-event-add\" class=\"docClass\">add</a>","<a href=\"#!/api/Ext.util.MixedCollection-event-clear\" rel=\"Ext.util.MixedCollection-event-clear\" class=\"docClass\">clear</a>","<a href=\"#!/api/Ext.util.MixedCollection-event-remove\" rel=\"Ext.util.MixedCollection-event-remove\" class=\"docClass\">remove</a>","sort"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Replaces an item in the collection. ...","since":"1.1.0","method_calls":["add","fireEvent","getKey","indexOfKey"],"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The key associated with the item to replace, or the replacement item.</p>\n\n<p>If you supplied a <a href=\"#!/api/Ext.util.AbstractMixedCollection-method-getKey\" rel=\"Ext.util.AbstractMixedCollection-method-getKey\" class=\"docClass\">getKey</a> implementation for this MixedCollection, or if the key\nof your stored items is in a property called <em><code>id</code></em>, then the MixedCollection\nwill be able to <i>derive</i> the key of the replacement item. If you want to replace an item\nwith one having the same key value, then just pass the replacement item in this parameter.</p>\n","name":"key","html_type":"String"},{"type":"Object","tagname":"params","doc":"<p>{Object} o (optional) If the first parameter passed was a key, the item to associate\nwith that key.</p>\n","name":"o","html_type":"Object"}],"tagname":"method","files":[{"linenr":183,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The new item.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"replace","doc":"<p>Replaces an item in the collection. Fires the <a href=\"#!/api/Ext.util.AbstractMixedCollection-event-replace\" rel=\"Ext.util.AbstractMixedCollection-event-replace\" class=\"docClass\">replace</a> event when complete.</p>\n","chainable":false,"inheritdoc":null,"id":"method-replace","fires":["<a href=\"#!/api/Ext.util.AbstractMixedCollection-event-add\" rel=\"Ext.util.AbstractMixedCollection-event-add\" class=\"docClass\">add</a>","<a href=\"#!/api/Ext.util.AbstractMixedCollection-event-remove\" rel=\"Ext.util.AbstractMixedCollection-event-remove\" class=\"docClass\">remove</a>","<a href=\"#!/api/Ext.util.AbstractMixedCollection-event-replace\" rel=\"Ext.util.AbstractMixedCollection-event-replace\" class=\"docClass\">replace</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Resumes firing of the named event(s). ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String...","tagname":"params","doc":"<p>Multiple event names to resume.</p>\n","name":"eventName","html_type":"String..."}],"tagname":"method","files":[{"linenr":881,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"resumeEvent","doc":"<p>Resumes firing of the named event(s).</p>\n\n<p>After calling this method to resume events, the events will fire when requested to fire.</p>\n\n<p><strong>Note that if the <a href=\"#!/api/Ext.util.Observable-method-suspendEvent\" rel=\"Ext.util.Observable-method-suspendEvent\" class=\"docClass\">suspendEvent</a> method is called multiple times for a certain event,\nthis converse method will have to be called the same number of times for it to resume firing.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-resumeEvent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Resumes firing events (see suspendEvents). ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":905,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"resumeEvents","doc":"<p>Resumes firing events (see <a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n\n<p>If events were suspended using the <code>queueSuspended</code> parameter, then all events fired\nduring event suspension will be sent to any listeners now.</p>\n","chainable":false,"inheritdoc":null,"id":"method-resumeEvents","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Ensures that all effects queued after sequenceFx is called on this object are run in sequence. ...","method_calls":null,"owner":"Ext.util.Animate","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":353,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Animate.js"}],"return":{"type":"Object","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"sequenceFx","doc":"<p>Ensures that all effects queued after sequenceFx is called on this object are run in sequence. This is the\nopposite of <a href=\"#!/api/Ext.util.Animate-method-syncFx\" rel=\"Ext.util.Animate-method-syncFx\" class=\"docClass\">syncFx</a>.</p>\n","chainable":true,"inheritdoc":null,"id":"method-sequenceFx","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Iterates through all sprites calling setAttributes on each one. ...","method_calls":null,"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>Attributes to be changed on the sprite.</p>\n","name":"attrs","html_type":"Object"},{"type":"Boolean","tagname":"params","doc":"<p>Flag to immediately draw the change.</p>\n","name":"redraw","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":198,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"return":{"type":"Ext.draw.CompositeSprite","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.draw.CompositeSprite\" rel=\"Ext.draw.CompositeSprite\" class=\"docClass\">Ext.draw.CompositeSprite</a>"},"private":null,"static":null,"name":"setAttributes","doc":"<p>Iterates through all sprites calling <code>setAttributes</code> on each one. For more information <a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>\nprovides a description of the attributes that can be set with this method.</p>\n","chainable":true,"inheritdoc":null,"id":"method-setAttributes","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"},{"type":"Object","name":"applyIfNotSet","html_type":"Object"}],"tagname":"method","files":[{"linenr":1164,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"static":null,"name":"setConfig","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-setConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets style for all sprites. ...","method_calls":null,"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>CSS Style definition.</p>\n","name":"style","html_type":"String"}],"tagname":"method","files":[{"linenr":266,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"private":null,"static":null,"name":"setStyle","doc":"<p>Sets style for all sprites.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setStyle","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Shows all sprites. ...","method_calls":null,"owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>Flag to immediately draw the change.</p>\n","name":"redraw","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":232,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"return":{"type":"Ext.draw.CompositeSprite","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.draw.CompositeSprite\" rel=\"Ext.draw.CompositeSprite\" class=\"docClass\">Ext.draw.CompositeSprite</a>"},"private":null,"static":null,"name":"show","doc":"<p>Shows all sprites. If <code>true</code> is passed then a redraw will be forced for each sprite.</p>\n","chainable":true,"inheritdoc":null,"id":"method-show","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sorts the data in the Store by one or more of its properties. ...","method_calls":["decodeSorters","doSort","fireEvent","generateComparator","onBeforeSort"],"owner":"Ext.util.Sortable","inheritable":null,"params":[{"type":"String/Ext.util.Sorter[]","tagname":"params","doc":"<p>Either a string name of one of the fields in this Store's configured\n<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a>, or an array of sorter configurations.</p>\n","name":"sorters","optional":true,"html_type":"String/<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]"},{"type":"String","default":"\"ASC\"","tagname":"params","doc":"<p>The overall direction to sort the data by.</p>\n","name":"direction","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":102,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"return":{"type":"Ext.util.Sorter[]","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]"},"private":null,"static":null,"name":"sort","doc":"<p>Sorts the data in the Store by one or more of its properties. Example usage:</p>\n\n<pre><code>//sort by a single field\nmyStore.sort('myField', 'DESC');\n\n//sorting by multiple fields\nmyStore.sort([\n    {\n        property : 'age',\n        direction: 'ASC'\n    },\n    {\n        property : 'name',\n        direction: 'DESC'\n    }\n]);\n</code></pre>\n\n<p>Internally, Store converts the passed arguments into an array of <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a> instances, and delegates\nthe actual sorting to its internal <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>.</p>\n\n<p>When passing a single string argument to sort, Store maintains a ASC/DESC toggler per field, so this code:</p>\n\n<pre><code>store.sort('myField');\nstore.sort('myField');\n</code></pre>\n\n<p>Is equivalent to this code, because Store handles the toggling automatically:</p>\n\n<pre><code>store.sort('myField', 'ASC');\nstore.sort('myField', 'DESC');\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-sort","fires":["beforesort","sort"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sorts the collection by a single sorter function ...","method_calls":["fireEvent","getKey"],"owner":"Ext.util.MixedCollection","inheritable":null,"params":[{"type":"Function","tagname":"params","doc":"<p>The function to sort by</p>\n","name":"sorterFn","html_type":"Function"}],"tagname":"method","files":[{"linenr":136,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/MixedCollection.js"}],"private":null,"static":null,"name":"sortBy","doc":"<p>Sorts the collection by a single sorter function</p>\n","chainable":false,"inheritdoc":null,"id":"method-sortBy","fires":["sort"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sorts this collection by keys. ...","method_calls":["_sort"],"owner":"Ext.util.MixedCollection","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>'ASC' or 'DESC'. Defaults to 'ASC'.</p>\n","name":"direction","optional":true,"html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>Comparison function that defines the sort order.\nDefaults to sorting by case insensitive string.</p>\n","name":"fn","optional":true,"html_type":"Function"}],"tagname":"method","files":[{"linenr":248,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/MixedCollection.js"}],"private":null,"static":null,"name":"sortByKey","doc":"<p>Sorts this collection by <b>key</b>s.</p>\n","chainable":false,"inheritdoc":null,"id":"method-sortByKey","fires":["sort"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the reference to the class from which this object was instantiated. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":778,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Class","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"private":null,"static":null,"name":"statics","doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-statics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Stops any running effects and clears this object's internal effects queue if it contains any additional effects\nthat ...","method_calls":null,"owner":"Ext.util.Animate","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":331,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Animate.js"}],"return":{"type":"Ext.Element","properties":null,"doc":"<p>The Element</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},"private":null,"static":null,"name":"stopAnimation","doc":"<p>Stops any running effects and clears this object's internal effects queue if it contains any additional effects\nthat haven't started yet.</p>\n","chainable":true,"inheritdoc":null,"id":"method-stopAnimation","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Stops any running effects and clears this object's internal effects queue if it contains any additional effects\nthat ...","method_calls":null,"owner":"Ext.util.Animate","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":322,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Animate.js"}],"return":{"type":"Ext.Element","properties":null,"doc":"<p>The Element</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},"private":null,"static":null,"name":"stopFx","doc":"<p>Stops any running effects and clears this object's internal effects queue if it contains any additional effects\nthat haven't started yet.</p>\n","chainable":null,"inheritdoc":null,"id":"method-stopFx","deprecated":{"text":"<p>Replaced by <a href=\"#!/api/Ext.util.Animate-method-stopAnimation\" rel=\"Ext.util.Animate-method-stopAnimation\" class=\"docClass\">stopAnimation</a></p>\n","version":"4.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Collects all of the values of the given property and returns their sum ...","method_calls":["extractValues"],"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The property to sum by</p>\n","name":"property","html_type":"String"},{"type":"String","tagname":"params","doc":"<p>'root' property to extract the first argument from. This is used mainly when\nsumming fields in records, where the fields are all stored inside the 'data' object</p>\n","name":"root","optional":true,"html_type":"String"},{"type":"Number","default":"0","tagname":"params","doc":"<p>The record index to start at</p>\n","name":"start","optional":true,"html_type":"Number"},{"type":"Number","default":"-1","tagname":"params","doc":"<p>The record index to end at</p>\n","name":"end","optional":true,"html_type":"Number"}],"tagname":"method","files":[{"linenr":837,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The total</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"sum","doc":"<p>Collects all of the values of the given property and returns their sum</p>\n","chainable":false,"inheritdoc":null,"id":"method-sum","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Suspends firing of the named event(s). ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String...","tagname":"params","doc":"<p>Multiple event names to suspend.</p>\n","name":"eventName","html_type":"String..."}],"tagname":"method","files":[{"linenr":857,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"suspendEvent","doc":"<p>Suspends firing of the named event(s).</p>\n\n<p>After calling this method to suspend events, the events will no longer fire when requested to fire.</p>\n\n<p><strong>Note that if this is called multiple times for a certain event, the converse method\n<a href=\"#!/api/Ext.util.Observable-method-resumeEvent\" rel=\"Ext.util.Observable-method-resumeEvent\" class=\"docClass\">resumeEvent</a> will have to be called the same number of times for it to resume firing.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-suspendEvent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Suspends the firing of all events. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>Pass as true to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events.</p>\n","name":"queueSuspended","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":844,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"suspendEvents","doc":"<p>Suspends the firing of all events. (see <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n","chainable":false,"inheritdoc":null,"id":"method-suspendEvents","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Ensures that all effects queued after syncFx is called on this object are run concurrently. ...","method_calls":null,"owner":"Ext.util.Animate","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":341,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Animate.js"}],"return":{"type":"Object","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"syncFx","doc":"<p>Ensures that all effects queued after syncFx is called on this object are run concurrently. This is the opposite\nof <a href=\"#!/api/Ext.util.Animate-method-sequenceFx\" rel=\"Ext.util.Animate-method-sequenceFx\" class=\"docClass\">sequenceFx</a>.</p>\n","chainable":true,"inheritdoc":null,"id":"method-syncFx","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for removeListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The type of event the handler was associated with.</p>\n\n","name":"eventName","html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>The handler to remove. <strong>This must be a reference to the function passed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope originally specified for the handler. It must be the same as the\nscope argument specified in the original call to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> or the listener will not be removed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1128,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":null,"private":null,"static":null,"name":"un","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-removeListener\" rel=\"Ext.util.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-un","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Change the key for an existing item in the collection. ...","method_calls":["indexOfKey"],"owner":"Ext.util.AbstractMixedCollection","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The old key</p>\n","name":"oldKey","html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>The new key</p>\n","name":"newKey","html_type":"Object"}],"tagname":"method","files":[{"linenr":220,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"private":null,"static":null,"name":"updateKey","doc":"<p>Change the key for an existing item in the collection. If the old key\ndoes not exist this is a no-op.</p>\n","chainable":false,"inheritdoc":null,"id":"method-updateKey","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":176,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-addConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":256,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addInheritableStatics","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addInheritableStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"member","html_type":"Object"}],"tagname":"method","files":[{"linenr":353,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addMember","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addMember","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add methods / properties to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":296,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"addMembers","doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addMembers","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add / override static properties of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":218,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"addStatics","doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"xtype","html_type":"Object"}],"tagname":"method","files":[{"linenr":730,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addXtype","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addXtype","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Borrow another class' members to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Ext.Base","tagname":"params","doc":"<p>The class to borrow members from</p>\n","name":"fromClass","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"type":"Array/String","tagname":"params","doc":"<p>The names of the members to borrow</p>\n","name":"members","html_type":"Array/String"}],"tagname":"method","files":[{"linenr":383,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":true,"name":"borrow","doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-borrow","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-static-method-create\" rel=\"Ext.layout.Layout-static-method-create\" class=\"docClass\">Ext.layout.Layout.create</a>","name":"create"}],"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create a new instance of this Class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":60,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object","properties":null,"doc":"<p>the created instance.</p>\n","name":"return","html_type":"Object"},"static":true,"private":null,"name":"create","doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-create","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create aliases for existing prototype methods. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","name":"alias","html_type":"String/Object"},{"type":"String/Object","tagname":"params","doc":"<p>The original method name</p>\n","name":"origin","html_type":"String/Object"}],"tagname":"method","files":[{"linenr":696,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"createAlias","doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"static-method-createAlias","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":81,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"extend","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-extend","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the current class' name in string format. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":677,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"String","properties":null,"doc":"<p>className</p>\n","name":"return","html_type":"String"},"static":true,"private":null,"name":"getName","doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"static-method-getName","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds members to class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":373,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"implement","doc":"<p>Adds members to class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-implement","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n","version":"4.1"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Used internally by the mixins pre-processor ...","method_calls":["addConfig","hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"mixinClass","html_type":"Object"}],"tagname":"method","files":[{"linenr":595,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"mixin","doc":"<p>Used internally by the mixins pre-processor</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-mixin","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":162,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"onExtended","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-onExtended","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Override members of this class. ...","method_calls":["addConfig","addInheritableStatics"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":452,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this class</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"override","doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","chainable":true,"inheritdoc":null,"id":"static-method-override","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n","version":"4.1.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"triggerExtended","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-triggerExtended","fires":null,"linenr":null},{"autodetected":{},"short_doc":"Fires when an item is added to the collection. ...","since":"1.1.0","owner":"Ext.util.AbstractMixedCollection","params":[{"type":"Number","tagname":"params","doc":"<p>The index at which the item was added.</p>\n","name":"index","html_type":"Number"},{"type":"Object","tagname":"params","doc":"<p>The item added.</p>\n","name":"o","html_type":"Object"},{"type":"String","tagname":"params","doc":"<p>The key associated with the added item.</p>\n","name":"key","html_type":"String"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":81,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"name":"add","doc":"<p>Fires when an item is added to the collection.</p>\n","id":"event-add"},{"autodetected":{},"short_doc":"Fires when the collection is cleared. ...","since":"1.1.0","owner":"Ext.util.AbstractMixedCollection","params":[{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":75,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"name":"clear","doc":"<p>Fires when the collection is cleared.</p>\n","id":"event-clear"},{"type":null,"autodetected":{"inheritable":true,"static":true,"private":true,"linenr":true},"short_doc":"Fires when a mouse click is detected within the element. ...","owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"Ext.EventObject","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a> encapsulating the DOM event.</p>\n","name":"e","html_type":"<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"},{"type":"HTMLElement","tagname":"params","doc":"<p>The target of the event.</p>\n","name":"t","html_type":"HTMLElement"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":87,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"return":null,"private":null,"static":null,"name":"click","doc":"<p>Fires when a mouse click is detected within the element.</p>\n","throws":null,"inheritdoc":null,"id":"event-click","linenr":null},{"type":null,"autodetected":{"inheritable":true,"static":true,"private":true,"linenr":true},"short_doc":"Fires when a mousedown is detected within the element. ...","owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"Ext.EventObject","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a> encapsulating the DOM event.</p>\n","name":"e","html_type":"<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"},{"type":"HTMLElement","tagname":"params","doc":"<p>The target of the event.</p>\n","name":"t","html_type":"HTMLElement"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":67,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"return":null,"private":null,"static":null,"name":"mousedown","doc":"<p>Fires when a mousedown is detected within the element.</p>\n","throws":null,"inheritdoc":null,"id":"event-mousedown","linenr":null},{"type":null,"autodetected":{"inheritable":true,"static":true,"private":true,"linenr":true},"short_doc":"Fires when a mouseout is detected with the element. ...","owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"Ext.EventObject","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a> encapsulating the DOM event.</p>\n","name":"e","html_type":"<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"},{"type":"HTMLElement","tagname":"params","doc":"<p>The target of the event.</p>\n","name":"t","html_type":"HTMLElement"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":82,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"return":null,"private":null,"static":null,"name":"mouseout","doc":"<p>Fires when a mouseout is detected with the element.</p>\n","throws":null,"inheritdoc":null,"id":"event-mouseout","linenr":null},{"type":null,"autodetected":{"inheritable":true,"static":true,"private":true,"linenr":true},"short_doc":"Fires when a mouseover is detected within the element. ...","owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"Ext.EventObject","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a> encapsulating the DOM event.</p>\n","name":"e","html_type":"<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"},{"type":"HTMLElement","tagname":"params","doc":"<p>The target of the event.</p>\n","name":"t","html_type":"HTMLElement"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":77,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"return":null,"private":null,"static":null,"name":"mouseover","doc":"<p>Fires when a mouseover is detected within the element.</p>\n","throws":null,"inheritdoc":null,"id":"event-mouseover","linenr":null},{"type":null,"autodetected":{"inheritable":true,"static":true,"private":true,"linenr":true},"short_doc":"Fires when a mouseup is detected within the element. ...","owner":"Ext.draw.CompositeSprite","inheritable":null,"params":[{"type":"Ext.EventObject","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a> encapsulating the DOM event.</p>\n","name":"e","html_type":"<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"},{"type":"HTMLElement","tagname":"params","doc":"<p>The target of the event.</p>\n","name":"t","html_type":"HTMLElement"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":72,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/CompositeSprite.js"}],"return":null,"private":null,"static":null,"name":"mouseup","doc":"<p>Fires when a mouseup is detected within the element.</p>\n","throws":null,"inheritdoc":null,"id":"event-mouseup","linenr":null},{"autodetected":{},"short_doc":"Fires when an item is removed from the collection. ...","since":"1.1.0","owner":"Ext.util.AbstractMixedCollection","params":[{"type":"Object","tagname":"params","doc":"<p>The item being removed.</p>\n","name":"o","html_type":"Object"},{"type":"String","tagname":"params","doc":"<p>The key associated with the removed item.</p>\n","name":"key","optional":true,"html_type":"String"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":99,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"name":"remove","doc":"<p>Fires when an item is removed from the collection.</p>\n","id":"event-remove"},{"autodetected":{},"short_doc":"Fires when an item is replaced in the collection. ...","since":"1.1.0","owner":"Ext.util.AbstractMixedCollection","params":[{"type":"String","tagname":"params","doc":"<p>he key associated with the new added.</p>\n","name":"key","html_type":"String"},{"type":"Object","tagname":"params","doc":"<p>The item being replaced.</p>\n","name":"old","html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>The new item.</p>\n","name":"new","html_type":"Object"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":90,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/AbstractMixedCollection.js"}],"name":"replace","doc":"<p>Fires when an item is replaced in the collection.</p>\n","id":"event-replace"}],"alternateClassNames":[],"code_type":"ext_define","mixins":["Ext.util.Animate"],"doc":"<p>A composite Sprite handles a group of sprites with common methods to a sprite\nsuch as <code>hide</code>, <code>show</code>, <code>setAttributes</code>. These methods are applied to the set of sprites\nadded to the group.</p>\n\n<p>CompositeSprite extends <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a> so you can use the same methods\nin <code>MixedCollection</code> to iterate through sprites, add and remove elements, etc.</p>\n\n<p>In order to create a CompositeSprite, one has to provide a handle to the surface where it is\nrendered:</p>\n\n<pre><code>var group = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.draw.CompositeSprite\" rel=\"Ext.draw.CompositeSprite\" class=\"docClass\">Ext.draw.CompositeSprite</a>', {\n    surface: drawComponent.surface\n});\n</code></pre>\n\n<p>Then just by using <code>MixedCollection</code> methods it's possible to add <a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>s:</p>\n\n<pre><code>group.add(sprite1);\ngroup.add(sprite2);\ngroup.add(sprite3);\n</code></pre>\n\n<p>And then apply common Sprite methods to them:</p>\n\n<pre><code>group.setAttributes({\n    fill: '#f00'\n}, true);\n</code></pre>\n","name":"Ext.draw.CompositeSprite","id":"class-Ext.draw.CompositeSprite"}