{"autodetected":{"aliases":true,"requires":true,"uses":true,"extends":true,"members":true,"alternateClassNames":true,"code_type":true,"mixins":true},"aliases":{},"requires":["Ext.draw.Draw","Ext.draw.Sprite","Ext.draw.Matrix","Ext.Element"],"files":[{"linenr":21,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"tagname":"class","uses":[],"extends":"Ext.draw.Surface","members":[{"autodetected":{},"type":"Number","default":null,"owner":"Ext.draw.Surface","tagname":"cfg","files":[{"linenr":174,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"name":"height","properties":null,"doc":"<p>The height of this component in pixels (defaults to auto).</p>\n","id":"cfg-height","html_type":"Number"},{"autodetected":{},"type":"Ext.draw.Sprite[]","default":null,"owner":"Ext.draw.Surface","tagname":"cfg","files":[{"linenr":189,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"name":"items","properties":null,"doc":"<p>Array of sprites or sprite config objects to add initially to the surface.</p>\n","id":"cfg-items","html_type":"<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>[]"},{"autodetected":{},"type":"Object","short_doc":"A config object containing one or more event handlers to be added to this object during initialization. ...","default":null,"owner":"Ext.util.Observable","tagname":"cfg","files":[{"linenr":197,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"name":"listeners","properties":null,"doc":"<p>A config object containing one or more event handlers to be added to this object during initialization. This\nshould be a valid listeners config object as specified in the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching multiple\nhandlers at once.</p>\n\n<p><strong>DOM events from Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></strong></p>\n\n<p>While <em>some</em> Ext JS Component classes export selected DOM events (e.g. \"click\", \"mouseover\" etc), this is usually\nonly done when extra value can be added. For example the <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>'s <strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong> event passing the node clicked on. To access DOM events directly from a\nchild element of a Component, we need to specify the <code>element</code> option to identify the Component property to add a\nDOM listener to:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n","id":"cfg-listeners","html_type":"Object"},{"autodetected":{},"type":"Number","default":null,"owner":"Ext.draw.Surface","tagname":"cfg","files":[{"linenr":178,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"name":"width","properties":null,"doc":"<p>The width of this component in pixels (defaults to auto).</p>\n","id":"cfg-width","html_type":"Number"},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'Ext.Base'","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":763,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"$className","doc":"\n","inheritdoc":null,"id":"property-S-className","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{blur: 0, \"clip-rect\": \"0 0 1e9 1e9\", cursor: \"default\", cx: 0, cy: 0, 'dominant-baseline': 'auto', fill: \"none\", \"fill-opacity\": 1, font: '10px \"Arial\"', \"font-family\": '\"Arial\"', \"font-size\": \"10\", \"font-style\": \"normal\", \"font-weight\": 400, gradient: \"\", height: 0, hidden: false, href: \"http://sencha.com/\", opacity: 1, path: \"M0,0\", radius: 0, rx: 0, ry: 0, scale: \"1 1\", src: \"\", stroke: \"none\", \"stroke-dasharray\": \"\", \"stroke-linecap\": \"butt\", \"stroke-linejoin\": \"butt\", \"stroke-miterlimit\": 0, \"stroke-opacity\": 1, \"stroke-width\": 1, target: \"_blank\", text: \"\", \"text-anchor\": \"middle\", title: \"Ext Draw\", width: 0, x: 0, y: 0, zIndex: 0}","owner":"Ext.draw.Surface","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":131,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"availableAttrs","doc":"\n","inheritdoc":null,"id":"property-availableAttrs","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":772,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configMap","doc":"\n","inheritdoc":null,"id":"property-configMap","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":"End Definitions ...","default":"'Svg'","owner":"Ext.draw.engine.Svg","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":32,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"engine","doc":"<p>End Definitions</p>\n","inheritdoc":null,"id":"property-engine","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"['Svg', 'Vml']","owner":"Ext.draw.Surface","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":74,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"enginePriority","doc":"\n","inheritdoc":null,"id":"property-enginePriority","html_type":"Array","linenr":74},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"Initial suspended call count. ...","default":"0","owner":"Ext.util.Observable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":237,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"eventsSuspended","doc":"<p>Initial suspended call count. Incremented when <a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a> is called, decremented when <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> is called.</p>\n","inheritdoc":null,"id":"property-eventsSuspended","html_type":"Number","linenr":null},{"autodetected":{},"type":"Object","short_doc":"This object holds a key for any event that has a listener. ...","default":null,"owner":"Ext.util.Observable","readonly":true,"tagname":"property","files":[{"linenr":243,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"name":"hasListeners","properties":null,"doc":"<p>This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class (via <a href=\"#!/api/Ext.util.Observable-static-method-observe\" rel=\"Ext.util.Observable-static-method-observe\" class=\"docClass\">observe</a>) or\non the <a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.</p>\n\n<p>The intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n","id":"property-hasListeners","html_type":"Object"},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":" ...","default":"352","owner":"Ext.draw.Surface","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":184,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"height","doc":"\n","inheritdoc":null,"id":"property-height","html_type":"Number","linenr":184},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":769,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigList","doc":"\n","inheritdoc":null,"id":"property-initConfigList","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":775,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigMap","doc":"\n","inheritdoc":null,"id":"property-initConfigMap","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"isInstance","doc":"\n","inheritdoc":null,"id":"property-isInstance","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"true in this class to identify an object as an instantiated Observable, or subclass thereof. ...","default":"true","owner":"Ext.util.Observable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":231,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"isObservable","properties":null,"doc":"<p><code>true</code> in this class to identify an object as an instantiated Observable, or subclass thereof.</p>\n","inheritdoc":null,"id":"property-isObservable","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{circle: {cx: 0, cy: 0, r: 0, fill: \"none\", stroke: null, \"stroke-width\": null, opacity: null, \"fill-opacity\": null, \"stroke-opacity\": null}, ellipse: {cx: 0, cy: 0, rx: 0, ry: 0, fill: \"none\", stroke: null, \"stroke-width\": null, opacity: null, \"fill-opacity\": null, \"stroke-opacity\": null}, rect: {x: 0, y: 0, width: 0, height: 0, rx: 0, ry: 0, fill: \"none\", stroke: null, \"stroke-width\": null, opacity: null, \"fill-opacity\": null, \"stroke-opacity\": null}, text: {x: 0, y: 0, \"text-anchor\": \"start\", \"font-family\": null, \"font-size\": null, \"font-weight\": null, \"font-style\": null, fill: \"#000\", stroke: null, \"stroke-width\": null, opacity: null, \"fill-opacity\": null, \"stroke-opacity\": null}, path: {d: \"M0,0\", fill: \"none\", stroke: null, \"stroke-width\": null, opacity: null, \"fill-opacity\": null, \"stroke-opacity\": null}, image: {x: 0, y: 0, width: 0, height: 0, preserveAspectRatio: \"none\", opacity: null}}","owner":"Ext.draw.engine.Svg","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":53,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"minDefaults","doc":"\n","inheritdoc":null,"id":"property-minDefaults","html_type":"Object","linenr":53},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"Flag indicating that the surface implementation requires sprites to be maintained\nin order of their zIndex. ...","default":"true","owner":"Ext.draw.Surface","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":194,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"orderSpritesByZIndex","doc":"<p>Flag indicating that the surface implementation requires sprites to be maintained\nin order of their zIndex. Impls that don't require this can set it to false.</p>\n","inheritdoc":null,"id":"property-orderSpritesByZIndex","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.draw.engine.Svg","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":51,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"parsers","doc":"\n","inheritdoc":null,"id":"property-parsers","html_type":"Object","linenr":51},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.Class","short_doc":"Get the reference to the current class from which this object was instantiated. ...","default":null,"owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1045,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"private":null,"static":null,"name":"self","properties":null,"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","inheritdoc":null,"id":"property-self","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"RegExp","short_doc":" ...","default":"/[, ]+/","owner":"Ext.draw.Surface","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":72,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"separatorRe","doc":"\n","inheritdoc":null,"id":"property-separatorRe","html_type":"RegExp","linenr":72},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"RegExp","short_doc":" ...","default":"/\\s+/","owner":"Ext.draw.engine.Svg","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":37,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"spacesRe","doc":"\n","inheritdoc":null,"id":"property-spacesRe","html_type":"RegExp","linenr":37},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{radius: \"r\", radiusX: \"rx\", radiusY: \"ry\", path: \"d\", lineWidth: \"stroke-width\", fillOpacity: \"fill-opacity\", strokeOpacity: \"stroke-opacity\", strokeLinejoin: \"stroke-linejoin\"}","owner":"Ext.draw.engine.Svg","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":40,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"translateAttrs","doc":"\n","inheritdoc":null,"id":"property-translateAttrs","html_type":"Object","linenr":40},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"RegExp","short_doc":" ...","default":"/^\\s+|\\s+$/g","owner":"Ext.draw.engine.Svg","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":36,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"trimRe","doc":"\n","inheritdoc":null,"id":"property-trimRe","html_type":"RegExp","linenr":36},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":" ...","default":"512","owner":"Ext.draw.Surface","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":185,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"width","doc":"\n","inheritdoc":null,"id":"property-width","html_type":"Number","linenr":185},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":" ...","default":"0","owner":"Ext.draw.Surface","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":186,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"x","doc":"\n","inheritdoc":null,"id":"property-x","html_type":"Number","linenr":186},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"\"http:/\" + \"/www.w3.org/1999/xlink\"","owner":"Ext.draw.engine.Svg","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":38,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"xlink","doc":"\n","inheritdoc":null,"id":"property-xlink","html_type":"String","linenr":38},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":" ...","default":"0","owner":"Ext.draw.Surface","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":187,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"y","doc":"\n","inheritdoc":null,"id":"property-y","html_type":"Number","linenr":187},{"autodetected":{"type":true,"default":true,"readonly":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":true,"readonly":null,"tagname":"property","files":[{"linenr":133,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"$onExtended","doc":"\n","inheritdoc":null,"id":"static-property-S-onExtended","html_type":"Array","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates new Surface. ...","method_calls":["addEvents","getId","initBackground","initGradients","initItems","render"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>Config object.</p>\n","name":"config","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":201,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"return":{"type":"Ext.draw.Surface","doc":"\n","html_type":"<a href=\"#!/api/Ext.draw.Surface\" rel=\"Ext.draw.Surface\" class=\"docClass\">Ext.draw.Surface</a>"},"private":null,"static":null,"name":"constructor","doc":"<p>Creates new Surface.</p>\n","chainable":false,"inheritdoc":null,"id":"method-constructor","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds a Sprite to the surface. ...","method_calls":["add","insertByZIndex","onAdd","prepareItems"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Ext.draw.Sprite[]/Ext.draw.Sprite...","tagname":"params","doc":"<p>One or more Sprite objects or configs.</p>\n","name":"args","html_type":"<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>[]/<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>..."}],"tagname":"method","files":[{"linenr":534,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"return":{"type":"Ext.draw.Sprite[]/Ext.draw.Sprite","properties":null,"doc":"<p>The sprites added.</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>[]/<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>"},"private":null,"static":null,"name":"add","doc":"<p>Adds a Sprite to the surface. See <a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a> for the configuration object to be\npassed into this method.</p>\n\n<p>For example:</p>\n\n<pre><code>drawComponent.surface.add({\n    type: 'circle',\n    fill: '#ffc',\n    radius: 100,\n    x: 100,\n    y: 100\n});\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-add","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.draw.Surface","link":"<a href=\"#!/api/Ext.draw.Surface-method-addCls\" rel=\"Ext.draw.Surface-method-addCls\" class=\"docClass\">Ext.draw.Surface.addCls</a>","name":"addCls"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds one or more CSS classes to the element. ...","method_calls":["hasCls"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"},{"type":"Object","name":"className","html_type":"Object"}],"tagname":"method","files":[{"linenr":686,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":null,"static":null,"name":"addCls","doc":"<p>Adds one or more CSS classes to the element. Duplicate classes are automatically filtered out.</p>\n\n<p>For example:</p>\n\n<pre><code>drawComponent.surface.addCls(sprite, 'x-visible');\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"method-addCls","fires":[],"linenr":686},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds the specified events to the list of events which this Observable may fire. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Object/String...","tagname":"params","doc":"<p>Either an object with event names as properties with\na value of <code>true</code>. For example:</p>\n\n<pre><code>this.addEvents({\n    storeloaded: true,\n    storecleared: true\n});\n</code></pre>\n\n<p>Or any number of event names as separate parameters. For example:</p>\n\n<pre><code>this.addEvents('storeloaded', 'storecleared');\n</code></pre>\n","name":"eventNames","html_type":"Object/String..."}],"tagname":"method","files":[{"linenr":800,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"addEvents","doc":"<p>Adds the specified events to the list of events which this Observable may fire.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addEvents","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.draw.Surface","link":"<a href=\"#!/api/Ext.draw.Surface-method-addGradient\" rel=\"Ext.draw.Surface-method-addGradient\" class=\"docClass\">Ext.draw.Surface.addGradient</a>","name":"addGradient"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds a gradient definition to the Surface. ...","method_calls":["createSvgElement","getDefs"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"gradient","html_type":"Object"}],"tagname":"method","files":[{"linenr":629,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":null,"static":null,"name":"addGradient","doc":"<p>Adds a gradient definition to the Surface. Note that in some surface engines, adding\na gradient via this method will not take effect if the surface has already been rendered.\nTherefore, it is preferred to pass the gradients as an item to the surface config, rather\nthan calling this method, especially if the surface is rendered immediately (e.g. due to\n'renderTo' in its config). For more information on how to create gradients in the Chart\nconfiguration object please refer to <a href=\"#!/api/Ext.chart.Chart\" rel=\"Ext.chart.Chart\" class=\"docClass\">Ext.chart.Chart</a>.</p>\n\n<p>The gradient object to be passed into this method is composed by:</p>\n\n<ul>\n<li><strong>id</strong> - string - The unique name of the gradient.</li>\n<li><strong>angle</strong> - number, optional - The angle of the gradient in degrees.</li>\n<li><strong>stops</strong> - object - An object with numbers as keys (from 0 to 100) and style objects as values.</li>\n</ul>\n\n\n<p>For example:</p>\n\n<p>   drawComponent.surface.addGradient({\n       id: 'gradientId',\n       angle: 45,\n       stops: {\n           0: {\n               color: '#555'\n           },\n           100: {\n               color: '#ddd'\n           }\n       }\n   });</p>\n","chainable":null,"inheritdoc":null,"id":"method-addGradient","fires":[],"linenr":629},{"overrides":[{"owner":"Ext.AbstractComponent","link":"<a href=\"#!/api/Ext.AbstractComponent-method-addListener\" rel=\"Ext.AbstractComponent-method-addListener\" class=\"docClass\">Ext.AbstractComponent.addListener</a>","name":"addListener"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Appends an event handler to this object. ...","method_calls":["addListener"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","name":"eventName","html_type":"String/Object"},{"type":"Function","tagname":"params","doc":"<p>The method the event invokes, or <em>if <code>scope</code> is specified, the </em>name* of the method within\nthe specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> plus the <code>options</code> parameter described below.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","name":"scope","html_type":"Object"},{"type":"Number","tagname":"params","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n\n","name":"delay","html_type":"Number"},{"type":"Boolean","tagname":"params","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n","name":"single","html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","name":"buffer","html_type":"Number"},{"type":"Ext.util.Observable","tagname":"params","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the event\n  was bubbled up from a child Observable.</p>\n\n","name":"target","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"type":"String","tagname":"params","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an element to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to elements of\n  <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the Component is rendered.\n  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n","name":"element","html_type":"String"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>When specified as <code>true</code>, the function returns A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call.</p>\n\n","name":"destroyable","optional":true,"html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n","name":"priority","optional":true,"html_type":"Number"}],"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> Unlike in ExtJS 3.x, the options object will also be passed as the last\nargument to every event handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":502,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"addListener","doc":"<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"mouseover\", this.onMouseOver, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: this.onCellClick,\n    mouseover: this.onMouseOver,\n    mouseout: this.onMouseOut,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: this.onCellClick, scope: this, single: true},\n    mouseover: {fn: panel.onMouseOver, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used. Note that\n<code>scope</code> MUST be specified to use this option:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: 'onCellClick', scope: this, single: true},\n    mouseover: {fn: 'onMouseOver', scope: panel}\n});\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-addListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds listeners to any Observable object (or Ext.Element) which are automatically removed when this Component is\ndestr...","method_calls":["addManagedListener"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":295,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"addManagedListener","doc":"<p>Adds listeners to any Observable object (or <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>) which are automatically removed when this Component is\ndestroyed.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addManagedListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getGroup","hidePrim","scrubAttrs","setClip","showPrim","tuneText"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"}],"tagname":"method","files":[{"linenr":470,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"applyAttrs","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-applyAttrs","fires":[],"linenr":470},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["rotate","scale","transform","translate"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"},{"type":"Object","name":"onlyMatrix","html_type":"Object"}],"tagname":"method","files":[{"linenr":768,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"applyTransformations","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-applyTransformations","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Using the current viewBox property and the surface's width and height, calculate the\nappropriate viewBoxShift that wi...","method_calls":null,"owner":"Ext.draw.Surface","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":696,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"applyViewBox","doc":"<p>Using the current viewBox property and the surface's width and height, calculate the\nappropriate viewBoxShift that will be applied as a persistent transform to all sprites.</p>\n","chainable":false,"inheritdoc":null,"id":"method-applyViewBox","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Insert or move a given sprite's element to the correct place in the DOM list for its zIndex ...","method_calls":null,"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Ext.draw.Sprite","tagname":"params","doc":"\n","name":"sprite","html_type":"<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>"}],"tagname":"method","files":[{"linenr":601,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":null,"static":null,"name":"applyZIndex","doc":"<p>Insert or move a given sprite's element to the correct place in the DOM list for its zIndex</p>\n","chainable":false,"inheritdoc":null,"id":"method-applyZIndex","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":1269,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the overridden method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callOverridden","doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"method-callOverridden","deprecated":{"text":"<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the \"parent\" method of the current method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":846,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the parent method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callParent","doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","chainable":false,"inheritdoc":null,"id":"method-callParent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":961,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the superclass method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callSuper","doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","chainable":false,"inheritdoc":null,"id":"method-callSuper","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Object","name":"o","html_type":"Object"},{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":127,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"captureArgs","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-captureArgs","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all listeners for this object including the managed listeners ...","method_calls":["clearManagedListeners"],"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":729,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"clearListeners","doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearListeners","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all managed listeners for this object. ...","method_calls":["removeManagedListenerItem"],"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"clearManagedListeners","doc":"<p>Removes all managed listeners for this object.</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearManagedListeners","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":766,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configClass","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-configClass","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Continue to fire event. ...","method_calls":["getBubbleParent"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"eventName","html_type":"String"},{"type":"Array","tagname":"params","doc":"\n","name":"args","html_type":"Array"},{"type":"Boolean","tagname":"params","doc":"\n","name":"bubbles","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":456,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"continueFireEvent","doc":"<p>Continue to fire event.</p>\n","chainable":false,"inheritdoc":null,"id":"method-continueFireEvent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"id","html_type":"Object"}],"tagname":"method","files":[{"linenr":902,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"createGroup","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-createGroup","fires":null,"linenr":902},{"overrides":[{"owner":"Ext.draw.Surface","link":"<a href=\"#!/api/Ext.draw.Surface-method-createItem\" rel=\"Ext.draw.Surface-method-createItem\" class=\"docClass\">Ext.draw.Surface.createItem</a>","name":"createItem"}],"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates an item and appends it to the surface. ...","method_calls":null,"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":623,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"return":null,"private":true,"static":null,"name":"createItem","doc":"<p>Creates an item and appends it to the surface. Called\nas an internal method when calling <code>add</code>.</p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-createItem","fires":null,"linenr":623},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates an event handling function which refires the event from this object as the passed event name. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name under which to refire the passed parameters.</p>\n","name":"newName","html_type":"String"},{"type":"Array","tagname":"params","doc":"<p>The caller can specify on which indices to slice.</p>\n","name":"beginEnd","optional":true,"html_type":"Array"}],"tagname":"method","files":[{"linenr":981,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Function","properties":null,"doc":"\n","name":"return","html_type":"Function"},"private":true,"static":null,"name":"createRelayer","doc":"<p>Creates an event handling function which refires the event from this object as the passed event name.</p>\n","chainable":false,"inheritdoc":null,"id":"method-createRelayer","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["applyAttrs","applyTransformations","applyZIndex","createSvgElement"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"}],"tagname":"method","files":[{"linenr":136,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"createSpriteElement","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-createSpriteElement","fires":[],"linenr":136},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"type","html_type":"Object"},{"type":"Object","name":"attrs","html_type":"Object"}],"tagname":"method","files":[{"linenr":125,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"createSvgElement","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-createSvgElement","fires":null,"linenr":125},{"overrides":[{"owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">Ext.Base.destroy</a>","name":"destroy"},{"owner":"Ext.draw.Surface","link":"<a href=\"#!/api/Ext.draw.Surface-method-destroy\" rel=\"Ext.draw.Surface-method-destroy\" class=\"docClass\">Ext.draw.Surface.destroy</a>","name":"destroy"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Destroys the surface. ...","method_calls":["callParent"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":736,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":null,"static":null,"name":"destroy","doc":"<p>Destroys the surface. This is done by removing all components from it and\nalso removing its reference to a DOM element.</p>\n\n<p>For example:</p>\n\n<pre><code> drawComponent.surface.destroy();\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-destroy","fires":[],"linenr":736},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"x","html_type":"Object"},{"type":"Object","name":"y","html_type":"Object"},{"type":"Object","name":"rx","html_type":"Object"},{"type":"Object","name":"ry","html_type":"Object"}],"tagname":"method","files":[{"linenr":857,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"ellipsePath","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-ellipsePath","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling this.getBubbleTarget() if\npresent. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String/String[]","tagname":"params","doc":"<p>The event name to bubble, or an Array of event names.</p>\n","name":"eventNames","html_type":"String/String[]"}],"tagname":"method","files":[{"linenr":995,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"enableBubble","doc":"<p>Enables events fired by this Observable to bubble up an owner hierarchy by calling <code>this.getBubbleTarget()</code> if\npresent. There is no implementation in the Observable base class.</p>\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers.\nSee <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>. The default implementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> returns the\nComponent's immediate owner. But if a known target is required, this can be overridden to access the\nrequired target more quickly.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.overrides.form.field.Base', {\n    override: '<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>',\n\n    //  Add functionality to Field's initComponent to enable the change event to bubble\n    initComponent: function () {\n        this.callParent();\n        this.enableBubble('change');\n    }\n});\n\nvar myForm = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-enableBubble","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fires the specified event with the passed parameters (minus the event name, plus the options object passed\nto addList...","method_calls":["fireEventArgs"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to fire.</p>\n","name":"eventName","html_type":"String"},{"type":"Object...","tagname":"params","doc":"<p>Variable number of parameters are passed to handlers.</p>\n","name":"args","html_type":"Object..."}],"tagname":"method","files":[{"linenr":416,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"fireEvent","doc":"<p>Fires the specified event with the passed parameters (minus the event name, plus the <code>options</code> object passed\nto <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireEvent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fires the specified event with the passed parameter list. ...","method_calls":["continueFireEvent"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to fire.</p>\n","name":"eventName","html_type":"String"},{"type":"Object[]","tagname":"params","doc":"<p>An array of parameters which are passed to handlers.</p>\n","name":"args","html_type":"Object[]"}],"tagname":"method","files":[{"linenr":431,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"fireEventArgs","doc":"<p>Fires the specified event with the passed parameter list.</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireEventArgs","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["applyTransformations"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"},{"type":"Object","name":"isWithoutTransform","html_type":"Object"}],"tagname":"method","files":[{"linenr":746,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"getBBox","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getBBox","fires":[],"linenr":746},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"}],"tagname":"method","files":[{"linenr":156,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"getBBoxText","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getBBoxText","fires":null,"linenr":156},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the bubbling parent for an Observable ...","method_calls":["getBubbleTarget"],"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":489,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Ext.util.Observable","properties":null,"doc":"<p>The bubble parent. null is returned if no bubble target exists</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},"private":true,"static":null,"name":"getBubbleParent","doc":"<p>Gets the bubbling parent for an Observable</p>\n","chainable":false,"inheritdoc":null,"id":"method-getBubbleParent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":1196,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"getConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["createSvgElement"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":198,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"getDefs","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getDefs","fires":[],"linenr":198},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns a new group or an existent group associated with the current surface. ...","method_calls":["createGroup"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The unique identifier of the group.</p>\n","name":"id","html_type":"String"}],"tagname":"method","files":[{"linenr":914,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The <a href=\"#!/api/Ext.draw.CompositeSprite\" rel=\"Ext.draw.CompositeSprite\" class=\"docClass\">Ext.draw.CompositeSprite</a>.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getGroup","doc":"<p>Returns a new group or an existent group associated with the current surface.\nThe group returned is a <a href=\"#!/api/Ext.draw.CompositeSprite\" rel=\"Ext.draw.CompositeSprite\" class=\"docClass\">Ext.draw.CompositeSprite</a> group.</p>\n\n<p>For example:</p>\n\n<pre><code>var spriteGroup = drawComponent.surface.getGroup('someGroupId');\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-getGroup","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Retrieves the id of this component. ...","method_calls":null,"owner":"Ext.draw.Surface","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":974,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":null,"static":null,"name":"getId","doc":"<p>Retrieves the id of this component.\nWill autogenerate an id if one has not already been set.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getId","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>Name of the config option to return.</p>\n","name":"name","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":1206,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object/Mixed","properties":null,"doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","name":"return","html_type":"Object/Mixed"},"private":null,"static":null,"name":"getInitialConfig","doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getInitialConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["ellipsePath"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"el","html_type":"Object"}],"tagname":"method","files":[{"linenr":870,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"getPathcircle","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getPathcircle","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["ellipsePath"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"el","html_type":"Object"}],"tagname":"method","files":[{"linenr":876,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"getPathellipse","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getPathellipse","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["rectPath"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"el","html_type":"Object"}],"tagname":"method","files":[{"linenr":890,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"getPathimage","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getPathimage","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"el","html_type":"Object"}],"tagname":"method","files":[{"linenr":865,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"getPathpath","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getPathpath","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["rectPath"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"el","html_type":"Object"}],"tagname":"method","files":[{"linenr":884,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"getPathrect","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getPathrect","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getBBoxText","rectPath"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"el","html_type":"Object"}],"tagname":"method","files":[{"linenr":896,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"getPathtext","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getPathtext","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the region for the surface's canvas area ...","method_calls":null,"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":246,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"return":{"type":"Ext.util.Region","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},"private":null,"static":null,"name":"getRegion","doc":"<p>Get the region for the surface's canvas area</p>\n","chainable":false,"inheritdoc":null,"id":"method-getRegion","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Checks if the specified CSS class exists on this element's DOM node. ...","method_calls":null,"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Ext.draw.Sprite","tagname":"params","doc":"<p>The sprite to look into.</p>\n","name":"sprite","html_type":"<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>"},{"type":"String","tagname":"params","doc":"<p>The CSS class to check for</p>\n","name":"className","html_type":"String"}],"tagname":"method","files":[{"linenr":676,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>True if the class exists, else false</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"hasCls","doc":"<p>Checks if the specified CSS class exists on this element's DOM node.</p>\n","chainable":false,"inheritdoc":null,"id":"method-hasCls","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1156,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"hasConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-hasConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Checks to see if this object has any listeners for a specified event, or whether the event bubbles. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to check for</p>\n","name":"eventName","html_type":"String"}],"tagname":"method","files":[{"linenr":833,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p><code>true</code> if the event is being listened for or bubbles, else <code>false</code></p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"hasListener","doc":"<p>Checks to see if this object has any listeners for a specified event, or whether the event bubbles. The answer\nindicates whether the event needs firing or not.</p>\n","chainable":false,"inheritdoc":null,"id":"method-hasListener","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":182,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"hide","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-hide","fires":null,"linenr":182},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["addCls"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"}],"tagname":"method","files":[{"linenr":190,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"hidePrim","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-hidePrim","fires":[],"linenr":190},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["add","addGradient"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":371,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"initBackground","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-initBackground","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Initialize configuration for this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1090,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":null,"static":null,"name":"initConfig","doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"method-initConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.draw.Surface","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":343,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"initGradients","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-initGradients","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["add"],"owner":"Ext.draw.Surface","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":360,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"initItems","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-initItems","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"called to initialize components in the surface\nthis is dependent on the underlying implementation. ...","method_calls":null,"owner":"Ext.draw.Surface","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":283,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"initSurface","doc":"<p>called to initialize components in the surface\nthis is dependent on the underlying implementation.</p>\n","chainable":null,"inheritdoc":null,"id":"method-initSurface","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Inserts a given sprite into the correct position in the items collection, according to\nits zIndex. ...","method_calls":null,"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Ext.draw.Sprite","tagname":"params","doc":"\n","name":"sprite","html_type":"<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>"}],"tagname":"method","files":[{"linenr":579,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"return":{"type":"Number","properties":null,"doc":"<p>the sprite's new index in the list</p>\n","name":"return","html_type":"Number"},"private":true,"static":null,"name":"insertByZIndex","doc":"<p>Inserts a given sprite into the correct position in the items collection, according to\nits zIndex. It will be inserted at the end of an existing series of sprites with the same or\nlower zIndex. By ensuring sprites are always ordered, this allows surface subclasses to render\nthe sprites in the correct order for proper z-index stacking.</p>\n","chainable":false,"inheritdoc":null,"id":"method-insertByZIndex","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for addManagedListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1134,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"mon","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-addManagedListener\" rel=\"Ext.util.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-mon","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for removeManagedListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":null,"private":null,"static":null,"name":"mun","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-removeManagedListener\" rel=\"Ext.util.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-mun","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for addListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","name":"eventName","html_type":"String/Object"},{"type":"Function","tagname":"params","doc":"<p>The method the event invokes, or <em>if <code>scope</code> is specified, the </em>name* of the method within\nthe specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> plus the <code>options</code> parameter described below.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","name":"scope","html_type":"Object"},{"type":"Number","tagname":"params","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n\n","name":"delay","html_type":"Number"},{"type":"Boolean","tagname":"params","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n","name":"single","html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","name":"buffer","html_type":"Number"},{"type":"Ext.util.Observable","tagname":"params","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the event\n  was bubbled up from a child Observable.</p>\n\n","name":"target","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"type":"String","tagname":"params","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an element to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to elements of\n  <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the Component is rendered.\n  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n","name":"element","html_type":"String"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>When specified as <code>true</code>, the function returns A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call.</p>\n\n","name":"destroyable","optional":true,"html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n","name":"priority","optional":true,"html_type":"Number"}],"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> Unlike in ExtJS 3.x, the options object will also be passed as the last\nargument to every event handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1122,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"on","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-on","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getGroup"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"}],"tagname":"method","files":[{"linenr":624,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"onAdd","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onAdd","fires":[],"linenr":624},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["processEvent"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":459,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"onClick","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onClick","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"names","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"callback","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":1224,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"onConfigUpdate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onConfigUpdate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["processEvent"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":464,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"onDblClick","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onDblClick","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.draw.Surface","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":694,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"onDestroy","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-onDestroy","fires":null,"linenr":694},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["processEvent"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":474,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"onMouseDown","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onMouseDown","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.draw.Surface","link":"<a href=\"#!/api/Ext.draw.Surface-method-onMouseEnter\" rel=\"Ext.draw.Surface-method-onMouseEnter\" class=\"docClass\">Ext.draw.Surface.onMouseEnter</a>","name":"onMouseEnter"}],"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"private ...","method_calls":["fireEvent"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":351,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"return":null,"private":true,"static":null,"name":"onMouseEnter","doc":"<p>private</p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-onMouseEnter","fires":["<a href=\"#!/api/Ext.draw.engine.Svg-event-mouseenter\" rel=\"Ext.draw.engine.Svg-event-mouseenter\" class=\"docClass\">mouseenter</a>"],"linenr":null},{"overrides":[{"owner":"Ext.draw.Surface","link":"<a href=\"#!/api/Ext.draw.Surface-method-onMouseLeave\" rel=\"Ext.draw.Surface-method-onMouseLeave\" class=\"docClass\">Ext.draw.Surface.onMouseLeave</a>","name":"onMouseLeave"}],"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"private ...","method_calls":["fireEvent"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":358,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"return":null,"private":true,"static":null,"name":"onMouseLeave","doc":"<p>private</p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-onMouseLeave","fires":["<a href=\"#!/api/Ext.draw.engine.Svg-event-mouseleave\" rel=\"Ext.draw.engine.Svg-event-mouseleave\" class=\"docClass\">mouseleave</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["fireEvent"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":489,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"onMouseMove","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onMouseMove","fires":["<a href=\"#!/api/Ext.draw.Surface-event-mousemove\" rel=\"Ext.draw.Surface-event-mousemove\" class=\"docClass\">mousemove</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["processEvent"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":484,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"onMouseOut","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onMouseOut","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["processEvent"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":479,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"onMouseOver","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onMouseOver","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["processEvent"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":469,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"onMouseUp","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onMouseUp","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.draw.Surface","link":"<a href=\"#!/api/Ext.draw.Surface-method-onRemove\" rel=\"Ext.draw.Surface-method-onRemove\" class=\"docClass\">Ext.draw.Surface.onRemove</a>","name":"onRemove"}],"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["callParent"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"}],"tagname":"method","files":[{"linenr":266,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"return":null,"private":true,"static":null,"name":"onRemove","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-onRemove","fires":[],"linenr":266},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Prepares a given class for observable instances. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Function","tagname":"params","doc":"<p>The class constructor to prepare.</p>\n","name":"T","html_type":"Function"}],"tagname":"method","files":[{"linenr":164,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"prepareClass","doc":"<p>Prepares a given class for observable instances. This method is called when a\nclass derives from this class or uses this class as a mixin.</p>\n","chainable":false,"inheritdoc":null,"id":"method-prepareClass","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["createItem"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"items","html_type":"Object"},{"type":"Object","name":"applyDefaults","html_type":"Object"}],"tagname":"method","files":[{"linenr":938,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"prepareItems","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-prepareItems","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Normalize a delegated single event from the main container to each sprite and sprite group ...","method_calls":["fireEvent"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":364,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"processEvent","doc":"<ul>\n<li>Normalize a delegated single event from the main container to each sprite and sprite group</li>\n</ul>\n\n","chainable":false,"inheritdoc":null,"id":"method-processEvent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"x","html_type":"Object"},{"type":"Object","name":"y","html_type":"Object"},{"type":"Object","name":"w","html_type":"Object"},{"type":"Object","name":"h","html_type":"Object"},{"type":"Object","name":"r","html_type":"Object"}],"tagname":"method","files":[{"linenr":849,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"rectPath","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-rectPath","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["renderItem"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"}],"tagname":"method","files":[{"linenr":465,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"redraw","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-redraw","fires":[],"linenr":465},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Relays selected events from the specified Observable as if the events were fired by this. ...","method_calls":["createRelayer","mon"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The Observable whose events this object is to relay.</p>\n","name":"origin","html_type":"Object"},{"type":"String[]","tagname":"params","doc":"<p>Array of event names to relay.</p>\n","name":"events","html_type":"String[]"},{"type":"String","tagname":"params","doc":"<p>A common prefix to prepend to the event names. For example:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Now the grid will forward 'load' and 'clear' events of store as 'storeload' and 'storeclear'.</p>\n","name":"prefix","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":928,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which, when destroyed, removes all relayers. For example:</p>\n\n<pre><code>this.storeRelayers = this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Can be undone by calling</p>\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.storeRelayers);\n</code></pre>\n\n<p>or\n    this.store.relayers.destroy();</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"relayEvents","doc":"<p>Relays selected events from the specified Observable as if the events were fired by <code>this</code>.</p>\n\n<p>For example if you are extending Grid, you might decide to forward some events from store.\nSo you can do this inside your initComponent:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>The grid instance will then have an observable 'load' event which will be passed the\nparameters of the store's load event and any function fired with the grid's load event\nwould have access to the grid using the <code>this</code> keyword.</p>\n","chainable":false,"inheritdoc":null,"id":"method-relayEvents","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes a given sprite from the surface, optionally destroying the sprite in the process. ...","method_calls":null,"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Ext.draw.Sprite","tagname":"params","doc":"\n","name":"sprite","html_type":"<a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>"},{"type":"Boolean","tagname":"params","doc":"\n","name":"destroySprite","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":642,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":null,"static":null,"name":"remove","doc":"<p>Removes a given sprite from the surface, optionally destroying the sprite in the process.\nYou can also call the sprite own <code>remove</code> method.</p>\n\n<p>For example:</p>\n\n<pre><code>drawComponent.surface.remove(sprite);\n//or...\nsprite.remove();\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-remove","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all sprites from the surface, optionally destroying the sprites in the process. ...","method_calls":["remove"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>Whether to destroy all sprites when removing them.</p>\n","name":"destroySprites","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":674,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":null,"static":null,"name":"removeAll","doc":"<p>Removes all sprites from the surface, optionally destroying the sprites in the process.</p>\n\n<p>For example:</p>\n\n<pre><code>drawComponent.surface.removeAll();\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-removeAll","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.draw.Surface","link":"<a href=\"#!/api/Ext.draw.Surface-method-removeCls\" rel=\"Ext.draw.Surface-method-removeCls\" class=\"docClass\">Ext.draw.Surface.removeCls</a>","name":"removeCls"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes one or more CSS classes from the element. ...","method_calls":null,"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"},{"type":"Object","name":"className","html_type":"Object"}],"tagname":"method","files":[{"linenr":712,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":null,"static":null,"name":"removeCls","doc":"<p>Removes one or more CSS classes from the element.</p>\n\n<p>For example:</p>\n\n<pre><code>drawComponent.surface.removeCls(sprite, 'x-visible');\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"method-removeCls","fires":null,"linenr":712},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes an event handler. ...","method_calls":["removeListener"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The type of event the handler was associated with.</p>\n\n","name":"eventName","html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>The handler to remove. <strong>This must be a reference to the function passed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope originally specified for the handler. It must be the same as the\nscope argument specified in the original call to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> or the listener will not be removed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":688,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"removeListener","doc":"<p>Removes an event handler.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes listeners that were added by the mon method. ...","method_calls":["removeManagedListener","removeManagedListenerItem"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":375,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"removeManagedListener","doc":"<p>Removes listeners that were added by the <a href=\"#!/api/Ext.util.Observable-method-mon\" rel=\"Ext.util.Observable-method-mon\" class=\"docClass\">mon</a> method.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeManagedListener","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.AbstractComponent","link":"<a href=\"#!/api/Ext.AbstractComponent-method-removeManagedListenerItem\" rel=\"Ext.AbstractComponent-method-removeManagedListenerItem\" class=\"docClass\">Ext.AbstractComponent.removeManagedListenerItem</a>","name":"removeManagedListenerItem"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Remove a single managed listener item ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>True if this is being called during a clear</p>\n","name":"isClear","html_type":"Boolean"},{"type":"Object","tagname":"params","doc":"<p>The managed listener item\nSee removeManagedListener for other args</p>\n","name":"managedListener","html_type":"Object"}],"tagname":"method","files":[{"linenr":775,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"removeManagedListenerItem","doc":"<p>Remove a single managed listener item</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeManagedListenerItem","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["createSvgElement","getDefs","renderAll"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"container","html_type":"Object"}],"tagname":"method","files":[{"linenr":281,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"render","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-render","fires":[],"linenr":281},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":443,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"renderAll","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-renderAll","fires":null,"linenr":443},{"overrides":[{"owner":"Ext.draw.Surface","link":"<a href=\"#!/api/Ext.draw.Surface-method-renderItem\" rel=\"Ext.draw.Surface-method-renderItem\" class=\"docClass\">Ext.draw.Surface.renderItem</a>","name":"renderItem"}],"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"called to setup the surface to render an item\nthis is dependent on the underlying implementation. ...","method_calls":["applyAttrs","applyTransformations","applyZIndex","createSpriteElement"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"}],"tagname":"method","files":[{"linenr":447,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"return":null,"private":true,"static":null,"name":"renderItem","doc":"<p>called to setup the surface to render an item\nthis is dependent on the underlying implementation.</p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-renderItem","fires":[],"linenr":447},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.draw.Surface","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":291,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"renderItems","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-renderItems","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Resumes firing of the named event(s). ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String...","tagname":"params","doc":"<p>Multiple event names to resume.</p>\n","name":"eventName","html_type":"String..."}],"tagname":"method","files":[{"linenr":881,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"resumeEvent","doc":"<p>Resumes firing of the named event(s).</p>\n\n<p>After calling this method to resume events, the events will fire when requested to fire.</p>\n\n<p><strong>Note that if the <a href=\"#!/api/Ext.util.Observable-method-suspendEvent\" rel=\"Ext.util.Observable-method-suspendEvent\" class=\"docClass\">suspendEvent</a> method is called multiple times for a certain event,\nthis converse method will have to be called the same number of times for it to resume firing.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-resumeEvent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Resumes firing events (see suspendEvents). ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":905,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"resumeEvents","doc":"<p>Resumes firing events (see <a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n\n<p>If events were suspended using the <code>queueSuspended</code> parameter, then all events fired\nduring event suspension will be sent to any listeners now.</p>\n","chainable":false,"inheritdoc":null,"id":"method-resumeEvents","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getBBox"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"}],"tagname":"method","files":[{"linenr":797,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"rotate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-rotate","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getBBox"],"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"}],"tagname":"method","files":[{"linenr":827,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"scale","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-scale","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"}],"tagname":"method","files":[{"linenr":438,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"scrubAttrs","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-scrubAttrs","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["createSvgElement","getDefs"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"},{"type":"Object","name":"params","html_type":"Object"}],"tagname":"method","files":[{"linenr":573,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"setClip","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-setClip","fires":[],"linenr":573},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"},{"type":"Object","name":"applyIfNotSet","html_type":"Object"}],"tagname":"method","files":[{"linenr":1164,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"static":null,"name":"setConfig","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-setConfig","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.draw.Surface","link":"<a href=\"#!/api/Ext.draw.Surface-method-setSize\" rel=\"Ext.draw.Surface-method-setSize\" class=\"docClass\">Ext.draw.Surface.setSize</a>","name":"setSize"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the size of the surface. ...","method_calls":["callParent"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"width","html_type":"Object"},{"type":"Object","name":"height","html_type":"Object"}],"tagname":"method","files":[{"linenr":229,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":null,"static":null,"name":"setSize","doc":"<p>Sets the size of the surface. Accomodates the background (if any) to fit the new size too.</p>\n\n<p>For example:</p>\n\n<pre><code>drawComponent.surface.setSize(500, 500);\n</code></pre>\n\n<p>This method is generally called when also setting the size of the draw Component.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setSize","fires":[],"linenr":229},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets CSS style attributes to an element. ...","method_calls":null,"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The sprite to add, or an array of classes to</p>\n","name":"sprite","html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>An Object with CSS styles.</p>\n","name":"styles","html_type":"Object"}],"tagname":"method","files":[{"linenr":328,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":null,"static":null,"name":"setStyle","doc":"<p>Sets CSS style attributes to an element.</p>\n\n<p>For example:</p>\n\n<pre><code>drawComponent.surface.setStyle(sprite, {\n    'cursor': 'pointer'\n});\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"method-setStyle","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.draw.Surface","link":"<a href=\"#!/api/Ext.draw.Surface-method-setText\" rel=\"Ext.draw.Surface-method-setText\" class=\"docClass\">Ext.draw.Surface.setText</a>","name":"setText"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Changes the text in the sprite element. ...","method_calls":["createSvgElement"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"},{"type":"Object","name":"textString","html_type":"Object"}],"tagname":"method","files":[{"linenr":420,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":null,"static":null,"name":"setText","doc":"<p>Changes the text in the sprite element. The sprite must be a <code>text</code> sprite.\nThis method can also be called from <a href=\"#!/api/Ext.draw.Sprite\" rel=\"Ext.draw.Sprite\" class=\"docClass\">Ext.draw.Sprite</a>.</p>\n\n<p>For example:</p>\n\n<pre><code>var spriteGroup = drawComponent.surface.setText(sprite, 'my new text');\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"method-setText","fires":[],"linenr":420},{"overrides":[{"owner":"Ext.draw.Surface","link":"<a href=\"#!/api/Ext.draw.Surface-method-setViewBox\" rel=\"Ext.draw.Surface-method-setViewBox\" class=\"docClass\">Ext.draw.Surface.setViewBox</a>","name":"setViewBox"}],"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["callParent"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"x","html_type":"Object"},{"type":"Object","name":"y","html_type":"Object"},{"type":"Object","name":"width","html_type":"Object"},{"type":"Object","name":"height","html_type":"Object"}],"tagname":"method","files":[{"linenr":274,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"return":null,"private":true,"static":null,"name":"setViewBox","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-setViewBox","fires":[],"linenr":274},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":186,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"show","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-show","fires":null,"linenr":186},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["removeCls"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"}],"tagname":"method","files":[{"linenr":194,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"showPrim","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-showPrim","fires":[],"linenr":194},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the reference to the class from which this object was instantiated. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":778,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Class","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"private":null,"static":null,"name":"statics","doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-statics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Suspends firing of the named event(s). ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String...","tagname":"params","doc":"<p>Multiple event names to suspend.</p>\n","name":"eventName","html_type":"String..."}],"tagname":"method","files":[{"linenr":857,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"suspendEvent","doc":"<p>Suspends firing of the named event(s).</p>\n\n<p>After calling this method to suspend events, the events will no longer fire when requested to fire.</p>\n\n<p><strong>Note that if this is called multiple times for a certain event, the converse method\n<a href=\"#!/api/Ext.util.Observable-method-resumeEvent\" rel=\"Ext.util.Observable-method-resumeEvent\" class=\"docClass\">resumeEvent</a> will have to be called the same number of times for it to resume firing.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-suspendEvent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Suspends the firing of all events. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>Pass as true to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events.</p>\n","name":"queueSuspended","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":844,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"suspendEvents","doc":"<p>Suspends the firing of all events. (see <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n","chainable":false,"inheritdoc":null,"id":"method-suspendEvents","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"},{"type":"Object","name":"matrixOnly","html_type":"Object"}],"tagname":"method","files":[{"linenr":202,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"transform","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-transform","fires":null,"linenr":202},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"x","html_type":"Object"},{"type":"Object","name":"y","html_type":"Object"}],"tagname":"method","files":[{"linenr":759,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"transformToViewBox","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-transformToViewBox","fires":null,"linenr":759},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"}],"tagname":"method","files":[{"linenr":816,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":true,"static":null,"name":"translate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-translate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Wrap SVG text inside a tspan to allow for line wrapping. ...","method_calls":["getBBoxText","setText"],"owner":"Ext.draw.engine.Svg","inheritable":null,"params":[{"type":"Object","name":"sprite","html_type":"Object"},{"type":"Object","name":"attrs","html_type":"Object"}],"tagname":"method","files":[{"linenr":381,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/engine/Svg.js"}],"private":true,"static":null,"name":"tuneText","doc":"<ul>\n<li>Wrap SVG text inside a tspan to allow for line wrapping.  In addition this normallizes\nthe baseline for text the vertical middle of the text to be the same as VML.</li>\n</ul>\n\n","chainable":false,"inheritdoc":null,"id":"method-tuneText","fires":[],"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for removeListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The type of event the handler was associated with.</p>\n\n","name":"eventName","html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>The handler to remove. <strong>This must be a reference to the function passed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope originally specified for the handler. It must be the same as the\nscope argument specified in the original call to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> or the listener will not be removed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1128,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":null,"private":null,"static":null,"name":"un","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-removeListener\" rel=\"Ext.util.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-un","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":176,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-addConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":256,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addInheritableStatics","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addInheritableStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"member","html_type":"Object"}],"tagname":"method","files":[{"linenr":353,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addMember","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addMember","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add methods / properties to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":296,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"addMembers","doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addMembers","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add / override static properties of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":218,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"addStatics","doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"xtype","html_type":"Object"}],"tagname":"method","files":[{"linenr":730,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addXtype","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addXtype","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Borrow another class' members to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Ext.Base","tagname":"params","doc":"<p>The class to borrow members from</p>\n","name":"fromClass","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"type":"Array/String","tagname":"params","doc":"<p>The names of the members to borrow</p>\n","name":"members","html_type":"Array/String"}],"tagname":"method","files":[{"linenr":383,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":true,"name":"borrow","doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-borrow","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create aliases for existing prototype methods. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","name":"alias","html_type":"String/Object"},{"type":"String/Object","tagname":"params","doc":"<p>The original method name</p>\n","name":"origin","html_type":"String/Object"}],"tagname":"method","files":[{"linenr":696,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"createAlias","doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"static-method-createAlias","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":81,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"extend","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-extend","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the current class' name in string format. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":677,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"String","properties":null,"doc":"<p>className</p>\n","name":"return","html_type":"String"},"static":true,"private":null,"name":"getName","doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"static-method-getName","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds members to class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":373,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"implement","doc":"<p>Adds members to class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-implement","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n","version":"4.1"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Used internally by the mixins pre-processor ...","method_calls":["addConfig","hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"mixinClass","html_type":"Object"}],"tagname":"method","files":[{"linenr":595,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"mixin","doc":"<p>Used internally by the mixins pre-processor</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-mixin","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":162,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"onExtended","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-onExtended","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Override members of this class. ...","method_calls":["addConfig","addInheritableStatics"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":452,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this class</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"override","doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","chainable":true,"inheritdoc":null,"id":"static-method-override","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n","version":"4.1.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"triggerExtended","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-triggerExtended","fires":null,"linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"short_doc":"Fires when a click is detected within the surface. ...","owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Ext.EventObject","tagname":"params","doc":"<p>An object encapsulating the DOM event.</p>\n","name":"e","html_type":"<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":257,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":null,"static":null,"name":"click","doc":"<p>Fires when a click is detected within the surface.</p>\n","inheritdoc":null,"id":"event-click","linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"short_doc":"Fires when a dblclick is detected within the surface. ...","owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Ext.EventObject","tagname":"params","doc":"<p>An object encapsulating the DOM event.</p>\n","name":"e","html_type":"<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":263,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":null,"static":null,"name":"dblclick","doc":"<p>Fires when a dblclick is detected within the surface.</p>\n","inheritdoc":null,"id":"event-dblclick","linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"short_doc":"Fires when a mousedown is detected within the surface. ...","owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Ext.EventObject","tagname":"params","doc":"<p>An object encapsulating the DOM event.</p>\n","name":"e","html_type":"<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":215,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":null,"static":null,"name":"mousedown","doc":"<p>Fires when a mousedown is detected within the surface.</p>\n","inheritdoc":null,"id":"event-mousedown","linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"short_doc":"Fires when a mouseenter is detected within the surface. ...","owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Ext.EventObject","tagname":"params","doc":"<p>An object encapsulating the DOM event.</p>\n","name":"e","html_type":"<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":245,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":null,"static":null,"name":"mouseenter","doc":"<p>Fires when a mouseenter is detected within the surface.</p>\n","inheritdoc":null,"id":"event-mouseenter","linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"short_doc":"Fires when a mouseleave is detected within the surface. ...","owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Ext.EventObject","tagname":"params","doc":"<p>An object encapsulating the DOM event.</p>\n","name":"e","html_type":"<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":251,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":null,"static":null,"name":"mouseleave","doc":"<p>Fires when a mouseleave is detected within the surface.</p>\n","inheritdoc":null,"id":"event-mouseleave","linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"short_doc":"Fires when a mousemove is detected within the surface. ...","owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Ext.EventObject","tagname":"params","doc":"<p>An object encapsulating the DOM event.</p>\n","name":"e","html_type":"<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":239,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":null,"static":null,"name":"mousemove","doc":"<p>Fires when a mousemove is detected within the surface.</p>\n","inheritdoc":null,"id":"event-mousemove","linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"short_doc":"Fires when a mouseout is detected within the surface. ...","owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Ext.EventObject","tagname":"params","doc":"<p>An object encapsulating the DOM event.</p>\n","name":"e","html_type":"<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":233,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":null,"static":null,"name":"mouseout","doc":"<p>Fires when a mouseout is detected within the surface.</p>\n","inheritdoc":null,"id":"event-mouseout","linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"short_doc":"Fires when a mouseover is detected within the surface. ...","owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Ext.EventObject","tagname":"params","doc":"<p>An object encapsulating the DOM event.</p>\n","name":"e","html_type":"<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":227,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":null,"static":null,"name":"mouseover","doc":"<p>Fires when a mouseover is detected within the surface.</p>\n","inheritdoc":null,"id":"event-mouseover","linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"short_doc":"Fires when a mouseup is detected within the surface. ...","owner":"Ext.draw.Surface","inheritable":null,"params":[{"type":"Ext.EventObject","tagname":"params","doc":"<p>An object encapsulating the DOM event.</p>\n","name":"e","html_type":"<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":221,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/draw/Surface.js"}],"private":null,"static":null,"name":"mouseup","doc":"<p>Fires when a mouseup is detected within the surface.</p>\n","inheritdoc":null,"id":"event-mouseup","linenr":null}],"alternateClassNames":[],"code_type":"ext_define","mixins":[],"doc":"<p>Provides specific methods to draw with SVG.</p>\n","name":"Ext.draw.engine.Svg","id":"class-Ext.draw.engine.Svg"}