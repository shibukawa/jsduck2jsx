{"autodetected":{},"short_doc":"Registers event handlers that want to receive a normalized EventObject instead of the standard browser event and prov...","singleton":true,"aliases":{},"files":[{"linenr":25,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"tagname":"class","members":[{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"Additionally, allow the 'DOM' listener thread to complete (usually desirable with mobWebkit, Gecko)\nbefore firing the...","default":"1","owner":"Ext.EventManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":205,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":true,"static":null,"name":"deferReadyEvent","doc":"<p>Additionally, allow the 'DOM' listener thread to complete (usually desirable with mobWebkit, Gecko)\nbefore firing the entire onReady chain (high stack load on Loader) by specifying a delay value.\nDefaults to 1ms.</p>\n","inheritdoc":null,"id":"property-deferReadyEvent","html_type":"Number","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"Check if we have bound our global onReady listener ...","default":"false","owner":"Ext.EventManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":193,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":true,"static":null,"name":"hasBoundOnReady","doc":"<p>Check if we have bound our global onReady listener</p>\n","inheritdoc":null,"id":"property-hasBoundOnReady","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"Check if fireDocReady has been called ...","default":"false","owner":"Ext.EventManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":199,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":true,"static":null,"name":"hasFiredReady","doc":"<p>Check if fireDocReady has been called</p>\n","inheritdoc":null,"id":"property-hasFiredReady","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"Fires when an event handler finishes its run, just before returning to browser control. ...","default":null,"owner":"Ext.EventManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":234,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":null,"static":null,"name":"idleEvent","doc":"<p>Fires when an event handler finishes its run, just before returning to browser control.</p>\n\n<p>This includes DOM event handlers, Ajax (including JSONP) event handlers, and <a href=\"#!/api/Ext.util.TaskRunner\" rel=\"Ext.util.TaskRunner\" class=\"docClass\">TaskRunners</a></p>\n\n<p>This can be useful for performing cleanup, or update tasks which need to happen only\nafter all code in an event handler has been run, but which should not be executed in a timer\ndue to the intervening browser reflow/repaint which would take place.</p>\n","inheritdoc":null,"id":"property-idleEvent","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"RegExp","short_doc":"Options to parse for the 4th argument to addListener. ...","default":"/^(?:scope|delay|buffer|single|stopEvent|preventDefault|stopPropagation|normalized|args|delegate|freezeEvent)$/","owner":"Ext.EventManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":370,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":true,"static":null,"name":"propRe","doc":"<p>Options to parse for the 4th argument to addListener.</p>\n","inheritdoc":null,"id":"property-propRe","html_type":"RegExp","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.EventManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":219,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":true,"static":null,"name":"readyEvent","doc":"<p>Holds references to any onReady functions</p>\n","inheritdoc":null,"id":"property-readyEvent","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.EventManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1256,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":true,"static":null,"name":"scrollTimeout","doc":"<p>Timer for doScroll polling</p>\n","inheritdoc":null,"id":"property-scrollTimeout","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.EventManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":364,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":true,"static":null,"name":"stoppedMouseDownEvent","doc":"<p>Contains a list of all document mouse downs, so we can ensure they fire even when stopEvent is called.</p>\n","inheritdoc":null,"id":"property-stoppedMouseDownEvent","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"note 1: IE fires ONLY the keydown event on specialkey autorepeat\nnote 2: Safari &lt; 3.1, Gecko (Mac/Linux) &amp; Ope...","default":null,"owner":"Ext.EventManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1196,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":true,"static":null,"name":"useKeyDown","doc":"<p>note 1: IE fires ONLY the keydown event on specialkey autorepeat\nnote 2: Safari &lt; 3.1, Gecko (Mac/Linux) &amp; Opera fire only the keypress event on specialkey autorepeat\n(research done by Jan Wolter at http://unixpapa.com/js/key.html)</p>\n","inheritdoc":null,"id":"property-useKeyDown","html_type":"Object","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Appends an event handler to an element. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"String/Ext.Element/HTMLElement/Window","tagname":"params","doc":"<p>The html element or id to assign the event handler to.</p>\n\n","name":"el","html_type":"String/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/HTMLElement/Window"},{"type":"String","tagname":"params","doc":"<p>The name of the event to listen for.</p>\n\n","name":"eventName","html_type":"String"},{"type":"Function/String","tagname":"params","properties":[{"type":"Ext.EventObject","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">EventObject</a> describing the event.</p>\n\n","name":"event","html_type":"<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"},{"type":"Ext.dom.Element","tagname":"params","doc":"<p>The Element which was the target of the event.\nNote that this may be filtered by using the <code>delegate</code> option.</p>\n\n","name":"target","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"type":"Object","tagname":"params","doc":"<p>The options object from the addListener call.</p>\n\n","name":"options","html_type":"Object"}],"doc":"<p>The handler function the event invokes. A String parameter\nis assumed to be method name in <code>scope</code> object, or Element object if no scope is provided.</p>\n\n","name":"handler","html_type":"Function/String"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed.\nDefaults to the Element.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. Defaults to the Element.</p>\n\n","name":"scope","html_type":"Object"},{"type":"String","tagname":"params","doc":"<p>A simple selector to filter the target or look for a descendant of the target</p>\n\n","name":"delegate","html_type":"String"},{"type":"Boolean","tagname":"params","doc":"<p>True to stop the event. That is stop propagation, and prevent the default action.</p>\n\n","name":"stopEvent","html_type":"Boolean"},{"type":"Boolean","tagname":"params","doc":"<p>True to prevent the default action</p>\n\n","name":"preventDefault","html_type":"Boolean"},{"type":"Boolean","tagname":"params","doc":"<p>True to prevent event propagation</p>\n\n","name":"stopPropagation","html_type":"Boolean"},{"type":"Boolean","tagname":"params","doc":"<p>False to pass a browser event to the handler function instead of an <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a></p>\n\n","name":"normalized","html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>The number of milliseconds to delay the invocation of the handler after te event fires.</p>\n\n","name":"delay","html_type":"Number"},{"type":"Boolean","tagname":"params","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n","name":"single","html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\nby the specified number of milliseconds. If the event fires again within that time, the original\nhandler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","name":"buffer","html_type":"Number"},{"type":"Ext.dom.Element","tagname":"params","doc":"<p>Only call the handler if the event was fired on the target Element,\n<em>not</em> if the event was bubbled up from a child node.</p>\n\n","name":"target","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"}],"doc":"<p>An object containing handler configuration properties.\nThis may contain any of the following properties (See <a href=\"#!/api/Ext.dom.Element-method-addListener\" rel=\"Ext.dom.Element-method-addListener\" class=\"docClass\">Ext.Element.addListener</a>\nfor examples of how to use these options.):</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":485,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":null,"static":null,"name":"addListener","doc":"<p>Appends an event handler to an element.  The shorthand version <a href=\"#!/api/Ext.EventManager-method-on\" rel=\"Ext.EventManager-method-on\" class=\"docClass\">on</a> is equivalent.\nTypically you will use <a href=\"#!/api/Ext.dom.Element-method-addListener\" rel=\"Ext.dom.Element-method-addListener\" class=\"docClass\">Ext.Element.addListener</a> directly on an Element in favor of\ncalling this version.</p>\n\n<p><a href=\"#!/api/Ext.EventManager-method-on\" rel=\"Ext.EventManager-method-on\" class=\"docClass\">on</a> is an alias for <a href=\"#!/api/Ext.EventManager-method-addListener\" rel=\"Ext.EventManager-method-addListener\" class=\"docClass\">addListener</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addListener","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Binds the appropriate browser event for checking if the DOM has loaded. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":255,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":true,"static":null,"name":"bindReadyEvent","doc":"<p>Binds the appropriate browser event for checking if the DOM has loaded.</p>\n","chainable":false,"inheritdoc":null,"id":"method-bindReadyEvent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Clones the event cache for a particular element for a particular event ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"HTMLElement","tagname":"params","doc":"<p>The element</p>\n","name":"element","html_type":"HTMLElement"},{"type":"Object","tagname":"params","doc":"<p>The event name</p>\n","name":"eventName","html_type":"Object"}],"tagname":"method","files":[{"linenr":922,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"return":{"type":"Array","properties":null,"doc":"<p>The cloned events for the element</p>\n","name":"return","html_type":"Array"},"private":true,"static":null,"name":"cloneEventListenerCache","doc":"<p>Clones the event cache for a particular element for a particular event</p>\n","chainable":false,"inheritdoc":null,"id":"method-cloneEventListenerCache","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Checks whether the event's relatedTarget is contained inside (or is) the element. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"event","html_type":"Object"}],"tagname":"method","files":[{"linenr":461,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":true,"static":null,"name":"contains","doc":"<p>Checks whether the event's relatedTarget is contained inside (or <b>is</b>) the element.</p>\n","chainable":false,"inheritdoc":null,"id":"method-contains","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create the wrapper function for the event ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"HTMLElement","tagname":"params","doc":"<p>The dom element</p>\n","name":"dom","html_type":"HTMLElement"},{"type":"String","tagname":"params","doc":"<p>The event name</p>\n","name":"ename","html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>The function to execute</p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope to execute callback in</p>\n","name":"scope","html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>The options</p>\n","name":"options","html_type":"Object"}],"tagname":"method","files":[{"linenr":783,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"return":{"type":"Function","properties":null,"doc":"<p>the wrapper function</p>\n","name":"return","html_type":"Function"},"private":true,"static":null,"name":"createListenerWrap","doc":"<p>Create the wrapper function for the event</p>\n","chainable":false,"inheritdoc":null,"id":"method-createListenerWrap","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"We know the document is loaded, so trigger any onReady events. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":291,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":true,"static":null,"name":"fireDocReady","doc":"<p>We know the document is loaded, so trigger any onReady events.</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireDocReady","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fires the ready event ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":313,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":true,"static":null,"name":"fireReadyEvent","doc":"<p>Fires the ready event</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireReadyEvent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fire the resize event. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1103,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":true,"static":null,"name":"fireResize","doc":"<p>Fire the resize event.</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireResize","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fires the unload event for items bound with onWindowUnload ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1149,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":true,"static":null,"name":"fireUnload","doc":"<p>Fires the unload event for items bound with onWindowUnload</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireUnload","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the event cache object for a particular element ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"HTMLElement","tagname":"params","doc":"<p>The element</p>\n","name":"element","html_type":"HTMLElement"}],"tagname":"method","files":[{"linenr":882,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The event cache object</p>\n","name":"return","html_type":"Object"},"private":true,"static":null,"name":"getEventCache","doc":"<p>Gets the event cache object for a particular element</p>\n","chainable":false,"inheritdoc":null,"id":"method-getEventCache","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the event cache for a particular element for a particular event ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"HTMLElement","tagname":"params","doc":"<p>The element</p>\n","name":"element","html_type":"HTMLElement"},{"type":"Object","tagname":"params","doc":"<p>The event name</p>\n","name":"eventName","html_type":"Object"}],"tagname":"method","files":[{"linenr":910,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"return":{"type":"Array","properties":null,"doc":"<p>The events for the element</p>\n","name":"return","html_type":"Array"},"private":true,"static":null,"name":"getEventListenerCache","doc":"<p>Get the event cache for a particular element for a particular event</p>\n","chainable":false,"inheritdoc":null,"id":"method-getEventListenerCache","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the id of the element. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"HTMLElement/Ext.Element","tagname":"params","doc":"<p>The element to get the id for.</p>\n","name":"element","html_type":"HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"}],"tagname":"method","files":[{"linenr":376,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"return":{"type":"String","properties":null,"doc":"<p>id</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"getId","doc":"<p>Get the id of the element. If one has not been assigned, automatically assign it.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getId","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Indicates which event to use for getting key presses. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1206,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"return":{"type":"String","properties":null,"doc":"<p>The appropriate event name.</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"getKeyEvent","doc":"<p>Indicates which event to use for getting key presses.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getKeyEvent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the x coordinate from the event ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The event</p>\n","name":"event","html_type":"Object"}],"tagname":"method","files":[{"linenr":1008,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The x coordinate</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"getPageX","doc":"<p>Gets the x coordinate from the event</p>\n","chainable":false,"inheritdoc":null,"id":"method-getPageX","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the x &amp; y coordinate from the event ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The event</p>\n","name":"event","html_type":"Object"}],"tagname":"method","files":[{"linenr":1026,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"return":{"type":"Number[]","properties":null,"doc":"<p>The x/y coordinate</p>\n","name":"return","html_type":"Number[]"},"private":null,"static":null,"name":"getPageXY","doc":"<p>Gets the x &amp; y coordinate from the event</p>\n","chainable":false,"inheritdoc":null,"id":"method-getPageXY","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the y coordinate from the event ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The event</p>\n","name":"event","html_type":"Object"}],"tagname":"method","files":[{"linenr":1017,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The y coordinate</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"getPageY","doc":"<p>Gets the y coordinate from the event</p>\n","chainable":false,"inheritdoc":null,"id":"method-getPageY","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the related target from the event. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The event</p>\n","name":"event","html_type":"Object"}],"tagname":"method","files":[{"linenr":990,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"return":{"type":"HTMLElement","properties":null,"doc":"<p>The related target.</p>\n","name":"return","html_type":"HTMLElement"},"private":null,"static":null,"name":"getRelatedTarget","doc":"<p>Gets the related target from the event.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getRelatedTarget","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the target of the event. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The event</p>\n","name":"event","html_type":"Object"}],"tagname":"method","files":[{"linenr":1046,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"return":{"type":"HTMLElement","properties":null,"doc":"<p>target</p>\n","name":"return","html_type":"HTMLElement"},"private":null,"static":null,"name":"getTarget","doc":"<p>Gets the target of the event.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getTarget","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"detects whether the EventManager has been placed in a paused state for synchronization\nwith external debugging / perf...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":246,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":true,"static":null,"name":"isReadyPaused","doc":"<p>detects whether the EventManager has been placed in a paused state for synchronization\nwith external debugging / perf tools (PageAnalyzer)</p>\n","chainable":false,"inheritdoc":null,"id":"method-isReadyPaused","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Normalize cross browser event differences ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The event name</p>\n","name":"eventName","html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>The function to execute</p>\n","name":"fn","html_type":"Object"}],"tagname":"method","files":[{"linenr":439,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The new event name/function</p>\n","name":"return","html_type":"Object"},"private":true,"static":null,"name":"normalizeEvent","doc":"<p>Normalize cross browser event differences</p>\n","chainable":false,"inheritdoc":null,"id":"method-normalizeEvent","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Appends an event handler to an element. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"String/Ext.Element/HTMLElement/Window","tagname":"params","doc":"<p>The html element or id to assign the event handler to.</p>\n\n","name":"el","html_type":"String/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/HTMLElement/Window"},{"type":"String","tagname":"params","doc":"<p>The name of the event to listen for.</p>\n\n","name":"eventName","html_type":"String"},{"type":"Function/String","tagname":"params","properties":[{"type":"Ext.EventObject","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">EventObject</a> describing the event.</p>\n\n","name":"event","html_type":"<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"},{"type":"Ext.dom.Element","tagname":"params","doc":"<p>The Element which was the target of the event.\nNote that this may be filtered by using the <code>delegate</code> option.</p>\n\n","name":"target","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"type":"Object","tagname":"params","doc":"<p>The options object from the addListener call.</p>\n\n","name":"options","html_type":"Object"}],"doc":"<p>The handler function the event invokes. A String parameter\nis assumed to be method name in <code>scope</code> object, or Element object if no scope is provided.</p>\n\n","name":"handler","html_type":"Function/String"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed.\nDefaults to the Element.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. Defaults to the Element.</p>\n\n","name":"scope","html_type":"Object"},{"type":"String","tagname":"params","doc":"<p>A simple selector to filter the target or look for a descendant of the target</p>\n\n","name":"delegate","html_type":"String"},{"type":"Boolean","tagname":"params","doc":"<p>True to stop the event. That is stop propagation, and prevent the default action.</p>\n\n","name":"stopEvent","html_type":"Boolean"},{"type":"Boolean","tagname":"params","doc":"<p>True to prevent the default action</p>\n\n","name":"preventDefault","html_type":"Boolean"},{"type":"Boolean","tagname":"params","doc":"<p>True to prevent event propagation</p>\n\n","name":"stopPropagation","html_type":"Boolean"},{"type":"Boolean","tagname":"params","doc":"<p>False to pass a browser event to the handler function instead of an <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a></p>\n\n","name":"normalized","html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>The number of milliseconds to delay the invocation of the handler after te event fires.</p>\n\n","name":"delay","html_type":"Number"},{"type":"Boolean","tagname":"params","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n","name":"single","html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\nby the specified number of milliseconds. If the event fires again within that time, the original\nhandler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","name":"buffer","html_type":"Number"},{"type":"Ext.dom.Element","tagname":"params","doc":"<p>Only call the handler if the event was fired on the target Element,\n<em>not</em> if the event was bubbled up from a child node.</p>\n\n","name":"target","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"}],"doc":"<p>An object containing handler configuration properties.\nThis may contain any of the following properties (See <a href=\"#!/api/Ext.dom.Element-method-addListener\" rel=\"Ext.dom.Element-method-addListener\" class=\"docClass\">Ext.Element.addListener</a>\nfor examples of how to use these options.):</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1360,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"return":null,"private":null,"static":null,"name":"on","doc":"<p>Appends an event handler to an element.  The shorthand version <a href=\"#!/api/Ext.EventManager-method-on\" rel=\"Ext.EventManager-method-on\" class=\"docClass\">on</a> is equivalent.\nTypically you will use <a href=\"#!/api/Ext.dom.Element-method-addListener\" rel=\"Ext.dom.Element-method-addListener\" class=\"docClass\">Ext.Element.addListener</a> directly on an Element in favor of\ncalling this version.</p>\n\n<p><a href=\"#!/api/Ext.EventManager-method-on\" rel=\"Ext.EventManager-method-on\" class=\"docClass\">on</a> is an alias for <a href=\"#!/api/Ext.EventManager-method-addListener\" rel=\"Ext.EventManager-method-addListener\" class=\"docClass\">addListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-on","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds a listener to be notified when the document is ready (before onload and before images are loaded). ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"Function","tagname":"params","doc":"<p>The method the event invokes.</p>\n\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function executes.\nDefaults to the browser window.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>Options object as passed to <a href=\"#!/api/Ext.dom.Element-method-addListener\" rel=\"Ext.dom.Element-method-addListener\" class=\"docClass\">Ext.Element.addListener</a>.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":335,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":null,"static":null,"name":"onDocumentReady","doc":"<p>Adds a listener to be notified when the document is ready (before onload and before images are loaded).</p>\n\n<p><a href=\"#!/api/Ext-method-onDocumentReady\" rel=\"Ext-method-onDocumentReady\" class=\"docClass\">Ext.onDocumentReady</a> is an alias for <a href=\"#!/api/Ext.EventManager-method-onDocumentReady\" rel=\"Ext.EventManager-method-onDocumentReady\" class=\"docClass\">onDocumentReady</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onDocumentReady","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds a listener to be notified when the browser window is resized and provides resize event buffering (100 millisecon...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"Function","tagname":"params","doc":"<p>The handler function the window resize event invokes.</p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function executes. Defaults to the browser window.</p>\n","name":"scope","html_type":"Object"},{"type":"Boolean","tagname":"params","doc":"<p>Options object as passed to <a href=\"#!/api/Ext.dom.Element-method-addListener\" rel=\"Ext.dom.Element-method-addListener\" class=\"docClass\">Ext.Element.addListener</a></p>\n","name":"options","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":1086,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":null,"static":null,"name":"onWindowResize","doc":"<p>Adds a listener to be notified when the browser window is resized and provides resize event buffering (100 milliseconds),\npasses new viewport width and height to handlers.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onWindowResize","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds a listener to be notified when the browser window is unloaded. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"Function","tagname":"params","doc":"<p>The handler function the window unload event invokes.</p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function executes. Defaults to the browser window.</p>\n","name":"scope","html_type":"Object"},{"type":"Boolean","tagname":"params","doc":"<p>Options object as passed to <a href=\"#!/api/Ext.dom.Element-method-addListener\" rel=\"Ext.dom.Element-method-addListener\" class=\"docClass\">Ext.Element.addListener</a></p>\n","name":"options","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":1131,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":null,"static":null,"name":"onWindowUnload","doc":"<p>Adds a listener to be notified when the browser window is unloaded.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onWindowUnload","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This strategy has minimal benefits for Sencha solutions that build themselves (ie. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1224,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":null,"static":null,"name":"pollScroll","doc":"<p>This strategy has minimal benefits for Sencha solutions that build themselves (ie. minimal initial page markup).\nHowever, progressively-enhanced pages (with image content and/or embedded frames) will benefit the most from it.\nBrowser timer resolution is too poor to ensure a doScroll check more than once on a page loaded with minimal\nassets (the readystatechange event 'complete' usually beats the doScroll timer on a 'lightly-loaded' initial document).</p>\n","chainable":false,"inheritdoc":null,"id":"method-pollScroll","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Convert a \"config style\" listener into a set of flat arguments so they can be passed to addListener ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The element the event is for</p>\n","name":"element","html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>The event configuration</p>\n","name":"event","html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>True if a removal should be performed, otherwise an add will be done.</p>\n","name":"isRemove","html_type":"Object"}],"tagname":"method","files":[{"linenr":400,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":true,"static":null,"name":"prepareListenerConfig","doc":"<p>Convert a \"config style\" listener into a set of flat arguments so they can be passed to addListener</p>\n","chainable":false,"inheritdoc":null,"id":"method-prepareListenerConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Prevents the browsers default handling of the event. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"Event","tagname":"params","doc":"<p>The event to prevent the default</p>\n","name":"event","html_type":"Event"}],"tagname":"method","files":[{"linenr":968,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":null,"static":null,"name":"preventDefault","doc":"<p>Prevents the browsers default handling of the event.</p>\n","chainable":false,"inheritdoc":null,"id":"method-preventDefault","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Recursively removes all previous added listeners from an element and its children. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"String/Ext.Element/HTMLElement/Window","tagname":"params","doc":"<p>The id or html element from which to remove all event handlers.</p>\n","name":"el","html_type":"String/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/HTMLElement/Window"},{"type":"String","tagname":"params","doc":"<p>The name of the event.</p>\n","name":"eventName","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":759,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":null,"static":null,"name":"purgeElement","doc":"<p>Recursively removes all previous added listeners from an element and its children. Typically you will use <a href=\"#!/api/Ext.dom.Element-method-purgeAllListeners\" rel=\"Ext.dom.Element-method-purgeAllListeners\" class=\"docClass\">Ext.Element.purgeAllListeners</a>\ndirectly on an Element in favor of calling this version.</p>\n","chainable":false,"inheritdoc":null,"id":"method-purgeElement","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all event handers from an element. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"String/Ext.Element/HTMLElement/Window","tagname":"params","doc":"<p>The id or html element from which to remove all event handlers.</p>\n","name":"el","html_type":"String/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/HTMLElement/Window"}],"tagname":"method","files":[{"linenr":737,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":null,"static":null,"name":"removeAll","doc":"<p>Removes all event handers from an element.  Typically you will use <a href=\"#!/api/Ext.dom.Element-method-removeAllListeners\" rel=\"Ext.dom.Element-method-removeAllListeners\" class=\"docClass\">Ext.Element.removeAllListeners</a>\ndirectly on an Element in favor of calling this version.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeAll","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes an event handler from an element. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"String/Ext.Element/HTMLElement/Window","tagname":"params","doc":"<p>The id or html element from which to remove the listener.</p>\n\n","name":"el","html_type":"String/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/HTMLElement/Window"},{"type":"String","tagname":"params","doc":"<p>The name of the event.</p>\n\n","name":"eventName","html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>The handler function to remove. <strong>This must be a reference to the function passed\ninto the <a href=\"#!/api/Ext.EventManager-method-addListener\" rel=\"Ext.EventManager-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If a scope (<code>this</code> reference) was specified when the listener was added,\nthen this must refer to the same object.</p>\n\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":649,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":null,"static":null,"name":"removeListener","doc":"<p>Removes an event handler from an element.  The shorthand version <a href=\"#!/api/Ext.EventManager-method-un\" rel=\"Ext.EventManager-method-un\" class=\"docClass\">un</a> is equivalent.  Typically\nyou will use <a href=\"#!/api/Ext.dom.Element-method-removeListener\" rel=\"Ext.dom.Element-method-removeListener\" class=\"docClass\">Ext.Element.removeListener</a> directly on an Element in favor of calling this version.</p>\n\n<p><a href=\"#!/api/Ext.EventManager-method-on\" rel=\"Ext.EventManager-method-on\" class=\"docClass\">on</a> is an alias for <a href=\"#!/api/Ext.EventManager-method-addListener\" rel=\"Ext.EventManager-method-addListener\" class=\"docClass\">addListener</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeListener","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes the passed window resize listener. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"Function","tagname":"params","doc":"<p>The method the event invokes</p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope of handler</p>\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":1119,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":null,"static":null,"name":"removeResizeListener","doc":"<p>Removes the passed window resize listener.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeResizeListener","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes the passed window unload listener. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"Function","tagname":"params","doc":"<p>The method the event invokes</p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope of handler</p>\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":1184,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":null,"static":null,"name":"removeUnloadListener","doc":"<p>Removes the passed window unload listener.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeUnloadListener","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Resolve any text nodes accounting for browser differences. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"HTMLElement","tagname":"params","doc":"<p>The node</p>\n","name":"node","html_type":"HTMLElement"}],"tagname":"method","files":[{"linenr":1059,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"return":{"type":"HTMLElement","properties":null,"doc":"<p>The resolved node</p>\n","name":"return","html_type":"HTMLElement"},"private":true,"static":null,"name":"resolveTextNode","doc":"<p>Resolve any text nodes accounting for browser differences.</p>\n","chainable":null,"inheritdoc":null,"id":"method-resolveTextNode","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Stop the event (preventDefault and stopPropagation) ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"Event","tagname":"params","doc":"<p>The event to stop</p>\n","name":"event","html_type":"Event"}],"tagname":"method","files":[{"linenr":946,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":null,"static":null,"name":"stopEvent","doc":"<p>Stop the event (preventDefault and stopPropagation)</p>\n","chainable":false,"inheritdoc":null,"id":"method-stopEvent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Cancels bubbling of the event. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"Event","tagname":"params","doc":"<p>The event to stop bubbling.</p>\n","name":"event","html_type":"Event"}],"tagname":"method","files":[{"linenr":955,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"private":null,"static":null,"name":"stopPropagation","doc":"<p>Cancels bubbling of the event.</p>\n","chainable":false,"inheritdoc":null,"id":"method-stopPropagation","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Removes an event handler from an element. ...","method_calls":null,"owner":"Ext.EventManager","inheritable":null,"params":[{"type":"String/Ext.Element/HTMLElement/Window","tagname":"params","doc":"<p>The id or html element from which to remove the listener.</p>\n\n","name":"el","html_type":"String/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/HTMLElement/Window"},{"type":"String","tagname":"params","doc":"<p>The name of the event.</p>\n\n","name":"eventName","html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>The handler function to remove. <strong>This must be a reference to the function passed\ninto the <a href=\"#!/api/Ext.EventManager-method-addListener\" rel=\"Ext.EventManager-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If a scope (<code>this</code> reference) was specified when the listener was added,\nthen this must refer to the same object.</p>\n\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":1367,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/EventManager.js"}],"return":null,"private":null,"static":null,"name":"un","doc":"<p>Removes an event handler from an element.  The shorthand version <a href=\"#!/api/Ext.EventManager-method-un\" rel=\"Ext.EventManager-method-un\" class=\"docClass\">un</a> is equivalent.  Typically\nyou will use <a href=\"#!/api/Ext.dom.Element-method-removeListener\" rel=\"Ext.dom.Element-method-removeListener\" class=\"docClass\">Ext.Element.removeListener</a> directly on an Element in favor of calling this version.</p>\n\n<p><a href=\"#!/api/Ext.EventManager-method-on\" rel=\"Ext.EventManager-method-on\" class=\"docClass\">on</a> is an alias for <a href=\"#!/api/Ext.EventManager-method-addListener\" rel=\"Ext.EventManager-method-addListener\" class=\"docClass\">addListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-un","fires":null,"linenr":null}],"alternateClassNames":[],"doc":"<p>Registers event handlers that want to receive a normalized EventObject instead of the standard browser event and provides\nseveral useful events directly.</p>\n\n<p>See <a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a> for more details on normalized event objects.</p>\n","name":"Ext.EventManager","id":"class-Ext.EventManager"}