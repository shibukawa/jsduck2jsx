{"autodetected":{"aliases":true,"requires":true,"uses":true,"extends":true,"members":true,"alternateClassNames":true,"code_type":true,"mixins":true},"short_doc":"Implements row based navigation via keyboard. ...","aliases":{"selection":["rowmodel"]},"requires":["Ext.util.KeyNav"],"files":[{"linenr":21,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"tagname":"class","uses":[],"extends":"Ext.selection.Model","members":[{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"Allow users to deselect a record in a DataView, List or Grid. ...","default":null,"owner":"Ext.selection.Model","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":51,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":null,"static":null,"name":"allowDeselect","properties":null,"doc":"<p>Allow users to deselect a record in a DataView, List or Grid.\nOnly applicable when the <a href=\"#!/api/Ext.selection.Model-cfg-mode\" rel=\"Ext.selection.Model-cfg-mode\" class=\"docClass\">mode</a> is 'SINGLE'.</p>\n","inheritdoc":null,"id":"cfg-allowDeselect","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"Turns on/off keyboard navigation within the grid. ...","default":"true","owner":"Ext.selection.RowModel","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":38,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":null,"static":null,"name":"enableKeyNav","properties":null,"doc":"<p>Turns on/off keyboard navigation within the grid.</p>\n","inheritdoc":null,"id":"cfg-enableKeyNav","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"True to ignore selections that are made when using the right mouse button if there are\nrecords that are already selec...","default":"false","owner":"Ext.selection.RowModel","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":45,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":null,"static":null,"name":"ignoreRightMouseSelection","properties":null,"doc":"<p>True to ignore selections that are made when using the right mouse button if there are\nrecords that are already selected. If no records are selected, selection will continue\nas normal</p>\n","inheritdoc":null,"id":"cfg-ignoreRightMouseSelection","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{},"type":"Object","short_doc":"A config object containing one or more event handlers to be added to this object during initialization. ...","default":null,"owner":"Ext.util.Observable","tagname":"cfg","files":[{"linenr":197,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"name":"listeners","properties":null,"doc":"<p>A config object containing one or more event handlers to be added to this object during initialization. This\nshould be a valid listeners config object as specified in the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching multiple\nhandlers at once.</p>\n\n<p><strong>DOM events from Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></strong></p>\n\n<p>While <em>some</em> Ext JS Component classes export selected DOM events (e.g. \"click\", \"mouseover\" etc), this is usually\nonly done when extra value can be added. For example the <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>'s <strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong> event passing the node clicked on. To access DOM events directly from a\nchild element of a Component, we need to specify the <code>element</code> option to identify the Component property to add a\nDOM listener to:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n","id":"cfg-listeners","html_type":"Object"},{"autodetected":{},"type":"\"SINGLE\"/\"SIMPLE\"/\"MULTI\"","short_doc":"Mode of selection. ...","default":null,"owner":"Ext.selection.Model","tagname":"cfg","files":[{"linenr":40,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"name":"mode","properties":null,"doc":"<p>Mode of selection.  Valid values are:</p>\n\n<ul>\n<li><strong>\"SINGLE\"</strong> - Only allows selecting one item at a time.  Use <a href=\"#!/api/Ext.selection.Model-cfg-allowDeselect\" rel=\"Ext.selection.Model-cfg-allowDeselect\" class=\"docClass\">allowDeselect</a> to allow\ndeselecting that item.  Also see <a href=\"#!/api/Ext.selection.Model-cfg-toggleOnClick\" rel=\"Ext.selection.Model-cfg-toggleOnClick\" class=\"docClass\">toggleOnClick</a>. This is the default.</li>\n<li><strong>\"SIMPLE\"</strong> - Allows simple selection of multiple items one-by-one. Each click in grid will either\nselect or deselect an item.</li>\n<li><strong>\"MULTI\"</strong> - Allows complex selection of multiple items using Ctrl and Shift keys.</li>\n</ul>\n\n","id":"cfg-mode","html_type":"\"SINGLE\"/\"SIMPLE\"/\"MULTI\""},{"autodetected":{"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"Remove records from the selection when they are removed from the store. ...","default":"true","owner":"Ext.selection.Model","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":73,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":null,"static":null,"name":"pruneRemoved","properties":null,"doc":"<p>Remove records from the selection when they are removed from the store.</p>\n\n<p><strong>Important:</strong> When using <a href=\"#!/api/Ext.toolbar.Paging\" rel=\"Ext.toolbar.Paging\" class=\"docClass\">paging</a> or a <a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">sparsely populated (buffered) Store</a>,\nrecords which are cached in the Store's <a href=\"#!/api/Ext.data.Store-property-data\" rel=\"Ext.data.Store-property-data\" class=\"docClass\">data collection</a> may be removed from the Store when pages change,\nor when rows are scrolled out of view. For this reason <code>pruneRemoved</code> should be set to <code>false</code> when using a buffered Store.</p>\n\n<p>Also, when previously pruned pages are returned to the cache, the records objects in the page will be\n<em>new instances</em>, and will not match the instances in the selection model's collection. For this reason,\nyou MUST ensure that the Model definition's <a href=\"#!/api/Ext.data.Model-cfg-idProperty\" rel=\"Ext.data.Model-cfg-idProperty\" class=\"docClass\">idProperty</a> references a unique\nkey because in this situation, records in the Store have their <strong>IDs</strong> compared to records in the SelectionModel\nin order to re-select a record which is scrolled back into view.</p>\n","inheritdoc":null,"id":"cfg-pruneRemoved","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"true to toggle the selection state of an item when clicked. ...","default":"true","owner":"Ext.selection.Model","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":58,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":null,"static":null,"name":"toggleOnClick","properties":null,"doc":"<p><code>true</code> to toggle the selection state of an item when clicked.\nOnly applicable when the <a href=\"#!/api/Ext.selection.Model-cfg-mode\" rel=\"Ext.selection.Model-cfg-mode\" class=\"docClass\">mode</a> is 'SINGLE'.\nOnly applicable when the <a href=\"#!/api/Ext.selection.Model-cfg-allowDeselect\" rel=\"Ext.selection.Model-cfg-allowDeselect\" class=\"docClass\">allowDeselect</a> is 'true'.</p>\n","inheritdoc":null,"id":"cfg-toggleOnClick","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'Ext.Base'","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":763,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"$className","doc":"\n","inheritdoc":null,"id":"property-S-className","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":772,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configMap","doc":"\n","inheritdoc":null,"id":"property-configMap","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"Number of pixels to scroll to the left/right when pressing\nleft/right keys. ...","default":"5","owner":"Ext.selection.RowModel","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":31,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"deltaScroll","doc":"<p>Number of pixels to scroll to the left/right when pressing\nleft/right keys.</p>\n","inheritdoc":null,"id":"property-deltaScroll","html_type":"Number","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"Initial suspended call count. ...","default":"0","owner":"Ext.util.Observable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":237,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"eventsSuspended","doc":"<p>Initial suspended call count. Incremented when <a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a> is called, decremented when <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> is called.</p>\n","inheritdoc":null,"id":"property-eventsSuspended","html_type":"Number","linenr":null},{"autodetected":{},"type":"Object","short_doc":"This object holds a key for any event that has a listener. ...","default":null,"owner":"Ext.util.Observable","readonly":true,"tagname":"property","files":[{"linenr":243,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"name":"hasListeners","properties":null,"doc":"<p>This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class (via <a href=\"#!/api/Ext.util.Observable-static-method-observe\" rel=\"Ext.util.Observable-static-method-observe\" class=\"docClass\">observe</a>) or\non the <a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.</p>\n\n<p>The intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n","id":"property-hasListeners","html_type":"Object"},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":769,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigList","doc":"\n","inheritdoc":null,"id":"property-initConfigList","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":775,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigMap","doc":"\n","inheritdoc":null,"id":"property-initConfigMap","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"isInstance","doc":"\n","inheritdoc":null,"id":"property-isInstance","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"true in this class to identify an object as an instantiated Observable, or subclass thereof. ...","default":"true","owner":"Ext.util.Observable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":231,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"isObservable","properties":null,"doc":"<p><code>true</code> in this class to identify an object as an instantiated Observable, or subclass thereof.</p>\n","inheritdoc":null,"id":"property-isObservable","html_type":"Boolean","linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.util.MixedCollection","short_doc":"A MixedCollection that maintains all of the currently selected records. ...","default":"undefined","owner":"Ext.selection.Model","inheritable":null,"readonly":true,"tagname":"property","files":[{"linenr":66,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":null,"static":null,"name":"selected","properties":null,"doc":"<p>A MixedCollection that maintains all of the currently selected records.</p>\n","inheritdoc":null,"id":"property-selected","html_type":"<a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.Class","short_doc":"Get the reference to the current class from which this object was instantiated. ...","default":null,"owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1045,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"private":null,"static":null,"name":"self","properties":null,"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","inheritdoc":null,"id":"property-self","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":" ...","default":"0","owner":"Ext.selection.Model","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":89,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"suspendChange","doc":"\n","inheritdoc":null,"id":"property-suspendChange","html_type":"Number","linenr":89},{"autodetected":{"type":true,"default":true,"readonly":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":true,"readonly":null,"tagname":"property","files":[{"linenr":133,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"$onExtended","doc":"\n","inheritdoc":null,"id":"static-property-S-onExtended","html_type":"Array","linenr":null},{"overrides":[{"owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-method-constructor\" rel=\"Ext.selection.Model-method-constructor\" class=\"docClass\">Ext.selection.Model.constructor</a>","name":"constructor"},{"owner":"Ext.selection.RowModel","link":"<a href=\"#!/api/Ext.selection.RowModel-method-constructor\" rel=\"Ext.selection.RowModel-method-constructor\" class=\"docClass\">Ext.selection.RowModel.constructor</a>","name":"constructor"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["addEvents","callParent"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":53,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"return":{"type":"Ext.selection.RowModel","doc":"\n","html_type":"<a href=\"#!/api/Ext.selection.RowModel\" rel=\"Ext.selection.RowModel\" class=\"docClass\">Ext.selection.RowModel</a>"},"private":null,"static":null,"name":"constructor","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-constructor","fires":[],"linenr":53},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds the specified events to the list of events which this Observable may fire. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Object/String...","tagname":"params","doc":"<p>Either an object with event names as properties with\na value of <code>true</code>. For example:</p>\n\n<pre><code>this.addEvents({\n    storeloaded: true,\n    storecleared: true\n});\n</code></pre>\n\n<p>Or any number of event names as separate parameters. For example:</p>\n\n<pre><code>this.addEvents('storeloaded', 'storecleared');\n</code></pre>\n","name":"eventNames","html_type":"Object/String..."}],"tagname":"method","files":[{"linenr":800,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"addEvents","doc":"<p>Adds the specified events to the list of events which this Observable may fire.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addEvents","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.AbstractComponent","link":"<a href=\"#!/api/Ext.AbstractComponent-method-addListener\" rel=\"Ext.AbstractComponent-method-addListener\" class=\"docClass\">Ext.AbstractComponent.addListener</a>","name":"addListener"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Appends an event handler to this object. ...","method_calls":["addListener"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","name":"eventName","html_type":"String/Object"},{"type":"Function","tagname":"params","doc":"<p>The method the event invokes, or <em>if <code>scope</code> is specified, the </em>name* of the method within\nthe specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> plus the <code>options</code> parameter described below.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","name":"scope","html_type":"Object"},{"type":"Number","tagname":"params","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n\n","name":"delay","html_type":"Number"},{"type":"Boolean","tagname":"params","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n","name":"single","html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","name":"buffer","html_type":"Number"},{"type":"Ext.util.Observable","tagname":"params","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the event\n  was bubbled up from a child Observable.</p>\n\n","name":"target","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"type":"String","tagname":"params","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an element to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to elements of\n  <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the Component is rendered.\n  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n","name":"element","html_type":"String"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>When specified as <code>true</code>, the function returns A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call.</p>\n\n","name":"destroyable","optional":true,"html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n","name":"priority","optional":true,"html_type":"Number"}],"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> Unlike in ExtJS 3.x, the options object will also be passed as the last\nargument to every event handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":502,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"addListener","doc":"<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"mouseover\", this.onMouseOver, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: this.onCellClick,\n    mouseover: this.onMouseOver,\n    mouseout: this.onMouseOut,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: this.onCellClick, scope: this, single: true},\n    mouseover: {fn: panel.onMouseOver, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used. Note that\n<code>scope</code> MUST be specified to use this option:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: 'onCellClick', scope: this, single: true},\n    mouseover: {fn: 'onMouseOver', scope: panel}\n});\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-addListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds listeners to any Observable object (or Ext.Element) which are automatically removed when this Component is\ndestr...","method_calls":["addManagedListener"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":295,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"addManagedListener","doc":"<p>Adds listeners to any Observable object (or <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>) which are automatically removed when this Component is\ndestroyed.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addManagedListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["afterKeyNavigate"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"newIdx","html_type":"Object"},{"type":"Object","name":"newRecord","html_type":"Object"}],"tagname":"method","files":[{"linenr":294,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"afterBufferedScrollTo","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-afterBufferedScrollTo","fires":["<a href=\"#!/api/Ext.selection.RowModel-event-selectionchange\" rel=\"Ext.selection.RowModel-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":294},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Private\nCalled after a new record has been navigated to by a keystroke. ...","method_calls":["deselectRange","doDeselect","doSelect","isSelected","selectRange","setLastFocused"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"},{"type":"Object","name":"record","html_type":"Object"}],"tagname":"method","files":[{"linenr":296,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"afterKeyNavigate","doc":"<p>Private\nCalled after a new record has been navigated to by a keystroke.\nEvent is passed so that shift and ctrl can be handled.</p>\n","chainable":false,"inheritdoc":null,"id":"method-afterKeyNavigate","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Checks whether a selection should proceed based on the ignoreRightMouseSelection\noption. ...","method_calls":["hasSelection"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Ext.EventObject","tagname":"params","doc":"<p>The event</p>\n","name":"e","html_type":"<a href=\"#!/api/Ext.EventObject\" rel=\"Ext.EventObject\" class=\"docClass\">Ext.EventObject</a>"}],"tagname":"method","files":[{"linenr":357,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>False if the selection should not proceed</p>\n","name":"return","html_type":"Boolean"},"private":true,"static":null,"name":"allowRightMouseSelection","doc":"<p>Checks whether a selection should proceed based on the ignoreRightMouseSelection\noption.</p>\n","chainable":false,"inheritdoc":null,"id":"method-allowRightMouseSelection","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["bindStore"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Object","name":"view","html_type":"Object"}],"tagname":"method","files":[{"linenr":1102,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"beforeViewRender","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-beforeViewRender","abstract":true,"fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"overrides":[{"owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-method-bindComponent\" rel=\"Ext.selection.Model-method-bindComponent\" class=\"docClass\">Ext.selection.Model.bindComponent</a>","name":"bindComponent"}],"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["initKeyNav"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"view","html_type":"Object"}],"tagname":"method","files":[{"linenr":97,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"return":null,"private":true,"static":null,"name":"bindComponent","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-bindComponent","fires":[],"linenr":97},{"overrides":[{"owner":"Ext.util.Bindable","link":"<a href=\"#!/api/Ext.util.Bindable-method-bindStore\" rel=\"Ext.util.Bindable-method-bindStore\" class=\"docClass\">Ext.util.Bindable.bindStore</a>","name":"bindStore"},{"owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-method-bindStore\" rel=\"Ext.selection.Model-method-bindStore\" class=\"docClass\">Ext.selection.Model.bindStore</a>","name":"bindStore"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"binds the store to the selModel. ...","method_calls":["refresh"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Object","name":"store","html_type":"Object"},{"type":"Object","name":"initial","html_type":"Object"}],"tagname":"method","files":[{"linenr":130,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":null,"static":null,"name":"bindStore","doc":"<p>binds the store to the selModel.</p>\n","chainable":false,"inheritdoc":null,"id":"method-bindStore","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Binds listeners for this component to the store. ...","method_calls":["getStoreListeners"],"owner":"Ext.util.Bindable","inheritable":null,"params":[{"type":"Ext.data.AbstractStore","tagname":"params","doc":"<p>The store to bind to</p>\n","name":"store","html_type":"<a href=\"#!/api/Ext.data.AbstractStore\" rel=\"Ext.data.AbstractStore\" class=\"docClass\">Ext.data.AbstractStore</a>"}],"tagname":"method","files":[{"linenr":85,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Bindable.js"}],"protected":true,"private":null,"static":null,"name":"bindStoreListeners","doc":"<p>Binds listeners for this component to the store. By default it will add\nanything bound by the getStoreListeners method, however it can be overridden\nin a subclass to provide any more complicated handling.</p>\n","chainable":false,"inheritdoc":null,"id":"method-bindStoreListeners","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":1269,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the overridden method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callOverridden","doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"method-callOverridden","deprecated":{"text":"<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the \"parent\" method of the current method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":846,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the parent method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callParent","doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","chainable":false,"inheritdoc":null,"id":"method-callParent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":961,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the superclass method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callSuper","doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","chainable":false,"inheritdoc":null,"id":"method-callSuper","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Object","name":"o","html_type":"Object"},{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":127,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"captureArgs","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-captureArgs","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all listeners for this object including the managed listeners ...","method_calls":["clearManagedListeners"],"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":729,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"clearListeners","doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearListeners","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all managed listeners for this object. ...","method_calls":["removeManagedListenerItem"],"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"clearManagedListeners","doc":"<p>Removes all managed listeners for this object.</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearManagedListeners","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"A fast reset of the selections without firing events, updating the ui, etc. ...","method_calls":["setLastFocused"],"owner":"Ext.selection.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":985,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"clearSelections","doc":"<p>A fast reset of the selections without firing events, updating the ui, etc.\nFor private usage only.</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearSelections","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":766,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configClass","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-configClass","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Continue to fire event. ...","method_calls":["getBubbleParent"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"eventName","html_type":"String"},{"type":"Array","tagname":"params","doc":"\n","name":"args","html_type":"Array"},{"type":"Boolean","tagname":"params","doc":"\n","name":"bubbles","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":456,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"continueFireEvent","doc":"<p>Continue to fire event.</p>\n","chainable":false,"inheritdoc":null,"id":"method-continueFireEvent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates an event handling function which refires the event from this object as the passed event name. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name under which to refire the passed parameters.</p>\n","name":"newName","html_type":"String"},{"type":"Array","tagname":"params","doc":"<p>The caller can specify on which indices to slice.</p>\n","name":"beginEnd","optional":true,"html_type":"Array"}],"tagname":"method","files":[{"linenr":981,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Function","properties":null,"doc":"\n","name":"return","html_type":"Function"},"private":true,"static":null,"name":"createRelayer","doc":"<p>Creates an event handling function which refires the event from this object as the passed event name.</p>\n","chainable":false,"inheritdoc":null,"id":"method-createRelayer","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Deselects a record instance by record instance or index. ...","method_calls":["doDeselect"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Ext.data.Model[]/Number","tagname":"params","doc":"<p>An array of records or an index</p>\n","name":"records","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]/Number"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True to not fire a deselect event</p>\n","name":"suppressEvent","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":537,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":null,"static":null,"name":"deselect","doc":"<p>Deselects a record instance by record instance or index.</p>\n","chainable":false,"inheritdoc":null,"id":"method-deselect","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Deselects all records in the view. ...","method_calls":["doDeselect","getSelection","maybeFireSelectionChange","resumeChanges","suspendChanges"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>True to suppress any deselect events</p>\n","name":"suppressEvent","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":184,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":null,"static":null,"name":"deselectAll","doc":"<p>Deselects all records in the view.</p>\n","chainable":false,"inheritdoc":null,"id":"method-deselectAll","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Called by subclasses to deselect records upon detection of deletion from the store ...","method_calls":["getLastFocused","maybeFireSelectionChange","setLastFocused"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Object","name":"records","html_type":"Object"}],"tagname":"method","files":[{"linenr":1026,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"deselectDeletedRecords","doc":"<p>Called by subclasses to deselect records upon detection of deletion from the store</p>\n","chainable":false,"inheritdoc":null,"id":"method-deselectDeletedRecords","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["doDeselect","resumeChanges","suspendChanges"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Object","name":"toSelect","html_type":"Object"},{"type":"Object","name":"selected","html_type":"Object"},{"type":"Object","name":"suppressEvent","html_type":"Object"}],"tagname":"method","files":[{"linenr":612,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"deselectDuringSelect","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-deselectDuringSelect","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":612},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Deselects a range of rows if the selection model is not locked. ...","method_calls":["doDeselect","isLocked","isSelected","normalizeRowRange"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Ext.data.Model/Number","tagname":"params","doc":"<p>The record or index of the first row in the range</p>\n","name":"startRow","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/Number"},{"type":"Ext.data.Model/Number","tagname":"params","doc":"<p>The record or index of the last row in the range</p>\n","name":"endRow","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/Number"}],"tagname":"method","files":[{"linenr":468,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":null,"static":null,"name":"deselectRange","doc":"<p>Deselects a range of rows if the selection model <a href=\"#!/api/Ext.selection.Model-method-isLocked\" rel=\"Ext.selection.Model-method-isLocked\" class=\"docClass\">is not locked</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-deselectRange","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"type":null,"overrides":[{"owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">Ext.Base.destroy</a>","name":"destroy"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"cleanup. ...","method_calls":["clearListeners"],"owner":"Ext.selection.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1064,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"return":null,"private":true,"static":null,"name":"destroy","doc":"<p>cleanup.</p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-destroy","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"records can be an index, a record or an array of records ...","method_calls":["isSelected","maybeFireSelectionChange","onSelectChange","resumeChanges","setLastFocused","suspendChanges"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Object","name":"records","html_type":"Object"},{"type":"Object","name":"suppressEvent","html_type":"Object"}],"tagname":"method","files":[{"linenr":636,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"doDeselect","doc":"<p>records can be an index, a record or an array of records</p>\n","chainable":false,"inheritdoc":null,"id":"method-doDeselect","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["deselectDuringSelect","isSelected","maybeFireSelectionChange","onSelectChange","setLastFocused"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Object","name":"records","html_type":"Object"},{"type":"Object","name":"keepExisting","html_type":"Object"},{"type":"Object","name":"suppressEvent","html_type":"Object"}],"tagname":"method","files":[{"linenr":569,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"doMultiSelect","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-doMultiSelect","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":569},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["doMultiSelect","doSingleSelect"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Object","name":"records","html_type":"Object"},{"type":"Object","name":"keepExisting","html_type":"Object"},{"type":"Object","name":"suppressEvent","html_type":"Object"}],"tagname":"method","files":[{"linenr":546,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"doSelect","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-doSelect","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":546},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["doDeselect","isSelected","maybeFireSelectionChange","onSelectChange","resumeChanges","setLastFocused","suspendChanges"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Object","name":"record","html_type":"Object"},{"type":"Object","name":"suppressEvent","html_type":"Object"}],"tagname":"method","files":[{"linenr":689,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"doSingleSelect","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-doSingleSelect","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":689},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling this.getBubbleTarget() if\npresent. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String/String[]","tagname":"params","doc":"<p>The event name to bubble, or an Array of event names.</p>\n","name":"eventNames","html_type":"String/String[]"}],"tagname":"method","files":[{"linenr":995,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"enableBubble","doc":"<p>Enables events fired by this Observable to bubble up an owner hierarchy by calling <code>this.getBubbleTarget()</code> if\npresent. There is no implementation in the Observable base class.</p>\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers.\nSee <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>. The default implementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> returns the\nComponent's immediate owner. But if a known target is required, this can be overridden to access the\nrequired target more quickly.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.overrides.form.field.Base', {\n    override: '<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>',\n\n    //  Add functionality to Field's initComponent to enable the change event to bubble\n    initComponent: function () {\n        this.callParent();\n        this.enableBubble('change');\n    }\n});\n\nvar myForm = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-enableBubble","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fires the specified event with the passed parameters (minus the event name, plus the options object passed\nto addList...","method_calls":["fireEventArgs"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to fire.</p>\n","name":"eventName","html_type":"String"},{"type":"Object...","tagname":"params","doc":"<p>Variable number of parameters are passed to handlers.</p>\n","name":"args","html_type":"Object..."}],"tagname":"method","files":[{"linenr":416,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"fireEvent","doc":"<p>Fires the specified event with the passed parameters (minus the event name, plus the <code>options</code> object passed\nto <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireEvent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fires the specified event with the passed parameter list. ...","method_calls":["continueFireEvent"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to fire.</p>\n","name":"eventName","html_type":"String"},{"type":"Object[]","tagname":"params","doc":"<p>An array of parameters which are passed to handlers.</p>\n","name":"args","html_type":"Object[]"}],"tagname":"method","files":[{"linenr":431,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"fireEventArgs","doc":"<p>Fires the specified event with the passed parameter list.</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireEventArgs","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the bubbling parent for an Observable ...","method_calls":["getBubbleTarget"],"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":489,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Ext.util.Observable","properties":null,"doc":"<p>The bubble parent. null is returned if no bubble target exists</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},"private":true,"static":null,"name":"getBubbleParent","doc":"<p>Gets the bubbling parent for an Observable</p>\n","chainable":false,"inheritdoc":null,"id":"method-getBubbleParent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":1196,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"getConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the count of selected records. ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1053,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The number of selected records</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"getCount","doc":"<p>Returns the count of selected records.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getCount","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns position of the first selected cell in the selection in the format {row: row, column: column} ...","method_calls":null,"owner":"Ext.selection.RowModel","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":445,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":null,"static":null,"name":"getCurrentPosition","doc":"<p>Returns position of the first selected cell in the selection in the format {row: row, column: column}</p>\n","chainable":false,"inheritdoc":null,"id":"method-getCurrentPosition","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>Name of the config option to return.</p>\n","name":"name","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":1206,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object/Mixed","properties":null,"doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","name":"return","html_type":"Object/Mixed"},"private":null,"static":null,"name":"getInitialConfig","doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getInitialConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":769,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"getLastFocused","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getLastFocused","fires":null,"linenr":769},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":762,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"return":{"type":"Ext.data.Model","properties":null,"doc":"<p>Returns the last selected record.</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"private":null,"static":null,"name":"getLastSelected","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getLastSelected","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the number of rows currently visible on the screen or\nfalse if there were no rows. ...","method_calls":null,"owner":"Ext.selection.RowModel","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":163,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"getRowsVisible","doc":"<p>Returns the number of rows currently visible on the screen or\nfalse if there were no rows. This assumes that all rows are\nof the same height and the first view is accurate.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getRowsVisible","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns an array of the currently selected records. ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":773,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"return":{"type":"Ext.data.Model[]","properties":null,"doc":"<p>The selected records</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"private":null,"static":null,"name":"getSelection","doc":"<p>Returns an array of the currently selected records.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getSelection","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Object","name":"record","html_type":"Object"}],"tagname":"method","files":[{"linenr":858,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"getSelectionId","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getSelectionId","fires":null,"linenr":858},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the current selectionMode. ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":781,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"return":{"type":"String","properties":null,"doc":"<p>The selectionMode: 'SINGLE', 'MULTI' or 'SIMPLE'.</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"getSelectionMode","doc":"<p>Returns the current selectionMode.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getSelectionMode","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the current store instance. ...","method_calls":null,"owner":"Ext.util.Bindable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":62,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Bindable.js"}],"return":{"type":"Ext.data.AbstractStore","properties":null,"doc":"<p>The store, null if one does not exist.</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.AbstractStore\" rel=\"Ext.data.AbstractStore\" class=\"docClass\">Ext.data.AbstractStore</a>"},"private":null,"static":null,"name":"getStore","doc":"<p>Gets the current store instance.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getStore","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.util.Bindable","link":"<a href=\"#!/api/Ext.util.Bindable-method-getStoreListeners\" rel=\"Ext.util.Bindable-method-getStoreListeners\" class=\"docClass\">Ext.util.Bindable.getStoreListeners</a>","name":"getStoreListeners"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the listeners to bind to a new store. ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[],"protected":true,"tagname":"method","files":[{"linenr":139,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The listeners to be bound to the store in object literal form. The scope\nmay be omitted, it is assumed to be the current instance.</p>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getStoreListeners","doc":"<p>Gets the listeners to bind to a new store.</p>\n","chainable":null,"inheritdoc":null,"id":"method-getStoreListeners","fires":null,"linenr":139},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1156,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"hasConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-hasConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Checks to see if this object has any listeners for a specified event, or whether the event bubbles. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to check for</p>\n","name":"eventName","html_type":"String"}],"tagname":"method","files":[{"linenr":833,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p><code>true</code> if the event is being listened for or bubbles, else <code>false</code></p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"hasListener","doc":"<p>Checks to see if this object has any listeners for a specified event, or whether the event bubbles. The answer\nindicates whether the event needs firing or not.</p>\n","chainable":false,"inheritdoc":null,"id":"method-hasListener","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns true if there are any a selected records. ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":850,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"return":{"type":"Boolean","properties":null,"doc":"\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"hasSelection","doc":"<p>Returns true if there are any a selected records.</p>\n","chainable":false,"inheritdoc":null,"id":"method-hasSelection","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Initialize configuration for this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1090,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":null,"static":null,"name":"initConfig","doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"method-initConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"view","html_type":"Object"}],"tagname":"method","files":[{"linenr":111,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"initKeyNav","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-initKeyNav","fires":null,"linenr":111},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Determines if this record is currently focused. ...","method_calls":["getLastFocused"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Ext.data.Model","tagname":"params","doc":"\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"tagname":"method","files":[{"linenr":745,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":null,"static":null,"name":"isFocused","doc":"<p>Determines if this record is currently focused.</p>\n","chainable":false,"inheritdoc":null,"id":"method-isFocused","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns true if the selections are locked. ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":800,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"return":{"type":"Boolean","properties":null,"doc":"\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"isLocked","doc":"<p>Returns true if the selections are locked.</p>\n","chainable":false,"inheritdoc":null,"id":"method-isLocked","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns true if the specified row is selected. ...","method_calls":["isSelected","normalizeRowRange"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Ext.data.Model/Number","tagname":"params","doc":"<p>The start of the range to check.</p>\n","name":"from","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/Number"},{"type":"Ext.data.Model/Number","tagname":"params","doc":"<p>The end of the range to check.</p>\n","name":"to","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/Number"}],"tagname":"method","files":[{"linenr":816,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"return":{"type":"Boolean","properties":null,"doc":"\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"isRangeSelected","doc":"<p>Returns true if the specified row is selected.</p>\n","chainable":false,"inheritdoc":null,"id":"method-isRangeSelected","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["isSelected"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"record","html_type":"Object"},{"type":"Object","name":"index","html_type":"Object"}],"tagname":"method","files":[{"linenr":504,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"isRowSelected","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-isRowSelected","fires":[],"linenr":504},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns true if the specified row is selected. ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Ext.data.Model/Number","tagname":"params","doc":"<p>The record or index of the record to check</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/Number"}],"tagname":"method","files":[{"linenr":840,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"return":{"type":"Boolean","properties":null,"doc":"\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"isSelected","doc":"<p>Returns true if the specified row is selected.</p>\n","chainable":false,"inheritdoc":null,"id":"method-isSelected","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"fire selection change as long as true is not passed\ninto maybeFireSelectionChange ...","method_calls":["fireEvent","getSelection"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Object","name":"fireEvent","html_type":"Object"}],"tagname":"method","files":[{"linenr":753,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"maybeFireSelectionChange","doc":"<p>fire selection change as long as true is not passed\ninto maybeFireSelectionChange</p>\n","chainable":false,"inheritdoc":null,"id":"method-maybeFireSelectionChange","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for addManagedListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1134,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"mon","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-addManagedListener\" rel=\"Ext.util.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-mon","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for removeManagedListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":null,"private":null,"static":null,"name":"mun","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-removeManagedListener\" rel=\"Ext.util.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-mun","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Object","name":"startRow","html_type":"Object"},{"type":"Object","name":"endRow","html_type":"Object"}],"tagname":"method","files":[{"linenr":496,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"normalizeRowRange","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-normalizeRowRange","fires":null,"linenr":496},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for addListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","name":"eventName","html_type":"String/Object"},{"type":"Function","tagname":"params","doc":"<p>The method the event invokes, or <em>if <code>scope</code> is specified, the </em>name* of the method within\nthe specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> plus the <code>options</code> parameter described below.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","name":"scope","html_type":"Object"},{"type":"Number","tagname":"params","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n\n","name":"delay","html_type":"Number"},{"type":"Boolean","tagname":"params","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n","name":"single","html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","name":"buffer","html_type":"Number"},{"type":"Ext.util.Observable","tagname":"params","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the event\n  was bubbled up from a child Observable.</p>\n\n","name":"target","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"type":"String","tagname":"params","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an element to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to elements of\n  <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the Component is rendered.\n  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n","name":"element","html_type":"String"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>When specified as <code>true</code>, the function returns A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call.</p>\n\n","name":"destroyable","optional":true,"html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n","name":"priority","optional":true,"html_type":"Number"}],"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> Unlike in ExtJS 3.x, the options object will also be passed as the last\nargument to every event handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1122,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"on","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-on","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Template method, it is called when a new store is bound\nto the current instance. ...","method_calls":null,"owner":"Ext.util.Bindable","inheritable":null,"params":[{"type":"Ext.data.AbstractStore","tagname":"params","doc":"<p>The store being bound</p>\n","name":"store","html_type":"<a href=\"#!/api/Ext.data.AbstractStore\" rel=\"Ext.data.AbstractStore\" class=\"docClass\">Ext.data.AbstractStore</a>"},{"type":"Boolean","tagname":"params","doc":"<p>True if this store is being bound as initialization of the instance.</p>\n","name":"initial","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":122,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Bindable.js"}],"protected":true,"private":null,"static":null,"name":"onBindStore","doc":"<p>Template method, it is called when a new store is bound\nto the current instance.</p>\n","chainable":null,"inheritdoc":null,"id":"method-onBindStore","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"names","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"callback","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":1224,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"onConfigUpdate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onConfigUpdate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1099,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"onEditorKey","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-onEditorKey","abstract":true,"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"editingPlugin","html_type":"Object"},{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":427,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"onEditorTab","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onEditorTab","fires":null,"linenr":427},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Navigate one record down. ...","method_calls":["afterKeyNavigate"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":283,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"onKeyDown","doc":"<p>Navigate one record down. This could be a selection or\ncould be simply focusing a record for discontiguous\nselection. Provides bounds checking.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onKeyDown","fires":["<a href=\"#!/api/Ext.selection.RowModel-event-selectionchange\" rel=\"Ext.selection.RowModel-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"go to last visible record in grid. ...","method_calls":["afterKeyNavigate"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":181,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"onKeyEnd","doc":"<p>go to last visible record in grid.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onKeyEnd","fires":["<a href=\"#!/api/Ext.selection.RowModel-event-selectionchange\" rel=\"Ext.selection.RowModel-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.selection.RowModel","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":270,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"onKeyEnter","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-onKeyEnter","fires":null,"linenr":270},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"go to first visible record in grid. ...","method_calls":["afterKeyNavigate"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":198,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"onKeyHome","doc":"<p>go to first visible record in grid.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onKeyHome","fires":["<a href=\"#!/api/Ext.selection.RowModel-event-selectionchange\" rel=\"Ext.selection.RowModel-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["scrollByDeltaX"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":308,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"onKeyLeft","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onKeyLeft","fires":[],"linenr":308},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Go one page down from the lastFocused record in the grid. ...","method_calls":["afterKeyNavigate","getRowsVisible"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":238,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"onKeyPageDown","doc":"<p>Go one page down from the lastFocused record in the grid.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onKeyPageDown","fires":["<a href=\"#!/api/Ext.selection.RowModel-event-selectionchange\" rel=\"Ext.selection.RowModel-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Go one page up from the lastFocused record in the grid. ...","method_calls":["afterKeyNavigate","getRowsVisible"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":215,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"onKeyPageUp","doc":"<p>Go one page up from the lastFocused record in the grid.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onKeyPageUp","fires":["<a href=\"#!/api/Ext.selection.RowModel-event-selectionchange\" rel=\"Ext.selection.RowModel-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["scrollByDeltaX"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":312,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"onKeyRight","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onKeyRight","fires":[],"linenr":312},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Select/Deselect based on pressing Spacebar. ...","method_calls":["afterKeyNavigate"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":261,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"onKeySpace","doc":"<p>Select/Deselect based on pressing Spacebar.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onKeySpace","fires":["<a href=\"#!/api/Ext.selection.RowModel-event-selectionchange\" rel=\"Ext.selection.RowModel-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Navigate one record up. ...","method_calls":["afterKeyNavigate"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":272,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"onKeyUp","doc":"<p>Navigate one record up. This could be a selection or\ncould be simply focusing a record for discontiguous\nselection. Provides bounds checking.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onKeyUp","fires":["<a href=\"#!/api/Ext.selection.RowModel-event-selectionchange\" rel=\"Ext.selection.RowModel-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"overrides":[{"owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-method-onLastFocusChanged\" rel=\"Ext.selection.Model-method-onLastFocusChanged\" class=\"docClass\">Ext.selection.Model.onLastFocusChanged</a>","name":"onLastFocusChanged"}],"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Provide indication of what row was last focused via\nthe gridview. ...","method_calls":["callParent"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"oldFocused","html_type":"Object"},{"type":"Object","name":"newFocused","html_type":"Object"},{"type":"Object","name":"supressFocus","html_type":"Object"}],"tagname":"method","files":[{"linenr":399,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"return":null,"private":true,"static":null,"name":"onLastFocusChanged","doc":"<p>Provide indication of what row was last focused via\nthe gridview.</p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-onLastFocusChanged","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Object","name":"store","html_type":"Object"},{"type":"Object","name":"model","html_type":"Object"},{"type":"Object","name":"oldId","html_type":"Object"},{"type":"Object","name":"newId","html_type":"Object"},{"type":"Object","name":"oldInternalId","html_type":"Object"}],"tagname":"method","files":[{"linenr":520,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"onModelIdChanged","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onModelIdChanged","fires":null,"linenr":520},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["processSelection"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"view","html_type":"Object"},{"type":"Object","name":"record","html_type":"Object"},{"type":"Object","name":"item","html_type":"Object"},{"type":"Object","name":"index","html_type":"Object"},{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":345,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"onRowClick","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onRowClick","fires":["<a href=\"#!/api/Ext.selection.RowModel-event-selectionchange\" rel=\"Ext.selection.RowModel-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":345},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Select the record with the event included so that\nwe can take into account ctrlKey, shiftKey, etc ...","method_calls":["allowRightMouseSelection","isSelected","processSelection"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"view","html_type":"Object"},{"type":"Object","name":"record","html_type":"Object"},{"type":"Object","name":"item","html_type":"Object"},{"type":"Object","name":"index","html_type":"Object"},{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":316,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"onRowMouseDown","doc":"<p>Select the record with the event included so that\nwe can take into account ctrlKey, shiftKey, etc</p>\n","chainable":false,"inheritdoc":null,"id":"method-onRowMouseDown","fires":["<a href=\"#!/api/Ext.selection.RowModel-event-selectionchange\" rel=\"Ext.selection.RowModel-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"overrides":[{"owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-method-onSelectChange\" rel=\"Ext.selection.Model-method-onSelectChange\" class=\"docClass\">Ext.selection.Model.onSelectChange</a>","name":"onSelectChange"}],"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Allow the GridView to update the UI by\nadding/removing a CSS class from the row. ...","method_calls":["fireEvent"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"record","html_type":"Object"},{"type":"Object","name":"isSelected","html_type":"Object"},{"type":"Object","name":"suppressEvent","html_type":"Object"},{"type":"Object","name":"commitFn","html_type":"Object"}],"tagname":"method","files":[{"linenr":372,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"return":null,"private":true,"static":null,"name":"onSelectChange","doc":"<p>Allow the GridView to update the UI by\nadding/removing a CSS class from the row.</p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-onSelectChange","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"when a record is added to a store ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":997,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"onStoreAdd","doc":"<p>when a record is added to a store</p>\n","chainable":null,"inheritdoc":null,"id":"method-onStoreAdd","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"when a store is cleared remove all selections\n(if there were any) ...","method_calls":["clearSelections","maybeFireSelectionChange"],"owner":"Ext.selection.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1000,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"onStoreClear","doc":"<p>when a store is cleared remove all selections\n(if there were any)</p>\n","chainable":false,"inheritdoc":null,"id":"method-onStoreClear","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1074,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"onStoreLoad","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-onStoreLoad","abstract":true,"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1072,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"onStoreRefresh","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-onStoreRefresh","fires":null,"linenr":1072},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"prune records from the SelectionModel if\nthey were selected at the time they were\nremoved. ...","method_calls":["deselectDeletedRecords"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Object","name":"store","html_type":"Object"},{"type":"Object","name":"records","html_type":"Object"},{"type":"Object","name":"indexes","html_type":"Object"},{"type":"Object","name":"isMove","html_type":"Object"}],"tagname":"method","files":[{"linenr":1009,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"onStoreRemove","doc":"<p>prune records from the SelectionModel if\nthey were selected at the time they were\nremoved.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onStoreRemove","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"if records are updated ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1069,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"onStoreUpdate","doc":"<p>if records are updated</p>\n","chainable":null,"inheritdoc":null,"id":"method-onStoreUpdate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Template method, it is called when an existing store is unbound\nfrom the current instance. ...","method_calls":null,"owner":"Ext.util.Bindable","inheritable":null,"params":[{"type":"Ext.data.AbstractStore","tagname":"params","doc":"<p>The store being unbound</p>\n","name":"store","html_type":"<a href=\"#!/api/Ext.data.AbstractStore\" rel=\"Ext.data.AbstractStore\" class=\"docClass\">Ext.data.AbstractStore</a>"},{"type":"Boolean","tagname":"params","doc":"<p>True if this store is being bound as initialization of the instance.</p>\n","name":"initial","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":113,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Bindable.js"}],"protected":true,"private":null,"static":null,"name":"onUnbindStore","doc":"<p>Template method, it is called when an existing store is unbound\nfrom the current instance.</p>\n","chainable":null,"inheritdoc":null,"id":"method-onUnbindStore","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.selection.Model","link":"<a href=\"#!/api/Ext.selection.Model-method-onUpdate\" rel=\"Ext.selection.Model-method-onUpdate\" class=\"docClass\">Ext.selection.Model.onUpdate</a>","name":"onUpdate"}],"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Called when the contents of the node are updated, perform any processing here. ...","method_calls":["isSelected"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"record","html_type":"Object"}],"tagname":"method","files":[{"linenr":149,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"return":null,"private":true,"static":null,"name":"onUpdate","doc":"<p>Called when the contents of the node are updated, perform any processing here.</p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-onUpdate","fires":[],"linenr":149},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"If the mousedown event is vetoed, we still want to treat it as though we've had\na mousedown because we don't want to ...","method_calls":["isSelected"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"type","html_type":"Object"},{"type":"Object","name":"view","html_type":"Object"},{"type":"Object","name":"cell","html_type":"Object"},{"type":"Object","name":"rowIndex","html_type":"Object"},{"type":"Object","name":"cellIndex","html_type":"Object"},{"type":"Object","name":"e","html_type":"Object"},{"type":"Object","name":"record","html_type":"Object"}],"tagname":"method","files":[{"linenr":336,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"onVetoUIEvent","doc":"<p>If the mousedown event is vetoed, we still want to treat it as though we've had\na mousedown because we don't want to proceed on click. For example, the click on\nan action column vetoes the mousedown event so the click isn't processed.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onVetoUIEvent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Prepares a given class for observable instances. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Function","tagname":"params","doc":"<p>The class constructor to prepare.</p>\n","name":"T","html_type":"Function"}],"tagname":"method","files":[{"linenr":164,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"prepareClass","doc":"<p>Prepares a given class for observable instances. This method is called when a\nclass derives from this class or uses this class as a mixin.</p>\n","chainable":false,"inheritdoc":null,"id":"method-prepareClass","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["selectWithEvent"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"view","html_type":"Object"},{"type":"Object","name":"record","html_type":"Object"},{"type":"Object","name":"item","html_type":"Object"},{"type":"Object","name":"index","html_type":"Object"},{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":353,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"processSelection","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-processSelection","fires":["<a href=\"#!/api/Ext.selection.RowModel-event-selectionchange\" rel=\"Ext.selection.RowModel-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":353},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["maybeFireSelectionChange","storeHasSelected"],"owner":"Ext.selection.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":862,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"pruneIf","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-pruneIf","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":862},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["clearSelections","doSelect","getLastFocused","getSelection","maybeFireSelectionChange","setLastFocused"],"owner":"Ext.selection.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":909,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"refresh","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-refresh","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":909},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Relays selected events from the specified Observable as if the events were fired by this. ...","method_calls":["createRelayer","mon"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The Observable whose events this object is to relay.</p>\n","name":"origin","html_type":"Object"},{"type":"String[]","tagname":"params","doc":"<p>Array of event names to relay.</p>\n","name":"events","html_type":"String[]"},{"type":"String","tagname":"params","doc":"<p>A common prefix to prepend to the event names. For example:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Now the grid will forward 'load' and 'clear' events of store as 'storeload' and 'storeclear'.</p>\n","name":"prefix","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":928,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which, when destroyed, removes all relayers. For example:</p>\n\n<pre><code>this.storeRelayers = this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Can be undone by calling</p>\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.storeRelayers);\n</code></pre>\n\n<p>or\n    this.store.relayers.destroy();</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"relayEvents","doc":"<p>Relays selected events from the specified Observable as if the events were fired by <code>this</code>.</p>\n\n<p>For example if you are extending Grid, you might decide to forward some events from store.\nSo you can do this inside your initComponent:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>The grid instance will then have an observable 'load' event which will be passed the\nparameters of the store's load event and any function fired with the grid's load event\nwould have access to the grid using the <code>this</code> keyword.</p>\n","chainable":false,"inheritdoc":null,"id":"method-relayEvents","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes an event handler. ...","method_calls":["removeListener"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The type of event the handler was associated with.</p>\n\n","name":"eventName","html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>The handler to remove. <strong>This must be a reference to the function passed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope originally specified for the handler. It must be the same as the\nscope argument specified in the original call to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> or the listener will not be removed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":688,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"removeListener","doc":"<p>Removes an event handler.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes listeners that were added by the mon method. ...","method_calls":["removeManagedListener","removeManagedListenerItem"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":375,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"removeManagedListener","doc":"<p>Removes listeners that were added by the <a href=\"#!/api/Ext.util.Observable-method-mon\" rel=\"Ext.util.Observable-method-mon\" class=\"docClass\">mon</a> method.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeManagedListener","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.AbstractComponent","link":"<a href=\"#!/api/Ext.AbstractComponent-method-removeManagedListenerItem\" rel=\"Ext.AbstractComponent-method-removeManagedListenerItem\" class=\"docClass\">Ext.AbstractComponent.removeManagedListenerItem</a>","name":"removeManagedListenerItem"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Remove a single managed listener item ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>True if this is being called during a clear</p>\n","name":"isClear","html_type":"Boolean"},{"type":"Object","tagname":"params","doc":"<p>The managed listener item\nSee removeManagedListener for other args</p>\n","name":"managedListener","html_type":"Object"}],"tagname":"method","files":[{"linenr":775,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"removeManagedListenerItem","doc":"<p>Remove a single managed listener item</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeManagedListenerItem","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":156,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"resumeChanges","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-resumeChanges","fires":null,"linenr":156},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Resumes firing of the named event(s). ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String...","tagname":"params","doc":"<p>Multiple event names to resume.</p>\n","name":"eventName","html_type":"String..."}],"tagname":"method","files":[{"linenr":881,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"resumeEvent","doc":"<p>Resumes firing of the named event(s).</p>\n\n<p>After calling this method to resume events, the events will fire when requested to fire.</p>\n\n<p><strong>Note that if the <a href=\"#!/api/Ext.util.Observable-method-suspendEvent\" rel=\"Ext.util.Observable-method-suspendEvent\" class=\"docClass\">suspendEvent</a> method is called multiple times for a certain event,\nthis converse method will have to be called the same number of times for it to resume firing.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-resumeEvent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Resumes firing events (see suspendEvents). ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":905,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"resumeEvents","doc":"<p>Resumes firing events (see <a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n\n<p>If events were suspended using the <code>queueSuspended</code> parameter, then all events fired\nduring event suspension will be sent to any listeners now.</p>\n","chainable":false,"inheritdoc":null,"id":"method-resumeEvents","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"delta","html_type":"Object"}],"tagname":"method","files":[{"linenr":298,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"scrollByDeltaX","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-scrollByDeltaX","fires":null,"linenr":298},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Selects a record instance by record instance or index. ...","method_calls":["doSelect"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Ext.data.Model[]/Number","tagname":"params","doc":"<p>An array of records or an index</p>\n","name":"records","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]/Number"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True to retain existing selections</p>\n","name":"keepExisting","optional":true,"html_type":"Boolean"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True to not fire a select event</p>\n","name":"suppressEvent","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":524,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":null,"static":null,"name":"select","doc":"<p>Selects a record instance by record instance or index.</p>\n","chainable":false,"inheritdoc":null,"id":"method-select","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Selects all records in the view. ...","method_calls":["doSelect","getSelection","maybeFireSelectionChange","resumeChanges","suspendChanges"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>True to suppress any select events</p>\n","name":"suppressEvent","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":162,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":null,"static":null,"name":"selectAll","doc":"<p>Selects all records in the view.</p>\n","chainable":false,"inheritdoc":null,"id":"method-selectAll","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["select"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Object","name":"position","html_type":"Object"}],"tagname":"method","files":[{"linenr":455,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":true,"static":null,"name":"selectByPosition","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-selectByPosition","fires":["<a href=\"#!/api/Ext.selection.RowModel-event-selectionchange\" rel=\"Ext.selection.RowModel-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":455},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Selects the record immediately following the currently selected record. ...","method_calls":["doSelect","getSelection"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>True to retain existing selections</p>\n","name":"keepExisting","optional":true,"html_type":"Boolean"},{"type":"Boolean","tagname":"params","doc":"<p>Set to false to not fire a select event</p>\n","name":"suppressEvent","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":459,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p><code>true</code> if there is a next record, else <code>false</code></p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"selectNext","doc":"<p>Selects the record immediately following the currently selected record.</p>\n","chainable":false,"inheritdoc":null,"id":"method-selectNext","fires":["<a href=\"#!/api/Ext.selection.RowModel-event-selectionchange\" rel=\"Ext.selection.RowModel-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Selects the record that precedes the currently selected record. ...","method_calls":["doSelect","getSelection"],"owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>True to retain existing selections</p>\n","name":"keepExisting","optional":true,"html_type":"Boolean"},{"type":"Boolean","tagname":"params","doc":"<p>Set to false to not fire a select event</p>\n","name":"suppressEvent","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":482,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p><code>true</code> if there is a previous record, else <code>false</code></p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"selectPrevious","doc":"<p>Selects the record that precedes the currently selected record.</p>\n","chainable":false,"inheritdoc":null,"id":"method-selectPrevious","fires":["<a href=\"#!/api/Ext.selection.RowModel-event-selectionchange\" rel=\"Ext.selection.RowModel-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Selects a range of rows if the selection model is not locked. ...","method_calls":["doDeselect","doMultiSelect","isLocked","isSelected","normalizeRowRange","resumeChanges","suspendChanges"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Ext.data.Model/Number","tagname":"params","doc":"<p>The record or index of the first row in the range</p>\n","name":"startRow","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/Number"},{"type":"Ext.data.Model/Number","tagname":"params","doc":"<p>The record or index of the last row in the range</p>\n","name":"endRow","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/Number"},{"type":"Boolean","tagname":"params","doc":"<p>True to retain existing selections</p>\n","name":"keepExisting","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":418,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":null,"static":null,"name":"selectRange","doc":"<p>Selects a range of rows if the selection model <a href=\"#!/api/Ext.selection.Model-method-isLocked\" rel=\"Ext.selection.Model-method-isLocked\" class=\"docClass\">is not locked</a>.\nAll rows in between startRow and endRow are also selected.</p>\n","chainable":false,"inheritdoc":null,"id":"method-selectRange","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Provides differentiation of logic between MULTI, SIMPLE and SINGLE\nselection modes. ...","method_calls":["doDeselect","doSelect","getSelection","isSelected","selectRange"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Object","name":"record","html_type":"Object"},{"type":"Object","name":"e","html_type":"Object"}],"tagname":"method","files":[{"linenr":227,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"selectWithEvent","doc":"<p>Provides differentiation of logic between MULTI, SIMPLE and SINGLE\nselection modes. Requires that an event be passed so that we can know\nif user held ctrl or shift.</p>\n","chainable":false,"inheritdoc":null,"id":"method-selectWithEvent","fires":["<a href=\"#!/api/Ext.selection.Model-event-selectionchange\" rel=\"Ext.selection.Model-event-selectionchange\" class=\"docClass\">selectionchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"},{"type":"Object","name":"applyIfNotSet","html_type":"Object"}],"tagname":"method","files":[{"linenr":1164,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"static":null,"name":"setConfig","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-setConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets a record as the last focused record. ...","method_calls":["onLastFocusChanged"],"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Ext.data.Model","tagname":"params","doc":"\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"tagname":"method","files":[{"linenr":729,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":null,"static":null,"name":"setLastFocused","doc":"<p>Sets a record as the last focused record. This does NOT mean\nthat the record has been selected.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setLastFocused","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Locks the current selection and disables any changes from happening to the selection. ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>True to lock, false to unlock.</p>\n","name":"locked","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":808,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":null,"static":null,"name":"setLocked","doc":"<p>Locks the current selection and disables any changes from happening to the selection.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setLocked","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the current selectionMode. ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>'SINGLE', 'MULTI' or 'SIMPLE'.</p>\n","name":"selMode","html_type":"String"}],"tagname":"method","files":[{"linenr":789,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":null,"static":null,"name":"setSelectionMode","doc":"<p>Sets the current selectionMode.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setSelectionMode","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the reference to the class from which this object was instantiated. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":778,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Class","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"private":null,"static":null,"name":"statics","doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-statics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"We need this special check because we could have a model\nwithout an idProperty. ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Object","name":"record","html_type":"Object"}],"tagname":"method","files":[{"linenr":885,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"storeHasSelected","doc":"<p>We need this special check because we could have a model\nwithout an idProperty. getById() is fast, so we use that\nif possible, otherwise we need to check the internalId</p>\n","chainable":false,"inheritdoc":null,"id":"method-storeHasSelected","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.selection.Model","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":152,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":true,"static":null,"name":"suspendChanges","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-suspendChanges","fires":null,"linenr":152},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Suspends firing of the named event(s). ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String...","tagname":"params","doc":"<p>Multiple event names to suspend.</p>\n","name":"eventName","html_type":"String..."}],"tagname":"method","files":[{"linenr":857,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"suspendEvent","doc":"<p>Suspends firing of the named event(s).</p>\n\n<p>After calling this method to suspend events, the events will no longer fire when requested to fire.</p>\n\n<p><strong>Note that if this is called multiple times for a certain event, the converse method\n<a href=\"#!/api/Ext.util.Observable-method-resumeEvent\" rel=\"Ext.util.Observable-method-resumeEvent\" class=\"docClass\">resumeEvent</a> will have to be called the same number of times for it to resume firing.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-suspendEvent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Suspends the firing of all events. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>Pass as true to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events.</p>\n","name":"queueSuspended","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":844,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"suspendEvents","doc":"<p>Suspends the firing of all events. (see <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n","chainable":false,"inheritdoc":null,"id":"method-suspendEvents","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for removeListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The type of event the handler was associated with.</p>\n\n","name":"eventName","html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>The handler to remove. <strong>This must be a reference to the function passed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope originally specified for the handler. It must be the same as the\nscope argument specified in the original call to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> or the listener will not be removed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1128,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":null,"private":null,"static":null,"name":"un","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-removeListener\" rel=\"Ext.util.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-un","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Unbinds listeners from this component to the store. ...","method_calls":null,"owner":"Ext.util.Bindable","inheritable":null,"params":[{"type":"Ext.data.AbstractStore","tagname":"params","doc":"<p>The store to unbind from</p>\n","name":"store","html_type":"<a href=\"#!/api/Ext.data.AbstractStore\" rel=\"Ext.data.AbstractStore\" class=\"docClass\">Ext.data.AbstractStore</a>"}],"tagname":"method","files":[{"linenr":70,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Bindable.js"}],"protected":true,"private":null,"static":null,"name":"unbindStoreListeners","doc":"<p>Unbinds listeners from this component to the store. By default it will remove\nanything bound by the bindStoreListeners method, however it can be overridden\nin a subclass to provide any more complicated handling.</p>\n","chainable":false,"inheritdoc":null,"id":"method-unbindStoreListeners","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":176,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-addConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":256,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addInheritableStatics","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addInheritableStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"member","html_type":"Object"}],"tagname":"method","files":[{"linenr":353,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addMember","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addMember","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add methods / properties to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":296,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"addMembers","doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addMembers","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add / override static properties of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":218,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"addStatics","doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"xtype","html_type":"Object"}],"tagname":"method","files":[{"linenr":730,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addXtype","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addXtype","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Borrow another class' members to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Ext.Base","tagname":"params","doc":"<p>The class to borrow members from</p>\n","name":"fromClass","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"type":"Array/String","tagname":"params","doc":"<p>The names of the members to borrow</p>\n","name":"members","html_type":"Array/String"}],"tagname":"method","files":[{"linenr":383,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":true,"name":"borrow","doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-borrow","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-static-method-create\" rel=\"Ext.layout.Layout-static-method-create\" class=\"docClass\">Ext.layout.Layout.create</a>","name":"create"}],"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create a new instance of this Class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":60,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object","properties":null,"doc":"<p>the created instance.</p>\n","name":"return","html_type":"Object"},"static":true,"private":null,"name":"create","doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-create","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create aliases for existing prototype methods. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","name":"alias","html_type":"String/Object"},{"type":"String/Object","tagname":"params","doc":"<p>The original method name</p>\n","name":"origin","html_type":"String/Object"}],"tagname":"method","files":[{"linenr":696,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"createAlias","doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"static-method-createAlias","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":81,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"extend","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-extend","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the current class' name in string format. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":677,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"String","properties":null,"doc":"<p>className</p>\n","name":"return","html_type":"String"},"static":true,"private":null,"name":"getName","doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"static-method-getName","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds members to class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":373,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"implement","doc":"<p>Adds members to class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-implement","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n","version":"4.1"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Used internally by the mixins pre-processor ...","method_calls":["addConfig","hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"mixinClass","html_type":"Object"}],"tagname":"method","files":[{"linenr":595,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"mixin","doc":"<p>Used internally by the mixins pre-processor</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-mixin","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":162,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"onExtended","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-onExtended","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Override members of this class. ...","method_calls":["addConfig","addInheritableStatics"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":452,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this class</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"override","doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","chainable":true,"inheritdoc":null,"id":"static-method-override","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n","version":"4.1.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"triggerExtended","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-triggerExtended","fires":null,"linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"short_doc":"Fired before a record is deselected. ...","owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Ext.selection.RowModel","tagname":"params","doc":"\n","name":"this","html_type":"<a href=\"#!/api/Ext.selection.RowModel\" rel=\"Ext.selection.RowModel\" class=\"docClass\">Ext.selection.RowModel</a>"},{"type":"Ext.data.Model","tagname":"params","doc":"<p>The deselected record</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"type":"Number","tagname":"params","doc":"<p>The row index deselected</p>\n","name":"index","html_type":"Number"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":55,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":null,"static":null,"name":"beforedeselect","doc":"<p>Fired before a record is deselected. If any listener returns false, the\ndeselection is cancelled.</p>\n","inheritdoc":null,"id":"event-beforedeselect","linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"short_doc":"Fired before a record is selected. ...","owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Ext.selection.RowModel","tagname":"params","doc":"\n","name":"this","html_type":"<a href=\"#!/api/Ext.selection.RowModel\" rel=\"Ext.selection.RowModel\" class=\"docClass\">Ext.selection.RowModel</a>"},{"type":"Ext.data.Model","tagname":"params","doc":"<p>The selected record</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"type":"Number","tagname":"params","doc":"<p>The row index selected</p>\n","name":"index","html_type":"Number"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":65,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":null,"static":null,"name":"beforeselect","doc":"<p>Fired before a record is selected. If any listener returns false, the\nselection is cancelled.</p>\n","inheritdoc":null,"id":"event-beforeselect","linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"short_doc":"Fired after a record is deselected ...","owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Ext.selection.RowModel","tagname":"params","doc":"\n","name":"this","html_type":"<a href=\"#!/api/Ext.selection.RowModel\" rel=\"Ext.selection.RowModel\" class=\"docClass\">Ext.selection.RowModel</a>"},{"type":"Ext.data.Model","tagname":"params","doc":"<p>The deselected record</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"type":"Number","tagname":"params","doc":"<p>The row index deselected</p>\n","name":"index","html_type":"Number"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":75,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":null,"static":null,"name":"deselect","doc":"<p>Fired after a record is deselected</p>\n","inheritdoc":null,"id":"event-deselect","linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"short_doc":"Fired when a row is focused ...","owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Ext.selection.Model","tagname":"params","doc":"\n","name":"this","html_type":"<a href=\"#!/api/Ext.selection.Model\" rel=\"Ext.selection.Model\" class=\"docClass\">Ext.selection.Model</a>"},{"type":"Ext.data.Model","tagname":"params","doc":"<p>The previously focused record</p>\n","name":"oldFocused","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"type":"Ext.data.Model","tagname":"params","doc":"<p>The newly focused record</p>\n","name":"newFocused","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":105,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":null,"static":null,"name":"focuschange","doc":"<p>Fired when a row is focused</p>\n","inheritdoc":null,"id":"event-focuschange","linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"short_doc":"Fired after a record is selected ...","owner":"Ext.selection.RowModel","inheritable":null,"params":[{"type":"Ext.selection.RowModel","tagname":"params","doc":"\n","name":"this","html_type":"<a href=\"#!/api/Ext.selection.RowModel\" rel=\"Ext.selection.RowModel\" class=\"docClass\">Ext.selection.RowModel</a>"},{"type":"Ext.data.Model","tagname":"params","doc":"<p>The selected record</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"type":"Number","tagname":"params","doc":"<p>The row index selected</p>\n","name":"index","html_type":"Number"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":84,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/RowModel.js"}],"private":null,"static":null,"name":"select","doc":"<p>Fired after a record is selected</p>\n","inheritdoc":null,"id":"event-select","linenr":null},{"autodetected":{"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"short_doc":"Fired after a selection change has occurred ...","owner":"Ext.selection.Model","inheritable":null,"params":[{"type":"Ext.selection.Model","tagname":"params","doc":"\n","name":"this","html_type":"<a href=\"#!/api/Ext.selection.Model\" rel=\"Ext.selection.Model\" class=\"docClass\">Ext.selection.Model</a>"},{"type":"Ext.data.Model[]","tagname":"params","doc":"<p>The selected records</p>\n","name":"selected","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":98,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/selection/Model.js"}],"private":null,"static":null,"name":"selectionchange","doc":"<p>Fired after a selection change has occurred</p>\n","inheritdoc":null,"id":"event-selectionchange","linenr":null}],"alternateClassNames":[],"code_type":"ext_define","mixins":[],"doc":"<p>Implements row based navigation via keyboard.</p>\n\n<p>Must synchronize across grid sections.</p>\n","name":"Ext.selection.RowModel","id":"class-Ext.selection.RowModel"}