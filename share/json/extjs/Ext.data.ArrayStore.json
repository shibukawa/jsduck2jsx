{"autodetected":{"aliases":true,"requires":true,"uses":true,"extends":true,"members":true,"alternateClassNames":true,"code_type":true,"mixins":true},"short_doc":"Small helper class to make creating Ext.data.Stores from Array data easier. ...","aliases":{"store":["array"]},"requires":["Ext.data.proxy.Memory","Ext.data.reader.Array"],"files":[{"linenr":21,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/ArrayStore.js"}],"tagname":"class","uses":[],"extends":"Ext.data.Store","members":[{"autodetected":{},"type":"Boolean","short_doc":"When a Store is used by only one DataView, and should only exist for the lifetime of that view, then\nconfigure the au...","default":"false","owner":"Ext.data.Store","tagname":"cfg","files":[{"linenr":273,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"name":"autoDestroy","properties":null,"doc":"<p>When a Store is used by only one <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>, and should only exist for the lifetime of that view, then\nconfigure the autoDestroy flag as <code>true</code>. This causes the destruction of the view to trigger the destruction of its Store.</p>\n","id":"cfg-autoDestroy","html_type":"Boolean"},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean/Object","short_doc":"If data is not specified, and if autoLoad is true or an Object, this store's load method is automatically called\nafte...","default":null,"since":"2.3.0","owner":"Ext.data.AbstractStore","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":121,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"autoLoad","properties":null,"doc":"<p>If data is not specified, and if autoLoad is true or an Object, this store's load method is automatically called\nafter creation. If the value of autoLoad is an Object, this Object will be passed to the store's load method.</p>\n","inheritdoc":null,"id":"cfg-autoLoad","html_type":"Boolean/Object","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"True to automatically sync the Store with its Proxy after every edit to one of its Records. ...","default":"false","owner":"Ext.data.AbstractStore","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":129,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"autoSync","properties":null,"doc":"<p>True to automatically sync the Store with its Proxy after every edit to one of its Records. Defaults to false.</p>\n","inheritdoc":null,"id":"cfg-autoSync","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":"Sets the updating behavior based on batch synchronization. ...","default":"'operation'","owner":"Ext.data.AbstractStore","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":135,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"batchUpdateMode","properties":null,"doc":"<p>Sets the updating behavior based on batch synchronization. 'operation' (the default) will update the Store's\ninternal representation of the data after each operation of the batch has completed, 'complete' will wait until\nthe entire batch has been completed before updating the Store's data. 'complete' is a good choice for local\nstorage proxies, 'operation' is better for remote proxies, where there is a comparatively high latency.</p>\n","inheritdoc":null,"id":"cfg-batchUpdateMode","html_type":"String","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"Allows the Store to prefetch and cache in a page cache, pages of Records, and to then satisfy\nloading requirements fr...","default":"false","owner":"Ext.data.Store","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":368,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"buffered","properties":null,"doc":"<p>Allows the Store to prefetch and cache in a <strong>page cache</strong>, pages of Records, and to then satisfy\nloading requirements from this page cache.</p>\n\n<p>To use buffered Stores, initiate the process by loading the first page. The number of rows rendered are\ndetermined automatically, and the range of pages needed to keep the cache primed for scrolling is\nrequested and cached.\nExample:</p>\n\n<pre><code>myStore.loadPage(1); // Load page 1\n</code></pre>\n\n<p>A <a href=\"#!/api/Ext.grid.plugin.BufferedRenderer\" rel=\"Ext.grid.plugin.BufferedRenderer\" class=\"docClass\">BufferedRenderer</a> is instantiated which will monitor the scrolling in the grid, and\nrefresh the view's rows from the page cache as needed. It will also pull new data into the page\ncache when scrolling of the view draws upon data near either end of the prefetched data.</p>\n\n<p>The margins which trigger view refreshing from the prefetched data are <a href=\"#!/api/Ext.grid.plugin.BufferedRenderer-cfg-numFromEdge\" rel=\"Ext.grid.plugin.BufferedRenderer-cfg-numFromEdge\" class=\"docClass\">Ext.grid.plugin.BufferedRenderer.numFromEdge</a>,\n<a href=\"#!/api/Ext.grid.plugin.BufferedRenderer-cfg-leadingBufferZone\" rel=\"Ext.grid.plugin.BufferedRenderer-cfg-leadingBufferZone\" class=\"docClass\">Ext.grid.plugin.BufferedRenderer.leadingBufferZone</a> and <a href=\"#!/api/Ext.grid.plugin.BufferedRenderer-cfg-trailingBufferZone\" rel=\"Ext.grid.plugin.BufferedRenderer-cfg-trailingBufferZone\" class=\"docClass\">Ext.grid.plugin.BufferedRenderer.trailingBufferZone</a>.</p>\n\n<p>The margins which trigger loading more data into the page cache are, <a href=\"#!/api/Ext.data.Store-cfg-leadingBufferZone\" rel=\"Ext.data.Store-cfg-leadingBufferZone\" class=\"docClass\">leadingBufferZone</a> and\n<a href=\"#!/api/Ext.data.Store-cfg-trailingBufferZone\" rel=\"Ext.data.Store-cfg-trailingBufferZone\" class=\"docClass\">trailingBufferZone</a>.</p>\n\n<p>By default, only 5 pages of data are cached in the page cache, with pages \"scrolling\" out of the buffer\nas the view moves down through the dataset.\nSetting this value to zero means that no pages are <em>ever</em> scrolled out of the page cache, and\nthat eventually the whole dataset may become present in the page cache. This is sometimes desirable\nas long as datasets do not reach astronomical proportions.</p>\n\n<p>Selection state may be maintained across page boundaries by configuring the SelectionModel not to discard\nrecords from its collection when those Records cycle out of the Store's primary collection. This is done\nby configuring the SelectionModel like this:</p>\n\n<pre><code>selModel: {\n    pruneRemoved: false\n}\n</code></pre>\n","inheritdoc":null,"id":"cfg-buffered","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"True to empty the store when loading another page via loadPage,\nnextPage or previousPage. ...","default":"true","owner":"Ext.data.Store","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":346,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"clearOnPageLoad","properties":null,"doc":"<p>True to empty the store when loading another page via <a href=\"#!/api/Ext.data.Store-method-loadPage\" rel=\"Ext.data.Store-method-loadPage\" class=\"docClass\">loadPage</a>,\n<a href=\"#!/api/Ext.data.Store-method-nextPage\" rel=\"Ext.data.Store-method-nextPage\" class=\"docClass\">nextPage</a> or <a href=\"#!/api/Ext.data.Store-method-previousPage\" rel=\"Ext.data.Store-method-previousPage\" class=\"docClass\">previousPage</a>. Setting to false keeps existing records, allowing\nlarge data sets to be loaded one page at a time but rendered all together.</p>\n","inheritdoc":null,"id":"cfg-clearOnPageLoad","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"true to clear anything in the removed record collection when the store loads. ...","default":"true","owner":"Ext.data.Store","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":420,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"clearRemovedOnLoad","properties":null,"doc":"<p><code>true</code> to clear anything in the <a href=\"#!/api/Ext.data.Store-property-removed\" rel=\"Ext.data.Store-property-removed\" class=\"docClass\">removed</a> record collection when the store loads.</p>\n","inheritdoc":null,"id":"cfg-clearRemovedOnLoad","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{},"type":"Object[]/Ext.data.Model[]","short_doc":"Array of Model instances or data objects to load locally. ...","default":null,"owner":"Ext.data.Store","tagname":"cfg","files":[{"linenr":285,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"name":"data","properties":null,"doc":"<p>Array of Model instances or data objects to load locally. See \"Inline data\" above for details.</p>\n","id":"cfg-data","html_type":"Object[]/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":"The default sort direction to use if one is not specified. ...","default":"\"ASC\"","owner":"Ext.util.Sortable","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":37,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":null,"static":null,"name":"defaultSortDirection","properties":null,"doc":"<p>The default sort direction to use if one is not specified.</p>\n","inheritdoc":null,"id":"cfg-defaultSortDirection","html_type":"String","evented":null,"linenr":null},{"autodetected":{},"type":"Object[]","short_doc":"This may be used in place of specifying a model configuration. ...","default":null,"since":"2.3.0","owner":"Ext.data.AbstractStore","tagname":"cfg","files":[{"linenr":195,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"fields","properties":null,"doc":"<p>This may be used in place of specifying a <a href=\"#!/api/Ext.data.AbstractStore-cfg-model\" rel=\"Ext.data.AbstractStore-cfg-model\" class=\"docClass\">model</a> configuration. The fields should be a\nset of <a href=\"#!/api/Ext.data.Field\" rel=\"Ext.data.Field\" class=\"docClass\">Ext.data.Field</a> configuration objects. The store will automatically create a <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>\nwith these fields. In general this configuration option should only be used for simple stores like\na two-field store of ComboBox. For anything more complicated, such as specifying a particular id property or\nassociations, a <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> should be defined and specified for the <a href=\"#!/api/Ext.data.AbstractStore-cfg-model\" rel=\"Ext.data.AbstractStore-cfg-model\" class=\"docClass\">model</a>\nconfig.</p>\n","id":"cfg-fields","html_type":"Object[]"},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"If true, any filters attached to this Store will be run after loading data, before the datachanged event is fired. ...","default":"true","owner":"Ext.data.AbstractStore","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":144,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"filterOnLoad","properties":null,"doc":"<p>If true, any filters attached to this Store will be run after loading data, before the datachanged event is fired.\nDefaults to true, ignored if <a href=\"#!/api/Ext.data.Store-cfg-remoteFilter\" rel=\"Ext.data.Store-cfg-remoteFilter\" class=\"docClass\">remoteFilter</a> is true</p>\n","inheritdoc":null,"id":"cfg-filterOnLoad","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{},"type":"Object[]/Function[]","short_doc":"Array of Filters for this store. ...","default":null,"owner":"Ext.data.AbstractStore","tagname":"cfg","files":[{"linenr":212,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"filters","properties":null,"doc":"<p>Array of <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Filters</a> for this store. Can also be passed array of\nfunctions which will be used as the <a href=\"#!/api/Ext.util.Filter-cfg-filterFn\" rel=\"Ext.util.Filter-cfg-filterFn\" class=\"docClass\">filterFn</a> config\nfor filters:</p>\n\n<pre><code>filters: [\n    function(item) {\n        return item.weight &gt; 0;\n    }\n]\n</code></pre>\n\n<p>To filter after the grid is loaded use the <a href=\"#!/api/Ext.data.Store-method-filterBy\" rel=\"Ext.data.Store-method-filterBy\" class=\"docClass\">filterBy</a> function.</p>\n","id":"cfg-filters","html_type":"Object[]/Function[]"},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":"The direction in which sorting should be applied when grouping. ...","default":"\"ASC\"","owner":"Ext.data.Store","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":298,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"groupDir","properties":null,"doc":"<p>The direction in which sorting should be applied when grouping. Supported values are \"ASC\" and \"DESC\".</p>\n","inheritdoc":null,"id":"cfg-groupDir","html_type":"String","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"String","short_doc":"The field by which to group data in the store. ...","default":null,"owner":"Ext.data.Store","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":290,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"groupField","properties":null,"doc":"<p>The field by which to group data in the store. Internally, grouping is very similar to sorting - the\ngroupField and <a href=\"#!/api/Ext.data.Store-cfg-groupDir\" rel=\"Ext.data.Store-cfg-groupDir\" class=\"docClass\">groupDir</a> are injected as the first sorter (see <a href=\"#!/api/Ext.data.Store-method-sort\" rel=\"Ext.data.Store-method-sort\" class=\"docClass\">sort</a>). Stores support a single\nlevel of grouping, and groups can be fetched via the <a href=\"#!/api/Ext.data.Store-method-getGroups\" rel=\"Ext.data.Store-method-getGroups\" class=\"docClass\">getGroups</a> method.</p>\n","inheritdoc":null,"id":"cfg-groupField","html_type":"String","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Ext.util.MixedCollection","default":null,"owner":"Ext.data.Store","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":513,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"groupers","properties":null,"doc":"<p>The collection of <a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">Groupers</a> currently applied to this Store.</p>\n","inheritdoc":null,"id":"cfg-groupers","html_type":"<a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Number","short_doc":"When buffered, the number of extra rows to keep cached on the leading side of scrolling buffer\nas scrolling proceeds. ...","default":"200","owner":"Ext.data.Store","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":311,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"leadingBufferZone","properties":null,"doc":"<p>When <a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">buffered</a>, the number of extra rows to keep cached on the leading side of scrolling buffer\nas scrolling proceeds. A larger number means fewer replenishments from the server.</p>\n","inheritdoc":null,"id":"cfg-leadingBufferZone","html_type":"Number","evented":null,"linenr":null},{"autodetected":{},"type":"Object","short_doc":"A config object containing one or more event handlers to be added to this object during initialization. ...","default":null,"owner":"Ext.util.Observable","tagname":"cfg","files":[{"linenr":197,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"name":"listeners","properties":null,"doc":"<p>A config object containing one or more event handlers to be added to this object during initialization. This\nshould be a valid listeners config object as specified in the <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> example for attaching multiple\nhandlers at once.</p>\n\n<p><strong>DOM events from Ext JS <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a></strong></p>\n\n<p>While <em>some</em> Ext JS Component classes export selected DOM events (e.g. \"click\", \"mouseover\" etc), this is usually\nonly done when extra value can be added. For example the <a href=\"#!/api/Ext.view.View\" rel=\"Ext.view.View\" class=\"docClass\">DataView</a>'s <strong><code><a href=\"#!/api/Ext.view.View-event-itemclick\" rel=\"Ext.view.View-event-itemclick\" class=\"docClass\">itemclick</a></code></strong> event passing the node clicked on. To access DOM events directly from a\nchild element of a Component, we need to specify the <code>element</code> option to identify the Component property to add a\nDOM listener to:</p>\n\n<pre><code>new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n    width: 400,\n    height: 200,\n    dockedItems: [{\n        xtype: 'toolbar'\n    }],\n    listeners: {\n        click: {\n            element: 'el', //bind to the underlying el property on the panel\n            fn: function(){ console.log('click el'); }\n        },\n        dblclick: {\n            element: 'body', //bind to the underlying body property on the panel\n            fn: function(){ console.log('dblclick body'); }\n        }\n    }\n});\n</code></pre>\n","id":"cfg-listeners","html_type":"Object"},{"autodetected":{},"type":"String","short_doc":"Name of the Model associated with this store. ...","default":null,"owner":"Ext.data.AbstractStore","tagname":"cfg","files":[{"linenr":206,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"model","properties":null,"doc":"<p>Name of the <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a> associated with this store.\nThe string is used as an argument for <a href=\"#!/api/Ext.ModelManager-method-getModel\" rel=\"Ext.ModelManager-method-getModel\" class=\"docClass\">Ext.ModelManager.getModel</a>.</p>\n","id":"cfg-model","html_type":"String"},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Number","short_doc":"The number of records considered to form a 'page'. ...","default":null,"owner":"Ext.data.Store","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":318,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"pageSize","properties":null,"doc":"<p>The number of records considered to form a 'page'. This is used to power the built-in\npaging using the nextPage and previousPage functions when the grid is paged using a\n<a href=\"#!/api/Ext.toolbar.Paging\" rel=\"Ext.toolbar.Paging\" class=\"docClass\">PagingToolbar</a> Defaults to 25.</p>\n\n<p>If this Store is <a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">buffered</a>, pages are loaded into a page cache before the Store's\ndata is updated from the cache. The pageSize is the number of rows loaded into the cache in one request.\nThis will not affect the rendering of a buffered grid, but a larger page size will mean fewer loads.</p>\n\n<p>In a buffered grid, scrolling is monitored, and the page cache is kept primed with data ahead of the\ndirection of scroll to provide rapid access to data when scrolling causes it to be required. Several pages\nin advance may be requested depending on various parameters.</p>\n\n<p>It is recommended to tune the <a href=\"#!/api/Ext.data.Store-cfg-pageSize\" rel=\"Ext.data.Store-cfg-pageSize\" class=\"docClass\">pageSize</a>, <a href=\"#!/api/Ext.data.Store-cfg-trailingBufferZone\" rel=\"Ext.data.Store-cfg-trailingBufferZone\" class=\"docClass\">trailingBufferZone</a> and\n<a href=\"#!/api/Ext.data.Store-cfg-leadingBufferZone\" rel=\"Ext.data.Store-cfg-leadingBufferZone\" class=\"docClass\">leadingBufferZone</a> configurations based upon the conditions pertaining in your deployed application.</p>\n\n<p>The provided SDK example <code>examples/grid/infinite-scroll-grid-tuner.html</code> can be used to experiment with\ndifferent settings including simulating Ajax latency.</p>\n","inheritdoc":null,"id":"cfg-pageSize","html_type":"Number","evented":null,"linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-cfg-proxy\" rel=\"Ext.data.AbstractStore-cfg-proxy\" class=\"docClass\">Ext.data.AbstractStore.proxy</a>","name":"proxy"}],"autodetected":{},"type":"String/Ext.data.proxy.Proxy/Object","short_doc":"The Proxy to use for this Store. ...","default":null,"owner":"Ext.data.Store","tagname":"cfg","files":[{"linenr":279,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"name":"proxy","properties":null,"doc":"<p>The Proxy to use for this Store. This can be either a string, a config object or a Proxy instance -\nsee <a href=\"#!/api/Ext.data.Store-method-setProxy\" rel=\"Ext.data.Store-method-setProxy\" class=\"docClass\">setProxy</a> for details.</p>\n","id":"cfg-proxy","html_type":"String/<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a>/Object"},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Number","short_doc":"Valid only when used with a buffered Store. ...","default":"5","owner":"Ext.data.Store","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":407,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"purgePageCount","properties":null,"doc":"<p><em>Valid only when used with a <a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">buffered</a> Store.</em></p>\n\n<p>The number of pages <em>additional to the required buffered range</em> to keep in the prefetch cache before purging least recently used records.</p>\n\n<p>For example, if the height of the view area and the configured <a href=\"#!/api/Ext.data.Store-cfg-trailingBufferZone\" rel=\"Ext.data.Store-cfg-trailingBufferZone\" class=\"docClass\">trailingBufferZone</a> and <a href=\"#!/api/Ext.data.Store-cfg-leadingBufferZone\" rel=\"Ext.data.Store-cfg-leadingBufferZone\" class=\"docClass\">leadingBufferZone</a> require that there\nare three pages in the cache, then a <code>purgePageCount</code> of 5 ensures that up to 8 pages can be in the page cache any any one time.</p>\n\n<p>A value of 0 indicates to never purge the prefetched data.</p>\n","inheritdoc":null,"id":"cfg-purgePageCount","html_type":"Number","evented":null,"linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-cfg-remoteFilter\" rel=\"Ext.data.AbstractStore-cfg-remoteFilter\" class=\"docClass\">Ext.data.AbstractStore.remoteFilter</a>","name":"remoteFilter"}],"autodetected":{"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"true if the grouping should be performed on the server side, false if it is local only. ...","default":"false","owner":"Ext.data.Store","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":251,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"remoteFilter","properties":null,"doc":"<p><code>true</code> if the grouping should be performed on the server side, false if it is local only.</p>\n\n<p><a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">Buffered</a> stores automatically set this to <code>true</code>. Buffered stores contain an abitrary\nsubset of the full dataset which depends upon various configurations and which pages have been requested\nfor rendering. Such <em>sparse</em> datasets are ineligible for local filtering.</p>\n","inheritdoc":null,"id":"cfg-remoteFilter","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"true if the grouping should apply on the server side, false if it is local only. ...","default":"false","owner":"Ext.data.Store","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":261,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"remoteGroup","properties":null,"doc":"<p><code>true</code> if the grouping should apply on the server side, false if it is local only.  If the\ngrouping is local, it can be applied immediately to the data.  If it is remote, then it will simply act as a\nhelper, automatically sending the grouping information to the server.</p>\n\n<p><a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">Buffered</a> stores automatically set this to <code>true</code>. Buffered stores contain an abitrary\nsubset of the full dataset which depends upon various configurations and which pages have been requested\nfor rendering. Such <em>sparse</em> datasets are ineligible for local grouping.</p>\n","inheritdoc":null,"id":"cfg-remoteGroup","html_type":"Boolean","evented":null,"linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-cfg-remoteSort\" rel=\"Ext.data.AbstractStore-cfg-remoteSort\" class=\"docClass\">Ext.data.AbstractStore.remoteSort</a>","name":"remoteSort"}],"autodetected":{"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"true if the sorting should be performed on the server side, false if it is local only. ...","default":"false","owner":"Ext.data.Store","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":241,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"remoteSort","properties":null,"doc":"<p><code>true</code> if the sorting should be performed on the server side, false if it is local only.</p>\n\n<p><a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">Buffered</a> stores automatically set this to <code>true</code>. Buffered stores contain an abitrary\nsubset of the full dataset which depends upon various configurations and which pages have been requested\nfor rendering. Such <em>sparse</em> datasets are ineligible for local sorting.</p>\n","inheritdoc":null,"id":"cfg-remoteSort","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"For local filtering only, causes sort to be called whenever filter is called,\ncausing the sorters to be reapplied aft...","default":"true","owner":"Ext.data.Store","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":361,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"sortOnFilter","properties":null,"doc":"<p>For local filtering only, causes <a href=\"#!/api/Ext.data.Store-method-sort\" rel=\"Ext.data.Store-method-sort\" class=\"docClass\">sort</a> to be called whenever <a href=\"#!/api/Ext.data.Store-method-filter\" rel=\"Ext.data.Store-method-filter\" class=\"docClass\">filter</a> is called,\ncausing the sorters to be reapplied after filtering.</p>\n","inheritdoc":null,"id":"cfg-sortOnFilter","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"If true, any sorters attached to this Store will be run after loading data, before the datachanged event is fired. ...","default":"true","owner":"Ext.data.AbstractStore","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":151,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"sortOnLoad","properties":null,"doc":"<p>If true, any sorters attached to this Store will be run after loading data, before the datachanged event is fired.\nDefaults to true, igored if <a href=\"#!/api/Ext.data.Store-cfg-remoteSort\" rel=\"Ext.data.Store-cfg-remoteSort\" class=\"docClass\">remoteSort</a> is true</p>\n","inheritdoc":null,"id":"cfg-sortOnLoad","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{},"type":"String","default":null,"owner":"Ext.util.Sortable","tagname":"cfg","files":[{"linenr":71,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"name":"sortRoot","properties":null,"doc":"<p>The property in each item that contains the data to sort.</p>\n","id":"cfg-sortRoot","html_type":"String"},{"autodetected":{},"type":"Ext.util.Sorter[]/Object[]","default":null,"owner":"Ext.util.Sortable","tagname":"cfg","files":[{"linenr":76,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"name":"sorters","properties":null,"doc":"<p>The initial set of <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Sorters</a></p>\n","id":"cfg-sorters","html_type":"<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]/Object[]"},{"autodetected":{},"type":"Boolean","short_doc":"Configure as true to have the filters saved when a client grid saves its state. ...","default":"false","owner":"Ext.data.AbstractStore","tagname":"cfg","files":[{"linenr":227,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"statefulFilters","properties":null,"doc":"<p>Configure as <code>true</code> to have the filters saved when a client <a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">grid</a> saves its state.</p>\n","id":"cfg-statefulFilters","html_type":"Boolean"},{"autodetected":{},"type":"String","short_doc":"Unique identifier for this store. ...","default":null,"owner":"Ext.data.AbstractStore","tagname":"cfg","files":[{"linenr":187,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"storeId","properties":null,"doc":"<p>Unique identifier for this store. If present, this Store will be registered with the <a href=\"#!/api/Ext.data.StoreManager\" rel=\"Ext.data.StoreManager\" class=\"docClass\">Ext.data.StoreManager</a>,\nmaking it easy to reuse elsewhere.</p>\n\n<p>Note that when store is instatiated by Controller, the storeId will be overridden by the name of the store.</p>\n","id":"cfg-storeId","html_type":"String"},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Number","short_doc":"When buffered, the number of extra records to keep cached on the trailing side of scrolling buffer\nas scrolling proce...","default":"25","owner":"Ext.data.Store","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":304,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"trailingBufferZone","properties":null,"doc":"<p>When <a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">buffered</a>, the number of extra records to keep cached on the trailing side of scrolling buffer\nas scrolling proceeds. A larger number means fewer replenishments from the server.</p>\n","inheritdoc":null,"id":"cfg-trailingBufferZone","html_type":"Number","evented":null,"linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'Ext.Base'","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":763,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"$className","doc":"\n","inheritdoc":null,"id":"property-S-className","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"Private. ...","default":"{addRecords: true}","owner":"Ext.data.Store","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":431,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"addRecordsOptions","doc":"<p>Private. Used as parameter to loadRecords</p>\n","inheritdoc":null,"id":"property-addRecordsOptions","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":772,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configMap","doc":"\n","inheritdoc":null,"id":"property-configMap","html_type":"Object","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"The page that the Store has most recently loaded (see loadPage) ...","default":"1","owner":"Ext.data.Store","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":340,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"currentPage","properties":null,"doc":"<p>The page that the Store has most recently loaded (see <a href=\"#!/api/Ext.data.Store-method-loadPage\" rel=\"Ext.data.Store-method-loadPage\" class=\"docClass\">loadPage</a>)</p>\n","inheritdoc":null,"id":"property-currentPage","html_type":"Number","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.util.MixedCollection/Ext.data.Store.PageMap","short_doc":"When this Store is not buffered, the data property is a MixedCollection which holds this store's local cache of records. ...","default":null,"owner":"Ext.data.Store","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":547,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"data","properties":null,"doc":"<p>When this Store is not <a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">buffered</a>, the <code>data</code> property is a MixedCollection which holds this store's local cache of records.</p>\n\n<p>When this store <em>is</em> <a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">buffered</a>, the <code>data</code> property is a cache of <em>pages</em> of records used to satisfy load requests from the Store when the associated view\nscrolls. Depending on how the <a href=\"#!/api/Ext.data.Store-cfg-leadingBufferZone\" rel=\"Ext.data.Store-cfg-leadingBufferZone\" class=\"docClass\">buffer zone</a> and <a href=\"#!/api/Ext.data.Store-cfg-purgePageCount\" rel=\"Ext.data.Store-cfg-purgePageCount\" class=\"docClass\">purgePageCount</a> are configured,\npages which are scrolled out of view may be evicted from the cache, and need to be re-requested from the server\nwhen scrolled back into view. For this reason, if using <a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">buffered</a>, it is recommended that you configure\nyour Model definitions with a unique <a href=\"#!/api/Ext.data.Model-cfg-idProperty\" rel=\"Ext.data.Model-cfg-idProperty\" class=\"docClass\">Ext.data.Model.idProperty</a> so that records which return to the page\ncache may be matched against previously selected records.</p>\n\n<p>Pages in the direction of scroll are prefetched from the remote server and loaded into this cache <em>before</em>\nthey are needed based upon the <a href=\"#!/api/Ext.data.Store-cfg-leadingBufferZone\" rel=\"Ext.data.Store-cfg-leadingBufferZone\" class=\"docClass\">buffer zone</a> so that scrolling can proceed without visible pauses for data loading.</p>\n","inheritdoc":null,"id":"property-data","html_type":"Ext.util.MixedCollection/Ext.data.Store.PageMap","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":" ...","default":"25","owner":"Ext.data.Store","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":426,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"defaultPageSize","doc":"\n","inheritdoc":null,"id":"property-defaultPageSize","html_type":"Number","linenr":426},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":"The string type of the Proxy to create if none is specified. ...","default":"'memory'","owner":"Ext.data.AbstractStore","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":166,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"defaultProxyType","properties":null,"doc":"<p>The string type of the Proxy to create if none is specified. This defaults to creating a\n<a href=\"#!/api/Ext.data.proxy.Memory\" rel=\"Ext.data.proxy.Memory\" class=\"docClass\">memory proxy</a>.</p>\n","inheritdoc":null,"id":"property-defaultProxyType","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"Number of records to load into a buffered grid before it has been bound to a view of known size ...","default":"100","owner":"Ext.data.Store","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":428,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"defaultViewSize","doc":"<p>Number of records to load into a buffered grid before it has been bound to a view of known size</p>\n","inheritdoc":null,"id":"property-defaultViewSize","html_type":"Number","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"Initial suspended call count. ...","default":"0","owner":"Ext.util.Observable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":237,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"eventsSuspended","doc":"<p>Initial suspended call count. Incremented when <a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a> is called, decremented when <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> is called.</p>\n","inheritdoc":null,"id":"property-eventsSuspended","html_type":"Number","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.util.MixedCollection","default":null,"owner":"Ext.data.AbstractStore","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":429,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"filters","properties":null,"doc":"<p>The collection of <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Filters</a> currently applied to this Store</p>\n","inheritdoc":null,"id":"property-filters","html_type":"<a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>","linenr":null},{"autodetected":{},"type":"Object","short_doc":"This object holds a key for any event that has a listener. ...","default":null,"owner":"Ext.util.Observable","readonly":true,"tagname":"property","files":[{"linenr":243,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"name":"hasListeners","properties":null,"doc":"<p>This object holds a key for any event that has a listener. The listener may be set\ndirectly on the instance, or on its class or a super class (via <a href=\"#!/api/Ext.util.Observable-static-method-observe\" rel=\"Ext.util.Observable-static-method-observe\" class=\"docClass\">observe</a>) or\non the <a href=\"#!/api/Ext.app.EventBus\" rel=\"Ext.app.EventBus\" class=\"docClass\">MVC EventBus</a>. The values of this object are truthy\n(a non-zero number) and falsy (0 or undefined). They do not represent an exact count\nof listeners. The value for an event is truthy if the event must be fired and is\nfalsy if there is no need to fire the event.</p>\n\n<p>The intended use of this property is to avoid the expense of fireEvent calls when\nthere are no listeners. This can be particularly helpful when one would otherwise\nhave to call fireEvent hundreds or thousands of times. It is used like this:</p>\n\n<pre><code> if (this.hasListeners.foo) {\n     this.fireEvent('foo', this, arg1);\n }\n</code></pre>\n","id":"property-hasListeners","html_type":"Object"},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"True if a model was created implicitly for this Store. ...","default":"false","owner":"Ext.data.AbstractStore","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":158,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"implicitModel","properties":null,"doc":"<p>True if a model was created implicitly for this Store. This happens if a fields array is passed to the Store's\nconstructor instead of a model constructor or name.</p>\n","inheritdoc":null,"id":"property-implicitModel","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":769,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigList","doc":"\n","inheritdoc":null,"id":"property-initConfigList","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":775,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigMap","doc":"\n","inheritdoc":null,"id":"property-initConfigMap","html_type":"Object","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"True if the Store has already been destroyed. ...","default":"false","since":"3.4.0","owner":"Ext.data.AbstractStore","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":173,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"isDestroyed","properties":null,"doc":"<p>True if the Store has already been destroyed. If this is true, the reference to Store should be deleted\nas it will not function correctly any more.</p>\n","inheritdoc":null,"id":"property-isDestroyed","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"isInstance","doc":"\n","inheritdoc":null,"id":"property-isInstance","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"true in this class to identify an object as an instantiated Observable, or subclass thereof. ...","default":"true","owner":"Ext.util.Observable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":231,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"isObservable","properties":null,"doc":"<p><code>true</code> in this class to identify an object as an instantiated Observable, or subclass thereof.</p>\n","inheritdoc":null,"id":"property-isObservable","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"true in this class to identify an object as an instantiated Sortable, or subclass thereof. ...","default":"true","owner":"Ext.util.Sortable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":31,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":null,"static":null,"name":"isSortable","properties":null,"doc":"<p><code>true</code> in this class to identify an object as an instantiated Sortable, or subclass thereof.</p>\n","inheritdoc":null,"id":"property-isSortable","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"true in this class to identify an object as an instantiated Store, or subclass thereof. ...","default":"true","owner":"Ext.data.AbstractStore","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":181,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"isStore","properties":null,"doc":"<p><code>true</code> in this class to identify an object as an instantiated Store, or subclass thereof.</p>\n","inheritdoc":null,"id":"property-isStore","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"true if the Store is currently loading via its Proxy. ...","default":"false","owner":"Ext.data.Store","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":354,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"loading","properties":null,"doc":"<p><code>true</code> if the Store is currently loading via its Proxy.</p>\n","inheritdoc":null,"id":"property-loading","html_type":"Boolean","linenr":null},{"autodetected":{},"type":"Object","short_doc":"A set of default values to be applied to every model instance added via insert or created\nvia createModel. ...","default":null,"owner":"Ext.data.AbstractStore","tagname":"property","files":[{"linenr":371,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"name":"modelDefaults","properties":null,"doc":"<p>A set of default values to be applied to every model instance added via <a href=\"#!/api/Ext.data.Store-method-insert\" rel=\"Ext.data.Store-method-insert\" class=\"docClass\">insert</a> or created\nvia <a href=\"#!/api/Ext.data.Store-method-createModel\" rel=\"Ext.data.Store-method-createModel\" class=\"docClass\">createModel</a>. This is used internally by associations to set foreign keys and\nother fields. See the Association classes source code for examples. This should not need to be used by application developers.</p>\n","id":"property-modelDefaults","html_type":"Object"},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.data.Model[]","short_doc":"Temporary cache in which removed model instances are kept until successfully synchronised with a Proxy,\nat which poin...","default":"[]","owner":"Ext.data.AbstractStore","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":355,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"protected":true,"private":null,"static":null,"name":"removed","properties":null,"doc":"<p>Temporary cache in which removed model instances are kept until successfully synchronised with a Proxy,\nat which point this is cleared.</p>\n","inheritdoc":null,"id":"property-removed","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.Class","short_doc":"Get the reference to the current class from which this object was instantiated. ...","default":null,"owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1045,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"private":null,"static":null,"name":"self","properties":null,"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","inheritdoc":null,"id":"property-self","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.util.MixedCollection","short_doc":"A pristine (unfiltered) collection of the records in this store. ...","default":null,"owner":"Ext.data.Store","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1758,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"snapshot","properties":null,"doc":"<p>A pristine (unfiltered) collection of the records in this store. This is used to reinstate\nrecords when a filter is removed or changed</p>\n","inheritdoc":null,"id":"property-snapshot","html_type":"<a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.util.MixedCollection","default":null,"owner":"Ext.util.Sortable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":89,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":null,"static":null,"name":"sorters","properties":null,"doc":"<p>The collection of <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Sorters</a> currently applied to this Store</p>\n","inheritdoc":null,"id":"property-sorters","html_type":"<a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>","linenr":null},{"autodetected":{"type":true,"default":true,"readonly":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":true,"readonly":null,"tagname":"property","files":[{"linenr":133,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"$onExtended","doc":"\n","inheritdoc":null,"id":"static-property-S-onExtended","html_type":"Array","linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-constructor\" rel=\"Ext.data.AbstractStore-method-constructor\" class=\"docClass\">Ext.data.AbstractStore.constructor</a>","name":"constructor"},{"owner":"Ext.data.Store","link":"<a href=\"#!/api/Ext.data.Store-method-constructor\" rel=\"Ext.data.Store-method-constructor\" class=\"docClass\">Ext.data.Store.constructor</a>","name":"constructor"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates the store. ...","method_calls":["callParent"],"owner":"Ext.data.ArrayStore","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":63,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/ArrayStore.js"}],"return":{"type":"Ext.data.ArrayStore","doc":"\n","html_type":"<a href=\"#!/api/Ext.data.ArrayStore\" rel=\"Ext.data.ArrayStore\" class=\"docClass\">Ext.data.ArrayStore</a>"},"private":null,"static":null,"name":"constructor","doc":"<p>Creates the store.</p>\n","chainable":false,"inheritdoc":null,"id":"method-constructor","fires":[],"linenr":63},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds Model instance to the Store. ...","method_calls":["addSorted","createModel","insert"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Ext.data.Model[]/Ext.data.Model.../Object[]/Object...","tagname":"params","doc":"<p>An array of Model instances\nor Model configuration objects, or variable number of Model instance or config arguments.</p>\n","name":"model","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>.../Object[]/Object..."}],"tagname":"method","files":[{"linenr":1175,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Ext.data.Model[]","properties":null,"doc":"<p>The model instances that were added</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"private":null,"static":null,"name":"add","doc":"<p>Adds Model instance to the Store. This method accepts either:</p>\n\n<ul>\n<li>An array of Model instances or Model configuration objects.</li>\n<li>Any number of Model instance or Model configuration object arguments.</li>\n</ul>\n\n\n<p>The new Model instances will be added at the end of the existing collection.</p>\n\n<p>Sample usage:</p>\n\n<pre><code>myStore.add({some: 'data'}, {some: 'other data'});\n</code></pre>\n\n<p>Note that if this Store is sorted, the new Model instances will be inserted\nat the correct point in the Store to maintain the sort order.</p>\n","chainable":false,"inheritdoc":null,"id":"method-add","fires":["<a href=\"#!/api/Ext.data.Store-event-add\" rel=\"Ext.data.Store-event-add\" class=\"docClass\">add</a>","beforesort","<a href=\"#!/api/Ext.data.Store-event-beforesync\" rel=\"Ext.data.Store-event-beforesync\" class=\"docClass\">beforesync</a>","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds the specified events to the list of events which this Observable may fire. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Object/String...","tagname":"params","doc":"<p>Either an object with event names as properties with\na value of <code>true</code>. For example:</p>\n\n<pre><code>this.addEvents({\n    storeloaded: true,\n    storecleared: true\n});\n</code></pre>\n\n<p>Or any number of event names as separate parameters. For example:</p>\n\n<pre><code>this.addEvents('storeloaded', 'storecleared');\n</code></pre>\n","name":"eventNames","html_type":"Object/String..."}],"tagname":"method","files":[{"linenr":800,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"addEvents","doc":"<p>Adds the specified events to the list of events which this Observable may fire.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addEvents","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds a new Filter to this Store's filter set and\nby default, applys the updated filter set to the Store's unfiltered ...","method_calls":["decodeFilters","filter","fireEvent"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object[]/Ext.util.Filter[]","tagname":"params","doc":"<p>The set of filters to add to the current <a href=\"#!/api/Ext.data.Store-property-filters\" rel=\"Ext.data.Store-property-filters\" class=\"docClass\">filter set</a>.</p>\n","name":"filters","html_type":"Object[]/<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>[]"},{"type":"Boolean","default":"true","tagname":"params","doc":"<p>Pass as <code>false</code> to add the filter but not apply the updated filter set.</p>\n","name":"applyFilters","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":1870,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"addFilter","doc":"<p>Adds a new Filter to this Store's <a href=\"#!/api/Ext.data.Store-property-filters\" rel=\"Ext.data.Store-property-filters\" class=\"docClass\">filter set</a> and\nby default, applys the updated filter set to the Store's unfiltered dataset.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addFilter","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeload\" rel=\"Ext.data.Store-event-beforeload\" class=\"docClass\">beforeload</a>","<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>","beforesort","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-filterchange\" rel=\"Ext.data.Store-event-filterchange\" class=\"docClass\">filterchange</a>","<a href=\"#!/api/Ext.data.Store-event-groupchange\" rel=\"Ext.data.Store-event-groupchange\" class=\"docClass\">groupchange</a>","guaranteedrange","<a href=\"#!/api/Ext.data.Store-event-load\" rel=\"Ext.data.Store-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.Store-event-refresh\" rel=\"Ext.data.Store-event-refresh\" class=\"docClass\">refresh</a>"],"linenr":null},{"overrides":[{"owner":"Ext.AbstractComponent","link":"<a href=\"#!/api/Ext.AbstractComponent-method-addListener\" rel=\"Ext.AbstractComponent-method-addListener\" class=\"docClass\">Ext.AbstractComponent.addListener</a>","name":"addListener"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Appends an event handler to this object. ...","method_calls":["addListener"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","name":"eventName","html_type":"String/Object"},{"type":"Function","tagname":"params","doc":"<p>The method the event invokes, or <em>if <code>scope</code> is specified, the </em>name* of the method within\nthe specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> plus the <code>options</code> parameter described below.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","name":"scope","html_type":"Object"},{"type":"Number","tagname":"params","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n\n","name":"delay","html_type":"Number"},{"type":"Boolean","tagname":"params","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n","name":"single","html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","name":"buffer","html_type":"Number"},{"type":"Ext.util.Observable","tagname":"params","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the event\n  was bubbled up from a child Observable.</p>\n\n","name":"target","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"type":"String","tagname":"params","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an element to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to elements of\n  <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the Component is rendered.\n  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n","name":"element","html_type":"String"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>When specified as <code>true</code>, the function returns A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call.</p>\n\n","name":"destroyable","optional":true,"html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n","name":"priority","optional":true,"html_type":"Number"}],"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> Unlike in ExtJS 3.x, the options object will also be passed as the last\nargument to every event handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":502,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"addListener","doc":"<p>Appends an event handler to this object.  For example:</p>\n\n<pre><code>myGridPanel.on(\"mouseover\", this.onMouseOver, this);\n</code></pre>\n\n<p>The method also allows for a single argument to be passed which is a config object\ncontaining properties which specify multiple events. For example:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: this.onCellClick,\n    mouseover: this.onMouseOver,\n    mouseout: this.onMouseOut,\n    scope: this // Important. Ensure \"this\" is correct during handler execution\n});\n</code></pre>\n\n<p>One can also specify options for each event handler separately:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: this.onCellClick, scope: this, single: true},\n    mouseover: {fn: panel.onMouseOver, scope: panel}\n});\n</code></pre>\n\n<p><em>Names</em> of methods in a specified scope may also be used. Note that\n<code>scope</code> MUST be specified to use this option:</p>\n\n<pre><code>myGridPanel.on({\n    cellClick: {fn: 'onCellClick', scope: this, single: true},\n    mouseover: {fn: 'onMouseOver', scope: panel}\n});\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-addListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds listeners to any Observable object (or Ext.Element) which are automatically removed when this Component is\ndestr...","method_calls":["addManagedListener"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":295,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"addManagedListener","doc":"<p>Adds listeners to any Observable object (or <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>) which are automatically removed when this Component is\ndestroyed.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addManagedListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"(Local sort only) Inserts the passed Record into the Store at the index where it\nshould go based on the current sort ...","method_calls":["generateComparator","insert"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Ext.data.Record","tagname":"params","doc":"\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Record</a>"}],"tagname":"method","files":[{"linenr":1235,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"addSorted","doc":"<p>(Local sort only) Inserts the passed Record into the Store at the index where it\nshould go based on the current sort information.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addSorted","fires":["<a href=\"#!/api/Ext.data.Store-event-add\" rel=\"Ext.data.Store-event-add\" class=\"docClass\">add</a>","beforesort","<a href=\"#!/api/Ext.data.Store-event-beforesync\" rel=\"Ext.data.Store-event-beforesync\" class=\"docClass\">beforesync</a>","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"A model instance should call this method on the Store it has been joined to. ...","since":"3.4.0","method_calls":["fireEvent","onUpdate"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Ext.data.Model","tagname":"params","doc":"<p>The model instance that was edited</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"tagname":"method","files":[{"linenr":929,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"afterCommit","doc":"<p>A model instance should call this method on the Store it has been <a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">joined</a> to.</p>\n","chainable":false,"inheritdoc":null,"id":"method-afterCommit","fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-update\" rel=\"Ext.data.AbstractStore-event-update\" class=\"docClass\">update</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"A model instance should call this method on the Store it has been joined to. ...","since":"3.4.0","method_calls":["fireEvent","onUpdate","sync"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Ext.data.Model","tagname":"params","doc":"<p>The model instance that was edited</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"type":"String[]","tagname":"params","doc":"<p>Array of field names changed during edit.</p>\n","name":"modifiedFieldNames","html_type":"String[]"}],"tagname":"method","files":[{"linenr":886,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"afterEdit","doc":"<p>A model instance should call this method on the Store it has been <a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">joined</a> to.</p>\n","chainable":false,"inheritdoc":null,"id":"method-afterEdit","fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-beforesync\" rel=\"Ext.data.AbstractStore-event-beforesync\" class=\"docClass\">beforesync</a>","<a href=\"#!/api/Ext.data.AbstractStore-event-update\" rel=\"Ext.data.AbstractStore-event-update\" class=\"docClass\">update</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"A model instance should call this method on the Store it has been joined to.. ...","since":"3.4.0","method_calls":["fireEvent","onUpdate"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Ext.data.Model","tagname":"params","doc":"<p>The model instance that was edited</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"tagname":"method","files":[{"linenr":913,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"afterReject","doc":"<p>A model instance should call this method on the Store it has been <a href=\"#!/api/Ext.data.Model-method-join\" rel=\"Ext.data.Model-method-join\" class=\"docClass\">joined</a> to..</p>\n","chainable":false,"inheritdoc":null,"id":"method-afterReject","fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-update\" rel=\"Ext.data.AbstractStore-event-update\" class=\"docClass\">update</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Runs the aggregate function for all the records in the store. ...","method_calls":["getAggregate","getGroups","isGrouped"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Function","tagname":"params","doc":"<p>The function to execute. The function is called with a single parameter,\nan array of records for that group.</p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope to execute the function in. Defaults to the store.</p>\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Boolean","tagname":"params","doc":"<p>True to perform the operation for each group\nin the store. The value returned will be an object literal with the key being the group\nname and the group average being the value. The grouped parameter is only honored if\nthe store has a groupField.</p>\n","name":"grouped","optional":true,"html_type":"Boolean"},{"type":"Array","tagname":"params","doc":"<p>Any arguments to append to the function call</p>\n","name":"args","optional":true,"html_type":"Array"}],"tagname":"method","files":[{"linenr":3216,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Object","properties":null,"doc":"<p>An object literal with the group names and their appropriate values.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"aggregate","doc":"<p>Runs the aggregate function for all the records in the store.</p>\n\n<p>When store is filtered, only items within the filter are aggregated.</p>\n","chainable":false,"inheritdoc":null,"id":"method-aggregate","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Restores state to the passed state ...","method_calls":["decodeFilters","decodeGroupers","decodeSorters","filter","reload","sort"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"state","html_type":"Object"}],"tagname":"method","files":[{"linenr":1033,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"applyState","doc":"<p>Restores state to the passed state</p>\n","chainable":false,"inheritdoc":null,"id":"method-applyState","fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-beforeload\" rel=\"Ext.data.AbstractStore-event-beforeload\" class=\"docClass\">beforeload</a>","beforeprefetch","beforesort","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.AbstractStore-event-datachanged\" rel=\"Ext.data.AbstractStore-event-datachanged\" class=\"docClass\">datachanged</a>","filterchange","groupchange","guaranteedrange","<a href=\"#!/api/Ext.data.AbstractStore-event-load\" rel=\"Ext.data.AbstractStore-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.AbstractStore-event-refresh\" rel=\"Ext.data.AbstractStore-event-refresh\" class=\"docClass\">refresh</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the average value in the store. ...","method_calls":["aggregate","getAverage","isGrouped"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The field in each record</p>\n","name":"field","html_type":"String"},{"type":"Boolean","tagname":"params","doc":"<p>True to perform the operation for each group\nin the store. The value returned will be an object literal with the key being the group\nname and the group average being the value. The grouped parameter is only honored if\nthe store has a groupField.</p>\n","name":"grouped","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":3180,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The average value, if no items exist, 0.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"average","doc":"<p>Gets the average value in the store.</p>\n\n<p>When store is filtered, only items within the filter are aggregated.</p>\n","chainable":false,"inheritdoc":null,"id":"method-average","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Caches the records in the prefetch and stripes them with their server-side\nindex. ...","method_calls":["fireEvent"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Ext.data.Model[]","tagname":"params","doc":"<p>The records to cache</p>\n","name":"records","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"type":"Ext.data.Operation","tagname":"params","doc":"<p>The associated operation</p>\n","name":"page","html_type":"<a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a>"}],"tagname":"method","files":[{"linenr":2432,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"cachePage","doc":"<p>Caches the records in the prefetch and stripes them with their server-side\nindex.</p>\n","chainable":false,"inheritdoc":null,"id":"method-cachePage","fires":["totalcountchange"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":1269,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the overridden method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callOverridden","doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"method-callOverridden","deprecated":{"text":"<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the \"parent\" method of the current method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":846,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the parent method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callParent","doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","chainable":false,"inheritdoc":null,"id":"method-callParent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":961,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the superclass method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callSuper","doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","chainable":false,"inheritdoc":null,"id":"method-callSuper","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Object","name":"o","html_type":"Object"},{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":127,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"captureArgs","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-captureArgs","fires":null,"linenr":null},{"type":null,"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-clearData\" rel=\"Ext.data.AbstractStore-method-clearData\" class=\"docClass\">Ext.data.AbstractStore.clearData</a>","name":"clearData"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"private ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"isLoad","html_type":"Object"}],"tagname":"method","files":[{"linenr":2132,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":null,"private":true,"static":null,"name":"clearData","doc":"<p>private</p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-clearData","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-clearFilter\" rel=\"Ext.data.AbstractStore-method-clearFilter\" class=\"docClass\">Ext.data.AbstractStore.clearFilter</a>","name":"clearFilter"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Reverts to a view of the Record cache with no filtering applied. ...","method_calls":["constructGroups","fireEvent","isFiltered","load","loadPage"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>If <code>true</code> the filter is cleared silently.</p>\n\n<p>For a locally filtered Store, this means that the filter collection is cleared without firing the\n<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a> event.</p>\n\n<p>For a remotely filtered Store, this means that the filter collection is cleared, but the store\nis not reloaded from the server.</p>\n","name":"suppressEvent","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":1783,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"clearFilter","doc":"<p>Reverts to a view of the Record cache with no filtering applied.</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearFilter","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeload\" rel=\"Ext.data.Store-event-beforeload\" class=\"docClass\">beforeload</a>","<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-filterchange\" rel=\"Ext.data.Store-event-filterchange\" class=\"docClass\">filterchange</a>","<a href=\"#!/api/Ext.data.Store-event-groupchange\" rel=\"Ext.data.Store-event-groupchange\" class=\"docClass\">groupchange</a>","guaranteedrange","<a href=\"#!/api/Ext.data.Store-event-load\" rel=\"Ext.data.Store-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.Store-event-refresh\" rel=\"Ext.data.Store-event-refresh\" class=\"docClass\">refresh</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Clear any groupers in the store ...","method_calls":["fireEvent","fireGroupChange","load","loadPage","sort"],"owner":"Ext.data.Store","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":772,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"clearGrouping","doc":"<p>Clear any groupers in the store</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearGrouping","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeload\" rel=\"Ext.data.Store-event-beforeload\" class=\"docClass\">beforeload</a>","<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>","beforesort","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-groupchange\" rel=\"Ext.data.Store-event-groupchange\" class=\"docClass\">groupchange</a>","guaranteedrange","<a href=\"#!/api/Ext.data.Store-event-load\" rel=\"Ext.data.Store-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.Store-event-refresh\" rel=\"Ext.data.Store-event-refresh\" class=\"docClass\">refresh</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all listeners for this object including the managed listeners ...","method_calls":["clearManagedListeners"],"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":729,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"clearListeners","doc":"<p>Removes all listeners for this object including the managed listeners</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearListeners","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all managed listeners for this object. ...","method_calls":["removeManagedListenerItem"],"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"clearManagedListeners","doc":"<p>Removes all managed listeners for this object.</p>\n","chainable":false,"inheritdoc":null,"id":"method-clearManagedListeners","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Collects unique values for a particular dataIndex from this store. ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The property to collect</p>\n","name":"dataIndex","html_type":"String"},{"type":"Boolean","tagname":"params","doc":"<p>Pass true to allow null, undefined or empty string values</p>\n","name":"allowNull","optional":true,"html_type":"Boolean"},{"type":"Boolean","tagname":"params","doc":"<p>Pass true to collect from all records, even ones which are filtered.</p>\n","name":"bypassFilter","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":2773,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Object[]","properties":null,"doc":"<p>An array of the unique values</p>\n","name":"return","html_type":"Object[]"},"private":null,"static":null,"name":"collect","doc":"<p>Collects unique values for a particular dataIndex from this store.</p>\n","chainable":false,"inheritdoc":null,"id":"method-collect","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Commits all Records with outstanding changes. ...","method_calls":["getModifiedRecords"],"owner":"Ext.data.Store","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":3263,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"commitChanges","doc":"<p>Commits all Records with <a href=\"#!/api/Ext.data.Store-method-getModifiedRecords\" rel=\"Ext.data.Store-method-getModifiedRecords\" class=\"docClass\">outstanding changes</a>. To handle updates for changes,\nsubscribe to the Store's <a href=\"#!/api/Ext.data.Store-event-update\" rel=\"Ext.data.Store-event-update\" class=\"docClass\">update event</a>, and perform updating when the third parameter is\n<a href=\"#!/api/Ext.data.Model-static-property-COMMIT\" rel=\"Ext.data.Model-static-property-COMMIT\" class=\"docClass\">Ext.data.Record.COMMIT</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-commitChanges","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":766,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configClass","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-configClass","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getGroupString","isGrouped"],"owner":"Ext.data.Store","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":746,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"constructGroups","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-constructGroups","fires":[],"linenr":746},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Continue to fire event. ...","method_calls":["getBubbleParent"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"eventName","html_type":"String"},{"type":"Array","tagname":"params","doc":"\n","name":"args","html_type":"Array"},{"type":"Boolean","tagname":"params","doc":"\n","name":"bubbles","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":456,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"continueFireEvent","doc":"<p>Continue to fire event.</p>\n","chainable":false,"inheritdoc":null,"id":"method-continueFireEvent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the count of items in the store. ...","method_calls":["aggregate","getCount","isGrouped"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>True to perform the operation for each group\nin the store. The value returned will be an object literal with the key being the group\nname and the count for each group being the value. The grouped parameter is only honored if\nthe store has a groupField.</p>\n","name":"grouped","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":3074,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Number","properties":null,"doc":"<p>the count</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"count","doc":"<p>Gets the count of items in the store.</p>\n\n<p>When store is filtered, only items within the filter are counted.</p>\n","chainable":false,"inheritdoc":null,"id":"method-count","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"saves any phantom records ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"data","html_type":"Object"},{"type":"Object","name":"options","html_type":"Object"}],"tagname":"method","files":[{"linenr":480,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"create","doc":"<p>saves any phantom records</p>\n","chainable":false,"inheritdoc":null,"id":"method-create","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns a filter function used to test a the given property's value. ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The property to create the filter function for</p>\n","name":"property","html_type":"String"},{"type":"String/RegExp","tagname":"params","doc":"<p>The string/regex to compare the property value to</p>\n","name":"value","html_type":"String/RegExp"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True if we don't care if the filter value is not the full value.</p>\n","name":"anyMatch","optional":true,"html_type":"Boolean"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True to create a case-sensitive regex.</p>\n","name":"caseSensitive","optional":true,"html_type":"Boolean"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True to force exact match (^ and $ characters added to the regex).\nIgnored if anyMatch is true.</p>\n","name":"exactMatch","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":2703,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"createFilterFn","doc":"<p>Returns a filter function used to test a the given property's value. Defers most of the work to\n<a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>'s createValueMatcher function.</p>\n","chainable":false,"inheritdoc":null,"id":"method-createFilterFn","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Converts a literal to a model, if it's not a model already ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Ext.data.Model/Object","tagname":"params","doc":"<p>The record to create</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/Object"}],"tagname":"method","files":[{"linenr":1249,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Ext.data.Model","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"private":true,"static":null,"name":"createModel","doc":"<p>Converts a literal to a model, if it's not a model already</p>\n","chainable":false,"inheritdoc":null,"id":"method-createModel","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates an event handling function which refires the event from this object as the passed event name. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name under which to refire the passed parameters.</p>\n","name":"newName","html_type":"String"},{"type":"Array","tagname":"params","doc":"<p>The caller can specify on which indices to slice.</p>\n","name":"beginEnd","optional":true,"html_type":"Array"}],"tagname":"method","files":[{"linenr":981,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Function","properties":null,"doc":"\n","name":"return","html_type":"Function"},"private":true,"static":null,"name":"createRelayer","doc":"<p>Creates an event handling function which refires the event from this object as the passed event name.</p>\n","chainable":false,"inheritdoc":null,"id":"method-createRelayer","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Normalizes an array of filter objects, ensuring that they are all Ext.util.Filter instances ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object[]","tagname":"params","doc":"<p>The filters array</p>\n","name":"filters","html_type":"Object[]"}],"tagname":"method","files":[{"linenr":687,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"return":{"type":"Ext.util.Filter[]","properties":null,"doc":"<p>Array of <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a> objects</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>[]"},"private":true,"static":null,"name":"decodeFilters","doc":"<p>Normalizes an array of filter objects, ensuring that they are all <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a> instances</p>\n","chainable":false,"inheritdoc":null,"id":"method-decodeFilters","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Normalizes an array of grouper objects, ensuring that they are all Ext.util.Grouper instances ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object[]","tagname":"params","doc":"<p>The groupers array</p>\n","name":"groupers","html_type":"Object[]"}],"tagname":"method","files":[{"linenr":615,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Ext.util.Grouper[]","properties":null,"doc":"<p>Array of <a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">Ext.util.Grouper</a> objects</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">Ext.util.Grouper</a>[]"},"private":true,"static":null,"name":"decodeGroupers","doc":"<p>Normalizes an array of grouper objects, ensuring that they are all <a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">Ext.util.Grouper</a> instances</p>\n","chainable":false,"inheritdoc":null,"id":"method-decodeGroupers","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Normalizes an array of sorter objects, ensuring that they are all Ext.util.Sorter instances ...","method_calls":null,"owner":"Ext.util.Sortable","inheritable":null,"params":[{"type":"Object[]","tagname":"params","doc":"<p>The sorters array</p>\n","name":"sorters","html_type":"Object[]"}],"tagname":"method","files":[{"linenr":219,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"return":{"type":"Ext.util.Sorter[]","properties":null,"doc":"<p>Array of <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a> objects</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]"},"private":true,"static":null,"name":"decodeSorters","doc":"<p>Normalizes an array of sorter objects, ensuring that they are all <a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a> instances</p>\n","chainable":false,"inheritdoc":null,"id":"method-decodeSorters","fires":null,"linenr":null},{"type":null,"overrides":[{"owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">Ext.Base.destroy</a>","name":"destroy"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"tells the attached proxy to destroy the given records ...","since":"3.4.0","method_calls":["getRemovedRecords"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"options","html_type":"Object"}],"tagname":"method","files":[{"linenr":569,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"return":null,"private":true,"static":null,"name":"destroy","doc":"<p>tells the attached proxy to destroy the given records</p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-destroy","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"private ...","method_calls":["clearData","clearListeners"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":949,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"destroyStore","doc":"<p>private</p>\n","chainable":false,"inheritdoc":null,"id":"method-destroyStore","fires":[],"linenr":null},{"type":null,"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-doSort\" rel=\"Ext.data.AbstractStore-method-doSort\" class=\"docClass\">Ext.data.AbstractStore.doSort</a>","name":"doSort"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"overriden to provide striping of the indexes as sorting occurs. ...","method_calls":["fireEvent","getRange","load","loadPage"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"sorterFn","html_type":"Object"}],"tagname":"method","files":[{"linenr":2610,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":null,"private":true,"static":null,"name":"doSort","doc":"<p>overriden to provide striping of the indexes as sorting occurs.\nthis cannot be done inside of sort because datachanged has already\nfired and will trigger a repaint of the bound view.</p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-doSort","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeload\" rel=\"Ext.data.Store-event-beforeload\" class=\"docClass\">beforeload</a>","<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-groupchange\" rel=\"Ext.data.Store-event-groupchange\" class=\"docClass\">groupchange</a>","guaranteedrange","<a href=\"#!/api/Ext.data.Store-event-load\" rel=\"Ext.data.Store-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.Store-event-refresh\" rel=\"Ext.data.Store-event-refresh\" class=\"docClass\">refresh</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Calls the specified function for each record in the store. ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Function","tagname":"params","doc":"<p>The function to call. The <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Record</a> is passed as the first parameter.\nReturning <code>false</code> aborts and exits the iteration.</p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (this reference) in which the function is executed.\nDefaults to the current <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">record</a> in the iteration.</p>\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1269,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"each","doc":"<p>Calls the specified function for each <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">record</a> in the store.</p>\n\n<p>When store is filtered, only loops over the filtered records.</p>\n","chainable":false,"inheritdoc":null,"id":"method-each","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.util.Sortable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":213,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":true,"static":null,"name":"emptyComparator","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-emptyComparator","fires":null,"linenr":213},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Enables events fired by this Observable to bubble up an owner hierarchy by calling this.getBubbleTarget() if\npresent. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String/String[]","tagname":"params","doc":"<p>The event name to bubble, or an Array of event names.</p>\n","name":"eventNames","html_type":"String/String[]"}],"tagname":"method","files":[{"linenr":995,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"enableBubble","doc":"<p>Enables events fired by this Observable to bubble up an owner hierarchy by calling <code>this.getBubbleTarget()</code> if\npresent. There is no implementation in the Observable base class.</p>\n\n<p>This is commonly used by Ext.Components to bubble events to owner Containers.\nSee <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>. The default implementation in <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a> returns the\nComponent's immediate owner. But if a known target is required, this can be overridden to access the\nrequired target more quickly.</p>\n\n<p>Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.overrides.form.field.Base', {\n    override: '<a href=\"#!/api/Ext.form.field.Base\" rel=\"Ext.form.field.Base\" class=\"docClass\">Ext.form.field.Base</a>',\n\n    //  Add functionality to Field's initComponent to enable the change event to bubble\n    initComponent: function () {\n        this.callParent();\n        this.enableBubble('change');\n    }\n});\n\nvar myForm = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.form.Panel\" rel=\"Ext.form.Panel\" class=\"docClass\">Ext.form.Panel</a>', {\n    title: 'User Details',\n    items: [{\n        ...\n    }],\n    listeners: {\n        change: function() {\n            // Title goes red if form has been modified.\n            myForm.header.setStyle('color', 'red');\n        }\n    }\n});\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-enableBubble","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-filter\" rel=\"Ext.data.AbstractStore-method-filter\" class=\"docClass\">Ext.data.AbstractStore.filter</a>","name":"filter"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Filters the loaded set of records by a given set of filters. ...","method_calls":["constructGroups","decodeFilters","fireEvent","load","loadPage","sort"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object[]/Ext.util.Filter[]/String","tagname":"params","doc":"<p>The set of filters to apply to the data.\nThese are stored internally on the store, but the filtering itself is done on the Store's\n<a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">MixedCollection</a>. See MixedCollection's\n<a href=\"#!/api/Ext.util.MixedCollection-method-filter\" rel=\"Ext.util.MixedCollection-method-filter\" class=\"docClass\">filter</a> method for filter syntax.\nAlternatively, pass in a property string.</p>\n\n<p>If no parameters are passed, the Store's existing filter set is applied.</p>\n","name":"filters","optional":true,"html_type":"Object[]/<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>[]/String"},{"type":"String","tagname":"params","doc":"<p>value to filter by (only if using a property string as the first argument)</p>\n","name":"value","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":1669,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"filter","doc":"<p>Filters the loaded set of records by a given set of filters.</p>\n\n<p>By default, the passed filter(s) are <em>added</em> to the collection of filters being used to filter this Store.</p>\n\n<p>To remove existing filters before applying a new set of filters use</p>\n\n<pre><code>// Clear the filter collection without updating the UI\nstore.clearFilter(true);\n</code></pre>\n\n<p>see <a href=\"#!/api/Ext.data.Store-method-clearFilter\" rel=\"Ext.data.Store-method-clearFilter\" class=\"docClass\">clearFilter</a>.</p>\n\n<p>Alternatively, if filters are configured with an <code>id</code>, then existing filters store may be <em>replaced</em> by new\nfilters having the same <code>id</code>.</p>\n\n<p>Filtering by single field:</p>\n\n<pre><code>store.filter(\"email\", /\\.com$/);\n</code></pre>\n\n<p>Using multiple filters:</p>\n\n<pre><code>store.filter([\n    {property: \"email\", value: /\\.com$/},\n    {filterFn: function(item) { return item.get(\"age\") &gt; 10; }}\n]);\n</code></pre>\n\n<p>Using <a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a> instances instead of config objects\n(note that we need to specify the <a href=\"#!/api/Ext.util.Filter-cfg-root\" rel=\"Ext.util.Filter-cfg-root\" class=\"docClass\">root</a> config option in this case):</p>\n\n<pre><code>store.filter([\n    <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>', {property: \"email\", value: /\\.com$/, root: 'data'}),\n    <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>', {filterFn: function(item) { return item.get(\"age\") &gt; 10; }, root: 'data'})\n]);\n</code></pre>\n\n<p>When store is filtered, most of the methods for accessing store data will be working only\nwithin the set of filtered records. Two notable exceptions are <a href=\"#!/api/Ext.data.Store-method-queryBy\" rel=\"Ext.data.Store-method-queryBy\" class=\"docClass\">queryBy</a> and\n<a href=\"#!/api/Ext.data.Store-method-getById\" rel=\"Ext.data.Store-method-getById\" class=\"docClass\">getById</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-filter","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeload\" rel=\"Ext.data.Store-event-beforeload\" class=\"docClass\">beforeload</a>","<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>","beforesort","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-filterchange\" rel=\"Ext.data.Store-event-filterchange\" class=\"docClass\">filterchange</a>","<a href=\"#!/api/Ext.data.Store-event-groupchange\" rel=\"Ext.data.Store-event-groupchange\" class=\"docClass\">groupchange</a>","guaranteedrange","<a href=\"#!/api/Ext.data.Store-event-load\" rel=\"Ext.data.Store-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.Store-event-refresh\" rel=\"Ext.data.Store-event-refresh\" class=\"docClass\">refresh</a>"],"linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-filterBy\" rel=\"Ext.data.AbstractStore-method-filterBy\" class=\"docClass\">Ext.data.AbstractStore.filterBy</a>","name":"filterBy"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Filters by a function. ...","method_calls":["fireEvent","queryBy"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Function","tagname":"params","properties":[{"type":"Ext.data.Model","tagname":"params","doc":"<p>The record to test for filtering. Access field values\n using <a href=\"#!/api/Ext.data.Model-method-get\" rel=\"Ext.data.Model-method-get\" class=\"docClass\">Ext.data.Model.get</a>.</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"type":"Object","tagname":"params","doc":"<p>The ID of the Record passed.</p>\n","name":"id","html_type":"Object"}],"doc":"<p>The function to be called. It will be passed the following parameters:</p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (this reference) in which the function is executed.\nDefaults to this Store.</p>\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1906,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"filterBy","doc":"<p>Filters by a function. The specified function will be called for each\nRecord in this Store. If the function returns <code>true</code> the Record is included,\notherwise it is filtered out.</p>\n\n<p>When store is filtered, most of the methods for accessing store data will be working only\nwithin the set of filtered records. Two notable exceptions are <a href=\"#!/api/Ext.data.Store-method-queryBy\" rel=\"Ext.data.Store-method-queryBy\" class=\"docClass\">queryBy</a> and\n<a href=\"#!/api/Ext.data.Store-method-getById\" rel=\"Ext.data.Store-method-getById\" class=\"docClass\">getById</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-filterBy","fires":["<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-refresh\" rel=\"Ext.data.Store-event-refresh\" class=\"docClass\">refresh</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Filter function for new records. ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"}],"tagname":"method","files":[{"linenr":630,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"filterNew","doc":"<p>Filter function for new records.</p>\n","chainable":false,"inheritdoc":null,"id":"method-filterNew","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"}],"tagname":"method","files":[{"linenr":3283,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"filterNewOnly","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-filterNewOnly","fires":null,"linenr":3283},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Filter function for updated records. ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"}],"tagname":"method","files":[{"linenr":666,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"filterUpdated","doc":"<p>Filter function for updated records.</p>\n","chainable":false,"inheritdoc":null,"id":"method-filterUpdated","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Finds the index of the first matching Record in this store by a specific field value. ...","method_calls":["createFilterFn"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the Record field to test.</p>\n","name":"fieldName","html_type":"String"},{"type":"String/RegExp","tagname":"params","doc":"<p>Either a string that the field value\nshould begin with, or a RegExp to test against the field.</p>\n","name":"value","html_type":"String/RegExp"},{"type":"Number","default":"0","tagname":"params","doc":"<p>The index to start searching at</p>\n","name":"startIndex","optional":true,"html_type":"Number"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True to match any part of the string, not just the beginning</p>\n","name":"anyMatch","optional":true,"html_type":"Boolean"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True for case sensitive comparison</p>\n","name":"caseSensitive","optional":true,"html_type":"Boolean"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True to force exact match (^ and $ characters added to the regex).</p>\n","name":"exactMatch","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":2652,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The matched index or -1</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"find","doc":"<p>Finds the index of the first matching Record in this store by a specific field value.</p>\n\n<p>When store is filtered, finds records only within filter.</p>\n\n<p>**IMPORTANT</p>\n\n<p>If this store is <a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">buffered</a>, this can ONLY find records which happen to be cached in the page cache.\nThis will be parts of the dataset around the currently visible zone, or recently visited zones if the pages\nhave not yet been purged from the cache.**</p>\n","chainable":false,"inheritdoc":null,"id":"method-find","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Find the index of the first matching Record in this Store by a function. ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Function","tagname":"params","properties":[{"type":"Ext.data.Model","tagname":"params","doc":"<p>The record to test for filtering. Access field values\n using <a href=\"#!/api/Ext.data.Model-method-get\" rel=\"Ext.data.Model-method-get\" class=\"docClass\">Ext.data.Model.get</a>.</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"type":"Object","tagname":"params","doc":"<p>The ID of the Record passed.</p>\n","name":"id","html_type":"Object"}],"doc":"<p>The function to be called. It will be passed the following parameters:</p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (this reference) in which the function is executed.\nDefaults to this Store.</p>\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Number","default":"0","tagname":"params","doc":"<p>The index to start searching at</p>\n","name":"startIndex","optional":true,"html_type":"Number"}],"tagname":"method","files":[{"linenr":2748,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The matched index or -1</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"findBy","doc":"<p>Find the index of the first matching Record in this Store by a function.\nIf the function returns <code>true</code> it is considered a match.</p>\n\n<p>When store is filtered, finds records only within filter.</p>\n\n<p>**IMPORTANT</p>\n\n<p>If this store is <a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">buffered</a>, this can ONLY find records which happen to be cached in the page cache.\nThis will be parts of the dataset around the currently visible zone, or recently visited zones if the pages\nhave not yet been purged from the cache.**</p>\n","chainable":false,"inheritdoc":null,"id":"method-findBy","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Finds the index of the first matching Record in this store by a specific field value. ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the Record field to test.</p>\n","name":"fieldName","html_type":"String"},{"type":"Object","tagname":"params","doc":"<p>The value to match the field against.</p>\n","name":"value","html_type":"Object"},{"type":"Number","default":"0","tagname":"params","doc":"<p>The index to start searching at</p>\n","name":"startIndex","optional":true,"html_type":"Number"}],"tagname":"method","files":[{"linenr":2725,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The matched index or -1</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"findExact","doc":"<p>Finds the index of the first matching Record in this store by a specific field value.</p>\n\n<p>When store is filtered, finds records only within filter.</p>\n\n<p>**IMPORTANT</p>\n\n<p>If this store is <a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">buffered</a>, this can ONLY find records which happen to be cached in the page cache.\nThis will be parts of the dataset around the currently visible zone, or recently visited zones if the pages\nhave not yet been purged from the cache.**</p>\n","chainable":false,"inheritdoc":null,"id":"method-findExact","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Finds the first matching Record in this store by a specific field value. ...","method_calls":["getAt"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the Record field to test.</p>\n","name":"fieldName","html_type":"String"},{"type":"String/RegExp","tagname":"params","doc":"<p>Either a string that the field value\nshould begin with, or a RegExp to test against the field.</p>\n","name":"value","html_type":"String/RegExp"},{"type":"Number","default":"0","tagname":"params","doc":"<p>The index to start searching at</p>\n","name":"startIndex","optional":true,"html_type":"Number"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True to match any part of the string, not just the beginning</p>\n","name":"anyMatch","optional":true,"html_type":"Boolean"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True for case sensitive comparison</p>\n","name":"caseSensitive","optional":true,"html_type":"Boolean"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True to force exact match (^ and $ characters added to the regex).</p>\n","name":"exactMatch","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":2677,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Ext.data.Model","properties":null,"doc":"<p>The matched record or null</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"private":null,"static":null,"name":"findRecord","doc":"<p>Finds the first matching Record in this store by a specific field value.</p>\n\n<p>When store is filtered, finds records only within filter.</p>\n\n<p>**IMPORTANT</p>\n\n<p>If this store is <a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">buffered</a>, this can ONLY find records which happen to be cached in the page cache.\nThis will be parts of the dataset around the currently visible zone, or recently visited zones if the pages\nhave not yet been purged from the cache.**</p>\n","chainable":false,"inheritdoc":null,"id":"method-findRecord","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fires the specified event with the passed parameters (minus the event name, plus the options object passed\nto addList...","method_calls":["fireEventArgs"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to fire.</p>\n","name":"eventName","html_type":"String"},{"type":"Object...","tagname":"params","doc":"<p>Variable number of parameters are passed to handlers.</p>\n","name":"args","html_type":"Object..."}],"tagname":"method","files":[{"linenr":416,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"fireEvent","doc":"<p>Fires the specified event with the passed parameters (minus the event name, plus the <code>options</code> object passed\nto <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>).</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireEvent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fires the specified event with the passed parameter list. ...","method_calls":["continueFireEvent"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to fire.</p>\n","name":"eventName","html_type":"String"},{"type":"Object[]","tagname":"params","doc":"<p>An array of parameters which are passed to handlers.</p>\n","name":"args","html_type":"Object[]"}],"tagname":"method","files":[{"linenr":431,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>returns false if any of the handlers return false otherwise it returns true.</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"fireEventArgs","doc":"<p>Fires the specified event with the passed parameter list.</p>\n\n<p>An event may be set to bubble up an Observable parent hierarchy (See <a href=\"#!/api/Ext.Component-method-getBubbleTarget\" rel=\"Ext.Component-method-getBubbleTarget\" class=\"docClass\">Ext.Component.getBubbleTarget</a>) by\ncalling <a href=\"#!/api/Ext.util.Observable-method-enableBubble\" rel=\"Ext.util.Observable-method-enableBubble\" class=\"docClass\">enableBubble</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireEventArgs","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Fires the groupchange event. ...","method_calls":["fireEvent"],"owner":"Ext.data.Store","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":816,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"fireGroupChange","doc":"<p>Fires the groupchange event. Abstracted out so we can use it\nas a callback</p>\n","chainable":false,"inheritdoc":null,"id":"method-fireGroupChange","fires":["<a href=\"#!/api/Ext.data.Store-event-groupchange\" rel=\"Ext.data.Store-event-groupchange\" class=\"docClass\">groupchange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Convenience function for getting the first model instance in the store. ...","method_calls":["aggregate","isGrouped"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>True to perform the operation for each group\nin the store. The value returned will be an object literal with the key being the group\nname and the first record being the value. The grouped parameter is only honored if\nthe store has a groupField.</p>\n","name":"grouped","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":2991,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Ext.data.Model/undefined","properties":null,"doc":"<p>The first model instance in the store, or undefined</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/undefined"},"private":null,"static":null,"name":"first","doc":"<p>Convenience function for getting the first model instance in the store.</p>\n\n<p>When store is filtered, will return first item within the filter.</p>\n","chainable":false,"inheritdoc":null,"id":"method-first","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns a comparator function which compares two items and returns -1, 0, or 1 depending\non the currently defined set...","method_calls":["createComparator"],"owner":"Ext.util.Sortable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":201,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":null,"static":null,"name":"generateComparator","doc":"<p>Returns a comparator function which compares two items and returns -1, 0, or 1 depending\non the currently defined set of <a href=\"#!/api/Ext.util.Sortable-cfg-sorters\" rel=\"Ext.util.Sortable-cfg-sorters\" class=\"docClass\">sorters</a>.</p>\n\n<p>If there are no <a href=\"#!/api/Ext.util.Sortable-cfg-sorters\" rel=\"Ext.util.Sortable-cfg-sorters\" class=\"docClass\">sorters</a> defined, it returns a function which returns <code>0</code> meaning\nthat no sorting will occur.</p>\n","chainable":false,"inheritdoc":null,"id":"method-generateComparator","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"},{"type":"Object","name":"records","html_type":"Object"},{"type":"Object","name":"args","html_type":"Object"}],"tagname":"method","files":[{"linenr":3249,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"getAggregate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getAggregate","fires":null,"linenr":3249},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the Record at the specified index. ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The index of the Record to find.</p>\n","name":"index","html_type":"Number"}],"tagname":"method","files":[{"linenr":2815,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Ext.data.Model","properties":null,"doc":"<p>The Record at the passed index. Returns undefined if not found.</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"private":null,"static":null,"name":"getAt","doc":"<p>Get the Record at the specified index.</p>\n\n<p>The index is effected by filtering.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getAt","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":", see average ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"records","html_type":"Object"},{"type":"Object","name":"field","html_type":"Object"}],"tagname":"method","files":[{"linenr":3201,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"getAverage","doc":"<p>, see average</p>\n","chainable":false,"inheritdoc":null,"id":"method-getAverage","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns an object which is passed in as the listeners argument to proxy.batch inside this.sync. ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":819,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The listeners object</p>\n","name":"return","html_type":"Object"},"private":true,"static":null,"name":"getBatchListeners","doc":"<p>Returns an object which is passed in as the listeners argument to proxy.batch inside this.sync.\nThis is broken out into a separate function to allow for customisation of the listeners</p>\n","chainable":false,"inheritdoc":null,"id":"method-getBatchListeners","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the bubbling parent for an Observable ...","method_calls":["getBubbleTarget"],"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":489,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Ext.util.Observable","properties":null,"doc":"<p>The bubble parent. null is returned if no bubble target exists</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},"private":true,"static":null,"name":"getBubbleParent","doc":"<p>Gets the bubbling parent for an Observable</p>\n","chainable":false,"inheritdoc":null,"id":"method-getBubbleParent","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-getById\" rel=\"Ext.data.AbstractStore-method-getById\" class=\"docClass\">Ext.data.AbstractStore.getById</a>","name":"getById"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the Record with the specified id. ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Mixed","tagname":"params","doc":"<p>The id of the Record to find.</p>\n","name":"id","html_type":"Mixed"}],"tagname":"method","files":[{"linenr":2926,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Ext.data.Model","properties":null,"doc":"<p>The Record with the passed id. Returns null if not found.</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},"private":null,"static":null,"name":"getById","doc":"<p>Get the Record with the specified id.</p>\n\n<p>This method is not effected by filtering, lookup will be performed from all records\ninside the store, filtered or not.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getById","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":1196,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"getConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getConfig","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-getCount\" rel=\"Ext.data.AbstractStore-method-getCount\" class=\"docClass\">Ext.data.AbstractStore.getCount</a>","name":"getCount"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the number of records in store. ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":2788,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The number of Records in the Store.</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"getCount","doc":"<p>Gets the number of records in store.</p>\n\n<p>If using paging, this may not be the total size of the dataset. If the data object\nused by the Reader contains the dataset size, then the <a href=\"#!/api/Ext.data.Store-method-getTotalCount\" rel=\"Ext.data.Store-method-getTotalCount\" class=\"docClass\">getTotalCount</a> function returns\nthe dataset size.  <strong>Note</strong>: see the Important note in <a href=\"#!/api/Ext.data.Store-method-load\" rel=\"Ext.data.Store-method-load\" class=\"docClass\">load</a>.</p>\n\n<p>When store is filtered, it's the number of records matching the filter.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getCount","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the first sorter from the sorters collection, excluding\nany groupers that may be in place ...","method_calls":null,"owner":"Ext.util.Sortable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":283,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"protected":true,"return":{"type":"Ext.util.Sorter","properties":null,"doc":"<p>The sorter, null if none exist</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>"},"private":null,"static":null,"name":"getFirstSorter","doc":"<p>Gets the first sorter from the sorters collection, excluding\nany groupers that may be in place</p>\n","chainable":false,"inheritdoc":null,"id":"method-getFirstSorter","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns records grouped by the configured grouper configuration. ...","method_calls":["getGroupsForGrouperIndex","sort"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Boolean","default":"true","tagname":"params","doc":"<p><code>true</code> to call <a href=\"#!/api/Ext.data.Store-method-sort\" rel=\"Ext.data.Store-method-sort\" class=\"docClass\">sort</a> before finding groups. Sorting is required to make grouping\nfunction correctly so this should only be set to false if the Store is known to already be sorted correctly.</p>\n","name":"sort","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":954,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Object[]","properties":null,"doc":"<p>The group data</p>\n","name":"return","html_type":"Object[]"},"private":true,"static":null,"name":"getGroupData","doc":"<p>Returns records grouped by the configured <a href=\"#!/api/Ext.data.Store-cfg-groupers\" rel=\"Ext.data.Store-cfg-groupers\" class=\"docClass\">grouper</a> configuration. Sample return value (in\nthis case grouping by genre and then author in a fictional books dataset):</p>\n\n<pre><code>[\n    {\n        name: 'Fantasy',\n        depth: 0,\n        records: [\n            //book1, book2, book3, book4\n        ],\n        children: [\n            {\n                name: 'Rowling',\n                depth: 1,\n                records: [\n                    //book1, book2\n                ]\n            },\n            {\n                name: 'Tolkein',\n                depth: 1,\n                records: [\n                    //book3, book4\n                ]\n            }\n        ]\n    }\n]\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-getGroupData","fires":["beforesort"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":736,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"getGroupField","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getGroupField","fires":null,"linenr":736},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the string to group on for a given model instance. ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Ext.data.Model","tagname":"params","doc":"<p>The model instance</p>\n","name":"instance","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"tagname":"method","files":[{"linenr":998,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"String","properties":null,"doc":"<p>The string to compare when forming groups</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"getGroupString","doc":"<p>Returns the string to group on for a given model instance. The default implementation of this method returns\nthe model's <a href=\"#!/api/Ext.data.Store-cfg-groupField\" rel=\"Ext.data.Store-cfg-groupField\" class=\"docClass\">groupField</a>, but this can be overridden to group by an arbitrary string. For example, to\ngroup by the first letter of a model's 'name' field, use the following code:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n    groupDir: 'ASC',\n    getGroupString: function(instance) {\n        return instance.get('name')[0];\n    }\n});\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-getGroupString","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns an array containing the result of applying grouping to the records in this store. ...","method_calls":["getGroupString"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>Pass in an optional groupName argument to access a specific\ngroup as defined by <a href=\"#!/api/Ext.data.Store-method-getGroupString\" rel=\"Ext.data.Store-method-getGroupString\" class=\"docClass\">getGroupString</a>.</p>\n","name":"groupName","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":825,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Object/Object[]","properties":null,"doc":"<p>The grouped data</p>\n","name":"return","html_type":"Object/Object[]"},"private":null,"static":null,"name":"getGroups","doc":"<p>Returns an array containing the result of applying grouping to the records in this store.\nSee <a href=\"#!/api/Ext.data.Store-cfg-groupField\" rel=\"Ext.data.Store-cfg-groupField\" class=\"docClass\">groupField</a>, <a href=\"#!/api/Ext.data.Store-cfg-groupDir\" rel=\"Ext.data.Store-cfg-groupDir\" class=\"docClass\">groupDir</a> and <a href=\"#!/api/Ext.data.Store-method-getGroupString\" rel=\"Ext.data.Store-method-getGroupString\" class=\"docClass\">getGroupString</a>. Example for a store\ncontaining records with a color field:</p>\n\n<pre><code>var myStore = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n    groupField: 'color',\n    groupDir  : 'DESC'\n});\n\nmyStore.getGroups(); // returns:\n[\n    {\n        name: 'yellow',\n        children: [\n            // all records where the color field is 'yellow'\n        ]\n    },\n    {\n        name: 'red',\n        children: [\n            // all records where the color field is 'red'\n        ]\n    }\n]\n</code></pre>\n\n<p>Group contents are effected by filtering.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getGroups","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"For a given set of records and a Grouper, returns an array of arrays - each of which is the set of records\nmatching a...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"records","html_type":"Object"},{"type":"Object","name":"grouper","html_type":"Object"}],"tagname":"method","files":[{"linenr":888,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"getGroupsForGrouper","doc":"<p>For a given set of records and a Grouper, returns an array of arrays - each of which is the set of records\nmatching a certain group.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getGroupsForGrouper","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This is used recursively to gather the records into the configured Groupers. ...","method_calls":["getGroupsForGrouper","getGroupsForGrouperIndex"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Ext.data.Model[]","tagname":"params","doc":"<p>The set or subset of records to group</p>\n","name":"records","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"type":"Number","tagname":"params","doc":"<p>The grouper index to retrieve</p>\n","name":"grouperIndex","html_type":"Number"}],"tagname":"method","files":[{"linenr":923,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Object[]","properties":null,"doc":"<p>The grouped records</p>\n","name":"return","html_type":"Object[]"},"private":true,"static":null,"name":"getGroupsForGrouperIndex","doc":"<p>This is used recursively to gather the records into the configured Groupers. The data MUST have been sorted for\nthis to work properly (see <a href=\"#!/api/Ext.data.Store-method-getGroupData\" rel=\"Ext.data.Store-method-getGroupData\" class=\"docClass\">getGroupData</a> and <a href=\"#!/api/Ext.data.Store-method-getGroupsForGrouper\" rel=\"Ext.data.Store-method-getGroupsForGrouper\" class=\"docClass\">getGroupsForGrouper</a>) Most of the work is done by\n<a href=\"#!/api/Ext.data.Store-method-getGroupsForGrouper\" rel=\"Ext.data.Store-method-getGroupsForGrouper\" class=\"docClass\">getGroupsForGrouper</a> - this function largely just handles the recursion.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getGroupsForGrouperIndex","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>Name of the config option to return.</p>\n","name":"name","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":1206,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object/Mixed","properties":null,"doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","name":"return","html_type":"Object/Mixed"},"private":null,"static":null,"name":"getInitialConfig","doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getInitialConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":", see max ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"records","html_type":"Object"},{"type":"Object","name":"field","html_type":"Object"}],"tagname":"method","files":[{"linenr":3160,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"getMax","doc":"<p>, see max</p>\n","chainable":false,"inheritdoc":null,"id":"method-getMax","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":", see min ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"records","html_type":"Object"},{"type":"Object","name":"field","html_type":"Object"}],"tagname":"method","files":[{"linenr":3119,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"getMin","doc":"<p>, see min</p>\n","chainable":false,"inheritdoc":null,"id":"method-getMin","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets all records added or updated since the last commit. ...","method_calls":["getNewRecords","getUpdatedRecords"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":656,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"return":{"type":"Ext.data.Model[]","properties":null,"doc":"<p>The added and updated Model instances</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"private":null,"static":null,"name":"getModifiedRecords","doc":"<p>Gets all <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">records</a> added or updated since the last commit. Note that the order of records\nreturned is not deterministic and does not indicate the order in which records were modified. Note also that\nremoved records are not included (use <a href=\"#!/api/Ext.data.AbstractStore-method-getRemovedRecords\" rel=\"Ext.data.AbstractStore-method-getRemovedRecords\" class=\"docClass\">getRemovedRecords</a> for that).</p>\n","chainable":false,"inheritdoc":null,"id":"method-getModifiedRecords","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-getNewRecords\" rel=\"Ext.data.AbstractStore-method-getNewRecords\" class=\"docClass\">Ext.data.AbstractStore.getNewRecords</a>","name":"getNewRecords"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"inherit docs ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1659,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Ext.data.Model[]","properties":null,"doc":"<p>The Model instances</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"private":null,"static":null,"name":"getNewRecords","doc":"<p>inherit docs</p>\n","chainable":false,"inheritdoc":null,"id":"method-getNewRecords","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Determines the page from a record index ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The record index</p>\n","name":"index","html_type":"Number"}],"tagname":"method","files":[{"linenr":2495,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The page the record belongs to</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"getPageFromRecordIndex","doc":"<p>Determines the page from a record index</p>\n","chainable":false,"inheritdoc":null,"id":"method-getPageFromRecordIndex","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the proxy currently attached to this proxy instance ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":467,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"return":{"type":"Ext.data.proxy.Proxy","properties":null,"doc":"<p>The Proxy instance</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a>"},"private":null,"static":null,"name":"getProxy","doc":"<p>Returns the proxy currently attached to this proxy instance</p>\n","chainable":false,"inheritdoc":null,"id":"method-getProxy","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gathers a range of Records between specified indices. ...","method_calls":["fireEvent","onGuaranteedRange","prefetchRange","primeCache","rangeCached"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The starting index. Defaults to zero for non <a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">buffered</a> Stores.</p>\n","name":"start","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>The ending index. Defaults to the last Record for non <a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">buffered</a> Stores.</p>\n","name":"end","html_type":"Number"},{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","properties":[{"type":"Ext.data.Model[]","tagname":"params","doc":"<p>The requested range of records.</p>\n","name":"range","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"type":"Number","tagname":"params","doc":"<p>The delivered start index.</p>\n","name":"start","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>The delivered end index</p>\n","name":"end","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>The passed options object.</p>\n","name":"options","html_type":"Number"}],"doc":"<p>A function to call when the range becomes available.</p>\n","name":"callback","html_type":"Object"}],"doc":"<p>Used when the Store is {@link <a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">buffered</a>] and the range may not be available synchronously.</p>\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":2827,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Ext.data.Model[]","properties":null,"doc":"<p>An array of records <strong>if the records are immediately available</strong>. For <a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">buffered</a>\nstores, you should pass the callback option <strong>unless you know that the range will be present</strong> - see <a href=\"#!/api/Ext.data.Store-method-rangeCached\" rel=\"Ext.data.Store-method-rangeCached\" class=\"docClass\">rangeCached</a>.</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"private":null,"static":null,"name":"getRange","doc":"<p>Gathers a range of Records between specified indices.</p>\n\n<p>If this store is <a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">buffered</a>, the indices are relative to the entire dataset, not the local record cache.</p>\n\n<p>If this store is <a href=\"#!/api/Ext.data.Store-cfg-buffered\" rel=\"Ext.data.Store-cfg-buffered\" class=\"docClass\">buffered</a>, then the requested data range <em>may</em> not be immediately available, and will\nbe returned through a passed callback function.</p>\n\n<p>This method is affected by filtering.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getRange","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>","cachefilled","cachemiss","guaranteedrange"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Ideally in the future this will use getModifiedRecords, where there will be a param\nto getNewRecords &amp; getUpdated...","method_calls":["getUpdatedRecords"],"owner":"Ext.data.Store","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":3287,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"getRejectRecords","doc":"<p>Ideally in the future this will use getModifiedRecords, where there will be a param\nto getNewRecords &amp; getUpdatedRecords to indicate whether to get only the valid\nrecords or grab all of them</p>\n","chainable":false,"inheritdoc":null,"id":"method-getRejectRecords","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns any records that have been removed from the store but not yet destroyed on the proxy. ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":675,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"return":{"type":"Ext.data.Model[]","properties":null,"doc":"<p>The removed Model instances</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"private":null,"static":null,"name":"getRemovedRecords","doc":"<p>Returns any records that have been removed from the store but not yet destroyed on the proxy.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getRemovedRecords","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.util.Sortable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":279,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":true,"static":null,"name":"getSorters","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getSorters","fires":null,"linenr":279},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the grouping, sorting and filtered state of this Store. ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":977,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"getState","doc":"<p>Returns the grouping, sorting and filtered state of this Store.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getState","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":", see sum ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"records","html_type":"Object"},{"type":"Object","name":"field","html_type":"Object"}],"tagname":"method","files":[{"linenr":3061,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"getSum","doc":"<p>, see sum</p>\n","chainable":false,"inheritdoc":null,"id":"method-getSum","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the total number of Model instances that the Proxy\nindicates exist. ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":2803,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The total number of Model instances available via the Proxy. 0 returned if\nno value has been set via the reader.</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"getTotalCount","doc":"<p>Returns the total number of <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a> instances that the <a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Proxy</a>\nindicates exist. This will usually differ from <a href=\"#!/api/Ext.data.Store-method-getCount\" rel=\"Ext.data.Store-method-getCount\" class=\"docClass\">getCount</a> when using paging - getCount returns the\nnumber of records loaded into the Store at the moment, getTotalCount returns the number of records that\ncould be loaded into the Store if the Store contained all data</p>\n","chainable":false,"inheritdoc":null,"id":"method-getTotalCount","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-getUpdatedRecords\" rel=\"Ext.data.AbstractStore-method-getUpdatedRecords\" class=\"docClass\">Ext.data.AbstractStore.getUpdatedRecords</a>","name":"getUpdatedRecords"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"inherit docs ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1664,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Ext.data.Model[]","properties":null,"doc":"<p>The updated Model instances</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"private":null,"static":null,"name":"getUpdatedRecords","doc":"<p>inherit docs</p>\n","chainable":false,"inheritdoc":null,"id":"method-getUpdatedRecords","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Groups data inside the store. ...","method_calls":["constructGroups","decodeGroupers","doSort","fireGroupChange","generateComparator","load","loadPage"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"String/Object[]","tagname":"params","doc":"<p>Either a string name of one of the fields in this Store's\nconfigured <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Model</a>, or an Array of grouper configurations.</p>\n","name":"groupers","html_type":"String/Object[]"},{"type":"String","default":"\"ASC\"","tagname":"params","doc":"<p>The overall direction to group the data by.</p>\n","name":"direction","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":670,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"group","doc":"<p>Groups data inside the store.</p>\n","chainable":false,"inheritdoc":null,"id":"method-group","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeload\" rel=\"Ext.data.Store-event-beforeload\" class=\"docClass\">beforeload</a>","<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-groupchange\" rel=\"Ext.data.Store-event-groupchange\" class=\"docClass\">groupchange</a>","guaranteedrange","<a href=\"#!/api/Ext.data.Store-event-load\" rel=\"Ext.data.Store-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.Store-event-refresh\" rel=\"Ext.data.Store-event-refresh\" class=\"docClass\">refresh</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Guarantee a specific range, this will load the store with a range (that\nmust be the pageSize or smaller) and take car...","method_calls":["getRange"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"start","html_type":"Object"},{"type":"Object","name":"end","html_type":"Object"},{"type":"Object","name":"callback","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"},{"type":"Object","name":"options","html_type":"Object"}],"tagname":"method","files":[{"linenr":2537,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"guaranteeRange","doc":"<p>Guarantee a specific range, this will load the store with a range (that\nmust be the <code>pageSize</code> or smaller) and take care of any loading that may\nbe necessary.</p>\n","chainable":false,"inheritdoc":null,"id":"method-guaranteeRange","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.data.Store-method-getRange\" rel=\"Ext.data.Store-method-getRange\" class=\"docClass\">getRange</a></p>\n"},"fires":["<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>","cachefilled","cachemiss","guaranteedrange"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1156,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"hasConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-hasConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Checks to see if this object has any listeners for a specified event, or whether the event bubbles. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The name of the event to check for</p>\n","name":"eventName","html_type":"String"}],"tagname":"method","files":[{"linenr":833,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p><code>true</code> if the event is being listened for or bubbles, else <code>false</code></p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"hasListener","doc":"<p>Checks to see if this object has any listeners for a specified event, or whether the event bubbles. The answer\nindicates whether the event needs firing or not.</p>\n","chainable":false,"inheritdoc":null,"id":"method-hasListener","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the index of the record within the store. ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Ext.data.Model","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> object to find.</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"tagname":"method","files":[{"linenr":2947,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The index of the passed Record. Returns -1 if not found.</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"indexOf","doc":"<p>Get the index of the record within the store.</p>\n\n<p>When store is filtered, records outside of filter will not be found.</p>\n","chainable":false,"inheritdoc":null,"id":"method-indexOf","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the index within the store of the Record with the passed id. ...","method_calls":["getById","indexOf"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The id of the Record to find.</p>\n","name":"id","html_type":"String"}],"tagname":"method","files":[{"linenr":2975,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The index of the Record. Returns -1 if not found.</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"indexOfId","doc":"<p>Get the index within the store of the Record with the passed id.</p>\n\n<p>Like <a href=\"#!/api/Ext.data.Store-method-indexOf\" rel=\"Ext.data.Store-method-indexOf\" class=\"docClass\">indexOf</a>, this method is effected by filtering.</p>\n","chainable":false,"inheritdoc":null,"id":"method-indexOfId","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the index within the entire dataset. ...","method_calls":["indexOf"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Ext.data.Model","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> object to find.</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"tagname":"method","files":[{"linenr":2959,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The index of the passed Record. Returns -1 if not found.</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"indexOfTotal","doc":"<p>Get the index within the entire dataset. From 0 to the totalCount.</p>\n\n<p>Like <a href=\"#!/api/Ext.data.Store-method-indexOf\" rel=\"Ext.data.Store-method-indexOf\" class=\"docClass\">indexOf</a>, this method is effected by filtering.</p>\n","chainable":false,"inheritdoc":null,"id":"method-indexOfTotal","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Initialize configuration for this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1090,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":null,"static":null,"name":"initConfig","doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"method-initConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Performs initialization of this mixin. ...","method_calls":["decodeSorters"],"owner":"Ext.util.Sortable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":81,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Sortable.js"}],"private":null,"static":null,"name":"initSortable","doc":"<p>Performs initialization of this mixin. Component classes using this mixin should call this method during their\nown initialization.</p>\n","chainable":false,"inheritdoc":null,"id":"method-initSortable","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Inserts Model instances into the Store at the given index and fires the add event. ...","method_calls":["createModel","fireEvent","isGrouped","resumeEvents","sort","suspendEvents","sync","updateGroupsOnAdd"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The start index at which to insert the passed Records.</p>\n","name":"index","html_type":"Number"},{"type":"Ext.data.Model[]","tagname":"params","doc":"<p>An Array of <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a> objects to add to the store.</p>\n","name":"records","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"}],"tagname":"method","files":[{"linenr":1021,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Ext.data.Model[]","properties":null,"doc":"<p>records The added records</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},"private":null,"static":null,"name":"insert","doc":"<p>Inserts Model instances into the Store at the given index and fires the <a href=\"#!/api/Ext.data.Store-event-add\" rel=\"Ext.data.Store-event-add\" class=\"docClass\">add</a> event.\nSee also <a href=\"#!/api/Ext.data.Store-method-add\" rel=\"Ext.data.Store-method-add\" class=\"docClass\">add</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-insert","fires":["<a href=\"#!/api/Ext.data.Store-event-add\" rel=\"Ext.data.Store-event-add\" class=\"docClass\">add</a>","beforesort","<a href=\"#!/api/Ext.data.Store-event-beforesync\" rel=\"Ext.data.Store-event-beforesync\" class=\"docClass\">beforesync</a>","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>"],"linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-isFiltered\" rel=\"Ext.data.AbstractStore-method-isFiltered\" class=\"docClass\">Ext.data.AbstractStore.isFiltered</a>","name":"isFiltered"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns true if this store is currently filtered ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1897,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Boolean","properties":null,"doc":"\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"isFiltered","doc":"<p>Returns <code>true</code> if this store is currently filtered</p>\n","chainable":false,"inheritdoc":null,"id":"method-isFiltered","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Checks if the store is currently grouped ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":808,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p><code>true</code> if the store is grouped.</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"isGrouped","doc":"<p>Checks if the store is currently grouped</p>\n","chainable":false,"inheritdoc":null,"id":"method-isGrouped","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns true if the Store is currently performing a load operation ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1119,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>True if the Store is currently loading</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"isLoading","doc":"<p>Returns true if the Store is currently performing a load operation</p>\n","chainable":false,"inheritdoc":null,"id":"method-isLoading","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Convenience function for getting the last model instance in the store. ...","method_calls":["aggregate","isGrouped"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>True to perform the operation for each group\nin the store. The value returned will be an object literal with the key being the group\nname and the last record being the value. The grouped parameter is only honored if\nthe store has a groupField.</p>\n","name":"grouped","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":3014,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Ext.data.Model/undefined","properties":null,"doc":"<p>The last model instance in the store, or undefined</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/undefined"},"private":null,"static":null,"name":"last","doc":"<p>Convenience function for getting the last model instance in the store.</p>\n\n<p>When store is filtered, will return last item within the filter.</p>\n","chainable":false,"inheritdoc":null,"id":"method-last","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-load\" rel=\"Ext.data.AbstractStore-method-load\" class=\"docClass\">Ext.data.AbstractStore.load</a>","name":"load"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Loads data into the Store via the configured proxy. ...","method_calls":["callParent","loadToPrefetch"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object/Function","tagname":"params","doc":"<p>config object, passed into the <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a> object before loading.\nAdditionally <code>addRecords: true</code> can be specified to add these records to the existing records, default is\nto remove the Store's existing records first.</p>\n","name":"options","optional":true,"html_type":"Object/Function"}],"tagname":"method","files":[{"linenr":1510,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"load","doc":"<p>Loads data into the Store via the configured <a href=\"#!/api/Ext.data.Store-cfg-proxy\" rel=\"Ext.data.Store-cfg-proxy\" class=\"docClass\">proxy</a>. This uses the Proxy to make an\nasynchronous call to whatever storage backend the Proxy uses, automatically adding the retrieved\ninstances into the Store and calling an optional callback if required. Example usage:</p>\n\n<pre><code>store.load({\n    scope: this,\n    callback: function(records, operation, success) {\n        // the <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">operation</a> object\n        // contains all of the details of the load operation\n        console.log(records);\n    }\n});\n</code></pre>\n\n<p>If the callback scope does not need to be set, a function can simply be passed:</p>\n\n<pre><code>store.load(function(records, operation, success) {\n    console.log('loaded records');\n});\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-load","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeload\" rel=\"Ext.data.Store-event-beforeload\" class=\"docClass\">beforeload</a>","<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-groupchange\" rel=\"Ext.data.Store-event-groupchange\" class=\"docClass\">groupchange</a>","guaranteedrange","<a href=\"#!/api/Ext.data.Store-event-load\" rel=\"Ext.data.Store-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.Store-event-refresh\" rel=\"Ext.data.Store-event-refresh\" class=\"docClass\">refresh</a>"],"linenr":null},{"overrides":[{"owner":"Ext.data.Store","link":"<a href=\"#!/api/Ext.data.Store-method-loadData\" rel=\"Ext.data.Store-method-loadData\" class=\"docClass\">Ext.data.Store.loadData</a>","name":"loadData"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Loads an array of data straight into the Store. ...","method_calls":["callParent"],"owner":"Ext.data.ArrayStore","inheritable":null,"params":[{"type":"Object","name":"data","html_type":"Object"},{"type":"Object","name":"append","html_type":"Object"}],"tagname":"method","files":[{"linenr":73,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/ArrayStore.js"}],"private":null,"static":null,"name":"loadData","doc":"<p>Loads an array of data straight into the Store.</p>\n\n<p>Using this method is great if the data is in the correct format already (e.g. it doesn't need to be\nprocessed by a reader). If your data requires processing to decode the data structure, use a\n<a href=\"#!/api/Ext.data.proxy.Memory\" rel=\"Ext.data.proxy.Memory\" class=\"docClass\">MemoryProxy</a> or <a href=\"#!/api/Ext.data.ArrayStore-method-loadRawData\" rel=\"Ext.data.ArrayStore-method-loadRawData\" class=\"docClass\">loadRawData</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-loadData","fires":[],"linenr":73},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Loads a given 'page' of data by setting the start and limit values appropriately. ...","method_calls":["loadToPrefetch","read"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The number of the page to load.</p>\n","name":"page","html_type":"Number"},{"type":"Object","tagname":"params","doc":"<p>See options for <a href=\"#!/api/Ext.data.Store-method-load\" rel=\"Ext.data.Store-method-load\" class=\"docClass\">load</a>.</p>\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":2090,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"loadPage","doc":"<p>Loads a given 'page' of data by setting the start and limit values appropriately. Internally this just causes a normal\nload operation, passing in calculated 'start' and 'limit' params.</p>\n","chainable":false,"inheritdoc":null,"id":"method-loadPage","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeload\" rel=\"Ext.data.Store-event-beforeload\" class=\"docClass\">beforeload</a>","<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-groupchange\" rel=\"Ext.data.Store-event-groupchange\" class=\"docClass\">groupchange</a>","guaranteedrange","<a href=\"#!/api/Ext.data.Store-event-load\" rel=\"Ext.data.Store-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.Store-event-refresh\" rel=\"Ext.data.Store-event-refresh\" class=\"docClass\">refresh</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Loads data via the bound Proxy's reader\n\nUse this method if you are attempting to load data and want to utilize the c...","method_calls":["loadRecords"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object[]","tagname":"params","doc":"<p>The full JSON object you'd like to load into the Data store.</p>\n","name":"data","html_type":"Object[]"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p><code>true</code> to add the records to the existing records in the store, <code>false</code>\nto remove the old ones first.</p>\n","name":"append","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":2005,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"loadRawData","doc":"<p>Loads data via the bound Proxy's reader</p>\n\n<p>Use this method if you are attempting to load data and want to utilize the configured data reader.</p>\n","chainable":false,"inheritdoc":null,"id":"method-loadRawData","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeload\" rel=\"Ext.data.Store-event-beforeload\" class=\"docClass\">beforeload</a>","<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>","beforesort","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-filterchange\" rel=\"Ext.data.Store-event-filterchange\" class=\"docClass\">filterchange</a>","<a href=\"#!/api/Ext.data.Store-event-groupchange\" rel=\"Ext.data.Store-event-groupchange\" class=\"docClass\">groupchange</a>","guaranteedrange","<a href=\"#!/api/Ext.data.Store-event-load\" rel=\"Ext.data.Store-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.Store-event-refresh\" rel=\"Ext.data.Store-event-refresh\" class=\"docClass\">refresh</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Loads an array of model instances into the store, fires the datachanged event. ...","method_calls":["clearData","constructGroups","filter","fireEvent","isGrouped","resumeEvents","sort","suspendEvents"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Ext.data.Model[]","tagname":"params","doc":"<p>The array of records to load</p>\n","name":"records","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"type":"Object","tagname":"params","properties":[{"type":"Boolean","default":"false","tagname":"params","doc":"<p>Pass <code>true</code> to add these records to the existing records, <code>false</code> to remove the Store's existing records first.</p>\n","name":"addRecords","optional":true,"html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>Only used by buffered Stores. The index <em>within the overall dataset</em> of the first record in the array.</p>\n","name":"start","optional":true,"html_type":"Number"}],"doc":"\n","name":"options","html_type":"Object"}],"tagname":"method","files":[{"linenr":2025,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"loadRecords","doc":"<p>Loads an array of <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">model</a> instances into the store, fires the datachanged event. This should only usually\nbe called internally when loading from the <a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Proxy</a>, when adding records manually use <a href=\"#!/api/Ext.data.Store-method-add\" rel=\"Ext.data.Store-method-add\" class=\"docClass\">add</a> instead</p>\n","chainable":false,"inheritdoc":null,"id":"method-loadRecords","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeload\" rel=\"Ext.data.Store-event-beforeload\" class=\"docClass\">beforeload</a>","<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>","beforesort","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-filterchange\" rel=\"Ext.data.Store-event-filterchange\" class=\"docClass\">filterchange</a>","<a href=\"#!/api/Ext.data.Store-event-groupchange\" rel=\"Ext.data.Store-event-groupchange\" class=\"docClass\">groupchange</a>","guaranteedrange","<a href=\"#!/api/Ext.data.Store-event-load\" rel=\"Ext.data.Store-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.Store-event-refresh\" rel=\"Ext.data.Store-event-refresh\" class=\"docClass\">refresh</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["fireEvent","fireGroupChange","getPageFromRecordIndex","getTotalCount","guaranteeRange","on","prefetchPage","rangeCached"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"options","html_type":"Object"}],"tagname":"method","files":[{"linenr":2161,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"loadToPrefetch","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-loadToPrefetch","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeload\" rel=\"Ext.data.Store-event-beforeload\" class=\"docClass\">beforeload</a>","<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-groupchange\" rel=\"Ext.data.Store-event-groupchange\" class=\"docClass\">groupchange</a>","guaranteedrange","<a href=\"#!/api/Ext.data.Store-event-load\" rel=\"Ext.data.Store-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.Store-event-refresh\" rel=\"Ext.data.Store-event-refresh\" class=\"docClass\">refresh</a>"],"linenr":2161},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the maximum value in the store. ...","method_calls":["aggregate","getMax","isGrouped"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The field in each record</p>\n","name":"field","html_type":"String"},{"type":"Boolean","tagname":"params","doc":"<p>True to perform the operation for each group\nin the store. The value returned will be an object literal with the key being the group\nname and the maximum in the group being the value. The grouped parameter is only honored if\nthe store has a groupField.</p>\n","name":"grouped","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":3138,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The maximum value, if no items exist, undefined.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"max","doc":"<p>Gets the maximum value in the store.</p>\n\n<p>When store is filtered, only items within the filter are aggregated.</p>\n","chainable":false,"inheritdoc":null,"id":"method-max","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the minimum value in the store. ...","method_calls":["aggregate","getMin","isGrouped"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The field in each record</p>\n","name":"field","html_type":"String"},{"type":"Boolean","tagname":"params","doc":"<p>True to perform the operation for each group\nin the store. The value returned will be an object literal with the key being the group\nname and the minimum in the group being the value. The grouped parameter is only honored if\nthe store has a groupField.</p>\n","name":"grouped","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":3097,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Object","properties":null,"doc":"<p>The minimum value, if no items exist, undefined.</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"min","doc":"<p>Gets the minimum value in the store.</p>\n\n<p>When store is filtered, only items within the filter are aggregated.</p>\n","chainable":false,"inheritdoc":null,"id":"method-min","fires":[],"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for addManagedListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item to which to add a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> options.</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1134,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.mon({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"mon","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-addManagedListener\" rel=\"Ext.util.Observable-method-addManagedListener\" class=\"docClass\">addManagedListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-mon","fires":null,"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for removeManagedListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":null,"private":null,"static":null,"name":"mun","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-removeManagedListener\" rel=\"Ext.util.Observable-method-removeManagedListener\" class=\"docClass\">removeManagedListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-mun","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Loads the next 'page' in the current data set ...","method_calls":["loadPage"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>See options for <a href=\"#!/api/Ext.data.Store-method-load\" rel=\"Ext.data.Store-method-load\" class=\"docClass\">load</a></p>\n","name":"options","html_type":"Object"}],"tagname":"method","files":[{"linenr":2116,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"nextPage","doc":"<p>Loads the next 'page' in the current data set</p>\n","chainable":false,"inheritdoc":null,"id":"method-nextPage","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeload\" rel=\"Ext.data.Store-event-beforeload\" class=\"docClass\">beforeload</a>","<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-groupchange\" rel=\"Ext.data.Store-event-groupchange\" class=\"docClass\">groupchange</a>","guaranteedrange","<a href=\"#!/api/Ext.data.Store-event-load\" rel=\"Ext.data.Store-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.Store-event-refresh\" rel=\"Ext.data.Store-event-refresh\" class=\"docClass\">refresh</a>"],"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for addListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The name of the event to listen for.\nMay also be an object who's property names are event names.</p>\n\n","name":"eventName","html_type":"String/Object"},{"type":"Function","tagname":"params","doc":"<p>The method the event invokes, or <em>if <code>scope</code> is specified, the </em>name* of the method within\nthe specified <code>scope</code>.  Will be called with arguments\ngiven to <a href=\"#!/api/Ext.util.Observable-method-fireEvent\" rel=\"Ext.util.Observable-method-fireEvent\" class=\"docClass\">fireEvent</a> plus the <code>options</code> parameter described below.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is\nexecuted. <strong>If omitted, defaults to the object which fired the event.</strong></p>\n\n","name":"scope","optional":true,"html_type":"Object"},{"type":"Object","tagname":"params","properties":[{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which the handler function is executed. <strong>If omitted,\n  defaults to the object which fired the event.</strong></p>\n\n","name":"scope","html_type":"Object"},{"type":"Number","tagname":"params","doc":"<p>The number of milliseconds to delay the invocation of the handler after the event fires.</p>\n\n","name":"delay","html_type":"Number"},{"type":"Boolean","tagname":"params","doc":"<p>True to add a handler to handle just the next firing of the event, and then remove itself.</p>\n\n","name":"single","html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>Causes the handler to be scheduled to run in an <a href=\"#!/api/Ext.util.DelayedTask\" rel=\"Ext.util.DelayedTask\" class=\"docClass\">Ext.util.DelayedTask</a> delayed\n  by the specified number of milliseconds. If the event fires again within that time,\n  the original handler is <em>not</em> invoked, but the new handler is scheduled in its place.</p>\n\n","name":"buffer","html_type":"Number"},{"type":"Ext.util.Observable","tagname":"params","doc":"<p>Only call the handler if the event was fired on the target Observable, <em>not</em> if the event\n  was bubbled up from a child Observable.</p>\n\n","name":"target","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>"},{"type":"String","tagname":"params","doc":"<p><strong>This option is only valid for listeners bound to <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a>.</strong>\n  The name of a Component property which references an element to add a listener to.</p>\n\n\n\n\n<p>  This option is useful during Component construction to add DOM event listeners to elements of\n  <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> which will exist only after the Component is rendered.\n  For example, to add a click listener to a Panel's body:</p>\n\n\n\n\n<pre><code>  new <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>({\n      title: 'The title',\n      listeners: {\n          click: this.handlePanelClick,\n          element: 'body'\n      }\n  });\n</code></pre>\n\n","name":"element","html_type":"String"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>When specified as <code>true</code>, the function returns A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call.</p>\n\n","name":"destroyable","optional":true,"html_type":"Boolean"},{"type":"Number","tagname":"params","doc":"<p>An optional numeric priority that determines the order in which event handlers\n  are run. Event handlers with no priority will be run as if they had a priority\n  of 0. Handlers with a higher priority will be prioritized to run sooner than\n  those with a lower priority.  Negative numbers can be used to set a priority\n  lower than the default. Internally, the framework uses a range of 1000 or\n  greater, and -1000 or lesser for handers that are intended to run before or\n  after all others, so it is recommended to stay within the range of -999 to 999\n  when setting the priority of event handlers in application-level code.</p>\n\n\n\n\n<p><strong>Combining Options</strong></p>\n\n\n\n\n<p>Using the options argument, it is possible to combine different types of listeners:</p>\n\n\n\n\n<p>A delayed, one-time listener.</p>\n\n\n\n\n<pre><code>myPanel.on('hide', this.handleClick, this, {\n    single: true,\n    delay: 100\n});\n</code></pre>\n\n","name":"priority","optional":true,"html_type":"Number"}],"doc":"<p>An object containing handler configuration.</p>\n\n\n\n\n<p><strong>Note:</strong> Unlike in ExtJS 3.x, the options object will also be passed as the last\nargument to every event handler.</p>\n\n\n\n\n<p>This object may contain any of the following properties:</p>\n\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1122,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p><strong>Only when the <code>destroyable</code> option is specified. </strong></p>\n\n\n\n\n<p> A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which removes all listeners added in this call. For example:</p>\n\n\n\n\n<pre><code>this.btnListeners =  = myButton.on({\n    destroyable: true\n    mouseover:   function() { console.log('mouseover'); },\n    mouseout:    function() { console.log('mouseout'); },\n    click:       function() { console.log('click'); }\n});\n</code></pre>\n\n\n\n\n<p>And when those listeners need to be removed:</p>\n\n\n\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.btnListeners);\n</code></pre>\n\n\n\n\n<p>or</p>\n\n\n\n\n<pre><code>this.btnListeners.destroy();\n</code></pre>\n\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"on","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-on","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Attached as the 'complete' event listener to a proxy's Batch object. ...","method_calls":["fireEvent","onProxyWrite","resumeEvents","suspendEvents"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"batch","html_type":"Object"},{"type":"Object","name":"operation","html_type":"Object"}],"tagname":"method","files":[{"linenr":596,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"onBatchComplete","doc":"<p>Attached as the 'complete' event listener to a proxy's Batch object. Iterates over the batch operations\nand updates the Store's internal data MixedCollection.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onBatchComplete","fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-datachanged\" rel=\"Ext.data.AbstractStore-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.AbstractStore-event-refresh\" rel=\"Ext.data.AbstractStore-event-refresh\" class=\"docClass\">refresh</a>","<a href=\"#!/api/Ext.data.AbstractStore-event-write\" rel=\"Ext.data.AbstractStore-event-write\" class=\"docClass\">write</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"batch","html_type":"Object"},{"type":"Object","name":"operation","html_type":"Object"}],"tagname":"method","files":[{"linenr":619,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"onBatchException","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onBatchException","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Attached as the 'operationcomplete' event listener to a proxy's Batch object. ...","method_calls":["onProxyWrite"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"batch","html_type":"Object"},{"type":"Object","name":"operation","html_type":"Object"}],"tagname":"method","files":[{"linenr":587,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"onBatchOperationComplete","doc":"<p>Attached as the 'operationcomplete' event listener to a proxy's Batch object. By default just calls through\nto onProxyWrite.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onBatchOperationComplete","fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-datachanged\" rel=\"Ext.data.AbstractStore-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.AbstractStore-event-refresh\" rel=\"Ext.data.AbstractStore-event-refresh\" class=\"docClass\">refresh</a>","<a href=\"#!/api/Ext.data.AbstractStore-event-write\" rel=\"Ext.data.AbstractStore-event-write\" class=\"docClass\">write</a>"],"linenr":null},{"type":null,"overrides":[{"owner":"Ext.util.Sortable","link":"<a href=\"#!/api/Ext.util.Sortable-method-onBeforeSort\" rel=\"Ext.util.Sortable-method-onBeforeSort\" class=\"docClass\">Ext.util.Sortable.onBeforeSort</a>","name":"onBeforeSort"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["sort"],"owner":"Ext.data.Store","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":608,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":null,"private":true,"static":null,"name":"onBeforeSort","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-onBeforeSort","fires":["beforesort"],"linenr":608},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"cls","html_type":"Object"},{"type":"Object","name":"data","html_type":"Object"},{"type":"Object","name":"hooks","html_type":"Object"}],"tagname":"method","files":[{"linenr":84,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"onClassExtended","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onClassExtended","fires":null,"linenr":84},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"names","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"callback","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":1224,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"onConfigUpdate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onConfigUpdate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"may be implemented by store subclasses ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":550,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"onCreateRecords","doc":"<p>may be implemented by store subclasses</p>\n","chainable":null,"inheritdoc":null,"id":"method-onCreateRecords","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes any records when a write is returned from the server. ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Ext.data.Model[]","tagname":"params","doc":"<p>The array of removed records</p>\n","name":"records","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"type":"Ext.data.Operation","tagname":"params","doc":"<p>The operation that just completed</p>\n","name":"operation","html_type":"<a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a>"},{"type":"Boolean","tagname":"params","doc":"<p>True if the operation was successful</p>\n","name":"success","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":556,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"onDestroyRecords","doc":"<p>Removes any records when a write is returned from the server.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onDestroyRecords","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Handles a guaranteed range being loaded ...","method_calls":["fireEvent","getTotalCount"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"options","html_type":"Object"}],"tagname":"method","files":[{"linenr":2504,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"onGuaranteedRange","doc":"<p>Handles a guaranteed range being loaded</p>\n","chainable":false,"inheritdoc":null,"id":"method-onGuaranteedRange","fires":["guaranteedrange"],"linenr":null},{"type":null,"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-onIdChanged\" rel=\"Ext.data.AbstractStore-method-onIdChanged\" class=\"docClass\">Ext.data.AbstractStore.onIdChanged</a>","name":"onIdChanged"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["callParent"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"rec","html_type":"Object"},{"type":"Object","name":"oldId","html_type":"Object"},{"type":"Object","name":"newId","html_type":"Object"},{"type":"Object","name":"oldInternalId","html_type":"Object"}],"tagname":"method","files":[{"linenr":3254,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":null,"private":true,"static":null,"name":"onIdChanged","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-onIdChanged","fires":[],"linenr":3254},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"private ...","method_calls":["fireEvent"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"proxy","html_type":"Object"},{"type":"Object","name":"meta","html_type":"Object"}],"tagname":"method","files":[{"linenr":475,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"onMetaChange","doc":"<p>private</p>\n","chainable":false,"inheritdoc":null,"id":"method-onMetaChange","fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-metachange\" rel=\"Ext.data.AbstractStore-event-metachange\" class=\"docClass\">metachange</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Cancels all pending prefetch requests. ...","method_calls":["fireEvent"],"owner":"Ext.data.Store","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":2322,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"onPageMapClear","doc":"<p>Cancels all pending prefetch requests.</p>\n\n<p>This is called when the page map is cleared.</p>\n\n<p>Any requests which still make it through will be for the previous pageMapGeneration\n(pageMapGeneration is incremented upon clear), and so will be rejected upon arrival.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onPageMapClear","fires":["<a href=\"#!/api/Ext.data.Store-event-clear\" rel=\"Ext.data.Store-event-clear\" class=\"docClass\">clear</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Called internally when a Proxy has completed a load request ...","method_calls":["fireEvent","loadRecords"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"operation","html_type":"Object"}],"tagname":"method","files":[{"linenr":1619,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"onProxyLoad","doc":"<p>Called internally when a Proxy has completed a load request</p>\n","chainable":false,"inheritdoc":null,"id":"method-onProxyLoad","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeload\" rel=\"Ext.data.Store-event-beforeload\" class=\"docClass\">beforeload</a>","<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>","beforesort","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-filterchange\" rel=\"Ext.data.Store-event-filterchange\" class=\"docClass\">filterchange</a>","<a href=\"#!/api/Ext.data.Store-event-groupchange\" rel=\"Ext.data.Store-event-groupchange\" class=\"docClass\">groupchange</a>","guaranteedrange","<a href=\"#!/api/Ext.data.Store-event-load\" rel=\"Ext.data.Store-event-load\" class=\"docClass\">load</a>","read","<a href=\"#!/api/Ext.data.Store-event-refresh\" rel=\"Ext.data.Store-event-refresh\" class=\"docClass\">refresh</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Called after the configured proxy completes a prefetch operation. ...","method_calls":["cachePage","fireEvent"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Ext.data.Operation","tagname":"params","doc":"<p>The operation that completed</p>\n","name":"operation","html_type":"<a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a>"}],"tagname":"method","files":[{"linenr":2391,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"onProxyPrefetch","doc":"<p>Called after the configured proxy completes a prefetch operation.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onProxyPrefetch","fires":["<a href=\"#!/api/Ext.data.Store-event-prefetch\" rel=\"Ext.data.Store-event-prefetch\" class=\"docClass\">prefetch</a>","totalcountchange"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Callback for any write Operation over the Proxy. ...","method_calls":["fireEvent","onCreateRecords","onDestroyRecords","onUpdateRecords"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"operation","html_type":"Object"}],"tagname":"method","files":[{"linenr":519,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"onProxyWrite","doc":"<p>Callback for any write Operation over the Proxy. Updates the Store's MixedCollection to reflect\nthe updates provided by the Proxy</p>\n","chainable":false,"inheritdoc":null,"id":"method-onProxyWrite","fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-datachanged\" rel=\"Ext.data.AbstractStore-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.AbstractStore-event-refresh\" rel=\"Ext.data.AbstractStore-event-refresh\" class=\"docClass\">refresh</a>","<a href=\"#!/api/Ext.data.AbstractStore-event-write\" rel=\"Ext.data.AbstractStore-event-write\" class=\"docClass\">write</a>"],"linenr":null},{"type":null,"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-onUpdate\" rel=\"Ext.data.AbstractStore-method-onUpdate\" class=\"docClass\">Ext.data.AbstractStore.onUpdate</a>","name":"onUpdate"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["isGrouped","updateGroupsOnUpdate"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"record","html_type":"Object"},{"type":"Object","name":"type","html_type":"Object"},{"type":"Object","name":"modifiedFieldNames","html_type":"Object"}],"tagname":"method","files":[{"linenr":1263,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":null,"private":true,"static":null,"name":"onUpdate","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-onUpdate","fires":[],"linenr":1263},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"may be implemented by store subclasses ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":553,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"onUpdateRecords","doc":"<p>may be implemented by store subclasses</p>\n","chainable":null,"inheritdoc":null,"id":"method-onUpdateRecords","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Determines if the passed page is available in the page cache. ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The page to find in the page cache.</p>\n","name":"page","html_type":"Number"}],"tagname":"method","files":[{"linenr":2465,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"pageCached","doc":"<p>Determines if the passed page is available in the page cache.</p>\n","chainable":false,"inheritdoc":null,"id":"method-pageCached","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Determines if a request for a page is currently running ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The page to check for</p>\n","name":"page","html_type":"Number"}],"tagname":"method","files":[{"linenr":2474,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"pagePending","doc":"<p>Determines if a request for a page is currently running</p>\n","chainable":false,"inheritdoc":null,"id":"method-pagePending","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Prefetches data into the store using its configured proxy. ...","method_calls":["fireEvent","getPageFromRecordIndex"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>config object, passed into the <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a> object before loading.\nSee <a href=\"#!/api/Ext.data.Store-method-load\" rel=\"Ext.data.Store-method-load\" class=\"docClass\">load</a></p>\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":2257,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"prefetch","doc":"<p>Prefetches data into the store using its configured <a href=\"#!/api/Ext.data.Store-cfg-proxy\" rel=\"Ext.data.Store-cfg-proxy\" class=\"docClass\">proxy</a>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-prefetch","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Prefetches a page of data. ...","method_calls":["getCount","prefetch"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The page to prefetch</p>\n","name":"page","html_type":"Number"},{"type":"Object","tagname":"params","doc":"<p>config object, passed into the <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a> object before loading.\nSee <a href=\"#!/api/Ext.data.Store-method-load\" rel=\"Ext.data.Store-method-load\" class=\"docClass\">load</a></p>\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":2366,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"prefetchPage","doc":"<p>Prefetches a page of data.</p>\n","chainable":false,"inheritdoc":null,"id":"method-prefetchPage","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Ensures that the specified range of rows is present in the cache. ...","method_calls":["getPageFromRecordIndex","pageCached","prefetchPage","rangeCached"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"start","html_type":"Object"},{"type":"Object","name":"end","html_type":"Object"}],"tagname":"method","files":[{"linenr":2551,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"prefetchRange","doc":"<p>Ensures that the specified range of rows is present in the cache.</p>\n\n<p>Converts the row range to a page range and then only load pages which are not already\npresent in the page cache.</p>\n","chainable":false,"inheritdoc":null,"id":"method-prefetchRange","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Prepares a given class for observable instances. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Function","tagname":"params","doc":"<p>The class constructor to prepare.</p>\n","name":"T","html_type":"Function"}],"tagname":"method","files":[{"linenr":164,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"prepareClass","doc":"<p>Prepares a given class for observable instances. This method is called when a\nclass derives from this class or uses this class as a mixin.</p>\n","chainable":false,"inheritdoc":null,"id":"method-prepareClass","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Loads the previous 'page' in the current data set ...","method_calls":["loadPage"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>See options for <a href=\"#!/api/Ext.data.Store-method-load\" rel=\"Ext.data.Store-method-load\" class=\"docClass\">load</a></p>\n","name":"options","html_type":"Object"}],"tagname":"method","files":[{"linenr":2124,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"previousPage","doc":"<p>Loads the previous 'page' in the current data set</p>\n","chainable":false,"inheritdoc":null,"id":"method-previousPage","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeload\" rel=\"Ext.data.Store-event-beforeload\" class=\"docClass\">beforeload</a>","<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-groupchange\" rel=\"Ext.data.Store-event-groupchange\" class=\"docClass\">groupchange</a>","guaranteedrange","<a href=\"#!/api/Ext.data.Store-event-load\" rel=\"Ext.data.Store-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.Store-event-refresh\" rel=\"Ext.data.Store-event-refresh\" class=\"docClass\">refresh</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["prefetchRange"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"start","html_type":"Object"},{"type":"Object","name":"end","html_type":"Object"},{"type":"Object","name":"direction","html_type":"Object"}],"tagname":"method","files":[{"linenr":2578,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"primeCache","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-primeCache","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>"],"linenr":2578},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Query all the cached records in this Store by name/value pair. ...","method_calls":["createFilterFn","queryBy"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The property to create the filter function for</p>\n","name":"property","html_type":"String"},{"type":"String/RegExp","tagname":"params","doc":"<p>The string/regex to compare the property value to</p>\n","name":"value","html_type":"String/RegExp"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p><code>true</code> if we don't care if the filter value is not the full value.</p>\n","name":"anyMatch","optional":true,"html_type":"Boolean"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p><code>true</code> to create a case-sensitive regex.</p>\n","name":"caseSensitive","optional":true,"html_type":"Boolean"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p><code>true</code> to force exact match (^ and $ characters added to the regex).\nIgnored if <code>anyMatch</code> is <code>true</code>.</p>\n","name":"exactMatch","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":1952,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Ext.util.MixedCollection","properties":null,"doc":"<p>Returns an <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a> of the matched records</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>"},"private":null,"static":null,"name":"query","doc":"<p>Query all the cached records in this Store by name/value pair.\nThe parameters will be used to generated a filter function that is given\nto the queryBy method.</p>\n\n<p>This method compliments queryBy by generating the query function automatically.</p>\n","chainable":false,"inheritdoc":null,"id":"method-query","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Query all the cached records in this Store using a filtering function. ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Function","tagname":"params","properties":[{"type":"Ext.data.Model","tagname":"params","doc":"<p>The record to test for filtering. Access field values\n using <a href=\"#!/api/Ext.data.Model-method-get\" rel=\"Ext.data.Model-method-get\" class=\"docClass\">Ext.data.Model.get</a>.</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"type":"Object","tagname":"params","doc":"<p>The ID of the Record passed.</p>\n","name":"id","html_type":"Object"}],"doc":"<p>The function to be called. It will be passed the following parameters:</p>\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (this reference) in which the function is executed\nDefaults to this Store.</p>\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1931,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Ext.util.MixedCollection","properties":null,"doc":"<p>Returns an <a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a> of the matched records</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.MixedCollection\" rel=\"Ext.util.MixedCollection\" class=\"docClass\">Ext.util.MixedCollection</a>"},"private":null,"static":null,"name":"queryBy","doc":"<p>Query all the cached records in this Store using a filtering function. The specified function\nwill be called with each record in this Store. If the function returns <code>true</code> the record is\nincluded in the results.</p>\n\n<p>This method is not effected by filtering, it will always look from all records inside the store\nno matter if filter is applied or not.</p>\n","chainable":false,"inheritdoc":null,"id":"method-queryBy","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Determines if the passed range is available in the page cache. ...","method_calls":null,"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The start index</p>\n","name":"start","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>The end index in the range</p>\n","name":"end","html_type":"Number"}],"tagname":"method","files":[{"linenr":2455,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"rangeCached","doc":"<p>Determines if the passed range is available in the page cache.</p>\n","chainable":false,"inheritdoc":null,"id":"method-rangeCached","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Determines if the passed range is available in the page cache. ...","method_calls":["rangeCached"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The start index</p>\n","name":"start","html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>The end index in the range</p>\n","name":"end","html_type":"Number"}],"tagname":"method","files":[{"linenr":2483,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Boolean","properties":null,"doc":"\n","name":"return","html_type":"Boolean"},"private":true,"static":null,"name":"rangeSatisfied","doc":"<p>Determines if the passed range is available in the page cache.</p>\n","chainable":false,"inheritdoc":null,"id":"method-rangeSatisfied","deprecated":{"text":"<p>use <a href=\"#!/api/Ext.data.Store-method-rangeCached\" rel=\"Ext.data.Store-method-rangeCached\" class=\"docClass\">rangeCached</a> instead</p>\n","version":"4.1.0"},"fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":500,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"read","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-read","fires":null,"linenr":500},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Rejects outstanding changes on all modified records\nand re-insert any records that were removed locally. ...","method_calls":["getRejectRecords","insert","remove"],"owner":"Ext.data.Store","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":3295,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"rejectChanges","doc":"<p><a href=\"#!/api/Ext.data.Model-method-reject\" rel=\"Ext.data.Model-method-reject\" class=\"docClass\">Rejects</a> outstanding changes on all <a href=\"#!/api/Ext.data.Store-method-getModifiedRecords\" rel=\"Ext.data.Store-method-getModifiedRecords\" class=\"docClass\">modified records</a>\nand re-insert any records that were removed locally. Any phantom records will be removed.</p>\n","chainable":false,"inheritdoc":null,"id":"method-rejectChanges","fires":["<a href=\"#!/api/Ext.data.Store-event-add\" rel=\"Ext.data.Store-event-add\" class=\"docClass\">add</a>","beforesort","<a href=\"#!/api/Ext.data.Store-event-beforesync\" rel=\"Ext.data.Store-event-beforesync\" class=\"docClass\">beforesync</a>","<a href=\"#!/api/Ext.data.Store-event-bulkremove\" rel=\"Ext.data.Store-event-bulkremove\" class=\"docClass\">bulkremove</a>","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-remove\" rel=\"Ext.data.Store-event-remove\" class=\"docClass\">remove</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Relays selected events from the specified Observable as if the events were fired by this. ...","method_calls":["createRelayer","mon"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The Observable whose events this object is to relay.</p>\n","name":"origin","html_type":"Object"},{"type":"String[]","tagname":"params","doc":"<p>Array of event names to relay.</p>\n","name":"events","html_type":"String[]"},{"type":"String","tagname":"params","doc":"<p>A common prefix to prepend to the event names. For example:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Now the grid will forward 'load' and 'clear' events of store as 'storeload' and 'storeclear'.</p>\n","name":"prefix","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":928,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":{"type":"Object","properties":null,"doc":"<p>A <code>Destroyable</code> object. An object which implements the <code>destroy</code> method which, when destroyed, removes all relayers. For example:</p>\n\n<pre><code>this.storeRelayers = this.relayEvents(this.getStore(), ['load', 'clear'], 'store');\n</code></pre>\n\n<p>Can be undone by calling</p>\n\n<pre><code><a href=\"#!/api/Ext-method-destroy\" rel=\"Ext-method-destroy\" class=\"docClass\">Ext.destroy</a>(this.storeRelayers);\n</code></pre>\n\n<p>or\n    this.store.relayers.destroy();</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"relayEvents","doc":"<p>Relays selected events from the specified Observable as if the events were fired by <code>this</code>.</p>\n\n<p>For example if you are extending Grid, you might decide to forward some events from store.\nSo you can do this inside your initComponent:</p>\n\n<pre><code>this.relayEvents(this.getStore(), ['load']);\n</code></pre>\n\n<p>The grid instance will then have an observable 'load' event which will be passed the\nparameters of the store's load event and any function fired with the grid's load event\nwould have access to the grid using the <code>this</code> keyword.</p>\n","chainable":false,"inheritdoc":null,"id":"method-relayEvents","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-reload\" rel=\"Ext.data.AbstractStore-method-reload\" class=\"docClass\">Ext.data.AbstractStore.reload</a>","name":"reload"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Reloads the store using the last options passed to the load method. ...","method_calls":["callParent","fireEvent","getAt","getCount","getPageFromRecordIndex","prefetchPage","rangeCached"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"options","html_type":"Object"}],"tagname":"method","files":[{"linenr":1558,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"reload","doc":"<p>Reloads the store using the last options passed to the <a href=\"#!/api/Ext.data.Store-method-load\" rel=\"Ext.data.Store-method-load\" class=\"docClass\">load</a> method.</p>\n","chainable":false,"inheritdoc":null,"id":"method-reload","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeload\" rel=\"Ext.data.Store-event-beforeload\" class=\"docClass\">beforeload</a>","<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>","<a href=\"#!/api/Ext.data.Store-event-load\" rel=\"Ext.data.Store-event-load\" class=\"docClass\">load</a>"],"linenr":1558},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes the specified record(s) from the Store, firing the remove event for each instance that is removed. ...","method_calls":["fireEvent","indexOf","sync"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Ext.data.Model/Ext.data.Model[]/Number/Number[]","tagname":"params","doc":"<p>Model instance or array of instances to remove or an array of indices from which to remove records.</p>\n","name":"records","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>/<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]/Number/Number[]"}],"tagname":"method","files":[{"linenr":1292,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"remove","doc":"<p>Removes the specified record(s) from the Store, firing the <a href=\"#!/api/Ext.data.Store-event-remove\" rel=\"Ext.data.Store-event-remove\" class=\"docClass\">remove</a> event for each instance that is removed.</p>\n\n<p>A <a href=\"#!/api/Ext.data.Store-event-bulkremove\" rel=\"Ext.data.Store-event-bulkremove\" class=\"docClass\">bulkremove</a> event is called at the end passing all removed records and their indices.\nplus a single 'datachanged' event after removal.</p>\n","chainable":false,"inheritdoc":null,"id":"method-remove","fires":["<a href=\"#!/api/Ext.data.Store-event-beforesync\" rel=\"Ext.data.Store-event-beforesync\" class=\"docClass\">beforesync</a>","<a href=\"#!/api/Ext.data.Store-event-bulkremove\" rel=\"Ext.data.Store-event-bulkremove\" class=\"docClass\">bulkremove</a>","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-remove\" rel=\"Ext.data.Store-event-remove\" class=\"docClass\">remove</a>"],"linenr":null},{"overrides":[{"owner":"Ext.data.AbstractStore","link":"<a href=\"#!/api/Ext.data.AbstractStore-method-removeAll\" rel=\"Ext.data.AbstractStore-method-removeAll\" class=\"docClass\">Ext.data.AbstractStore.removeAll</a>","name":"removeAll"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes all items from the store. ...","method_calls":["fireEvent","getCount","remove","resumeEvent","suspendEvent"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Boolean","default":"false","tagname":"params","doc":"<p>Pass <code>true</code> to prevent the record <code><a href=\"#!/api/Ext.data.Store-event-bulkremove\" rel=\"Ext.data.Store-event-bulkremove\" class=\"docClass\">bulkremove</a></code>\nand <code><a href=\"#!/api/Ext.data.Store-event-clear\" rel=\"Ext.data.Store-event-clear\" class=\"docClass\">clear</a></code> events from being fired.</p>\n","name":"silent","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":1468,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"removeAll","doc":"<p>Removes all items from the store.</p>\n\n<p>Individual record <code><a href=\"#!/api/Ext.data.Store-event-remove\" rel=\"Ext.data.Store-event-remove\" class=\"docClass\">remove</a></code> events are not fired by this method.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeAll","fires":["<a href=\"#!/api/Ext.data.Store-event-beforesync\" rel=\"Ext.data.Store-event-beforesync\" class=\"docClass\">beforesync</a>","<a href=\"#!/api/Ext.data.Store-event-bulkremove\" rel=\"Ext.data.Store-event-bulkremove\" class=\"docClass\">bulkremove</a>","<a href=\"#!/api/Ext.data.Store-event-clear\" rel=\"Ext.data.Store-event-clear\" class=\"docClass\">clear</a>","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-remove\" rel=\"Ext.data.Store-event-remove\" class=\"docClass\">remove</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes the model instance(s) at the given index ...","method_calls":["getCount","remove"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The record index</p>\n","name":"index","html_type":"Number"},{"type":"Number","default":"1","tagname":"params","doc":"<p>The number of records to delete</p>\n","name":"count","optional":true,"html_type":"Number"}],"tagname":"method","files":[{"linenr":1447,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"removeAt","doc":"<p>Removes the model instance(s) at the given index</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeAt","fires":["<a href=\"#!/api/Ext.data.Store-event-beforesync\" rel=\"Ext.data.Store-event-beforesync\" class=\"docClass\">beforesync</a>","<a href=\"#!/api/Ext.data.Store-event-bulkremove\" rel=\"Ext.data.Store-event-bulkremove\" class=\"docClass\">bulkremove</a>","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-remove\" rel=\"Ext.data.Store-event-remove\" class=\"docClass\">remove</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes an individual Filter from the current filter set using the passed Filter/Filter id and\nby default, applys the...","method_calls":["clearFilter","filter","fireEvent","isFiltered"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Mixed","tagname":"params","doc":"<p>The id of a Filter to remove from the filter set, or a Filter instance to remove.</p>\n","name":"toRemove","html_type":"Mixed"},{"type":"Boolean","default":"true","tagname":"params","doc":"<p>Pass as <code>false</code> to remove the filter but not apply the updated filter set.</p>\n\n<p>If <code>null</code> is passed, all anonymous Filters (Filters with no <code>id</code> property) will be removed.</p>\n","name":"applyFilters","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":1834,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":null,"static":null,"name":"removeFilter","doc":"<p>Removes an individual Filter from the current <a href=\"#!/api/Ext.data.Store-property-filters\" rel=\"Ext.data.Store-property-filters\" class=\"docClass\">filter set</a> using the passed Filter/Filter id and\nby default, applys the updated filter set to the Store's unfiltered dataset.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeFilter","fires":["<a href=\"#!/api/Ext.data.Store-event-beforeload\" rel=\"Ext.data.Store-event-beforeload\" class=\"docClass\">beforeload</a>","<a href=\"#!/api/Ext.data.Store-event-beforeprefetch\" rel=\"Ext.data.Store-event-beforeprefetch\" class=\"docClass\">beforeprefetch</a>","beforesort","cachefilled","cachemiss","<a href=\"#!/api/Ext.data.Store-event-datachanged\" rel=\"Ext.data.Store-event-datachanged\" class=\"docClass\">datachanged</a>","<a href=\"#!/api/Ext.data.Store-event-filterchange\" rel=\"Ext.data.Store-event-filterchange\" class=\"docClass\">filterchange</a>","<a href=\"#!/api/Ext.data.Store-event-groupchange\" rel=\"Ext.data.Store-event-groupchange\" class=\"docClass\">groupchange</a>","guaranteedrange","<a href=\"#!/api/Ext.data.Store-event-load\" rel=\"Ext.data.Store-event-load\" class=\"docClass\">load</a>","<a href=\"#!/api/Ext.data.Store-event-refresh\" rel=\"Ext.data.Store-event-refresh\" class=\"docClass\">refresh</a>"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes an event handler. ...","method_calls":["removeListener"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The type of event the handler was associated with.</p>\n\n","name":"eventName","html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>The handler to remove. <strong>This must be a reference to the function passed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope originally specified for the handler. It must be the same as the\nscope argument specified in the original call to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> or the listener will not be removed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":688,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"removeListener","doc":"<p>Removes an event handler.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeListener","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes listeners that were added by the mon method. ...","method_calls":["removeManagedListener","removeManagedListenerItem"],"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Ext.util.Observable/Ext.Element","tagname":"params","doc":"<p>The item from which to remove a listener/listeners.</p>\n\n","name":"item","html_type":"<a href=\"#!/api/Ext.util.Observable\" rel=\"Ext.util.Observable\" class=\"docClass\">Ext.util.Observable</a>/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},{"type":"Object/String","tagname":"params","doc":"<p>The event name, or an object containing event name properties.</p>\n\n","name":"ename","html_type":"Object/String"},{"type":"Function","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the handler function.</p>\n\n","name":"fn","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>If the <code>ename</code> parameter was an event name, this is the scope (<code>this</code> reference)\nin which the handler function is executed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":375,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"removeManagedListener","doc":"<p>Removes listeners that were added by the <a href=\"#!/api/Ext.util.Observable-method-mon\" rel=\"Ext.util.Observable-method-mon\" class=\"docClass\">mon</a> method.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeManagedListener","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.AbstractComponent","link":"<a href=\"#!/api/Ext.AbstractComponent-method-removeManagedListenerItem\" rel=\"Ext.AbstractComponent-method-removeManagedListenerItem\" class=\"docClass\">Ext.AbstractComponent.removeManagedListenerItem</a>","name":"removeManagedListenerItem"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Remove a single managed listener item ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>True if this is being called during a clear</p>\n","name":"isClear","html_type":"Boolean"},{"type":"Object","tagname":"params","doc":"<p>The managed listener item\nSee removeManagedListener for other args</p>\n","name":"managedListener","html_type":"Object"}],"tagname":"method","files":[{"linenr":775,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":true,"static":null,"name":"removeManagedListenerItem","doc":"<p>Remove a single managed listener item</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeManagedListenerItem","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Resumes automatically syncing the Store with its Proxy. ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1134,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"resumeAutoSync","doc":"<p>Resumes automatically syncing the Store with its Proxy.  Only applicable if <a href=\"#!/api/Ext.data.AbstractStore-cfg-autoSync\" rel=\"Ext.data.AbstractStore-cfg-autoSync\" class=\"docClass\">autoSync</a> is <code>true</code></p>\n","chainable":false,"inheritdoc":null,"id":"method-resumeAutoSync","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Resumes firing of the named event(s). ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String...","tagname":"params","doc":"<p>Multiple event names to resume.</p>\n","name":"eventName","html_type":"String..."}],"tagname":"method","files":[{"linenr":881,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"resumeEvent","doc":"<p>Resumes firing of the named event(s).</p>\n\n<p>After calling this method to resume events, the events will fire when requested to fire.</p>\n\n<p><strong>Note that if the <a href=\"#!/api/Ext.util.Observable-method-suspendEvent\" rel=\"Ext.util.Observable-method-suspendEvent\" class=\"docClass\">suspendEvent</a> method is called multiple times for a certain event,\nthis converse method will have to be called the same number of times for it to resume firing.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-resumeEvent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Resumes firing events (see suspendEvents). ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":905,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"resumeEvents","doc":"<p>Resumes firing events (see <a href=\"#!/api/Ext.util.Observable-method-suspendEvents\" rel=\"Ext.util.Observable-method-suspendEvents\" class=\"docClass\">suspendEvents</a>).</p>\n\n<p>If events were suspended using the <code>queueSuspended</code> parameter, then all events fired\nduring event suspension will be sent to any listeners now.</p>\n","chainable":false,"inheritdoc":null,"id":"method-resumeEvents","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Saves all pending changes via the configured proxy. ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":841,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"save","doc":"<p>Saves all pending changes via the configured <a href=\"#!/api/Ext.data.AbstractStore-cfg-proxy\" rel=\"Ext.data.AbstractStore-cfg-proxy\" class=\"docClass\">proxy</a>. Use <a href=\"#!/api/Ext.data.AbstractStore-method-sync\" rel=\"Ext.data.AbstractStore-method-sync\" class=\"docClass\">sync</a> instead.</p>\n","chainable":false,"inheritdoc":null,"id":"method-save","deprecated":{"text":"<p>Will be removed in the next major version</p>\n","version":"4.0.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"},{"type":"Object","name":"applyIfNotSet","html_type":"Object"}],"tagname":"method","files":[{"linenr":1164,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"static":null,"name":"setConfig","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-setConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the Store's Proxy by string, config object or Proxy instance ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"String/Object/Ext.data.proxy.Proxy","tagname":"params","doc":"<p>The new Proxy, which can be either a type string, a configuration object\nor an <a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a> instance</p>\n","name":"proxy","html_type":"String/Object/<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a>"}],"tagname":"method","files":[{"linenr":438,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"return":{"type":"Ext.data.proxy.Proxy","properties":null,"doc":"<p>The attached Proxy object</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.proxy.Proxy\" rel=\"Ext.data.proxy.Proxy\" class=\"docClass\">Ext.data.proxy.Proxy</a>"},"private":null,"static":null,"name":"setProxy","doc":"<p>Sets the Store's Proxy by string, config object or Proxy instance</p>\n","chainable":false,"inheritdoc":null,"id":"method-setProxy","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.util.Sortable","link":"<a href=\"#!/api/Ext.util.Sortable-method-sort\" rel=\"Ext.util.Sortable-method-sort\" class=\"docClass\">Ext.util.Sortable.sort</a>","name":"sort"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"because prefetchData is stored by index\nthis invalidates all of the prefetchedData ...","method_calls":["callParent"],"owner":"Ext.data.Store","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":2599,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Ext.util.Sorter[]","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Sorter\" rel=\"Ext.util.Sorter\" class=\"docClass\">Ext.util.Sorter</a>[]"},"private":null,"static":null,"name":"sort","doc":"<p>because prefetchData is stored by index\nthis invalidates all of the prefetchedData</p>\n","chainable":false,"inheritdoc":null,"id":"method-sort","fires":["beforesort"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the reference to the class from which this object was instantiated. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":778,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Class","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"private":null,"static":null,"name":"statics","doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-statics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sums the value of field for each record in store\nand returns the result. ...","method_calls":["aggregate","getSum","isGrouped"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>A field in each record</p>\n","name":"field","html_type":"String"},{"type":"Boolean","tagname":"params","doc":"<p>True to perform the operation for each group\nin the store. The value returned will be an object literal with the key being the group\nname and the sum for that group being the value. The grouped parameter is only honored if\nthe store has a groupField.</p>\n","name":"grouped","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":3038,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The sum</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"sum","doc":"<p>Sums the value of <code>field</code> for each <a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">record</a> in store\nand returns the result.</p>\n\n<p>When store is filtered, only sums items within the filter.</p>\n","chainable":false,"inheritdoc":null,"id":"method-sum","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Suspends automatically syncing the Store with its Proxy. ...","method_calls":null,"owner":"Ext.data.AbstractStore","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1127,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":null,"static":null,"name":"suspendAutoSync","doc":"<p>Suspends automatically syncing the Store with its Proxy.  Only applicable if <a href=\"#!/api/Ext.data.AbstractStore-cfg-autoSync\" rel=\"Ext.data.AbstractStore-cfg-autoSync\" class=\"docClass\">autoSync</a> is <code>true</code></p>\n","chainable":false,"inheritdoc":null,"id":"method-suspendAutoSync","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Suspends firing of the named event(s). ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String...","tagname":"params","doc":"<p>Multiple event names to suspend.</p>\n","name":"eventName","html_type":"String..."}],"tagname":"method","files":[{"linenr":857,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"suspendEvent","doc":"<p>Suspends firing of the named event(s).</p>\n\n<p>After calling this method to suspend events, the events will no longer fire when requested to fire.</p>\n\n<p><strong>Note that if this is called multiple times for a certain event, the converse method\n<a href=\"#!/api/Ext.util.Observable-method-resumeEvent\" rel=\"Ext.util.Observable-method-resumeEvent\" class=\"docClass\">resumeEvent</a> will have to be called the same number of times for it to resume firing.</strong></p>\n","chainable":false,"inheritdoc":null,"id":"method-suspendEvent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Suspends the firing of all events. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>Pass as true to queue up suspended events to be fired\nafter the <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a> call instead of discarding all suspended events.</p>\n","name":"queueSuspended","html_type":"Boolean"}],"tagname":"method","files":[{"linenr":844,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"private":null,"static":null,"name":"suspendEvents","doc":"<p>Suspends the firing of all events. (see <a href=\"#!/api/Ext.util.Observable-method-resumeEvents\" rel=\"Ext.util.Observable-method-resumeEvents\" class=\"docClass\">resumeEvents</a>)</p>\n","chainable":false,"inheritdoc":null,"id":"method-suspendEvents","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Synchronizes the store with its proxy. ...","method_calls":["fireEvent","getBatchListeners","getNewRecords","getRemovedRecords","getUpdatedRecords"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","tagname":"params","properties":[{"type":"Ext.data.Batch/Object","tagname":"params","doc":"<p>A <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a> object (or batch config to apply\nto the created batch). If unspecified a default batch will be auto-created as needed.</p>\n","name":"batch","optional":true,"html_type":"<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>/Object"},{"type":"Function","tagname":"params","properties":[{"type":"Ext.data.Batch","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">batch</a> that was processed,\ncontaining all operations in their current state after processing</p>\n","name":"batch","html_type":"<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>"},{"type":"Object","tagname":"params","doc":"<p>The options argument that was originally passed into sync</p>\n","name":"options","html_type":"Object"}],"doc":"<p>The function to be called upon completion of the sync.\nThe callback is called regardless of success or failure and is passed the following parameters:</p>\n","name":"callback","optional":true,"html_type":"Function"},{"type":"Function","tagname":"params","properties":[{"type":"Ext.data.Batch","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">batch</a> that was processed,\ncontaining all operations in their current state after processing</p>\n","name":"batch","html_type":"<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>"},{"type":"Object","tagname":"params","doc":"<p>The options argument that was originally passed into sync</p>\n","name":"options","html_type":"Object"}],"doc":"<p>The function to be called upon successful completion of the sync. The\nsuccess function is called only if no exceptions were reported in any operations. If one or more exceptions\noccurred then the failure function will be called instead. The success function is called\nwith the following parameters:</p>\n","name":"success","optional":true,"html_type":"Function"},{"type":"Function","tagname":"params","properties":[{"type":"Ext.data.Batch","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a> that was processed, containing all\noperations in their current state after processing</p>\n","name":"batch","html_type":"<a href=\"#!/api/Ext.data.Batch\" rel=\"Ext.data.Batch\" class=\"docClass\">Ext.data.Batch</a>"},{"type":"Object","tagname":"params","doc":"<p>The options argument that was originally passed into sync</p>\n","name":"options","html_type":"Object"}],"doc":"<p>The function to be called upon unsuccessful completion of the sync. The\nfailure function is called when one or more operations returns an exception during processing (even if some\noperations were also successful). In this case you can check the batch's <a href=\"#!/api/Ext.data.Batch-property-exceptions\" rel=\"Ext.data.Batch-property-exceptions\" class=\"docClass\">exceptions</a> array to see exactly which operations had exceptions. The failure function is called with the\nfollowing parameters:</p>\n","name":"failure","optional":true,"html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope in which to execute any callbacks (i.e. the <code>this</code> object inside\nthe callback, success and/or failure functions). Defaults to the store's proxy.</p>\n","name":"scope","optional":true,"html_type":"Object"}],"doc":"<p>Object containing one or more properties supported by the sync method (these get\npassed along to the underlying proxy's <a href=\"#!/api/Ext.data.proxy.Proxy-method-batch\" rel=\"Ext.data.proxy.Proxy-method-batch\" class=\"docClass\">batch</a> method):</p>\n","name":"options","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":745,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"return":{"type":"Ext.data.Store","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},"private":null,"static":null,"name":"sync","doc":"<p>Synchronizes the store with its <a href=\"#!/api/Ext.data.AbstractStore-cfg-proxy\" rel=\"Ext.data.AbstractStore-cfg-proxy\" class=\"docClass\">proxy</a>. This asks the proxy to batch together any new, updated\nand deleted records in the store, updating the store's internal representation of the records\nas each operation completes.</p>\n","chainable":false,"inheritdoc":null,"id":"method-sync","fires":["<a href=\"#!/api/Ext.data.AbstractStore-event-beforesync\" rel=\"Ext.data.AbstractStore-event-beforesync\" class=\"docClass\">beforesync</a>"],"linenr":null},{"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"linenr":true,"fires":true},"short_doc":"Shorthand for removeListener. ...","method_calls":null,"owner":"Ext.util.Observable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The type of event the handler was associated with.</p>\n\n","name":"eventName","html_type":"String"},{"type":"Function","tagname":"params","doc":"<p>The handler to remove. <strong>This must be a reference to the function passed into the\n<a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> call.</strong></p>\n\n","name":"fn","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope originally specified for the handler. It must be the same as the\nscope argument specified in the original call to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">addListener</a> or the listener will not be removed.</p>\n\n","name":"scope","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":1128,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Observable.js"}],"return":null,"private":null,"static":null,"name":"un","doc":"<p>Shorthand for <a href=\"#!/api/Ext.util.Observable-method-removeListener\" rel=\"Ext.util.Observable-method-removeListener\" class=\"docClass\">removeListener</a>.</p>\n","chainable":null,"throws":null,"inheritdoc":null,"id":"method-un","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getUpdatedRecords"],"owner":"Ext.data.AbstractStore","inheritable":null,"params":[{"type":"Object","name":"options","html_type":"Object"}],"tagname":"method","files":[{"linenr":504,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"private":true,"static":null,"name":"update","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-update","fires":[],"linenr":504},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getGroupString"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"records","html_type":"Object"}],"tagname":"method","files":[{"linenr":1085,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"updateGroupsOnAdd","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-updateGroupsOnAdd","fires":[],"linenr":1085},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getGroupString"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"records","html_type":"Object"}],"tagname":"method","files":[{"linenr":1105,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"updateGroupsOnRemove","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-updateGroupsOnRemove","fires":[],"linenr":1105},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["generateComparator","getCount","getGroupField","getGroupString"],"owner":"Ext.data.Store","inheritable":null,"params":[{"type":"Object","name":"record","html_type":"Object"},{"type":"Object","name":"modifiedFieldNames","html_type":"Object"}],"tagname":"method","files":[{"linenr":1125,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"private":true,"static":null,"name":"updateGroupsOnUpdate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-updateGroupsOnUpdate","fires":[],"linenr":1125},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":176,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-addConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":256,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addInheritableStatics","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addInheritableStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"member","html_type":"Object"}],"tagname":"method","files":[{"linenr":353,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addMember","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addMember","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add methods / properties to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":296,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"addMembers","doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addMembers","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add / override static properties of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":218,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"addStatics","doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"xtype","html_type":"Object"}],"tagname":"method","files":[{"linenr":730,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addXtype","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addXtype","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Borrow another class' members to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Ext.Base","tagname":"params","doc":"<p>The class to borrow members from</p>\n","name":"fromClass","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"type":"Array/String","tagname":"params","doc":"<p>The names of the members to borrow</p>\n","name":"members","html_type":"Array/String"}],"tagname":"method","files":[{"linenr":383,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":true,"name":"borrow","doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-borrow","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create aliases for existing prototype methods. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","name":"alias","html_type":"String/Object"},{"type":"String/Object","tagname":"params","doc":"<p>The original method name</p>\n","name":"origin","html_type":"String/Object"}],"tagname":"method","files":[{"linenr":696,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"createAlias","doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"static-method-createAlias","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":81,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"extend","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-extend","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the current class' name in string format. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":677,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"String","properties":null,"doc":"<p>className</p>\n","name":"return","html_type":"String"},"static":true,"private":null,"name":"getName","doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"static-method-getName","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds members to class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":373,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"implement","doc":"<p>Adds members to class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-implement","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n","version":"4.1"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Used internally by the mixins pre-processor ...","method_calls":["addConfig","hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"mixinClass","html_type":"Object"}],"tagname":"method","files":[{"linenr":595,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"mixin","doc":"<p>Used internally by the mixins pre-processor</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-mixin","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":162,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"onExtended","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-onExtended","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Override members of this class. ...","method_calls":["addConfig","addInheritableStatics"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":452,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this class</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"override","doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","chainable":true,"inheritdoc":null,"id":"static-method-override","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n","version":"4.1.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"triggerExtended","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-triggerExtended","fires":null,"linenr":null},{"autodetected":{},"short_doc":"Fired when a Model instance has been added to this Store. ...","since":"1.1.0","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"<p>The store</p>\n","name":"store","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Ext.data.Model[]","tagname":"params","doc":"<p>The Model instances that were added</p>\n","name":"records","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"type":"Number","tagname":"params","doc":"<p>The index at which the instances were inserted</p>\n","name":"index","html_type":"Number"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":239,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"add","doc":"<p>Fired when a Model instance has been added to this Store.</p>\n","id":"event-add"},{"autodetected":{},"short_doc":"Fires before a request is made for a new data object. ...","since":"1.1.0","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"<p>This Store</p>\n","name":"store","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Ext.data.Operation","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a> object that will be passed to the Proxy to\nload the Store</p>\n","name":"operation","html_type":"<a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":302,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"beforeload","doc":"<p>Fires before a request is made for a new data object. If the beforeload handler returns false the load\naction will be canceled.</p>\n","id":"event-beforeload"},{"autodetected":{},"short_doc":"Fires before a prefetch occurs. ...","owner":"Ext.data.Store","params":[{"type":"Ext.data.Store","tagname":"params","doc":"\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Ext.data.Operation","tagname":"params","doc":"<p>The associated operation.</p>\n","name":"operation","html_type":"<a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":465,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"name":"beforeprefetch","doc":"<p>Fires before a prefetch occurs. Return <code>false</code> to cancel.</p>\n","id":"event-beforeprefetch"},{"autodetected":{},"short_doc":"Fired before a call to sync is executed. ...","owner":"Ext.data.AbstractStore","params":[{"type":"Object","tagname":"params","doc":"<p>Hash of all records to be synchronized, broken down into create, update and destroy</p>\n","name":"options","html_type":"Object"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":330,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"beforesync","doc":"<p>Fired before a call to <a href=\"#!/api/Ext.data.AbstractStore-method-sync\" rel=\"Ext.data.AbstractStore-method-sync\" class=\"docClass\">sync</a> is executed. Return false from any listener to cancel the sync</p>\n","id":"event-beforesync"},{"autodetected":{},"short_doc":"Fired at the end of the remove method when all records in the passed array have been removed. ...","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"<p>The Store object</p>\n","name":"store","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Ext.data.Model[]","tagname":"params","doc":"<p>The array of records that were removed (In the order they appear in the Store)</p>\n","name":"records","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"type":"Number[]","tagname":"params","doc":"<p>The indexes of the records that were removed</p>\n","name":"indexes","html_type":"Number[]"},{"type":"Boolean","tagname":"params","doc":"<p><code>true</code> if the child nodes are being removed so they can be moved to another position in this Store.</p>\n","name":"isMove","html_type":"Boolean"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":261,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"bulkremove","doc":"<p>Fired at the <em>end</em> of the <a href=\"#!/api/Ext.data.Store-method-remove\" rel=\"Ext.data.Store-method-remove\" class=\"docClass\">remove</a> method when all records in the passed array have been removed.</p>\n\n<p>If many records may be removed in one go, then it is more efficient to listen for this event\nand perform any processing for a bulk remove than to listen for many <a href=\"#!/api/Ext.data.AbstractStore-event-remove\" rel=\"Ext.data.AbstractStore-event-remove\" class=\"docClass\">remove</a> events.</p>\n","id":"event-bulkremove"},{"autodetected":{},"short_doc":"Fired after the removeAll method is called. ...","since":"1.1.0","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":335,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"clear","doc":"<p>Fired after the <a href=\"#!/api/Ext.data.AbstractStore-method-removeAll\" rel=\"Ext.data.AbstractStore-method-removeAll\" class=\"docClass\">removeAll</a> method is called.</p>\n","id":"event-clear"},{"autodetected":{},"short_doc":"Fires whenever the records in the Store have changed in some way - this could include adding or removing\nrecords, or ...","since":"1.1.0","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"<p>The data store</p>\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":287,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"datachanged","doc":"<p>Fires whenever the records in the Store have changed in some way - this could include adding or removing\nrecords, or updating the data in existing records</p>\n","id":"event-datachanged"},{"autodetected":{},"short_doc":"Fired whenever the filter set changes. ...","owner":"Ext.data.Store","params":[{"type":"Ext.data.Store","tagname":"params","doc":"<p>The store.</p>\n","name":"store","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Ext.util.Filter[]","tagname":"params","doc":"<p>The array of Filter objects.</p>\n","name":"filters","html_type":"<a href=\"#!/api/Ext.util.Filter\" rel=\"Ext.util.Filter\" class=\"docClass\">Ext.util.Filter</a>[]"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":485,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"name":"filterchange","doc":"<p>Fired whenever the filter set changes.</p>\n","id":"event-filterchange"},{"autodetected":{},"short_doc":"Fired whenever the grouping in the grid changes. ...","owner":"Ext.data.Store","params":[{"type":"Ext.data.Store","tagname":"params","doc":"<p>The store.</p>\n","name":"store","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Ext.util.Grouper[]","tagname":"params","doc":"<p>The array of Grouper objects.</p>\n","name":"groupers","html_type":"<a href=\"#!/api/Ext.util.Grouper\" rel=\"Ext.util.Grouper\" class=\"docClass\">Ext.util.Grouper</a>[]"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":471,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"name":"groupchange","doc":"<p>Fired whenever the grouping in the grid changes.</p>\n","id":"event-groupchange"},{"autodetected":{},"short_doc":"Fires whenever the store reads data from a remote data source. ...","since":"1.1.0","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Ext.data.Model[]","tagname":"params","doc":"<p>An array of records</p>\n","name":"records","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"type":"Boolean","tagname":"params","doc":"<p>True if the operation was successful.</p>\n","name":"successful","html_type":"Boolean"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":312,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"load","doc":"<p>Fires whenever the store reads data from a remote data source.</p>\n","id":"event-load"},{"autodetected":{},"short_doc":"Fires when this store's underlying reader (available via the proxy) provides new metadata. ...","since":"1.1.0","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Object","tagname":"params","doc":"<p>The JSON metadata</p>\n","name":"meta","html_type":"Object"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":341,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"metachange","doc":"<p>Fires when this store's underlying reader (available via the proxy) provides new metadata.\nMetadata usually consists of new field definitions, but can include any configuration data\nrequired by an application, and can be processed as needed in the event handler.\nThis event is currently only fired for JsonReaders.</p>\n","id":"event-metachange"},{"autodetected":{},"short_doc":"Fires whenever records have been prefetched. ...","owner":"Ext.data.Store","params":[{"type":"Ext.data.Store","tagname":"params","doc":"\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Ext.data.Model[]","tagname":"params","doc":"<p>An array of records.</p>\n","name":"records","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>[]"},{"type":"Boolean","tagname":"params","doc":"<p><code>true</code> if the operation was successful.</p>\n","name":"successful","html_type":"Boolean"},{"type":"Ext.data.Operation","tagname":"params","doc":"<p>The associated operation.</p>\n","name":"operation","html_type":"<a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":477,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/Store.js"}],"name":"prefetch","doc":"<p>Fires whenever records have been prefetched.</p>\n","id":"event-prefetch"},{"autodetected":{},"short_doc":"Fires when the data cache has changed in a bulk manner (e.g., it has been sorted, filtered, etc.) and a\nwidget that i...","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"<p>The data store</p>\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":295,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"refresh","doc":"<p>Fires when the data cache has changed in a bulk manner (e.g., it has been sorted, filtered, etc.) and a\nwidget that is using this Store as a Record cache should refresh its view.</p>\n","id":"event-refresh"},{"autodetected":{},"short_doc":"Fired when a Model instance has been removed from this Store. ...","since":"1.1.0","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"<p>The Store object</p>\n","name":"store","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Ext.data.Model","tagname":"params","doc":"<p>The record that was removed</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"type":"Number","tagname":"params","doc":"<p>The index of the record that was removed</p>\n","name":"index","html_type":"Number"},{"type":"Boolean","tagname":"params","doc":"<p><code>true</code> if the child node is being removed so it can be moved to another position in this Store.</p>\n","name":"isMove","html_type":"Boolean"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":248,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"remove","doc":"<p>Fired when a Model instance has been removed from this Store.</p>\n\n<p><strong>If many records may be removed in one go, then it is more efficient to listen for the <a href=\"#!/api/Ext.data.AbstractStore-event-bulkremove\" rel=\"Ext.data.AbstractStore-event-bulkremove\" class=\"docClass\">bulkremove</a> event\nand perform any processing for a bulk remove than to listen for this <a href=\"#!/api/Ext.data.AbstractStore-event-remove\" rel=\"Ext.data.AbstractStore-event-remove\" class=\"docClass\">remove</a> event.</strong></p>\n","id":"event-remove"},{"autodetected":{},"short_doc":"Fires when a Model instance has been updated. ...","since":"1.1.0","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"\n","name":"this","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Ext.data.Model","tagname":"params","doc":"<p>The Model instance that was updated</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"},{"type":"String","tagname":"params","doc":"<p>The update operation being performed. Value may be one of:</p>\n\n<pre><code><a href=\"#!/api/Ext.data.Model-static-property-EDIT\" rel=\"Ext.data.Model-static-property-EDIT\" class=\"docClass\">Ext.data.Model.EDIT</a>\n<a href=\"#!/api/Ext.data.Model-static-property-REJECT\" rel=\"Ext.data.Model-static-property-REJECT\" class=\"docClass\">Ext.data.Model.REJECT</a>\n<a href=\"#!/api/Ext.data.Model-static-property-COMMIT\" rel=\"Ext.data.Model-static-property-COMMIT\" class=\"docClass\">Ext.data.Model.COMMIT</a>\n</code></pre>\n","name":"operation","html_type":"String"},{"type":"String[]","tagname":"params","doc":"<p>Array of field names changed during edit.</p>\n","name":"modifiedFieldNames","html_type":"String[]"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":273,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"update","doc":"<p>Fires when a Model instance has been updated.</p>\n","id":"event-update"},{"autodetected":{},"short_doc":"Fires whenever a successful write has been made via the configured Proxy ...","since":"3.4.0","owner":"Ext.data.AbstractStore","params":[{"type":"Ext.data.Store","tagname":"params","doc":"<p>This Store</p>\n","name":"store","html_type":"<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>"},{"type":"Ext.data.Operation","tagname":"params","doc":"<p>The <a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Operation</a> object that was used in\nthe write</p>\n","name":"operation","html_type":"<a href=\"#!/api/Ext.data.Operation\" rel=\"Ext.data.Operation\" class=\"docClass\">Ext.data.Operation</a>"},{"type":"Object","ext4_auto_param":true,"tagname":"params","name":"eOpts","doc":"<p>The options object passed to <a href=\"#!/api/Ext.util.Observable-method-addListener\" rel=\"Ext.util.Observable-method-addListener\" class=\"docClass\">Ext.util.Observable.addListener</a>.</p>\n\n\n\n","html_type":"Object"}],"tagname":"event","files":[{"linenr":321,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/data/AbstractStore.js"}],"name":"write","doc":"<p>Fires whenever a successful write has been made via the configured <a href=\"#!/api/Ext.data.AbstractStore-cfg-proxy\" rel=\"Ext.data.AbstractStore-cfg-proxy\" class=\"docClass\">Proxy</a></p>\n","id":"event-write"}],"author":[{"email":null,"tagname":"author","name":"Ed Spencer"}],"alternateClassNames":[],"code_type":"ext_define","mixins":[],"doc":"<p>Small helper class to make creating <a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>s from Array data easier. An ArrayStore will be\nautomatically configured with a <a href=\"#!/api/Ext.data.reader.Array\" rel=\"Ext.data.reader.Array\" class=\"docClass\">Ext.data.reader.Array</a>.</p>\n\n<p>A store configuration would be something like:</p>\n\n<pre><code>var store = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.ArrayStore\" rel=\"Ext.data.ArrayStore\" class=\"docClass\">Ext.data.ArrayStore</a>', {\n    // store configs\n    storeId: 'myStore',\n    // reader configs\n    fields: [\n       'company',\n       {name: 'price', type: 'float'},\n       {name: 'change', type: 'float'},\n       {name: 'pctChange', type: 'float'},\n       {name: 'lastChange', type: 'date', dateFormat: 'n/j h:ia'}\n    ]\n});\n</code></pre>\n\n<p>This store is configured to consume a returned object of the form:</p>\n\n<pre><code>var myData = [\n    ['3m Co',71.72,0.02,0.03,'9/1 12:00am'],\n    ['Alcoa Inc',29.01,0.42,1.47,'9/1 12:00am'],\n    ['Boeing Co.',75.43,0.53,0.71,'9/1 12:00am'],\n    ['Hewlett-Packard Co.',36.53,-0.03,-0.08,'9/1 12:00am'],\n    ['Wal-Mart Stores, Inc.',45.45,0.73,1.63,'9/1 12:00am']\n];\n</code></pre>\n\n<p>An object literal of this form could also be used as the <a href=\"#!/api/Ext.data.ArrayStore-cfg-data\" rel=\"Ext.data.ArrayStore-cfg-data\" class=\"docClass\">data</a> config option.</p>\n","name":"Ext.data.ArrayStore","id":"class-Ext.data.ArrayStore"}