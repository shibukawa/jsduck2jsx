{"autodetected":{"aliases":true,"requires":true,"uses":true,"extends":true,"members":true,"alternateClassNames":true,"code_type":true,"mixins":true},"short_doc":"This mixin provides a common interface for objects that can be positioned, e.g. ...","aliases":{},"requires":[],"files":[{"linenr":22,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"tagname":"class","uses":[],"extends":"Ext.Base","members":[{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'Ext.Base'","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":763,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"$className","doc":"\n","inheritdoc":null,"id":"property-S-className","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"RegExp","short_doc":" ...","default":"/^([a-z]+)-([a-z]+)(\\?)?$/","owner":"Ext.util.Positionable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":30,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"private":true,"static":null,"name":"_alignRe","doc":"\n","inheritdoc":null,"id":"property-_alignRe","html_type":"RegExp","linenr":30},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"['position', 'top', 'left']","owner":"Ext.util.Positionable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":28,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"private":true,"static":null,"name":"_positionTopLeft","doc":"\n","inheritdoc":null,"id":"property-_positionTopLeft","html_type":"Array","linenr":28},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":772,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configMap","doc":"\n","inheritdoc":null,"id":"property-configMap","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"By default this method does nothing but return the position spec passed to it. ...","default":null,"owner":"Ext.util.Positionable","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":372,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"private":true,"static":null,"name":"convertPositionSpec","doc":"<p>By default this method does nothing but return the position spec passed to it. In\nrtl mode it is overridden to convert \"l\" to \"r\" and vice versa when required.</p>\n","inheritdoc":null,"id":"property-convertPositionSpec","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":769,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigList","doc":"\n","inheritdoc":null,"id":"property-initConfigList","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":775,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigMap","doc":"\n","inheritdoc":null,"id":"property-initConfigMap","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"isInstance","doc":"\n","inheritdoc":null,"id":"property-isInstance","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.Class","short_doc":"Get the reference to the current class from which this object was instantiated. ...","default":null,"owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1045,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"private":null,"static":null,"name":"self","properties":null,"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","inheritdoc":null,"id":"property-self","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","linenr":null},{"autodetected":{"type":true,"default":true,"readonly":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":true,"readonly":null,"tagname":"property","files":[{"linenr":133,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"$onExtended","doc":"\n","inheritdoc":null,"id":"static-property-S-onExtended","html_type":"Array","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"private ==>  used outside of core\nTODO: currently only used by ToolTip. ...","method_calls":["getConstrainVector"],"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"Object","name":"xy","html_type":"Object"},{"type":"Object","name":"parent","html_type":"Object"}],"tagname":"method","files":[{"linenr":195,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"private":true,"static":null,"name":"adjustForConstraints","doc":"<p>private ==>  used outside of core\nTODO: currently only used by ToolTip. does this method belong here?</p>\n","chainable":false,"inheritdoc":null,"id":"method-adjustForConstraints","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Stub implementation called after positioning. ...","method_calls":null,"owner":"Ext.util.Positionable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":32,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"private":true,"static":null,"name":"afterSetPosition","doc":"<p>Stub implementation called after positioning.\nMay be implemented in subclasses. AbstractComponent has an implementation.</p>\n","chainable":null,"inheritdoc":null,"id":"method-afterSetPosition","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Aligns the element with another element relative to the specified anchor points. ...","method_calls":["getAlignToXY","setXY"],"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"Ext.util.Positionable/HTMLElement/String","tagname":"params","doc":"<p>The Positionable,\nHTMLElement, or id of the element to align to.</p>\n","name":"element","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>/HTMLElement/String"},{"type":"String","default":"\"tl-bl?\"","tagname":"params","doc":"<p>The position to align to</p>\n","name":"position","optional":true,"html_type":"String"},{"type":"Number[]","tagname":"params","doc":"<p>Offset the positioning by [x, y]</p>\n","name":"offsets","optional":true,"html_type":"Number[]"},{"type":"Boolean/Object","tagname":"params","doc":"<p>true for the default animation or a standard\nElement animation config object</p>\n","name":"animate","optional":true,"html_type":"Boolean/Object"}],"tagname":"method","files":[{"linenr":206,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Ext.util.Positionable","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"private":null,"static":null,"name":"alignTo","doc":"<p>Aligns the element with another element relative to the specified anchor points. If\nthe other element is the document it aligns it to the viewport. The position\nparameter is optional, and can be specified in any one of the following formats:</p>\n\n<ul>\n<li><strong>Blank</strong>: Defaults to aligning the element's top-left corner to the target's\nbottom-left corner (\"tl-bl\").</li>\n<li><strong>One anchor (deprecated)</strong>: The passed anchor position is used as the target\nelement's anchor point.  The element being aligned will position its top-left\ncorner (tl) to that point. <em>This method has been deprecated in favor of the newer\ntwo anchor syntax below</em>.</li>\n<li><strong>Two anchors</strong>: If two values from the table below are passed separated by a dash,\nthe first value is used as the element's anchor point, and the second value is\nused as the target's anchor point.</li>\n</ul>\n\n\n<p>In addition to the anchor points, the position parameter also supports the \"?\"\ncharacter. If \"?\" is passed at the end of the position string, the element will\nattempt to align as specified, but the position will be adjusted to constrain to\nthe viewport if necessary. Note that the element being aligned might be swapped to\nalign to a different position than that specified in order to enforce the viewport\nconstraints. Following are all of the supported anchor positions:</p>\n\n<pre>Value  Description\n-----  -----------------------------\ntl     The top left corner (default)\nt      The center of the top edge\ntr     The top right corner\nl      The center of the left edge\nc      In the center of the element\nr      The center of the right edge\nbl     The bottom left corner\nb      The center of the bottom edge\nbr     The bottom right corner\n</pre>\n\n\n<p>Example Usage:</p>\n\n<pre><code>// align el to other-el using the default positioning\n// (\"tl-bl\", non-constrained)\nel.alignTo(\"other-el\");\n\n// align the top left corner of el with the top right corner of other-el\n// (constrained to viewport)\nel.alignTo(\"other-el\", \"tr?\");\n\n// align the bottom right corner of el with the center left edge of other-el\nel.alignTo(\"other-el\", \"br-l?\");\n\n// align the center of el with the bottom left corner of other-el and\n// adjust the x position by -6 pixels (and the y position by 0)\nel.alignTo(\"other-el\", \"c-bl\", [-6, 0]);\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"method-alignTo","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Anchors an element to another element and realigns it when the window is resized. ...","method_calls":["alignTo","getAnchor","removeAnchor"],"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"Ext.util.Positionable/HTMLElement/String","tagname":"params","doc":"<p>The Positionable,\nHTMLElement, or id of the element to align to.</p>\n","name":"element","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>/HTMLElement/String"},{"type":"String","default":"\"tl-bl?\"","tagname":"params","doc":"<p>The position to align to</p>\n","name":"position","optional":true,"html_type":"String"},{"type":"Number[]","tagname":"params","doc":"<p>Offset the positioning by [x, y]</p>\n","name":"offsets","optional":true,"html_type":"Number[]"},{"type":"Boolean/Object","tagname":"params","doc":"<p>true for the default animation or a standard\nElement animation config object</p>\n","name":"animate","optional":true,"html_type":"Boolean/Object"},{"type":"Boolean/Number","default":"50","tagname":"params","doc":"<p>True to monitor body scroll and\nreposition. If this parameter is a number, it is used as the buffer delay in\nmilliseconds.</p>\n","name":"monitorScroll","optional":true,"html_type":"Boolean/Number"},{"type":"Function","tagname":"params","doc":"<p>The function to call after the animation finishes</p>\n","name":"callback","optional":true,"html_type":"Function"}],"tagname":"method","files":[{"linenr":275,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Ext.util.Positionable","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"private":null,"static":null,"name":"anchorTo","doc":"<p>Anchors an element to another element and realigns it when the window is resized.</p>\n","chainable":true,"inheritdoc":null,"id":"method-anchorTo","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Calculates x,y coordinates specified by the anchor position on the element, adding\nextraX and extraY values. ...","method_calls":["getHeight","getWidth"],"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"String","default":"'tl'","tagname":"params","doc":"<p>The specified anchor position.\nSee <a href=\"#!/api/Ext.util.Positionable-method-alignTo\" rel=\"Ext.util.Positionable-method-alignTo\" class=\"docClass\">alignTo</a> for details on supported anchor positions.</p>\n","name":"anchor","optional":true,"html_type":"String"},{"type":"Number","tagname":"params","doc":"<p>value to be added to the x coordinate</p>\n","name":"extraX","optional":true,"html_type":"Number"},{"type":"Number","tagname":"params","doc":"<p>value to be added to the y coordinate</p>\n","name":"extraY","optional":true,"html_type":"Number"},{"type":"Object","tagname":"params","doc":"<p>An object containing the size to use for calculating anchor\nposition {width: (target width), height: (target height)} (defaults to the\nelement's current size)</p>\n","name":"size","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":315,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Number[]","properties":null,"doc":"<p>[x, y] An array containing the element's x and y coordinates</p>\n","name":"return","html_type":"Number[]"},"private":true,"static":null,"name":"calculateAnchorXY","doc":"<p>Calculates x,y coordinates specified by the anchor position on the element, adding\nextraX and extraY values.</p>\n","chainable":false,"inheritdoc":null,"id":"method-calculateAnchorXY","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Calculates the new [x,y] position to move this Positionable into a constrain region. ...","method_calls":["getPosition"],"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"String/HTMLElement/Ext.Element/Ext.util.Region","tagname":"params","doc":"<p>The Element or <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Region</a>\ninto which this Component is to be constrained. Defaults to the element into which this Positionable\nwas rendered, or this Component's {@link <a href=\"#!/api/Ext.Component-cfg-constrainTo\" rel=\"Ext.Component-cfg-constrainTo\" class=\"docClass\">Ext.Component.constrainTo</a>.</p>\n","name":"constrainTo","optional":true,"html_type":"String/HTMLElement/<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>/<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},{"type":"Number[]","tagname":"params","doc":"<p>A proposed <code>[X, Y]</code> position to test for validity\nand to coerce into constraints instead of using this Positionable's current position.</p>\n","name":"proposedPosition","optional":true,"html_type":"Number[]"},{"type":"Boolean","tagname":"params","doc":"<p>The proposedPosition is local <em>(relative to floatParent if a floating Component)</em></p>\n","name":"local","optional":true,"html_type":"Boolean"},{"type":"Number[]","tagname":"params","doc":"<p>A proposed <code>[width, height]</code> size to use when calculating\nconstraints instead of using this Positionable's current size.</p>\n","name":"proposedSize","optional":true,"html_type":"Number[]"}],"tagname":"method","files":[{"linenr":578,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Number[]","properties":null,"doc":"<p><strong>If</strong> the element <em>needs</em> to be translated, the new <code>[X, Y]</code> position within\nconstraints if possible, giving priority to keeping the top and left edge in the constrain region.\nOtherwise, <code>false</code>.</p>\n","name":"return","html_type":"Number[]"},"private":null,"static":null,"name":"calculateConstrainedPosition","doc":"<p>Calculates the new [x,y] position to move this Positionable into a constrain region.</p>\n\n<p>By default, this Positionable is constrained to be within the container it was added to, or the element it was\nrendered to.</p>\n\n<p>Priority is given to constraining the top and left within the constraint.</p>\n\n<p>An alternative constraint may be passed.</p>\n","chainable":false,"inheritdoc":null,"id":"method-calculateConstrainedPosition","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":1269,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the overridden method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callOverridden","doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"method-callOverridden","deprecated":{"text":"<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the \"parent\" method of the current method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":846,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the parent method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callParent","doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","chainable":false,"inheritdoc":null,"id":"method-callParent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":961,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the superclass method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callSuper","doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","chainable":false,"inheritdoc":null,"id":"method-callSuper","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":766,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configClass","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-configClass","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.state.Stateful","link":"<a href=\"#!/api/Ext.state.Stateful-method-destroy\" rel=\"Ext.state.Stateful-method-destroy\" class=\"docClass\">Ext.state.Stateful.destroy</a>","name":"destroy"},{"owner":"Ext.AbstractComponent","link":"<a href=\"#!/api/Ext.AbstractComponent-method-destroy\" rel=\"Ext.AbstractComponent-method-destroy\" class=\"docClass\">Ext.AbstractComponent.destroy</a>","name":"destroy"},{"owner":"Ext.AbstractPlugin","link":"<a href=\"#!/api/Ext.AbstractPlugin-method-destroy\" rel=\"Ext.AbstractPlugin-method-destroy\" class=\"docClass\">Ext.AbstractPlugin.destroy</a>","name":"destroy"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1261,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"destroy","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-destroy","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the x,y coordinates to align this element with another element. ...","method_calls":["convertPositionSpec","getAnchorToXY","getAnchorXY","getHeight","getWidth"],"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"Ext.util.Positionable/HTMLElement/String","tagname":"params","doc":"<p>The Positionable,\nHTMLElement, or id of the element to align to.</p>\n","name":"element","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>/HTMLElement/String"},{"type":"String","default":"\"tl-bl?\"","tagname":"params","doc":"<p>The position to align to</p>\n","name":"position","optional":true,"html_type":"String"},{"type":"Number[]","tagname":"params","doc":"<p>Offset the positioning by [x, y]</p>\n","name":"offsets","optional":true,"html_type":"Number[]"}],"tagname":"method","files":[{"linenr":379,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Number[]","properties":null,"doc":"<p>[x, y]</p>\n","name":"return","html_type":"Number[]"},"private":null,"static":null,"name":"getAlignToXY","doc":"<p>Gets the x,y coordinates to align this element with another element. See\n<a href=\"#!/api/Ext.util.Positionable-method-alignTo\" rel=\"Ext.util.Positionable-method-alignTo\" class=\"docClass\">alignTo</a> for more info on the supported position values.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getAlignToXY","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"private ...","method_calls":null,"owner":"Ext.util.Positionable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":478,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"private":true,"static":null,"name":"getAnchor","doc":"<p>private</p>\n","chainable":false,"inheritdoc":null,"id":"method-getAnchor","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the x,y coordinates of an element specified by the anchor position on the\nelement. ...","method_calls":null,"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"Ext.dom.Element","tagname":"params","doc":"<p>The element</p>\n","name":"el","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"type":"String","default":"'tl'","tagname":"params","doc":"<p>The specified anchor position.\nSee <a href=\"#!/api/Ext.util.Positionable-method-alignTo\" rel=\"Ext.util.Positionable-method-alignTo\" class=\"docClass\">alignTo</a> for details on supported anchor positions.</p>\n","name":"anchor","optional":true,"html_type":"String"},{"type":"Boolean","tagname":"params","doc":"<p>True to get the local (element top/left-relative) anchor\nposition instead of page coordinates</p>\n","name":"local","optional":true,"html_type":"Boolean"},{"type":"Object","tagname":"params","doc":"<p>An object containing the size to use for calculating anchor\nposition {width: (target width), height: (target height)} (defaults to the\nelement's current size)</p>\n","name":"size","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":41,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Number[]","properties":null,"doc":"<p>[x, y] An array containing the element's x and y coordinates</p>\n","name":"return","html_type":"Number[]"},"private":true,"static":null,"name":"getAnchorToXY","doc":"<p>Gets the x,y coordinates of an element specified by the anchor position on the\nelement.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getAnchorToXY","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the x,y coordinates specified by the anchor position on the element. ...","method_calls":["calculateAnchorXY","getXY"],"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"String","default":"'tl'","tagname":"params","doc":"<p>The specified anchor position.\nSee <a href=\"#!/api/Ext.util.Positionable-method-alignTo\" rel=\"Ext.util.Positionable-method-alignTo\" class=\"docClass\">alignTo</a> for details on supported anchor positions.</p>\n","name":"anchor","optional":true,"html_type":"String"},{"type":"Boolean","tagname":"params","doc":"<p>True to get the local (element top/left-relative) anchor\nposition instead of page coordinates</p>\n","name":"local","optional":true,"html_type":"Boolean"},{"type":"Object","tagname":"params","doc":"<p>An object containing the size to use for calculating anchor\nposition {width: (target width), height: (target height)} (defaults to the\nelement's current size)</p>\n","name":"size","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":495,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Number[]","properties":null,"doc":"<p>[x, y] An array containing the element's x and y coordinates</p>\n","name":"return","html_type":"Number[]"},"private":null,"static":null,"name":"getAnchorXY","doc":"<p>Gets the x,y coordinates specified by the anchor position on the element.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getAnchorXY","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the size of the element's borders and padding. ...","method_calls":null,"owner":"Ext.util.Positionable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":59,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Object","properties":null,"doc":"<p>an object with the following numeric properties\n- beforeX\n- afterX\n- beforeY\n- afterY</p>\n","name":"return","html_type":"Object"},"private":true,"static":null,"name":"getBorderPadding","doc":"<p>Returns the size of the element's borders and padding.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getBorderPadding","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Return an object defining the area of this Element which can be passed to\nsetBox to set another Element's size/locati...","method_calls":["getBorderPadding","getHeight","getLocalXY","getWidth","getXY"],"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"Boolean","tagname":"params","doc":"<p>If true a box for the content of the element is\nreturned.</p>\n","name":"contentBox","optional":true,"html_type":"Boolean"},{"type":"Boolean","tagname":"params","doc":"<p>If true the element's left and top relative to its\n<code>offsetParent</code> are returned instead of page x/y.</p>\n","name":"local","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":519,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Object","properties":null,"doc":"<p>box An object in the format:</p>\n\n<pre><code>{\n    x: &lt;Element's X position&gt;,\n    y: &lt;Element's Y position&gt;,\n    left: &lt;Element's X position (an alias for x)&gt;,\n    top: &lt;Element's Y position (an alias for y)&gt;,\n    width: &lt;Element's width&gt;,\n    height: &lt;Element's height&gt;,\n    bottom: &lt;Element's lower bound&gt;,\n    right: &lt;Element's rightmost bound&gt;\n}\n</code></pre>\n\n<p>The returned object may also be addressed as an Array where index 0 contains the X\nposition and index 1 contains the Y position. The result may also be used for\n<a href=\"#!/api/Ext.util.Positionable-method-setXY\" rel=\"Ext.util.Positionable-method-setXY\" class=\"docClass\">setXY</a></p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getBox","doc":"<p>Return an object defining the area of this Element which can be passed to\n<a href=\"#!/api/Ext.util.Positionable-method-setBox\" rel=\"Ext.util.Positionable-method-setBox\" class=\"docClass\">setBox</a> to set another Element's size/location to match this element.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getBox","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":1196,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"getConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the [X, Y] vector by which this Positionable's element must be translated to make a best\nattempt to constrain...","method_calls":["getRegion"],"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"Ext.util.Positionable/HTMLElement/String/Ext.util.Region","tagname":"params","doc":"<p>The\nPositionable, HTMLElement, element id, or Region into which the element is to be\nconstrained.</p>\n","name":"constrainTo","optional":true,"html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>/HTMLElement/String/<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},{"type":"Number[]","tagname":"params","doc":"<p>A proposed <code>[X, Y]</code> position to test for validity\nand to produce a vector for instead of using the element's current position</p>\n","name":"proposedPosition","optional":true,"html_type":"Number[]"},{"type":"Number[]","tagname":"params","doc":"<p>A proposed <code>[width, height]</code> size to constrain\ninstead of using the element's current size</p>\n","name":"proposedSize","optional":true,"html_type":"Number[]"}],"tagname":"method","files":[{"linenr":635,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Number[]/Boolean","properties":null,"doc":"<p><strong>If</strong> the element <em>needs</em> to be translated, an <code>[X, Y]</code>\nvector by which this element must be translated. Otherwise, <code>false</code>.</p>\n","name":"return","html_type":"Number[]/Boolean"},"private":null,"static":null,"name":"getConstrainVector","doc":"<p>Returns the <code>[X, Y]</code> vector by which this Positionable's element must be translated to make a best\nattempt to constrain within the passed constraint. Returns <code>false</code> if the element\ndoes not need to be moved.</p>\n\n<p>Priority is given to constraining the top and left within the constraint.</p>\n\n<p>The constraint may either be an existing element into which the element is to be\nconstrained, or a <a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Region</a> into which this element is to be\nconstrained.</p>\n\n<p>By default, any extra shadow around the element is <strong>not</strong> included in the constrain calculations - the edges\nof the element are used as the element bounds. To constrain the shadow within the constrain region, set the\n<code>constrainShadow</code> property on this element to <code>true</code>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getConstrainVector","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>Name of the config option to return.</p>\n","name":"name","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":1206,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object/Mixed","properties":null,"doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","name":"return","html_type":"Object/Mixed"},"private":null,"static":null,"name":"getInitialConfig","doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getInitialConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the x coordinate of this element reletive to its offsetParent. ...","method_calls":null,"owner":"Ext.util.Positionable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":72,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The local x coordinate</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"getLocalX","doc":"<p>Returns the x coordinate of this element reletive to its <code>offsetParent</code>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getLocalX","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the x and y coordinates of this element relative to its offsetParent. ...","method_calls":null,"owner":"Ext.util.Positionable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":80,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Number[]","properties":null,"doc":"<p>The local XY position of the element</p>\n","name":"return","html_type":"Number[]"},"private":null,"static":null,"name":"getLocalXY","doc":"<p>Returns the x and y coordinates of this element relative to its <code>offsetParent</code>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getLocalXY","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the y coordinate of this element reletive to its offsetParent. ...","method_calls":null,"owner":"Ext.util.Positionable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":88,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The local y coordinate</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"getLocalY","doc":"<p>Returns the y coordinate of this element reletive to its <code>offsetParent</code>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getLocalY","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the offsets of this element from the passed element. ...","method_calls":["getXY"],"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"Ext.util.Positionable/HTMLElement/String","tagname":"params","doc":"<p>The Positionable,\nHTMLElement, or element id to get get the offsets from.</p>\n","name":"offsetsTo","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>/HTMLElement/String"}],"tagname":"method","files":[{"linenr":714,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Number[]","properties":null,"doc":"<p>The XY page offsets (e.g. <code>[100, -200]</code>)</p>\n","name":"return","html_type":"Number[]"},"private":null,"static":null,"name":"getOffsetsTo","doc":"<p>Returns the offsets of this element from the passed element. The element must both\nbe part of the DOM tree and not have display:none to have page coordinates.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getOffsetsTo","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns a region object that defines the area of this element. ...","method_calls":["getBox"],"owner":"Ext.util.Positionable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":727,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Ext.util.Region","properties":null,"doc":"<p>A Region containing \"top, left, bottom, right\" properties.</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},"private":null,"static":null,"name":"getRegion","doc":"<p>Returns a region object that defines the area of this element.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getRegion","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the content region of this element. ...","method_calls":["getBorderPadding","getHeight","getWidth","getXY"],"owner":"Ext.util.Positionable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":736,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Ext.util.Region","properties":null,"doc":"<p>A Region containing \"top, left, bottom, right\" member data.</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},"private":null,"static":null,"name":"getViewRegion","doc":"<p>Returns the <strong>content</strong> region of this element. That is the region within the borders\nand padding.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getViewRegion","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the current X position of the DOM element based on page coordinates. ...","method_calls":null,"owner":"Ext.util.Positionable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":96,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The X position of the element</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"getX","doc":"<p>Gets the current X position of the DOM element based on page coordinates.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getX","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the current position of the DOM element based on page coordinates. ...","method_calls":null,"owner":"Ext.util.Positionable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":104,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Number[]","properties":null,"doc":"<p>The XY position of the element</p>\n","name":"return","html_type":"Number[]"},"private":null,"static":null,"name":"getXY","doc":"<p>Gets the current position of the DOM element based on page coordinates.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getXY","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Gets the current Y position of the DOM element based on page coordinates. ...","method_calls":null,"owner":"Ext.util.Positionable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":112,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Number","properties":null,"doc":"<p>The Y position of the element</p>\n","name":"return","html_type":"Number"},"private":null,"static":null,"name":"getY","doc":"<p>Gets the current Y position of the DOM element based on page coordinates.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getY","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1156,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"hasConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-hasConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Initialize configuration for this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1090,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":null,"static":null,"name":"initConfig","doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"method-initConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Move the element relative to its current position. ...","method_calls":["getXY","setXY"],"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>Possible values are:</p>\n\n<ul>\n<li><code>\"l\"</code> (or <code>\"left\"</code>)</li>\n<li><code>\"r\"</code> (or <code>\"right\"</code>)</li>\n<li><code>\"t\"</code> (or <code>\"top\"</code>, or <code>\"up\"</code>)</li>\n<li><code>\"b\"</code> (or <code>\"bottom\"</code>, or <code>\"down\"</code>)</li>\n</ul>\n\n","name":"direction","html_type":"String"},{"type":"Number","tagname":"params","doc":"<p>How far to move the element in pixels</p>\n","name":"distance","html_type":"Number"},{"type":"Boolean/Object","tagname":"params","doc":"<p>true for the default animation or a standard\nElement animation config object</p>\n","name":"animate","optional":true,"html_type":"Boolean/Object"}],"tagname":"method","files":[{"linenr":767,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"private":null,"static":null,"name":"move","doc":"<p>Move the element relative to its current position.</p>\n","chainable":false,"inheritdoc":null,"id":"method-move","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"names","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"callback","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":1224,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"onConfigUpdate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onConfigUpdate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Remove any anchor to this element. ...","method_calls":["getAnchor"],"owner":"Ext.util.Positionable","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":806,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Ext.util.Positionable","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"private":null,"static":null,"name":"removeAnchor","doc":"<p>Remove any anchor to this element. See <a href=\"#!/api/Ext.util.Positionable-method-anchorTo\" rel=\"Ext.util.Positionable-method-anchorTo\" class=\"docClass\">anchorTo</a>.</p>\n","chainable":true,"inheritdoc":null,"id":"method-removeAnchor","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the element's box. ...","method_calls":["afterSetPosition","animate","calculateConstrainedPosition","setSize","setXY"],"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The box to fill {x, y, width, height}</p>\n","name":"box","html_type":"Object"},{"type":"Boolean/Object","tagname":"params","doc":"<p>true for the default animation or a standard\nElement animation config object</p>\n","name":"animate","optional":true,"html_type":"Boolean/Object"}],"tagname":"method","files":[{"linenr":823,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Ext.util.Positionable","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"private":null,"static":null,"name":"setBox","doc":"<p>Sets the element's box. If animate is true then x, y, width, and height will be\nanimated concurrently.</p>\n","chainable":true,"inheritdoc":null,"id":"method-setBox","fires":["move"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"},{"type":"Object","name":"applyIfNotSet","html_type":"Object"}],"tagname":"method","files":[{"linenr":1164,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"static":null,"name":"setConfig","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-setConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the local x coordinate of this element using CSS style. ...","method_calls":null,"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The x coordinate. A value of <code>null</code> sets the left style to 'auto'.</p>\n","name":"x","html_type":"Number"}],"tagname":"method","files":[{"linenr":120,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Ext.util.Positionable","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"private":null,"static":null,"name":"setLocalX","doc":"<p>Sets the local x coordinate of this element using CSS style. When used on an\nabsolute positioned element this method is symmetrical with <a href=\"#!/api/Ext.util.Positionable-method-getLocalX\" rel=\"Ext.util.Positionable-method-getLocalX\" class=\"docClass\">getLocalX</a>, but\nmay not be symmetrical when used on a relatively positioned element.</p>\n","chainable":true,"inheritdoc":null,"id":"method-setLocalX","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the local x and y coordinates of this element using CSS style. ...","method_calls":null,"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"Number/Array","tagname":"params","doc":"<p>The x coordinate or an array containing [x, y]. A value of\n<code>null</code> sets the left style to 'auto'</p>\n","name":"x","html_type":"Number/Array"},{"type":"Number","tagname":"params","doc":"<p>The y coordinate, required if x is not an array. A value of\n<code>null</code> sets the top style to 'auto'</p>\n","name":"y","optional":true,"html_type":"Number"}],"tagname":"method","files":[{"linenr":131,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Ext.util.Positionable","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"private":null,"static":null,"name":"setLocalXY","doc":"<p>Sets the local x and y coordinates of this element using CSS style. When used on an\nabsolute positioned element this method is symmetrical with <a href=\"#!/api/Ext.util.Positionable-method-getLocalXY\" rel=\"Ext.util.Positionable-method-getLocalXY\" class=\"docClass\">getLocalXY</a>, but\nmay not be symmetrical when used on a relatively positioned element.</p>\n","chainable":true,"inheritdoc":null,"id":"method-setLocalXY","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the local y coordinate of this element using CSS style. ...","method_calls":null,"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The y coordinate. A value of <code>null</code> sets the top style to 'auto'.</p>\n","name":"y","html_type":"Number"}],"tagname":"method","files":[{"linenr":145,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Ext.util.Positionable","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"private":null,"static":null,"name":"setLocalY","doc":"<p>Sets the local y coordinate of this element using CSS style. When used on an\nabsolute positioned element this method is symmetrical with <a href=\"#!/api/Ext.util.Positionable-method-getLocalY\" rel=\"Ext.util.Positionable-method-getLocalY\" class=\"docClass\">getLocalY</a>, but\nmay not be symmetrical when used on a relatively positioned element.</p>\n","chainable":true,"inheritdoc":null,"id":"method-setLocalY","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the element's position and size to the specified region. ...","method_calls":["setBox"],"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"Ext.util.Region","tagname":"params","doc":"<p>The region to fill</p>\n","name":"region","html_type":"<a href=\"#!/api/Ext.util.Region\" rel=\"Ext.util.Region\" class=\"docClass\">Ext.util.Region</a>"},{"type":"Boolean/Object","tagname":"params","doc":"<p>true for the default animation or a standard\nElement animation config object</p>\n","name":"animate","optional":true,"html_type":"Boolean/Object"}],"tagname":"method","files":[{"linenr":867,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Ext.util.Positionable","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"private":null,"static":null,"name":"setRegion","doc":"<p>Sets the element's position and size to the specified region. If animation is true\nthen width, height, x and y will be animated concurrently.</p>\n","chainable":true,"inheritdoc":null,"id":"method-setRegion","fires":["move"],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the X position of the DOM element based on page coordinates. ...","method_calls":null,"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>X position</p>\n","name":"The","html_type":"Number"},{"type":"Boolean/Object","tagname":"params","doc":"<p>True for the default animation, or a standard\nElement animation config object</p>\n","name":"animate","optional":true,"html_type":"Boolean/Object"}],"tagname":"method","files":[{"linenr":156,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Ext.util.Positionable","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"private":null,"static":null,"name":"setX","doc":"<p>Sets the X position of the DOM element based on page coordinates.</p>\n","chainable":true,"inheritdoc":null,"id":"method-setX","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the position of the DOM element in page coordinates. ...","method_calls":null,"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"Number[]","tagname":"params","doc":"<p>Contains X &amp; Y [x, y] values for new position (coordinates\nare page-based)</p>\n","name":"pos","html_type":"Number[]"},{"type":"Boolean/Object","tagname":"params","doc":"<p>True for the default animation, or a standard\nElement animation config object</p>\n","name":"animate","optional":true,"html_type":"Boolean/Object"}],"tagname":"method","files":[{"linenr":167,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Ext.util.Positionable","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"private":null,"static":null,"name":"setXY","doc":"<p>Sets the position of the DOM element in page coordinates.</p>\n","chainable":true,"inheritdoc":null,"id":"method-setXY","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the Y position of the DOM element based on page coordinates. ...","method_calls":null,"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>Y position</p>\n","name":"The","html_type":"Number"},{"type":"Boolean/Object","tagname":"params","doc":"<p>True for the default animation, or a standard\nElement animation config object</p>\n","name":"animate","optional":true,"html_type":"Boolean/Object"}],"tagname":"method","files":[{"linenr":179,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Ext.util.Positionable","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.util.Positionable\" rel=\"Ext.util.Positionable\" class=\"docClass\">Ext.util.Positionable</a>"},"private":null,"static":null,"name":"setY","doc":"<p>Sets the Y position of the DOM element based on page coordinates.</p>\n","chainable":true,"inheritdoc":null,"id":"method-setY","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the reference to the class from which this object was instantiated. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":778,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Class","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"private":null,"static":null,"name":"statics","doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-statics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Translates the passed page coordinates into left/top css values for the element ...","method_calls":["translateXY"],"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"Number/Array","tagname":"params","doc":"<p>The page x or an array containing [x, y]</p>\n","name":"x","html_type":"Number/Array"},{"type":"Number","tagname":"params","doc":"<p>The page y, required if x is not an array</p>\n","name":"y","optional":true,"html_type":"Number"}],"tagname":"method","files":[{"linenr":885,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Object","properties":null,"doc":"<p>An object with left and top properties. e.g.\n{left: (value), top: (value)}</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"translatePoints","doc":"<p>Translates the passed page coordinates into left/top css values for the element</p>\n","chainable":false,"inheritdoc":null,"id":"method-translatePoints","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Translates the passed page coordinates into x and y css values for the element ...","method_calls":["getXY"],"owner":"Ext.util.Positionable","inheritable":null,"params":[{"type":"Number/Array","tagname":"params","doc":"<p>The page x or an array containing [x, y]</p>\n","name":"x","html_type":"Number/Array"},{"type":"Number","tagname":"params","doc":"<p>The page y, required if x is not an array</p>\n","name":"y","optional":true,"html_type":"Number"}],"tagname":"method","files":[{"linenr":901,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/Positionable.js"}],"return":{"type":"Object","properties":null,"doc":"<p>An object with x and y properties. e.g.\n{x: (value), y: (value)}</p>\n","name":"return","html_type":"Object"},"private":true,"static":null,"name":"translateXY","doc":"<p>Translates the passed page coordinates into x and y css values for the element</p>\n","chainable":false,"inheritdoc":null,"id":"method-translateXY","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":176,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-addConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":256,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addInheritableStatics","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addInheritableStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"member","html_type":"Object"}],"tagname":"method","files":[{"linenr":353,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addMember","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addMember","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add methods / properties to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":296,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"addMembers","doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addMembers","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add / override static properties of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":218,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"addStatics","doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"xtype","html_type":"Object"}],"tagname":"method","files":[{"linenr":730,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addXtype","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addXtype","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Borrow another class' members to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Ext.Base","tagname":"params","doc":"<p>The class to borrow members from</p>\n","name":"fromClass","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"type":"Array/String","tagname":"params","doc":"<p>The names of the members to borrow</p>\n","name":"members","html_type":"Array/String"}],"tagname":"method","files":[{"linenr":383,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":true,"name":"borrow","doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-borrow","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-static-method-create\" rel=\"Ext.layout.Layout-static-method-create\" class=\"docClass\">Ext.layout.Layout.create</a>","name":"create"}],"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create a new instance of this Class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":60,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object","properties":null,"doc":"<p>the created instance.</p>\n","name":"return","html_type":"Object"},"static":true,"private":null,"name":"create","doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-create","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create aliases for existing prototype methods. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","name":"alias","html_type":"String/Object"},{"type":"String/Object","tagname":"params","doc":"<p>The original method name</p>\n","name":"origin","html_type":"String/Object"}],"tagname":"method","files":[{"linenr":696,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"createAlias","doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"static-method-createAlias","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":81,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"extend","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-extend","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the current class' name in string format. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":677,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"String","properties":null,"doc":"<p>className</p>\n","name":"return","html_type":"String"},"static":true,"private":null,"name":"getName","doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"static-method-getName","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds members to class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":373,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"implement","doc":"<p>Adds members to class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-implement","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n","version":"4.1"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Used internally by the mixins pre-processor ...","method_calls":["addConfig","hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"mixinClass","html_type":"Object"}],"tagname":"method","files":[{"linenr":595,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"mixin","doc":"<p>Used internally by the mixins pre-processor</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-mixin","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":162,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"onExtended","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-onExtended","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Override members of this class. ...","method_calls":["addConfig","addInheritableStatics"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":452,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this class</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"override","doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","chainable":true,"inheritdoc":null,"id":"static-method-override","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n","version":"4.1.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"triggerExtended","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-triggerExtended","fires":null,"linenr":null}],"alternateClassNames":[],"code_type":"ext_define","mixins":[],"doc":"<p>This mixin provides a common interface for objects that can be positioned, e.g.\n<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Components</a> and <a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Elements</a></p>\n","name":"Ext.util.Positionable","id":"class-Ext.util.Positionable"}