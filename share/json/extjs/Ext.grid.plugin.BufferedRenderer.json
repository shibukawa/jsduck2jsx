{"autodetected":{"aliases":true,"requires":true,"uses":true,"extends":true,"members":true,"alternateClassNames":true,"code_type":true,"mixins":true},"short_doc":"Implements buffered rendering of a grid, allowing users can scroll\nthrough thousands of records without the performan...","aliases":{"plugin":["bufferedrenderer"]},"requires":["Ext.grid.plugin.BufferedRendererTableView","Ext.grid.plugin.BufferedRendererTreeView"],"files":[{"linenr":21,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"tagname":"class","uses":[],"extends":"Ext.AbstractPlugin","members":[{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Number","short_doc":"The number of extra rows to render on the leading side of scrolling\noutside the numFromEdge buffer as scrolling proce...","default":"20","owner":"Ext.grid.plugin.BufferedRenderer","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":93,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":null,"static":null,"name":"leadingBufferZone","properties":null,"doc":"<p>The number of extra rows to render on the leading side of scrolling\n<strong>outside the <a href=\"#!/api/Ext.grid.plugin.BufferedRenderer-cfg-numFromEdge\" rel=\"Ext.grid.plugin.BufferedRenderer-cfg-numFromEdge\" class=\"docClass\">numFromEdge</a></strong> buffer as scrolling proceeds.</p>\n","inheritdoc":null,"id":"cfg-leadingBufferZone","html_type":"Number","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Number","short_doc":"The zone which causes new rows to be appended to the view. ...","default":"8","owner":"Ext.grid.plugin.BufferedRenderer","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":79,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":null,"static":null,"name":"numFromEdge","properties":null,"doc":"<p>The zone which causes new rows to be appended to the view. As soon as the edge\nof the rendered grid is this number of rows from the edge of the viewport, the view is moved.</p>\n","inheritdoc":null,"id":"cfg-numFromEdge","html_type":"Number","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Number","short_doc":" ...","default":"0.35","owner":"Ext.grid.plugin.BufferedRenderer","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":66,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":null,"static":null,"name":"percentageFromEdge","properties":null,"doc":"\n","inheritdoc":null,"id":"cfg-percentageFromEdge","html_type":"Number","deprecated":{"text":"<p>This config is now ignored.</p>\n"},"evented":null,"linenr":null},{"autodetected":{},"type":"String","short_doc":"A name for the plugin that can be set at creation time to then retrieve the plugin\nthrough getPlugin method. ...","default":null,"owner":"Ext.AbstractPlugin","tagname":"cfg","files":[{"linenr":82,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/AbstractPlugin.js"}],"name":"pluginId","properties":null,"doc":"<p>A name for the plugin that can be set at creation time to then retrieve the plugin\nthrough <a href=\"#!/api/Ext.AbstractComponent-method-getPlugin\" rel=\"Ext.AbstractComponent-method-getPlugin\" class=\"docClass\">getPlugin</a> method.  For example:</p>\n\n<pre><code>var grid = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>', {\n    plugins: [{\n        ptype: 'cellediting',\n        clicksToEdit: 2,\n        pluginId: 'cellplugin'\n    }]\n});\n\n// later on:\nvar plugin = grid.getPlugin('cellplugin');\n</code></pre>\n","id":"cfg-pluginId","html_type":"String"},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Number","short_doc":"This is the time in milliseconds to buffer load requests when scrolling the PagingScrollbar. ...","default":"200","owner":"Ext.grid.plugin.BufferedRenderer","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":113,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":null,"static":null,"name":"scrollToLoadBuffer","properties":null,"doc":"<p>This is the time in milliseconds to buffer load requests when scrolling the PagingScrollbar.</p>\n","inheritdoc":null,"id":"cfg-scrollToLoadBuffer","html_type":"Number","evented":null,"linenr":null},{"autodetected":{"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"By default, on detection of a scroll event which brings the end of the rendered table within\nnumFromEdge rows of the ...","default":"true","owner":"Ext.grid.plugin.BufferedRenderer","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":100,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":null,"static":null,"name":"synchronousRender","properties":null,"doc":"<p>By default, on detection of a scroll event which brings the end of the rendered table within\n<code><a href=\"#!/api/Ext.grid.plugin.BufferedRenderer-cfg-numFromEdge\" rel=\"Ext.grid.plugin.BufferedRenderer-cfg-numFromEdge\" class=\"docClass\">numFromEdge</a></code> rows of the grid viewport, if the required rows are available in the Store,\nthe BufferedRenderer will render rows from the Store <em>immediately</em> before returning from the event handler.\nThis setting helps avoid the impression of whitespace appearing during scrolling.</p>\n\n<p>Set this to <code>true</code> to defer the render until the scroll event handler exits. This allows for faster\nscrolling, but also allows whitespace to be more easily scrolled into view.</p>\n","inheritdoc":null,"id":"cfg-synchronousRender","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"default":true,"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Number","short_doc":"The number of extra rows to render on the trailing side of scrolling\noutside the numFromEdge buffer as scrolling proc...","default":"10","owner":"Ext.grid.plugin.BufferedRenderer","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":86,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":null,"static":null,"name":"trailingBufferZone","properties":null,"doc":"<p>The number of extra rows to render on the trailing side of scrolling\n<strong>outside the <a href=\"#!/api/Ext.grid.plugin.BufferedRenderer-cfg-numFromEdge\" rel=\"Ext.grid.plugin.BufferedRenderer-cfg-numFromEdge\" class=\"docClass\">numFromEdge</a></strong> buffer as scrolling proceeds.</p>\n","inheritdoc":null,"id":"cfg-trailingBufferZone","html_type":"Number","evented":null,"linenr":null},{"autodetected":{"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"Configure as true if the row heights are not all the same height as the first row. ...","default":"false","owner":"Ext.grid.plugin.BufferedRenderer","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":72,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":null,"static":null,"name":"variableRowHeight","properties":null,"doc":"<p>Configure as <code>true</code> if the row heights are not all the same height as the first row. Only configure this is needed - this will be if the\nrows contain unpredictably sized data, or you have changed the cell's text overflow stype to <code>'wrap'</code>.</p>\n","inheritdoc":null,"id":"cfg-variableRowHeight","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'Ext.Base'","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":763,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"$className","doc":"\n","inheritdoc":null,"id":"property-S-className","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":" ...","default":"0","owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":129,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"bodyTop","doc":"\n","inheritdoc":null,"id":"property-bodyTop","html_type":"Number","linenr":129},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":772,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configMap","doc":"\n","inheritdoc":null,"id":"property-configMap","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"false","owner":"Ext.AbstractPlugin","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":41,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/AbstractPlugin.js"}],"private":true,"static":null,"name":"disabled","doc":"\n","inheritdoc":null,"id":"property-disabled","html_type":"Boolean","linenr":41},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":769,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigList","doc":"\n","inheritdoc":null,"id":"property-initConfigList","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":775,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigMap","doc":"\n","inheritdoc":null,"id":"property-initConfigMap","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"isInstance","doc":"\n","inheritdoc":null,"id":"property-isInstance","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"true in this class to identify an object as an instantiated Plugin, or subclass thereof. ...","default":"true","owner":"Ext.AbstractPlugin","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":43,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/AbstractPlugin.js"}],"private":null,"static":null,"name":"isPlugin","properties":null,"doc":"<p><code>true</code> in this class to identify an object as an instantiated Plugin, or subclass thereof.</p>\n","inheritdoc":null,"id":"property-isPlugin","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":" ...","default":"1","owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":128,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"lastScrollDirection","doc":"\n","inheritdoc":null,"id":"property-lastScrollDirection","html_type":"Number","linenr":128},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'both'","owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":64,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"lockableScope","doc":"\n","inheritdoc":null,"id":"property-lockableScope","html_type":"String","linenr":64},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"Current pixel scroll position of the associated View. ...","default":"0","owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":123,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":null,"static":null,"name":"position","properties":null,"doc":"<p>Current pixel scroll position of the associated <a href=\"#!/api/Ext.view.Table\" rel=\"Ext.view.Table\" class=\"docClass\">View</a>.</p>\n","inheritdoc":null,"id":"property-position","html_type":"Number","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"private. ...","default":"21","owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":121,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"rowHeight","doc":"<p>private. Start at default value</p>\n","inheritdoc":null,"id":"property-rowHeight","html_type":"Number","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.Class","short_doc":"Get the reference to the current class from which this object was instantiated. ...","default":null,"owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1045,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"private":null,"static":null,"name":"self","properties":null,"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","inheritdoc":null,"id":"property-self","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Number","short_doc":"private. ...","default":"0","owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":119,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"viewSize","doc":"<p>private. Initial value of zero.</p>\n","inheritdoc":null,"id":"property-viewSize","html_type":"Number","linenr":null},{"autodetected":{"type":true,"default":true,"readonly":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":true,"readonly":null,"tagname":"property","files":[{"linenr":133,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"$onExtended","doc":"\n","inheritdoc":null,"id":"static-property-S-onExtended","html_type":"Array","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Instantiates the plugin. ...","method_calls":null,"owner":"Ext.AbstractPlugin","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>Configuration object.</p>\n","name":"config","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":49,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/AbstractPlugin.js"}],"return":{"type":"Ext.AbstractPlugin","doc":"\n","html_type":"<a href=\"#!/api/Ext.AbstractPlugin\" rel=\"Ext.AbstractPlugin\" class=\"docClass\">Ext.AbstractPlugin</a>"},"private":null,"static":null,"name":"constructor","doc":"<p>Instantiates the plugin.</p>\n","chainable":false,"inheritdoc":null,"id":"method-constructor","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[{"type":"Object","name":"start","html_type":"Object"},{"type":"Object","name":"end","html_type":"Object"}],"tagname":"method","files":[{"linenr":749,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"attemptLoad","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-attemptLoad","fires":null,"linenr":749},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["onViewResize","unbindStore"],"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[{"type":"Object","name":"store","html_type":"Object"}],"tagname":"method","files":[{"linenr":178,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"bindStore","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-bindStore","fires":[],"linenr":178},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":1269,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the overridden method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callOverridden","doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"method-callOverridden","deprecated":{"text":"<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the \"parent\" method of the current method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":846,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the parent method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callParent","doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","chainable":false,"inheritdoc":null,"id":"method-callParent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":961,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the superclass method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callSuper","doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","chainable":false,"inheritdoc":null,"id":"method-callSuper","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":765,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"cancelLoad","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-cancelLoad","fires":null,"linenr":765},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates clone of the plugin. ...","method_calls":null,"owner":"Ext.AbstractPlugin","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>Additional config for the derived plugin.</p>\n","name":"overrideCfg","optional":true,"html_type":"Object"}],"tagname":"method","files":[{"linenr":58,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/AbstractPlugin.js"}],"private":null,"static":null,"name":"clonePlugin","doc":"<p>Creates clone of the plugin.</p>\n","chainable":false,"inheritdoc":null,"id":"method-clonePlugin","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":766,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configClass","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-configClass","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.Base","link":"<a href=\"#!/api/Ext.Base-method-destroy\" rel=\"Ext.Base-method-destroy\" class=\"docClass\">Ext.Base.destroy</a>","name":"destroy"},{"owner":"Ext.AbstractPlugin","link":"<a href=\"#!/api/Ext.AbstractPlugin-method-destroy\" rel=\"Ext.AbstractPlugin-method-destroy\" class=\"docClass\">Ext.AbstractPlugin.destroy</a>","name":"destroy"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"The destroy method is invoked by the owning Component at the time the Component is being destroyed. ...","method_calls":null,"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":779,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":null,"static":null,"name":"destroy","doc":"<p>The destroy method is invoked by the owning Component at the time the Component is being destroyed.</p>\n\n<p>The supplied implementation is empty. Subclasses should perform plugin cleanup in their own implementation of\nthis method.</p>\n","chainable":null,"inheritdoc":null,"id":"method-destroy","fires":null,"linenr":779},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"The base implementation just sets the plugin's disabled flag to true\n\nPlugin subclasses which need more complex proce...","method_calls":null,"owner":"Ext.AbstractPlugin","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":127,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/AbstractPlugin.js"}],"private":null,"static":null,"name":"disable","doc":"<p>The base implementation just sets the plugin's <code>disabled</code> flag to <code>true</code></p>\n\n<p>Plugin subclasses which need more complex processing may implement an overriding implementation.</p>\n","chainable":false,"inheritdoc":null,"id":"method-disable","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[{"type":"Object","name":"start","html_type":"Object"},{"type":"Object","name":"end","html_type":"Object"}],"tagname":"method","files":[{"linenr":771,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"doAttemptLoad","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-doAttemptLoad","fires":null,"linenr":771},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"The base implementation just sets the plugin's disabled flag to false\n\nPlugin subclasses which need more complex proc...","method_calls":null,"owner":"Ext.AbstractPlugin","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":118,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/AbstractPlugin.js"}],"private":null,"static":null,"name":"enable","doc":"<p>The base implementation just sets the plugin's <code>disabled</code> flag to <code>false</code></p>\n\n<p>Plugin subclasses which need more complex processing may implement an overriding implementation.</p>\n","chainable":false,"inheritdoc":null,"id":"method-enable","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the component to which this plugin is attached. ...","method_calls":null,"owner":"Ext.AbstractPlugin","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":74,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/AbstractPlugin.js"}],"return":{"type":"Ext.Component","properties":null,"doc":"<p>Owner component.</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},"private":null,"static":null,"name":"getCmp","doc":"<p>Returns the component to which this plugin is attached.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getCmp","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":1196,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"getConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getFirstVisibleRowIndex"],"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[{"type":"Object","name":"startRow","html_type":"Object"},{"type":"Object","name":"endRow","html_type":"Object"},{"type":"Object","name":"viewportTop","html_type":"Object"},{"type":"Object","name":"viewportBottom","html_type":"Object"}],"tagname":"method","files":[{"linenr":638,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"getFirstVisibleRowIndex","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getFirstVisibleRowIndex","fires":[],"linenr":638},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>Name of the config option to return.</p>\n","name":"name","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":1206,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object/Mixed","properties":null,"doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","name":"return","html_type":"Object/Mixed"},"private":null,"static":null,"name":"getInitialConfig","doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getInitialConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getFirstVisibleRowIndex","getLastVisibleRowIndex"],"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[{"type":"Object","name":"startRow","html_type":"Object"},{"type":"Object","name":"endRow","html_type":"Object"},{"type":"Object","name":"viewportTop","html_type":"Object"},{"type":"Object","name":"viewportBottom","html_type":"Object"}],"tagname":"method","files":[{"linenr":684,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"getLastVisibleRowIndex","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getLastVisibleRowIndex","fires":[],"linenr":684},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":731,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"getScrollHeight","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getScrollHeight","fires":[],"linenr":731},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":340,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"getViewRange","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getViewRange","fires":null,"linenr":340},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getFirstVisibleRowIndex","getLastVisibleRowIndex","renderRange"],"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[{"type":"Object","name":"direction","html_type":"Object"}],"tagname":"method","files":[{"linenr":445,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"handleViewScroll","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-handleViewScroll","fires":[],"linenr":445},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1156,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"hasConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-hasConfig","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.AbstractPlugin","link":"<a href=\"#!/api/Ext.AbstractPlugin-method-init\" rel=\"Ext.AbstractPlugin-method-init\" class=\"docClass\">Ext.AbstractPlugin.init</a>","name":"init"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Initialize this as a plugin ...","method_calls":["bindStore","getViewRange"],"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[{"type":"Object","name":"grid","html_type":"Object"}],"tagname":"method","files":[{"linenr":131,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":null,"static":null,"name":"init","doc":"<p>Initialize this as a plugin</p>\n","chainable":null,"inheritdoc":null,"id":"method-init","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Initialize configuration for this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1090,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":null,"static":null,"name":"initConfig","doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"method-initConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Private. ...","method_calls":null,"owner":"Ext.AbstractPlugin","inheritable":null,"params":[{"type":"Object","name":"cls","html_type":"Object"},{"type":"Object","name":"data","html_type":"Object"},{"type":"Object","name":"hooks","html_type":"Object"}],"tagname":"method","files":[{"linenr":136,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/AbstractPlugin.js"}],"private":true,"static":null,"name":"onClassExtended","doc":"<p>Private.\nInject a ptype property so that AbstractComponent.findPlugin(ptype) works.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onClassExtended","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"names","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"callback","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":1224,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"onConfigUpdate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onConfigUpdate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["setBodyTop"],"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[{"type":"Object","name":"range","html_type":"Object"},{"type":"Object","name":"start","html_type":"Object"},{"type":"Object","name":"end","html_type":"Object"},{"type":"Object","name":"fromLockingPartner","html_type":"Object"}],"tagname":"method","files":[{"linenr":520,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"onRangeFetched","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onRangeFetched","fires":[],"linenr":520},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["bindStore"],"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[{"type":"Object","name":"grid","html_type":"Object"},{"type":"Object","name":"store","html_type":"Object"}],"tagname":"method","files":[{"linenr":196,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"onReconfigure","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onReconfigure","fires":[],"linenr":196},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":207,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"onStoreClear","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onStoreClear","fires":null,"linenr":207},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getScrollHeight","onViewResize","onViewScroll","setBodyTop","stretchView"],"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":227,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"onViewRefresh","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onViewRefresh","fires":[],"linenr":227},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["setViewSize"],"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[{"type":"Object","name":"view","html_type":"Object"},{"type":"Object","name":"width","html_type":"Object"},{"type":"Object","name":"height","html_type":"Object"},{"type":"Object","name":"oldWidth","html_type":"Object"},{"type":"Object","name":"oldHeight","html_type":"Object"}],"tagname":"method","files":[{"linenr":264,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"onViewResize","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onViewResize","fires":[],"linenr":264},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["handleViewScroll"],"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[{"type":"Object","name":"e","html_type":"Object"},{"type":"Object","name":"t","html_type":"Object"}],"tagname":"method","files":[{"linenr":406,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"onViewScroll","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onViewScroll","fires":[],"linenr":406},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["attemptLoad","cancelLoad","onRangeFetched"],"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[{"type":"Object","name":"start","html_type":"Object"},{"type":"Object","name":"end","html_type":"Object"},{"type":"Object","name":"forceSynchronous","html_type":"Object"}],"tagname":"method","files":[{"linenr":492,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"renderRange","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-renderRange","fires":[],"linenr":492},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Scrolls to and optionlly selects the specified row index in the total dataset. ...","method_calls":["renderRange"],"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[{"type":"Number","tagname":"params","doc":"<p>The zero-based position in the dataset to scroll to.</p>\n","name":"recordIdx","html_type":"Number"},{"type":"Boolean","tagname":"params","doc":"<p>Pass as <code>true</code> to select the specified row.</p>\n","name":"doSelect","html_type":"Boolean"},{"type":"Function","tagname":"params","properties":[{"type":"Number","tagname":"params","doc":"<p>The resulting record index (may have changed if the passed index was outside the valid range).</p>\n","name":"recordIdx","html_type":"Number"},{"type":"Ext.data.Model","tagname":"params","doc":"<p>The resulting record from the store.</p>\n","name":"record","html_type":"<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>"}],"doc":"<p>A function to call when the row has been scrolled to.</p>\n","name":"callback","html_type":"Function"},{"type":"Object","tagname":"params","doc":"<p>The scope (<code>this</code> reference) in which to execute the callback. Defaults to this BufferedRenderer.</p>\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":352,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":null,"static":null,"name":"scrollTo","doc":"<p>Scrolls to and optionlly selects the specified row index <strong>in the total dataset</strong>.</p>\n","chainable":false,"inheritdoc":null,"id":"method-scrollTo","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["stretchView"],"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[{"type":"Object","name":"bodyTop","html_type":"Object"},{"type":"Object","name":"calculatedTop","html_type":"Object"}],"tagname":"method","files":[{"linenr":607,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"setBodyTop","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-setBodyTop","fires":[],"linenr":607},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the component to which this plugin is attached. ...","method_calls":null,"owner":"Ext.AbstractPlugin","inheritable":null,"params":[{"type":"Ext.Component","tagname":"params","doc":"<p>Owner component.</p>\n","name":"cmp","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"}],"tagname":"method","files":[{"linenr":66,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/AbstractPlugin.js"}],"private":null,"static":null,"name":"setCmp","doc":"<p>Sets the component to which this plugin is attached.</p>\n","chainable":false,"inheritdoc":null,"id":"method-setCmp","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"},{"type":"Object","name":"applyIfNotSet","html_type":"Object"}],"tagname":"method","files":[{"linenr":1164,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"static":null,"name":"setConfig","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-setConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["renderRange"],"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[{"type":"Object","name":"viewSize","html_type":"Object"}],"tagname":"method","files":[{"linenr":307,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"setViewSize","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-setViewSize","fires":[],"linenr":307},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the reference to the class from which this object was instantiated. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":778,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Class","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"private":null,"static":null,"name":"statics","doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-statics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[{"type":"Object","name":"view","html_type":"Object"},{"type":"Object","name":"scrollRange","html_type":"Object"}],"tagname":"method","files":[{"linenr":276,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"stretchView","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-stretchView","fires":null,"linenr":276},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.grid.plugin.BufferedRenderer","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":202,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/grid/plugin/BufferedRenderer.js"}],"private":true,"static":null,"name":"unbindStore","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-unbindStore","fires":null,"linenr":202},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":176,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-addConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":256,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addInheritableStatics","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addInheritableStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"member","html_type":"Object"}],"tagname":"method","files":[{"linenr":353,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addMember","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addMember","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add methods / properties to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":296,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"addMembers","doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addMembers","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add / override static properties of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":218,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"addStatics","doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"xtype","html_type":"Object"}],"tagname":"method","files":[{"linenr":730,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addXtype","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addXtype","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Borrow another class' members to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Ext.Base","tagname":"params","doc":"<p>The class to borrow members from</p>\n","name":"fromClass","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"type":"Array/String","tagname":"params","doc":"<p>The names of the members to borrow</p>\n","name":"members","html_type":"Array/String"}],"tagname":"method","files":[{"linenr":383,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":true,"name":"borrow","doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-borrow","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-static-method-create\" rel=\"Ext.layout.Layout-static-method-create\" class=\"docClass\">Ext.layout.Layout.create</a>","name":"create"}],"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create a new instance of this Class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":60,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object","properties":null,"doc":"<p>the created instance.</p>\n","name":"return","html_type":"Object"},"static":true,"private":null,"name":"create","doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-create","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create aliases for existing prototype methods. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","name":"alias","html_type":"String/Object"},{"type":"String/Object","tagname":"params","doc":"<p>The original method name</p>\n","name":"origin","html_type":"String/Object"}],"tagname":"method","files":[{"linenr":696,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"createAlias","doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"static-method-createAlias","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":81,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"extend","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-extend","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the current class' name in string format. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":677,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"String","properties":null,"doc":"<p>className</p>\n","name":"return","html_type":"String"},"static":true,"private":null,"name":"getName","doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"static-method-getName","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds members to class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":373,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"implement","doc":"<p>Adds members to class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-implement","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n","version":"4.1"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Used internally by the mixins pre-processor ...","method_calls":["addConfig","hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"mixinClass","html_type":"Object"}],"tagname":"method","files":[{"linenr":595,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"mixin","doc":"<p>Used internally by the mixins pre-processor</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-mixin","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":162,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"onExtended","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-onExtended","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Override members of this class. ...","method_calls":["addConfig","addInheritableStatics"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":452,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this class</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"override","doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","chainable":true,"inheritdoc":null,"id":"static-method-override","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n","version":"4.1.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"triggerExtended","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-triggerExtended","fires":null,"linenr":null}],"alternateClassNames":[],"code_type":"ext_define","mixins":[],"doc":"<p>Implements buffered rendering of a grid, allowing users can scroll\nthrough thousands of records without the performance penalties of\nrenderering all the records on screen at once.</p>\n\n<p>The number of rows rendered outside the visible area, and the\nbuffering of pages of data from the remote server for immediate\nrendering upon scroll can be controlled by configuring the plugin.</p>\n\n<p>You can tell it to create a larger table to provide more scrolling\nbefore new rows need to be added to the leading edge of the table.</p>\n\n<pre><code>var myStore = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n    // ...\n    pageSize: 100,\n    // ...\n});\n\nvar grid = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>', {\n    // ...\n    autoLoad: true,\n    plugins: {\n        ptype: 'bufferedrenderer',\n        trailingBufferZone: 20,  // Keep 20 rows rendered in the table behind scroll\n        leadingBufferZone: 50   // Keep 50 rows rendered in the table ahead of scroll\n    },\n    // ...\n});\n</code></pre>\n\n<h2>Implementation notes</h2>\n\n<p>This class monitors scrolling of the <a href=\"#!/api/Ext.view.Table\" rel=\"Ext.view.Table\" class=\"docClass\">TableView</a> within a <a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">GridPanel</a> to render a small section of\nthe dataset.</p>\n","name":"Ext.grid.plugin.BufferedRenderer","id":"class-Ext.grid.plugin.BufferedRenderer"}