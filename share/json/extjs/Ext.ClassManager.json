{"docauthor":[{"email":"jacky@sencha.com","tagname":"docauthor","name":"Jacky Nguyen"}],"autodetected":{},"short_doc":"Ext.ClassManager manages all classes and handles mapping from string class name to\nactual class objects throughout th...","singleton":true,"aliases":{},"files":[{"linenr":25,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"tagname":"class","members":[{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"All classes which were defined through the ClassManager. ...","default":"{}","owner":"Ext.ClassManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":232,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":true,"static":null,"name":"classes","properties":null,"doc":"<p>All classes which were defined through the ClassManager. Keys are the\nname of the classes and the values are references to the classes.</p>\n","inheritdoc":null,"id":"property-classes","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.ClassManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":316,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":true,"static":null,"name":"createdListeners","doc":"\n","inheritdoc":null,"id":"property-createdListeners","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.ClassManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1048,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":true,"static":null,"name":"defaultPostprocessors","doc":"\n","inheritdoc":null,"id":"property-defaultPostprocessors","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.ClassManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":263,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":true,"static":null,"name":"enableNamespaceParseCache","doc":"\n","inheritdoc":null,"id":"property-enableNamespaceParseCache","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.ClassManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":240,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":true,"static":null,"name":"existCache","doc":"\n","inheritdoc":null,"id":"property-existCache","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.ClassManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":269,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":true,"static":null,"name":"instantiators","doc":"\n","inheritdoc":null,"id":"property-instantiators","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{alternateToName: {}, aliasToName: {}, nameToAliases: {}, nameToAlternates: {}}","owner":"Ext.ClassManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":253,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":true,"static":null,"name":"maps","doc":"\n","inheritdoc":null,"id":"property-maps","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.ClassManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":321,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":true,"static":null,"name":"nameCreatedListeners","doc":"\n","inheritdoc":null,"id":"property-nameCreatedListeners","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.ClassManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":266,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":true,"static":null,"name":"namespaceParseCache","doc":"\n","inheritdoc":null,"id":"property-namespaceParseCache","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","default":null,"owner":"Ext.ClassManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":245,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":true,"static":null,"name":"namespaceRewrites","doc":"\n","inheritdoc":null,"id":"property-namespaceRewrites","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.ClassManager","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1043,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":true,"static":null,"name":"postprocessors","doc":"\n","inheritdoc":null,"id":"property-postprocessors","html_type":"Object","linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds a batch of class name to alias mappings ...","method_calls":null,"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The set of mappings of the form\nclassName : [values...]</p>\n","name":"aliases","html_type":"Object"}],"tagname":"method","files":[{"linenr":614,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"return":{"type":"Ext.ClassManager","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.ClassManager\" rel=\"Ext.ClassManager\" class=\"docClass\">Ext.ClassManager</a>"},"private":null,"static":null,"name":"addNameAliasMappings","doc":"<p>Adds a batch of class name to alias mappings</p>\n","chainable":true,"inheritdoc":null,"id":"method-addNameAliasMappings","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The set of mappings of the form\nclassName : [values...]</p>\n","name":"alternates","html_type":"Object"}],"tagname":"method","files":[{"linenr":640,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"return":{"type":"Ext.ClassManager","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.ClassManager\" rel=\"Ext.ClassManager\" class=\"docClass\">Ext.ClassManager</a>"},"private":null,"static":null,"name":"addNameAlternateMappings","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-addNameAlternateMappings","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Defines a class. ...","method_calls":null,"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"Object","name":"className","html_type":"Object"},{"type":"Object","name":"data","html_type":"Object"},{"type":"Object","name":"createdFn","html_type":"Object"}],"tagname":"method","files":[{"linenr":737,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":null,"static":null,"name":"create","doc":"<p>Defines a class.</p>\n","chainable":false,"inheritdoc":null,"id":"method-create","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead, as that also supports creating overrides.</p>\n","version":"4.1.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"The new Ext.ns, supports namespace rewriting ...","method_calls":["parseNamespace"],"owner":"Ext.ClassManager","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":485,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":true,"static":null,"name":"createNamespaces","doc":"<p>The new <a href=\"#!/api/Ext-method-ns\" rel=\"Ext-method-ns\" class=\"docClass\">Ext.ns</a>, supports namespace rewriting</p>\n","chainable":false,"inheritdoc":null,"id":"method-createNamespaces","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"args","html_type":"Object"}],"tagname":"method","files":[{"linenr":1002,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":true,"static":null,"name":"dynInstantiate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-dynInstantiate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Retrieve a class by its name. ...","method_calls":["parseNamespace"],"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"name","html_type":"String"}],"tagname":"method","files":[{"linenr":539,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"return":{"type":"Ext.Class","properties":null,"doc":"<p>class</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"private":null,"static":null,"name":"get","doc":"<p>Retrieve a class by its name.</p>\n","chainable":false,"inheritdoc":null,"id":"method-get","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the aliases of a class by the class name ...","method_calls":null,"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"name","html_type":"String"}],"tagname":"method","files":[{"linenr":696,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"return":{"type":"Array","properties":null,"doc":"<p>aliases</p>\n","name":"return","html_type":"Array"},"private":null,"static":null,"name":"getAliasesByName","doc":"<p>Get the aliases of a class by the class name</p>\n","chainable":false,"inheritdoc":null,"id":"method-getAliasesByName","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get a reference to the class by its alias. ...","method_calls":["get","getNameByAlias"],"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"alias","html_type":"String"}],"tagname":"method","files":[{"linenr":666,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"return":{"type":"Ext.Class","properties":null,"doc":"<p>class</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"private":null,"static":null,"name":"getByAlias","doc":"<p>Get a reference to the class by its alias.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getByAlias","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the class of the provided object; returns null if it's not an instance\nof any class created with Ext.define. ...","method_calls":null,"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"object","html_type":"Object"}],"tagname":"method","files":[{"linenr":720,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"return":{"type":"Ext.Class","properties":null,"doc":"<p>class</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"private":null,"static":null,"name":"getClass","doc":"<p>Get the class of the provided object; returns null if it's not an instance\nof any class created with <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>.</p>\n\n<p><a href=\"#!/api/Ext.ClassManager-method-getClass\" rel=\"Ext.ClassManager-method-getClass\" class=\"docClass\">getClass</a> is usually invoked by the shorthand <a href=\"#!/api/Ext-method-getClass\" rel=\"Ext-method-getClass\" class=\"docClass\">Ext.getClass</a>.</p>\n\n<pre><code>var component = new <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>();\n\n<a href=\"#!/api/Ext-method-getClass\" rel=\"Ext-method-getClass\" class=\"docClass\">Ext.getClass</a>(component); // returns <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-getClass","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the displayName property or className or object. ...","method_calls":null,"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"object","html_type":"Object"}],"tagname":"method","files":[{"linenr":1695,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"return":{"type":"String","properties":null,"doc":"\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"getDisplayName","doc":"<p>Returns the displayName property or className or object. When all else fails, returns \"Anonymous\".</p>\n","chainable":false,"inheritdoc":null,"id":"method-getDisplayName","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"length","html_type":"Object"}],"tagname":"method","files":[{"linenr":1014,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":true,"static":null,"name":"getInstantiator","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getInstantiator","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the name of the class by its reference or its instance;\n\ngetName is usually invoked by the shorthand Ext.getClass...","method_calls":null,"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"Ext.Class/Object","tagname":"params","doc":"\n","name":"object","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>/Object"}],"tagname":"method","files":[{"linenr":706,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"return":{"type":"String","properties":null,"doc":"<p>className</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"getName","doc":"<p>Get the name of the class by its reference or its instance;</p>\n\n<p><a href=\"#!/api/Ext.ClassManager-method-getName\" rel=\"Ext.ClassManager-method-getName\" class=\"docClass\">getName</a> is usually invoked by the shorthand <a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>.</p>\n\n<pre><code>Ext.getName(<a href=\"#!/api/Ext.Action\" rel=\"Ext.Action\" class=\"docClass\">Ext.Action</a>); // returns \"<a href=\"#!/api/Ext.Action\" rel=\"Ext.Action\" class=\"docClass\">Ext.Action</a>\"\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-getName","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the name of a class by its alias. ...","method_calls":null,"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"alias","html_type":"String"}],"tagname":"method","files":[{"linenr":676,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"return":{"type":"String","properties":null,"doc":"<p>className</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"getNameByAlias","doc":"<p>Get the name of a class by its alias.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getNameByAlias","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the name of a class by its alternate name. ...","method_calls":null,"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"alternate","html_type":"String"}],"tagname":"method","files":[{"linenr":686,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"return":{"type":"String","properties":null,"doc":"<p>className</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"getNameByAlternate","doc":"<p>Get the name of a class by its alternate name.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getNameByAlternate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Converts a string expression to an array of matching class names. ...","method_calls":["getNameByAlias","getNameByAlternate"],"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"expression","html_type":"String"}],"tagname":"method","files":[{"linenr":1133,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"return":{"type":"String[]","properties":null,"doc":"<p>classNames</p>\n","name":"return","html_type":"String[]"},"private":null,"static":null,"name":"getNamesByExpression","doc":"<p>Converts a string expression to an array of matching class names. An expression can either refers to class aliases\nor class names. Expressions support wildcards:</p>\n\n<pre><code> // returns ['<a href=\"#!/api/Ext.window.Window\" rel=\"Ext.window.Window\" class=\"docClass\">Ext.window.Window</a>']\nvar window = <a href=\"#!/api/Ext.ClassManager-method-getNamesByExpression\" rel=\"Ext.ClassManager-method-getNamesByExpression\" class=\"docClass\">Ext.ClassManager.getNamesByExpression</a>('widget.window');\n\n// returns ['widget.panel', 'widget.window', ...]\nvar allWidgets = <a href=\"#!/api/Ext.ClassManager-method-getNamesByExpression\" rel=\"Ext.ClassManager-method-getNamesByExpression\" class=\"docClass\">Ext.ClassManager.getNamesByExpression</a>('widget.*');\n\n// returns ['<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', 'Ext.data.ArrayProxy', ...]\nvar allData = <a href=\"#!/api/Ext.ClassManager-method-getNamesByExpression\" rel=\"Ext.ClassManager-method-getNamesByExpression\" class=\"docClass\">Ext.ClassManager.getNamesByExpression</a>('Ext.data.*');\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-getNamesByExpression","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["get","getInstantiator","getNameByAlias","getNameByAlternate"],"owner":"Ext.ClassManager","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":925,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":true,"static":null,"name":"instantiate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-instantiate","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Instantiate a class by its alias. ...","method_calls":["getNameByAlias"],"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"alias","html_type":"String"},{"type":"Object...","tagname":"params","doc":"<p>Additional arguments after the alias will be passed to the\nclass constructor.</p>\n","name":"args","html_type":"Object..."}],"tagname":"method","files":[{"linenr":881,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"return":{"type":"Object","properties":null,"doc":"<p>instance</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"instantiateByAlias","doc":"<p>Instantiate a class by its alias.</p>\n\n<p><a href=\"#!/api/Ext.ClassManager-method-instantiateByAlias\" rel=\"Ext.ClassManager-method-instantiateByAlias\" class=\"docClass\">instantiateByAlias</a> is usually invoked by the shorthand <a href=\"#!/api/Ext-method-createByAlias\" rel=\"Ext-method-createByAlias\" class=\"docClass\">Ext.createByAlias</a>.</p>\n\n<p>If <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a> is <a href=\"#!/api/Ext.Loader-method-setConfig\" rel=\"Ext.Loader-method-setConfig\" class=\"docClass\">enabled</a> and the class has not been defined yet, it will\nattempt to load the class via synchronous loading.</p>\n\n<pre><code>var window = <a href=\"#!/api/Ext-method-createByAlias\" rel=\"Ext-method-createByAlias\" class=\"docClass\">Ext.createByAlias</a>('widget.window', { width: 600, height: 800, ... });\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-instantiateByAlias","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Checks if a class has already been created. ...","method_calls":["parseNamespace","triggerCreated"],"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"className","html_type":"String"}],"tagname":"method","files":[{"linenr":272,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>exist</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"isCreated","doc":"<p>Checks if a class has already been created.</p>\n","chainable":false,"inheritdoc":null,"id":"method-isCreated","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["isCreated"],"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"},{"type":"Object","name":"className","html_type":"Object"}],"tagname":"method","files":[{"linenr":359,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":true,"static":null,"name":"onCreated","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onCreated","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Supports namespace rewriting ...","method_calls":null,"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"Object","name":"namespace","html_type":"Object"}],"tagname":"method","files":[{"linenr":391,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":true,"static":null,"name":"parseNamespace","doc":"<p>Supports namespace rewriting</p>\n","chainable":false,"inheritdoc":null,"id":"method-parseNamespace","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Register a post-processor function. ...","method_calls":["setDefaultPostprocessorPosition"],"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"name","html_type":"String"},{"type":"Function","tagname":"params","doc":"\n","name":"postprocessor","html_type":"Function"}],"tagname":"method","files":[{"linenr":1053,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"return":{"type":"Ext.ClassManager","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.ClassManager\" rel=\"Ext.ClassManager\" class=\"docClass\">Ext.ClassManager</a>"},"private":true,"static":null,"name":"registerPostprocessor","doc":"<p>Register a post-processor function.</p>\n","chainable":true,"inheritdoc":null,"id":"method-registerPostprocessor","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets a name reference to a class. ...","method_calls":["getName","setNamespace"],"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"name","html_type":"String"},{"type":"Object","tagname":"params","doc":"\n","name":"value","html_type":"Object"}],"tagname":"method","files":[{"linenr":514,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"return":{"type":"Ext.ClassManager","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.ClassManager\" rel=\"Ext.ClassManager\" class=\"docClass\">Ext.ClassManager</a>"},"private":null,"static":null,"name":"set","doc":"<p>Sets a name reference to a class.</p>\n","chainable":true,"inheritdoc":null,"id":"method-set","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Register the alias for a class. ...","method_calls":["getName"],"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"Ext.Class/String","tagname":"params","doc":"<p>a reference to a class or a className</p>\n","name":"cls","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>/String"},{"type":"String","tagname":"params","doc":"<p>Alias to use when referring to this class</p>\n","name":"alias","html_type":"String"}],"tagname":"method","files":[{"linenr":575,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"return":{"type":"Ext.ClassManager","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.ClassManager\" rel=\"Ext.ClassManager\" class=\"docClass\">Ext.ClassManager</a>"},"private":null,"static":null,"name":"setAlias","doc":"<p>Register the alias for a class.</p>\n","chainable":true,"inheritdoc":null,"id":"method-setAlias","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Insert this post-processor at a specific position in the stack, optionally relative to\nany existing post-processor ...","method_calls":null,"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The post-processor name. Note that it needs to be registered with\n<a href=\"#!/api/Ext.ClassManager-method-registerPostprocessor\" rel=\"Ext.ClassManager-method-registerPostprocessor\" class=\"docClass\">registerPostprocessor</a> before this</p>\n","name":"name","html_type":"String"},{"type":"String","tagname":"params","doc":"<p>The insertion position. Four possible values are:\n'first', 'last', or: 'before', 'after' (relative to the name provided in the third argument)</p>\n","name":"offset","html_type":"String"},{"type":"String","tagname":"params","doc":"\n","name":"relativeName","html_type":"String"}],"tagname":"method","files":[{"linenr":1093,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"return":{"type":"Ext.ClassManager","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.ClassManager\" rel=\"Ext.ClassManager\" class=\"docClass\">Ext.ClassManager</a>"},"private":true,"static":null,"name":"setDefaultPostprocessorPosition","doc":"<p>Insert this post-processor at a specific position in the stack, optionally relative to\nany existing post-processor</p>\n","chainable":true,"inheritdoc":null,"id":"method-setDefaultPostprocessorPosition","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Set the default post processors array stack which are applied to every class. ...","method_calls":null,"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"String/Array","tagname":"params","doc":"<p>The name of a registered post processor or an array of registered names.</p>\n","name":"postprocessors","html_type":"String/Array"}],"tagname":"method","files":[{"linenr":1080,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"return":{"type":"Ext.ClassManager","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.ClassManager\" rel=\"Ext.ClassManager\" class=\"docClass\">Ext.ClassManager</a>"},"private":true,"static":null,"name":"setDefaultPostprocessors","doc":"<p>Set the default post processors array stack which are applied to every class.</p>\n","chainable":true,"inheritdoc":null,"id":"method-setDefaultPostprocessors","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Creates a namespace and assign the value to the created object\n\nExt.ClassManager.setNamespace('MyCompany.pkg.Example'...","method_calls":["parseNamespace"],"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"name","html_type":"String"},{"type":"Object","tagname":"params","doc":"\n","name":"value","html_type":"Object"}],"tagname":"method","files":[{"linenr":449,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":null,"static":null,"name":"setNamespace","doc":"<p>Creates a namespace and assign the <code>value</code> to the created object</p>\n\n<pre><code><a href=\"#!/api/Ext.ClassManager-method-setNamespace\" rel=\"Ext.ClassManager-method-setNamespace\" class=\"docClass\">Ext.ClassManager.setNamespace</a>('MyCompany.pkg.Example', someObject);\n\nalert(MyCompany.pkg.Example === someObject); // alerts true\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-setNamespace","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"Object","name":"className","html_type":"Object"}],"tagname":"method","files":[{"linenr":326,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":true,"static":null,"name":"triggerCreated","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-triggerCreated","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Undefines a class defined using the #define method. ...","method_calls":null,"owner":"Ext.ClassManager","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The class name to undefine in string dot-namespaced format.</p>\n","name":"className","html_type":"String"}],"tagname":"method","files":[{"linenr":1619,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/ClassManager.js"}],"private":true,"static":null,"name":"undefine","doc":"<p>Undefines a class defined using the #define method. Typically used\nfor unit testing where setting up and tearing down a class multiple\ntimes is required.  For example:</p>\n\n<pre><code>// define a class\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Foo', {\n   ...\n});\n\n// run test\n\n// undefine the class\nExt.undefine('Foo');\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-undefine","fires":null,"linenr":null}],"author":[{"email":"jacky@sencha.com","tagname":"author","name":"Jacky Nguyen"}],"alternateClassNames":[],"doc":"<p><a href=\"#!/api/Ext.ClassManager\" rel=\"Ext.ClassManager\" class=\"docClass\">Ext.ClassManager</a> manages all classes and handles mapping from string class name to\nactual class objects throughout the whole framework. It is not generally accessed directly, rather through\nthese convenient shorthands:</p>\n\n<ul>\n<li><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a></li>\n<li><a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a></li>\n<li><a href=\"#!/api/Ext-method-widget\" rel=\"Ext-method-widget\" class=\"docClass\">Ext.widget</a></li>\n<li><a href=\"#!/api/Ext-method-getClass\" rel=\"Ext-method-getClass\" class=\"docClass\">Ext.getClass</a></li>\n<li><a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a></li>\n</ul>\n\n\n<h1>Basic syntax:</h1>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>(className, properties);\n</code></pre>\n\n<p>in which <code>properties</code> is an object represent a collection of properties that apply to the class. See\n<a href=\"#!/api/Ext.ClassManager-method-create\" rel=\"Ext.ClassManager-method-create\" class=\"docClass\">create</a> for more detailed instructions.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Person', {\n     name: 'Unknown',\n\n     constructor: function(name) {\n         if (name) {\n             this.name = name;\n         }\n     },\n\n     eat: function(foodType) {\n         alert(\"I'm eating: \" + foodType);\n\n         return this;\n     }\n});\n\nvar aaron = new Person(\"Aaron\");\naaron.eat(\"Sandwich\"); // alert(\"I'm eating: Sandwich\");\n</code></pre>\n\n<p><a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a> has a powerful set of extensible <a href=\"#!/api/Ext.Class-static-method-registerPreprocessor\" rel=\"Ext.Class-static-method-registerPreprocessor\" class=\"docClass\">pre-processors</a> which takes care of\neverything related to class creation, including but not limited to inheritance, mixins, configuration, statics, etc.</p>\n\n<h1>Inheritance:</h1>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Developer', {\n     extend: 'Person',\n\n     constructor: function(name, isGeek) {\n         this.isGeek = isGeek;\n\n         // Apply a method from the parent class' prototype\n         this.callParent([name]);\n     },\n\n     code: function(language) {\n         alert(\"I'm coding in: \" + language);\n\n         this.eat(\"Bugs\");\n\n         return this;\n     }\n});\n\nvar jacky = new Developer(\"Jacky\", true);\njacky.code(\"JavaScript\"); // alert(\"I'm coding in: JavaScript\");\n                          // alert(\"I'm eating: Bugs\");\n</code></pre>\n\n<p>See <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">Ext.Base.callParent</a> for more details on calling superclass' methods</p>\n\n<h1>Mixins:</h1>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('CanPlayGuitar', {\n     playGuitar: function() {\n        alert(\"F#...G...D...A\");\n     }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('CanComposeSongs', {\n     composeSongs: function() { ... }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('CanSing', {\n     sing: function() {\n         alert(\"I'm on the highway to hell...\")\n     }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Musician', {\n     extend: 'Person',\n\n     mixins: {\n         canPlayGuitar: 'CanPlayGuitar',\n         canComposeSongs: 'CanComposeSongs',\n         canSing: 'CanSing'\n     }\n})\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('CoolPerson', {\n     extend: 'Person',\n\n     mixins: {\n         canPlayGuitar: 'CanPlayGuitar',\n         canSing: 'CanSing'\n     },\n\n     sing: function() {\n         alert(\"Ahem....\");\n\n         this.mixins.canSing.sing.call(this);\n\n         alert(\"[Playing guitar at the same time...]\");\n\n         this.playGuitar();\n     }\n});\n\nvar me = new CoolPerson(\"Jacky\");\n\nme.sing(); // alert(\"Ahem...\");\n           // alert(\"I'm on the highway to hell...\");\n           // alert(\"[Playing guitar at the same time...]\");\n           // alert(\"F#...G...D...A\");\n</code></pre>\n\n<h1>Config:</h1>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('SmartPhone', {\n     config: {\n         hasTouchScreen: false,\n         operatingSystem: 'Other',\n         price: 500\n     },\n\n     isExpensive: false,\n\n     constructor: function(config) {\n         this.initConfig(config);\n     },\n\n     applyPrice: function(price) {\n         this.isExpensive = (price &gt; 500);\n\n         return price;\n     },\n\n     applyOperatingSystem: function(operatingSystem) {\n         if (!(/^(iOS|Android|BlackBerry)$/i).test(operatingSystem)) {\n             return 'Other';\n         }\n\n         return operatingSystem;\n     }\n});\n\nvar iPhone = new SmartPhone({\n     hasTouchScreen: true,\n     operatingSystem: 'iOS'\n});\n\niPhone.getPrice(); // 500;\niPhone.getOperatingSystem(); // 'iOS'\niPhone.getHasTouchScreen(); // true;\niPhone.hasTouchScreen(); // true\n\niPhone.isExpensive; // false;\niPhone.setPrice(600);\niPhone.getPrice(); // 600\niPhone.isExpensive; // true;\n\niPhone.setOperatingSystem('AlienOS');\niPhone.getOperatingSystem(); // 'Other'\n</code></pre>\n\n<h1>Statics:</h1>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Computer', {\n     statics: {\n         factory: function(brand) {\n            // 'this' in static methods refer to the class itself\n             return new this(brand);\n         }\n     },\n\n     constructor: function() { ... }\n});\n\nvar dellComputer = Computer.factory('Dell');\n</code></pre>\n\n<p>Also see <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">Ext.Base.statics</a> and <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">Ext.Base.self</a> for more details on accessing\nstatic properties within class methods</p>\n","name":"Ext.ClassManager","id":"class-Ext.ClassManager"}