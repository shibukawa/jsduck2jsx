{"autodetected":{"aliases":true,"requires":true,"uses":true,"extends":true,"members":true,"alternateClassNames":true,"code_type":true,"mixins":true},"short_doc":"This is the layout style of choice for creating structural layouts in a multi-column format where the width of each\nc...","aliases":{"layout":["column"]},"requires":[],"files":[{"linenr":21,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Column.js"}],"tagname":"class","uses":[],"extends":"Ext.layout.container.Auto","members":[{"overrides":[{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-cfg-itemCls\" rel=\"Ext.layout.container.Container-cfg-itemCls\" class=\"docClass\">Ext.layout.container.Container.itemCls</a>","name":"itemCls"}],"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":"An optional extra CSS class that will be added to the container. ...","default":"Ext.baseCSSPrefix + 'column'","owner":"Ext.layout.container.Column","inheritable":null,"readonly":null,"tagname":"cfg","files":[{"linenr":95,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Column.js"}],"private":null,"static":null,"properties":null,"name":"itemCls","doc":"<p>An optional extra CSS class that will be added to the container. This can be useful for\nadding customized styles to the container or any of its children using standard CSS\nrules. See <a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>.<a href=\"#!/api/Ext.Component-cfg-componentCls\" rel=\"Ext.Component-cfg-componentCls\" class=\"docClass\">componentCls</a> also.</p>\n","inheritdoc":null,"id":"cfg-itemCls","html_type":"String","linenr":95},{"autodetected":{"accessor":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true,"evented":true},"type":"Boolean","short_doc":"Set to true to leave space for a vertical scrollbar (if the OS shows space-consuming scrollbars) regardless\nof whethe...","default":"false","owner":"Ext.layout.container.Auto","accessor":null,"inheritable":null,"tagname":"cfg","files":[{"linenr":68,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"private":null,"static":null,"name":"reserveScrollbar","properties":null,"doc":"<p>Set to <code>true</code> to leave space for a vertical scrollbar (if the OS shows space-consuming scrollbars) regardless\nof whether a scrollbar is needed.</p>\n\n<p>This is useful if content height changes during application usage, but you do not want the calculated width\nof child items to change when a scrollbar appears or disappears. The scrollbar will appear in the reserved space,\nand the calculated width of child Components will not change.</p>\n\n<pre class='inline-example '><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Employee', {\n    extend: '<a href=\"#!/api/Ext.data.Model\" rel=\"Ext.data.Model\" class=\"docClass\">Ext.data.Model</a>',\n    fields: [\n       {name: 'rating', type: 'int'},\n       {name: 'salary', type: 'float'},\n       {name: 'name'}\n    ]\n});\n\nfunction createFakeData(count) {\n    var firstNames   = ['Ed', 'Tommy', 'Aaron', 'Abe', 'Jamie', 'Adam', 'Dave', 'David', 'Jay', 'Nicolas', 'Nige'],\n        lastNames    = ['Spencer', 'Maintz', 'Conran', 'Elias', 'Avins', 'Mishcon', 'Kaneda', 'Davis', 'Robinson', 'Ferrero', 'White'],\n        ratings      = [1, 2, 3, 4, 5],\n        salaries     = [100, 400, 900, 1500, 1000000];\n\n    var data = [];\n    for (var i = 0; i &lt; (count || 25); i++) {\n        var ratingId    = Math.floor(Math.random() * ratings.length),\n            salaryId    = Math.floor(Math.random() * salaries.length),\n            firstNameId = Math.floor(Math.random() * firstNames.length),\n            lastNameId  = Math.floor(Math.random() * lastNames.length),\n\n            rating      = ratings[ratingId],\n            salary      = salaries[salaryId],\n            name        = <a href=\"#!/api/Ext.String-method-format\" rel=\"Ext.String-method-format\" class=\"docClass\">Ext.String.format</a>(\"{0} {1}\", firstNames[firstNameId], lastNames[lastNameId]);\n\n        data.push({\n            rating: rating,\n            salary: salary,\n            name: name\n        });\n    }\n    store.loadData(data);\n}\n\n// create the Data Store\nvar store = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.data.Store\" rel=\"Ext.data.Store\" class=\"docClass\">Ext.data.Store</a>', {\n    id: 'store',\n    model: 'Employee',\n    proxy: {\n        type: 'memory'\n    }\n});\ncreateFakeData(10);\n\nvar grid = <a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.grid.Panel\" rel=\"Ext.grid.Panel\" class=\"docClass\">Ext.grid.Panel</a>', {\n    title: 'Grid loaded with varying number of records',\n    anchor: '100%',\n    store: store,\n    columns: [{\n        xtype: 'rownumberer',\n        width: 40,\n        sortable: false\n    },{\n        text: 'Name',\n        flex: 1,\n        sortable: true,\n        dataIndex: 'name'\n    },{\n        text: 'Rating',\n        width: 125,\n        sortable: true,\n        dataIndex: 'rating'\n    },{\n        text: 'Salary',\n        width: 125,\n        sortable: true,\n        dataIndex: 'salary',\n        align: 'right',\n        renderer: <a href=\"#!/api/Ext.util.Format-method-usMoney\" rel=\"Ext.util.Format-method-usMoney\" class=\"docClass\">Ext.util.Format.usMoney</a>\n    }]\n});\n\n<a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>', {\n    renderTo: document.body,\n    width: 800,\n    height: 600,\n    layout: {\n        type: 'anchor',\n        reserveScrollbar: true // There will be a gap even when there's no scrollbar\n    },\n    autoScroll: true,\n    items: grid,\n    tbar: {\n        defaults: {\n            handler: function(b) {\n                createFakeData(b.count);\n            }\n        },\n        items: [{\n             text: '10 Items',\n             count: 10\n        },{\n             text: '100 Items',\n             count: 100\n        },{\n             text: '300 Items',\n             count: 300\n        },{\n             text: '1000 Items',\n             count: 1000\n        },{\n             text: '5000 Items',\n             count: 5000\n        }]\n    }\n});\n</code></pre>\n","inheritdoc":null,"id":"cfg-reserveScrollbar","html_type":"Boolean","evented":null,"linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"'Ext.Base'","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":763,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"$className","doc":"\n","inheritdoc":null,"id":"property-S-className","html_type":"String","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"An object which contains boolean properties specifying which properties are to be\nanimated upon flush of child Compon...","default":null,"owner":"Ext.layout.container.Container","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":68,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"animatePolicy","doc":"<p>An object which contains boolean properties specifying which properties are to be\nanimated upon flush of child Component ContextItems. For example, Accordion would\nhave:</p>\n\n<pre><code> {\n     y: true,\n     height: true\n }\n</code></pre>\n","inheritdoc":null,"id":"property-animatePolicy","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{readsWidth: 1, readsHeight: 1, setsWidth: 0, setsHeight: 0}","owner":"Ext.layout.Layout","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":42,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"autoSizePolicy","doc":"\n","inheritdoc":null,"id":"property-autoSizePolicy","html_type":"Object","linenr":42},{"overrides":[{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-property-childEls\" rel=\"Ext.layout.container.Container-property-childEls\" class=\"docClass\">Ext.layout.container.Container.childEls</a>","name":"childEls"}],"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"['outerCt', 'innerCt', 'clearEl']","owner":"Ext.layout.container.Auto","inheritable":null,"params":null,"readonly":null,"tagname":"property","files":[{"linenr":62,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"return":null,"private":true,"static":null,"name":"childEls","doc":"\n","throws":null,"inheritdoc":null,"id":"property-childEls","html_type":"Array","linenr":62},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"Columns with a columnWidth have their width managed. ...","default":"{readsWidth: 0, readsHeight: 1, setsWidth: 1, setsHeight: 0}","owner":"Ext.layout.container.Column","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":99,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Column.js"}],"private":true,"static":null,"name":"columnWidthSizePolicy","doc":"<p>Columns with a columnWidth have their width managed.</p>\n","inheritdoc":null,"id":"property-columnWidthSizePolicy","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":772,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configMap","doc":"\n","inheritdoc":null,"id":"property-configMap","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.layout.container.Column","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":107,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Column.js"}],"private":true,"static":null,"name":"createsInnerCt","doc":"\n","inheritdoc":null,"id":"property-createsInnerCt","html_type":"Boolean","linenr":107},{"autodetected":{},"type":"Boolean","short_doc":"Used only during a layout run, this value indicates that a\nlayout has finished its calculations. ...","default":null,"owner":"Ext.layout.Layout","tagname":"property","files":[{"linenr":95,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"name":"done","properties":null,"doc":"<p>Used only during a layout run, this value indicates that a\nlayout has finished its calculations. This flag is set to true prior to the call to\n<a href=\"#!/api/Ext.layout.Layout-method-calculate\" rel=\"Ext.layout.Layout-method-calculate\" class=\"docClass\">calculate</a> and should be set to false if this layout has more work to do.</p>\n","id":"property-done","html_type":"Boolean"},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":769,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigList","doc":"\n","inheritdoc":null,"id":"property-initConfigList","html_type":"Array","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":" ...","default":"{}","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":775,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"initConfigMap","doc":"\n","inheritdoc":null,"id":"property-initConfigMap","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"false","owner":"Ext.layout.Layout","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":39,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"initialized","doc":"\n","inheritdoc":null,"id":"property-initialized","html_type":"Boolean","linenr":39},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"static":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"isInstance","doc":"\n","inheritdoc":null,"id":"property-isInstance","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"true in this class to identify an object as an instantiated Layout, or subclass thereof. ...","default":"true","owner":"Ext.layout.Layout","inheritable":null,"readonly":true,"tagname":"property","files":[{"linenr":33,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":null,"static":null,"name":"isLayout","properties":null,"doc":"<p><code>true</code> in this class to identify an object as an instantiated Layout, or subclass thereof.</p>\n","inheritdoc":null,"id":"property-isLayout","html_type":"Boolean","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.layout.container.Auto","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":298,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"private":true,"static":null,"name":"isShrinkWrapTpl","doc":"\n","inheritdoc":null,"id":"property-isShrinkWrapTpl","html_type":"Boolean","linenr":298},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"Begin with no previous adjustments ...","default":"{width: 0, height: 0}","owner":"Ext.layout.container.Auto","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":214,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"private":true,"static":null,"name":"lastOverflowAdjust","doc":"<p>Begin with no previous adjustments</p>\n","inheritdoc":null,"id":"property-lastOverflowAdjust","html_type":"Object","linenr":null},{"overrides":[{"owner":"Ext.layout.container.Auto","link":"<a href=\"#!/api/Ext.layout.container.Auto-property-manageOverflow\" rel=\"Ext.layout.container.Auto-property-manageOverflow\" class=\"docClass\">Ext.layout.container.Auto.manageOverflow</a>","name":"manageOverflow"}],"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"true to rerun the layout if scrollbars are needed. ...","default":"true","owner":"Ext.layout.container.Column","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":109,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Column.js"}],"private":null,"static":null,"properties":null,"name":"manageOverflow","doc":"<p>true to rerun the layout if scrollbars are needed.</p>\n","inheritdoc":null,"id":"property-manageOverflow","html_type":"Boolean","linenr":109},{"autodetected":{"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":"indicates that this layout will correct cross browser padding differences when the\ncontainer has overflow. ...","default":"true","owner":"Ext.layout.container.Auto","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":189,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"private":null,"static":null,"name":"managePadding","properties":null,"doc":"<p>indicates that this layout will correct cross browser padding differences when the\ncontainer has overflow.</p>\n\n<p>In some browsers the right and/or bottom padding of a container is lost when\nthe container has overflow.  If managePadding is true the layout will apply the\npadding to an inner wrapping element instead of the container element that has the\noverflow so that paddding will be included in the scrollable area.\nNote: padding will not be managed if it is configured on the container using\na style config or css class.  In order to be managed, padding must be added to the\ncontainer using the appropriate <a href=\"#!/api/Ext.AbstractComponent-property-contentPaddingProperty\" rel=\"Ext.AbstractComponent-property-contentPaddingProperty\" class=\"docClass\">contentPaddingProperty</a>.  For <a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Panels</a> use\n<a href=\"#!/api/Ext.panel.AbstractPanel-cfg-bodyPadding\" rel=\"Ext.panel.AbstractPanel-cfg-bodyPadding\" class=\"docClass\">Ext.panel.AbstractPanel.bodyPadding</a>, and for\n<a href=\"#!/api/Ext.container.Container\" rel=\"Ext.container.Container\" class=\"docClass\">Containers</a>, use\n<a href=\"#!/api/Ext.AbstractComponent-cfg-padding\" rel=\"Ext.AbstractComponent-cfg-padding\" class=\"docClass\">padding</a></p>\n","inheritdoc":null,"id":"property-managePadding","html_type":"Boolean","linenr":null},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.Element","default":null,"owner":"Ext.layout.container.Container","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":83,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":null,"static":null,"name":"overflowPadderEl","properties":null,"doc":"<p>The element used to correct body padding during overflow.</p>\n","inheritdoc":null,"id":"property-overflowPadderEl","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>","linenr":null},{"overrides":[{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-property-renderTpl\" rel=\"Ext.layout.container.Container-property-renderTpl\" class=\"docClass\">Ext.layout.container.Container.renderTpl</a>","name":"renderTpl"}],"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"Auto layout's renderTpl wraps the content in an outerCt which is used to accomplish\nthe following 3 goals:\n\n\nWhen the...","default":null,"owner":"Ext.layout.container.Auto","inheritable":null,"params":null,"readonly":null,"tagname":"property","files":[{"linenr":220,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"return":null,"private":true,"static":null,"name":"renderTpl","doc":"<p>Auto layout's renderTpl wraps the content in an outerCt which is used to accomplish\nthe following 3 goals:</p>\n\n<ol>\n<li>When the container has a shrink wrapped width and/or height, the outerCt is used\nto measure the size of the content.</li>\n<li>When the container has overflow some browsers lose the container's right and/or\nbottom padding.  To fix this, the padding is rendered to the outerCt instead of\nthe container target element.  This ensures that the padding is included in the\ncontainer's scrollWidth/scrollHeight. In Old IE when a table is used, the padding\nis rendered to the innerCt td element.</li>\n<li>The outerCt contains the margins of its children, that is to say, it prevents\nthem from collapsing.</li>\n</ol>\n\n","throws":null,"inheritdoc":null,"id":"property-renderTpl","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"false","owner":"Ext.layout.Layout","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":40,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"running","doc":"\n","inheritdoc":null,"id":"property-running","html_type":"Boolean","linenr":40},{"autodetected":{"default":true,"inheritable":true,"readonly":true,"static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Ext.Class","short_doc":"Get the reference to the current class from which this object was instantiated. ...","default":null,"owner":"Ext.Base","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":1045,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"private":null,"static":null,"name":"self","properties":null,"doc":"<p>Get the reference to the current class from which this object was instantiated. Unlike <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>,\n<code>this.self</code> is scope-dependent and it's meant to be used for dynamic inheritance. See <a href=\"#!/api/Ext.Base-method-statics\" rel=\"Ext.Base-method-statics\" class=\"docClass\">statics</a>\nfor a detailed comparison</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        alert(this.self.speciesName); // dependent on 'this'\n    },\n\n    clone: function() {\n        return new this.self();\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n    statics: {\n        speciesName: 'Snow Leopard'         // My.SnowLeopard.speciesName = 'Snow Leopard'\n    }\n});\n\nvar cat = new My.Cat();                     // alerts 'Cat'\nvar snowLeopard = new My.SnowLeopard();     // alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));             // alerts 'My.SnowLeopard'\n</code></pre>\n","inheritdoc":null,"id":"property-self","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Object","short_doc":"This template is used for dynamically inserting a table outerCt/innerCt when needed. ...","default":null,"owner":"Ext.layout.container.Auto","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":284,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"private":true,"static":null,"name":"tableTpl","doc":"<p>This template is used for dynamically inserting a table outerCt/innerCt when needed.\nIt should be identical to the table template defined in renderTpl except that it\ndoes not have renderBody or clearEl.  It is an empty shell so that the contents\nof an already existing innerCt can be moved into it.</p>\n","inheritdoc":null,"id":"property-tableTpl","html_type":"Object","linenr":null},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":" ...","default":"Ext.baseCSSPrefix + 'column-layout-ct'","owner":"Ext.layout.container.Column","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":97,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Column.js"}],"private":true,"static":null,"name":"targetCls","doc":"\n","inheritdoc":null,"id":"property-targetCls","html_type":"String","linenr":97},{"overrides":[{"owner":"Ext.layout.container.Auto","link":"<a href=\"#!/api/Ext.layout.container.Auto-property-type\" rel=\"Ext.layout.container.Auto-property-type\" class=\"docClass\">Ext.layout.container.Auto.type</a>","name":"type"}],"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"String","short_doc":"End Definitions ...","default":"'column'","owner":"Ext.layout.container.Column","inheritable":null,"params":null,"readonly":null,"tagname":"property","files":[{"linenr":93,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Column.js"}],"return":null,"private":true,"static":null,"name":"type","doc":"<p>End Definitions</p>\n","throws":null,"inheritdoc":null,"id":"property-type","html_type":"String","linenr":93},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.layout.container.Container","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":94,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"usesContainerHeight","doc":"\n","inheritdoc":null,"id":"property-usesContainerHeight","html_type":"Boolean","linenr":94},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.layout.container.Container","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":95,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"usesContainerWidth","doc":"\n","inheritdoc":null,"id":"property-usesContainerWidth","html_type":"Boolean","linenr":95},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.layout.container.Container","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":96,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"usesHeight","doc":"\n","inheritdoc":null,"id":"property-usesHeight","html_type":"Boolean","linenr":96},{"autodetected":{"type":true,"default":true,"inheritable":true,"readonly":true,"tagname":"property","static":true,"private":true,"inheritdoc":true,"linenr":true},"type":"Boolean","short_doc":" ...","default":"true","owner":"Ext.layout.container.Container","inheritable":null,"readonly":null,"tagname":"property","files":[{"linenr":97,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"usesWidth","doc":"\n","inheritdoc":null,"id":"property-usesWidth","html_type":"Boolean","linenr":97},{"autodetected":{"type":true,"default":true,"readonly":true,"inheritdoc":true,"linenr":true},"type":"Array","short_doc":" ...","default":"[]","owner":"Ext.Base","inheritable":true,"readonly":null,"tagname":"property","files":[{"linenr":133,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"$onExtended","doc":"\n","inheritdoc":null,"id":"static-property-S-onExtended","html_type":"Array","linenr":null},{"overrides":[{"owner":"Ext.util.ElementContainer","link":"<a href=\"#!/api/Ext.util.ElementContainer-method-constructor\" rel=\"Ext.util.ElementContainer-method-constructor\" class=\"docClass\">Ext.util.ElementContainer.constructor</a>","name":"constructor"},{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-constructor\" rel=\"Ext.layout.container.Container-method-constructor\" class=\"docClass\">Ext.layout.container.Container.constructor</a>","name":"constructor"},{"owner":"Ext.layout.container.Box","link":"<a href=\"#!/api/Ext.layout.container.Box-method-constructor\" rel=\"Ext.layout.container.Box-method-constructor\" class=\"docClass\">Ext.layout.container.Box.constructor</a>","name":"constructor"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["callParent"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":99,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"return":{"type":"Ext.layout.container.Container","doc":"\n","html_type":"<a href=\"#!/api/Ext.layout.container.Container\" rel=\"Ext.layout.container.Container\" class=\"docClass\">Ext.layout.container.Container</a>"},"private":null,"static":null,"name":"constructor","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-constructor","fires":[],"linenr":99},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds each argument passed to this method to the childEls array. ...","method_calls":["getChildEls","hasOwnProperty","prune"],"owner":"Ext.util.ElementContainer","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":151,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/ElementContainer.js"}],"private":null,"static":null,"name":"addChildEls","doc":"<p>Adds each argument passed to this method to the <a href=\"#!/api/Ext.AbstractComponent-cfg-childEls\" rel=\"Ext.AbstractComponent-cfg-childEls\" class=\"docClass\">childEls</a> array.</p>\n","chainable":false,"inheritdoc":null,"id":"method-addChildEls","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes layout's itemCls and owning Container's itemCls. ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"}],"tagname":"method","files":[{"linenr":523,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"protected":true,"private":null,"static":null,"name":"afterRemove","doc":"<p>Removes layout's itemCls and owning Container's itemCls.\nClears the managed dimensions flags</p>\n","chainable":false,"inheritdoc":null,"id":"method-afterRemove","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":519,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"afterRenderItem","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-afterRenderItem","fires":null,"linenr":519},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets references to elements inside the component. ...","method_calls":["getChildEls"],"owner":"Ext.util.ElementContainer","inheritable":null,"params":[{"type":"Object","name":"el","html_type":"Object"},{"type":"Object","name":"id","html_type":"Object"}],"tagname":"method","files":[{"linenr":167,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/ElementContainer.js"}],"private":true,"static":null,"name":"applyChildEls","doc":"<p>Sets references to elements inside the component.</p>\n","chainable":false,"inheritdoc":null,"id":"method-applyChildEls","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Auto","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"}],"tagname":"method","files":[{"linenr":346,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"private":true,"static":null,"name":"beforeLayoutCycle","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-beforeLayoutCycle","fires":null,"linenr":346},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Called by an owning Panel before the Panel begins its collapse process. ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":54,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"beginCollapse","doc":"<p>Called by an owning Panel before the Panel begins its collapse process.\nMost layouts will not need to override the default <a href=\"#!/api/Ext-property-emptyFn\" rel=\"Ext-property-emptyFn\" class=\"docClass\">Ext.emptyFn</a> implementation.</p>\n","chainable":null,"inheritdoc":null,"id":"method-beginCollapse","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Called by an owning Panel before the Panel begins its expand process. ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":61,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"beginExpand","doc":"<p>Called by an owning Panel before the Panel begins its expand process.\nMost layouts will not need to override the default <a href=\"#!/api/Ext-property-emptyFn\" rel=\"Ext-property-emptyFn\" class=\"docClass\">Ext.emptyFn</a> implementation.</p>\n","chainable":null,"inheritdoc":null,"id":"method-beginExpand","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-beginLayout\" rel=\"Ext.layout.container.Container-method-beginLayout\" class=\"docClass\">Ext.layout.container.Container.beginLayout</a>","name":"beginLayout"},{"owner":"Ext.layout.container.Auto","link":"<a href=\"#!/api/Ext.layout.container.Auto-method-beginLayout\" rel=\"Ext.layout.container.Auto-method-beginLayout\" class=\"docClass\">Ext.layout.container.Auto.beginLayout</a>","name":"beginLayout"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"In addition to work done by our base classes, containers benefit from some extra\ncached data. ...","method_calls":["callParent","getOverflowXStyle","getOverflowYStyle","initContextItems","insertTableCt"],"owner":"Ext.layout.container.Auto","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"}],"tagname":"method","files":[{"linenr":301,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"private":null,"static":null,"name":"beginLayout","doc":"<p>In addition to work done by our base classes, containers benefit from some extra\ncached data. The following properties are added to the ownerContext:</p>\n\n<ul>\n<li>visibleItems: the result of <a href=\"#!/api/Ext.layout.container.Auto-method-getVisibleItems\" rel=\"Ext.layout.container.Auto-method-getVisibleItems\" class=\"docClass\">getVisibleItems</a></li>\n<li>childItems: the ContextItem[] for each visible item</li>\n<li>targetContext: the ContextItem for the <a href=\"#!/api/Ext.layout.container.Auto-method-getTarget\" rel=\"Ext.layout.container.Auto-method-getTarget\" class=\"docClass\">getTarget</a> element</li>\n</ul>\n\n","chainable":false,"inheritdoc":null,"id":"method-beginLayout","fires":[],"linenr":301},{"overrides":[{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-beginLayoutCycle\" rel=\"Ext.layout.container.Container-method-beginLayoutCycle\" class=\"docClass\">Ext.layout.container.Container.beginLayoutCycle</a>","name":"beginLayoutCycle"},{"owner":"Ext.layout.container.Auto","link":"<a href=\"#!/api/Ext.layout.container.Auto-method-beginLayoutCycle\" rel=\"Ext.layout.container.Auto-method-beginLayoutCycle\" class=\"docClass\">Ext.layout.container.Auto.beginLayoutCycle</a>","name":"beginLayoutCycle"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Called before any calculation cycles to reset DOM values and prepare for calculation. ...","method_calls":["callParent","getOverflowXStyle","getOverflowYStyle"],"owner":"Ext.layout.container.Auto","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"}],"tagname":"method","files":[{"linenr":362,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"private":null,"static":null,"name":"beginLayoutCycle","doc":"<p>Called before any calculation cycles to reset DOM values and prepare for calculation.</p>\n\n<p>This is a write phase and DOM reads should be strictly avoided when overridding\nthis method.</p>\n","chainable":false,"inheritdoc":null,"id":"method-beginLayoutCycle","fires":[],"linenr":362},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getVisibleItems"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"}],"tagname":"method","files":[{"linenr":140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"cacheChildItems","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-cacheChildItems","fires":[],"linenr":140},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["applyChildEls"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":155,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"cacheElements","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-cacheElements","fires":[],"linenr":155},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-calculate\" rel=\"Ext.layout.Layout-method-calculate\" class=\"docClass\">Ext.layout.Layout.calculate</a>","name":"calculate"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Called to perform the calculations for this layout. ...","method_calls":["calculateContentSize","calculateItems","calculateOverflow","getContainerSize","setCtSizeIfNeeded"],"owner":"Ext.layout.container.Auto","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"}],"tagname":"method","files":[{"linenr":450,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"private":null,"static":null,"name":"calculate","doc":"<p>Called to perform the calculations for this layout. This method will be called at\nleast once and may be called repeatedly if the <a href=\"#!/api/Ext.layout.container.Auto-property-done\" rel=\"Ext.layout.container.Auto-property-done\" class=\"docClass\">done</a> property is cleared\nbefore return to indicate that this layout is not yet done. The <a href=\"#!/api/Ext.layout.container.Auto-property-done\" rel=\"Ext.layout.container.Auto-property-done\" class=\"docClass\">done</a> property\nis always set to <code>true</code> before entering this method.</p>\n\n<p>This is a read phase and DOM writes should be strictly avoided in derived classes.\nInstead, DOM writes need to be written to <a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a> objects to\n be flushed at the next opportunity.</p>\n","chainable":false,"inheritdoc":null,"id":"method-calculate","abstract":true,"fires":[],"linenr":450},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["measureContentHeight","measureContentWidth"],"owner":"Ext.layout.container.Auto","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"}],"tagname":"method","files":[{"linenr":476,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"private":true,"static":null,"name":"calculateContentSize","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-calculateContentSize","fires":[],"linenr":476},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Column","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"},{"type":"Object","name":"containerSize","html_type":"Object"}],"tagname":"method","files":[{"linenr":128,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Column.js"}],"private":true,"static":null,"name":"calculateItems","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-calculateItems","fires":null,"linenr":128},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Handles overflow processing for a container. ...","method_calls":["getOverflowXStyle","getOverflowYStyle"],"owner":"Ext.layout.container.Auto","inheritable":null,"params":[{"type":"Ext.layout.ContextItem","tagname":"params","doc":"\n","name":"ownerContext","html_type":"<a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a>"}],"tagname":"method","files":[{"linenr":516,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"protected":true,"private":null,"static":null,"name":"calculateOverflow","doc":"<p>Handles overflow processing for a container.  In addition to the ownerContext\npassed to the <a href=\"#!/api/Ext.layout.container.Auto-method-calculate\" rel=\"Ext.layout.container.Auto-method-calculate\" class=\"docClass\">calculate</a> method, this method also needs the containerSize\n(the object returned by <a href=\"#!/api/Ext.layout.container.Auto-method-getContainerSize\" rel=\"Ext.layout.container.Auto-method-getContainerSize\" class=\"docClass\">getContainerSize</a>).</p>\n","chainable":false,"inheritdoc":null,"id":"method-calculateOverflow","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the original method that was previously overridden with override\n\nExt.define('My.Cat', {\n    constructor: functi...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callOverridden(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":1269,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the overridden method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callOverridden","doc":"<p>Call the original method that was previously overridden with <a href=\"#!/api/Ext.Base-static-method-override\" rel=\"Ext.Base-static-method-override\" class=\"docClass\">override</a></p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callOverridden();\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"method-callOverridden","deprecated":{"text":"<p>as of 4.1. Use <a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a> instead.</p>\n"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Call the \"parent\" method of the current method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callParent(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":846,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the parent method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callParent","doc":"<p>Call the \"parent\" method of the current method. That is the method previously\noverridden by derivation or by an override (see <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>).</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Base', {\n     constructor: function (x) {\n         this.x = x;\n     },\n\n     statics: {\n         method: function (x) {\n             return x;\n         }\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived', {\n     extend: 'My.Base',\n\n     constructor: function () {\n         this.callParent([21]);\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // alerts 21\n</code></pre>\n\n<p>This can be used with an override as follows:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.DerivedOverride', {\n     override: 'My.Derived',\n\n     constructor: function (x) {\n         this.callParent([x*2]); // calls original My.Derived constructor\n     }\n });\n\n var obj = new My.Derived();\n\n alert(obj.x);  // now alerts 42\n</code></pre>\n\n<p>This also works with static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2', {\n     extend: 'My.Base',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Base.method\n         }\n     }\n });\n\n alert(My.Base.method(10);     // alerts 10\n alert(My.Derived2.method(10); // alerts 20\n</code></pre>\n\n<p>Lastly, it also works with overridden static methods.</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Derived2Override', {\n     override: 'My.Derived2',\n\n     statics: {\n         method: function (x) {\n             return this.callParent([x*2]); // calls My.Derived2.method\n         }\n     }\n });\n\n alert(My.Derived2.method(10); // now alerts 40\n</code></pre>\n\n<p>To override a method and replace it and also call the superclass method, use\n<a href=\"#!/api/Ext.Base-method-callSuper\" rel=\"Ext.Base-method-callSuper\" class=\"docClass\">callSuper</a>. This is often done to patch a method to fix a bug.</p>\n","chainable":false,"inheritdoc":null,"id":"method-callParent","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is used by an override to call the superclass method but bypass any\noverridden method. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Array/Arguments","tagname":"params","doc":"<p>The arguments, either an array or the <code>arguments</code> object\nfrom the current method, for example: <code>this.callSuper(arguments)</code></p>\n","name":"args","html_type":"Array/Arguments"}],"tagname":"method","files":[{"linenr":961,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Object","properties":null,"doc":"<p>Returns the result of calling the superclass method</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"callSuper","doc":"<p>This method is used by an override to call the superclass method but bypass any\noverridden method. This is often done to \"patch\" a method that contains a bug\nbut for whatever reason cannot be fixed directly.</p>\n\n<p>Consider:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.Class', {\n     method: function () {\n         console.log('Good');\n     }\n });\n\n <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Ext.some.DerivedClass', {\n     method: function () {\n         console.log('Bad');\n\n         // ... logic but with a bug ...\n\n         this.callParent();\n     }\n });\n</code></pre>\n\n<p>To patch the bug in <code>DerivedClass.method</code>, the typical solution is to create an\noverride:</p>\n\n<pre><code> <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('App.paches.DerivedClass', {\n     override: 'Ext.some.DerivedClass',\n\n     method: function () {\n         console.log('Fixed');\n\n         // ... logic but with bug fixed ...\n\n         this.callSuper();\n     }\n });\n</code></pre>\n\n<p>The patch method cannot use <code>callParent</code> to call the superclass <code>method</code> since\nthat would call the overridden method containing the bug. In other words, the\nabove patch would only produce \"Fixed\" then \"Good\" in the console log, whereas,\nusing <code>callParent</code> would produce \"Fixed\" then \"Bad\" then \"Good\".</p>\n","chainable":false,"inheritdoc":null,"id":"method-callSuper","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-completeLayout\" rel=\"Ext.layout.Layout-method-completeLayout\" class=\"docClass\">Ext.layout.Layout.completeLayout</a>","name":"completeLayout"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method (if implemented) is called at the end of the cycle in which this layout\ncompletes (by not setting done to...","method_calls":null,"owner":"Ext.layout.container.Auto","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"}],"tagname":"method","files":[{"linenr":570,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"private":null,"static":null,"name":"completeLayout","doc":"<p>This method (if implemented) is called at the end of the cycle in which this layout\ncompletes (by not setting <a href=\"#!/api/Ext.layout.container.Auto-property-done\" rel=\"Ext.layout.container.Auto-property-done\" class=\"docClass\">done</a> to <code>false</code> in <a href=\"#!/api/Ext.layout.container.Auto-method-calculate\" rel=\"Ext.layout.container.Auto-method-calculate\" class=\"docClass\">calculate</a>). It is\npossible for the layout to complete and yet become invalid before the end of the cycle,\nin which case, this method will not be called. It is also possible for this method to\nbe called and then later the layout becomes invalidated. This will result in\n<a href=\"#!/api/Ext.layout.container.Auto-method-calculate\" rel=\"Ext.layout.container.Auto-method-calculate\" class=\"docClass\">calculate</a> being called again, followed by another call to this method.</p>\n\n<p>This is a read phase and DOM writes should be strictly avoided in derived classes.\nInstead, DOM writes need to be written to <a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a> objects to\nbe flushed at the next opportunity.</p>\n\n<p>This method need not be implemented by derived classes and, in fact, should only be\nimplemented when needed.</p>\n","chainable":false,"inheritdoc":null,"id":"method-completeLayout","fires":null,"linenr":570},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":766,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"configClass","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-configClass","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-configureItem\" rel=\"Ext.layout.Layout-method-configureItem\" class=\"docClass\">Ext.layout.Layout.configureItem</a>","name":"configureItem"},{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-configureItem\" rel=\"Ext.layout.container.Container-method-configureItem\" class=\"docClass\">Ext.layout.container.Container.configureItem</a>","name":"configureItem"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds layout's itemCls and owning Container's itemCls ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"}],"tagname":"method","files":[{"linenr":161,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"protected":true,"private":null,"static":null,"name":"configureItem","doc":"<p>Adds layout's itemCls and owning Container's itemCls</p>\n","chainable":false,"inheritdoc":null,"id":"method-configureItem","fires":null,"linenr":null},{"type":null,"overrides":[{"owner":"Ext.util.ElementContainer","link":"<a href=\"#!/api/Ext.util.ElementContainer-method-destroy\" rel=\"Ext.util.ElementContainer-method-destroy\" class=\"docClass\">Ext.util.ElementContainer.destroy</a>","name":"destroy"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["callParent"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":104,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"return":null,"private":true,"static":null,"name":"destroy","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-destroy","fires":[],"linenr":104},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["renderContent","renderItems"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[{"type":"Object","name":"out","html_type":"Object"},{"type":"Object","name":"renderData","html_type":"Object"}],"tagname":"method","files":[{"linenr":186,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"doRenderBody","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-doRenderBody","fires":[],"linenr":186},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[{"type":"Object","name":"out","html_type":"Object"},{"type":"Object","name":"renderData","html_type":"Object"}],"tagname":"method","files":[{"linenr":194,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"doRenderContainer","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-doRenderContainer","fires":null,"linenr":194},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[{"type":"Object","name":"out","html_type":"Object"},{"type":"Object","name":"renderData","html_type":"Object"}],"tagname":"method","files":[{"linenr":205,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"doRenderItems","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-doRenderItems","fires":null,"linenr":205},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Auto","inheritable":null,"params":[{"type":"Object","name":"out","html_type":"Object"},{"type":"Object","name":"renderData","html_type":"Object"}],"tagname":"method","files":[{"linenr":574,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"private":true,"static":null,"name":"doRenderPadding","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-doRenderPadding","fires":null,"linenr":574},{"autodetected":{},"short_doc":"This method (if implemented) is called after all layouts have completed. ...","owner":"Ext.layout.Layout","params":[{"type":"Ext.layout.ContextItem","tagname":"params","doc":"<p>The context item for the layout's owner\ncomponent.</p>\n","name":"ownerContext","html_type":"<a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a>"}],"tagname":"method","files":[{"linenr":185,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"name":"finalizeLayout","doc":"<p>This method (if implemented) is called after all layouts have completed. In most\nways this is similar to <a href=\"#!/api/Ext.layout.Layout-method-completeLayout\" rel=\"Ext.layout.Layout-method-completeLayout\" class=\"docClass\">completeLayout</a>. This call can cause this (or any\nlayout) to be become invalid (see <a href=\"#!/api/Ext.layout.Context-method-invalidate\" rel=\"Ext.layout.Context-method-invalidate\" class=\"docClass\">Ext.layout.Context.invalidate</a>), but this\nis best avoided. This method is intended to be where final reads are made and so it\nis best to avoid invalidating layouts at this point whenever possible. Even so, this\nmethod can be used to perform final checks that may require all other layouts to be\ncomplete and then invalidate some results.</p>\n\n<p>This is a read phase and DOM writes should be strictly avoided in derived classes.\nInstead, DOM writes need to be written to <a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a> objects to\nbe flushed at the next opportunity.</p>\n\n<p>This method need not be implemented by derived classes and, in fact, should only be\nimplemented when needed.</p>\n","id":"method-finalizeLayout"},{"type":null,"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-finishRender\" rel=\"Ext.layout.Layout-method-finishRender\" class=\"docClass\">Ext.layout.Layout.finishRender</a>","name":"finishRender"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["cacheElements","callParent","finishRenderItems","getLayoutItems","getRenderTarget","getTarget"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":217,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"return":null,"private":true,"static":null,"name":"finishRender","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-finishRender","fires":[],"linenr":217},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["afterRenderItem"],"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"target","html_type":"Object"},{"type":"Object","name":"items","html_type":"Object"}],"tagname":"method","files":[{"linenr":356,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"finishRenderItems","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-finishRenderItems","fires":[],"linenr":356},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-finishedLayout\" rel=\"Ext.layout.Layout-method-finishedLayout\" class=\"docClass\">Ext.layout.Layout.finishedLayout</a>","name":"finishedLayout"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is called after all layouts are complete and their calculations flushed\nto the DOM. ...","method_calls":["callParent"],"owner":"Ext.layout.container.Auto","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"}],"tagname":"method","files":[{"linenr":587,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"private":null,"static":null,"name":"finishedLayout","doc":"<p>This method is called after all layouts are complete and their calculations flushed\nto the DOM. No further layouts will be run and this method is only called once per\nlayout run. The base component layout caches <code>lastComponentSize</code>.</p>\n\n<p>This is a write phase and DOM reads should be avoided if possible when overridding\nthis method.</p>\n\n<p>This method need not be implemented by derived classes and, in fact, should only be\nimplemented when needed.</p>\n","chainable":false,"inheritdoc":null,"id":"method-finishedLayout","fires":[],"linenr":587},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":248,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"getAnimatePolicy","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getAnimatePolicy","fires":null,"linenr":248},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getClassChildEls","hasOwnProperty"],"owner":"Ext.util.ElementContainer","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":201,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/ElementContainer.js"}],"private":true,"static":null,"name":"getChildEls","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getChildEls","fires":[],"linenr":201},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getClassChildEls","prune"],"owner":"Ext.util.ElementContainer","inheritable":null,"params":[{"type":"Object","name":"cls","html_type":"Object"}],"tagname":"method","files":[{"linenr":216,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/ElementContainer.js"}],"private":true,"static":null,"name":"getClassChildEls","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getClassChildEls","fires":[],"linenr":216},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"}],"tagname":"method","files":[{"linenr":1196,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"getConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getConfig","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-getContainerSize\" rel=\"Ext.layout.container.Container-method-getContainerSize\" class=\"docClass\">Ext.layout.container.Container.getContainerSize</a>","name":"getContainerSize"}],"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the container size (that of the target). ...","method_calls":["callParent"],"owner":"Ext.layout.container.Auto","inheritable":null,"params":[{"type":"Ext.layout.ContextItem","tagname":"params","doc":"<p>The owner's context item.</p>\n","name":"ownerContext","html_type":"<a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a>"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True if the container size must be in the DOM.</p>\n","name":"inDom","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":609,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"protected":true,"return":{"type":"Object","properties":[{"type":"Number","tagname":"return","doc":"<p>The width</p>\n","name":"width","html_type":"Number"},{"type":"Number","tagname":"return","doc":"<p>The height</p>\n","name":"height","html_type":"Number"}],"doc":"<p>The size</p>\n","name":"return","html_type":"Object"},"private":null,"static":null,"name":"getContainerSize","doc":"<p>Returns the container size (that of the target). Only the fixed-sized dimensions can\nbe returned because the shrinkWrap dimensions are based on the contentWidth/Height\nas determined by the container layout.</p>\n\n<p>If the <a href=\"#!/api/Ext.layout.container.Auto-method-calculateOverflow\" rel=\"Ext.layout.container.Auto-method-calculateOverflow\" class=\"docClass\">calculateOverflow</a> method is used and if <a href=\"#!/api/Ext.layout.container.Auto-property-manageOverflow\" rel=\"Ext.layout.container.Auto-property-manageOverflow\" class=\"docClass\">manageOverflow</a> is\ntrue, this will adjust the width/height by the size of scrollbars.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getContainerSize","fires":[],"linenr":null},{"type":null,"overrides":[{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-getContentTarget\" rel=\"Ext.layout.container.Container-method-getContentTarget\" class=\"docClass\">Ext.layout.container.Container.getContentTarget</a>","name":"getContentTarget"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Auto","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":1004,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"return":null,"private":true,"static":null,"name":"getContentTarget","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-getContentTarget","fires":null,"linenr":1004},{"overrides":[{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-getElementTarget\" rel=\"Ext.layout.container.Container-method-getElementTarget\" class=\"docClass\">Ext.layout.container.Container.getElementTarget</a>","name":"getElementTarget"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Overridden method from Ext.layout.container.Container. ...","method_calls":["getRenderTarget"],"owner":"Ext.layout.container.Auto","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":679,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"return":{"type":"Ext.Element","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},"private":null,"static":null,"name":"getElementTarget","doc":"<p>Overridden method from <a href=\"#!/api/Ext.layout.container.Container\" rel=\"Ext.layout.container.Container\" class=\"docClass\">Ext.layout.container.Container</a>.\nUsed by Container classes to insert special DOM elements which must exist in addition to the child components</p>\n","chainable":false,"inheritdoc":null,"id":"method-getElementTarget","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the initial configuration passed to constructor when instantiating\nthis class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>Name of the config option to return.</p>\n","name":"name","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":1206,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object/Mixed","properties":null,"doc":"<p>The full config object or a single config value\nwhen <code>name</code> parameter specified.</p>\n","name":"return","html_type":"Object/Mixed"},"private":null,"static":null,"name":"getInitialConfig","doc":"<p>Returns the initial configuration passed to constructor when instantiating\nthis class.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getInitialConfig","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-getItemSizePolicy\" rel=\"Ext.layout.Layout-method-getItemSizePolicy\" class=\"docClass\">Ext.layout.Layout.getItemSizePolicy</a>","name":"getItemSizePolicy"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns an object describing how this layout manages the size of the given component. ...","method_calls":null,"owner":"Ext.layout.container.Column","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"},{"type":"Object","name":"ownerSizeModel","html_type":"Object"}],"protected":true,"tagname":"method","files":[{"linenr":115,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Column.js"}],"return":{"type":"Ext.layout.SizePolicy","properties":null,"doc":"<p>An object describing the sizing done by the layout\nfor this item.</p>\n\n","name":"return","html_type":"<a href=\"#!/api/Ext.layout.SizePolicy\" rel=\"Ext.layout.SizePolicy\" class=\"docClass\">Ext.layout.SizePolicy</a>"},"private":null,"static":null,"name":"getItemSizePolicy","doc":"<p>Returns an object describing how this layout manages the size of the given component.\nThis method must be implemented by any layout that manages components.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getItemSizePolicy","fires":null,"linenr":115},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["configureItem"],"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"items","html_type":"Object"},{"type":"Object","name":"renderCfgs","html_type":"Object"}],"tagname":"method","files":[{"linenr":312,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"getItemsRenderTree","doc":"<hr />\n","chainable":false,"inheritdoc":null,"id":"method-getItemsRenderTree","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-getLayoutItems\" rel=\"Ext.layout.Layout-method-getLayoutItems\" class=\"docClass\">Ext.layout.Layout.getLayoutItems</a>","name":"getLayoutItems"},{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-getLayoutItems\" rel=\"Ext.layout.container.Container-method-getLayoutItems\" class=\"docClass\">Ext.layout.container.Container.getLayoutItems</a>","name":"getLayoutItems"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns an array of child components either for a render phase (Performed in the beforeLayout\nmethod of the layout's ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":334,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"return":{"type":"Ext.Component[]","properties":null,"doc":"<p>of child components</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>[]"},"private":null,"static":null,"name":"getLayoutItems","doc":"<p>Returns an array of child components either for a render phase (Performed in the beforeLayout\nmethod of the layout's base class), or the layout phase (onLayout).</p>\n","chainable":false,"inheritdoc":null,"id":"method-getLayoutItems","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the overflow-x style of the render target. ...","method_calls":null,"owner":"Ext.layout.container.Auto","inheritable":null,"params":[{"type":"Ext.layout.ContextItem","tagname":"params","doc":"\n","name":"ownerContext","html_type":"<a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a>"}],"tagname":"method","files":[{"linenr":685,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"protected":true,"return":{"type":"String","properties":null,"doc":"\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"getOverflowXStyle","doc":"<p>Returns the overflow-x style of the render target.\nNote: If overflow is configured on a container using style or css class this method\nwill read the dom the first time it is called. It is therefore preferable for\nperformance reasons to use the autoScroll or overflowX config when horizontal\noverflow is desired.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getOverflowXStyle","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the overflow-y style of the render target. ...","method_calls":null,"owner":"Ext.layout.container.Auto","inheritable":null,"params":[{"type":"Ext.layout.ContextItem","tagname":"params","doc":"\n","name":"ownerContext","html_type":"<a href=\"#!/api/Ext.layout.ContextItem\" rel=\"Ext.layout.ContextItem\" class=\"docClass\">Ext.layout.ContextItem</a>"}],"tagname":"method","files":[{"linenr":700,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"protected":true,"return":{"type":"String","properties":null,"doc":"\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"getOverflowYStyle","doc":"<p>Returns the overflow-y style of the render target.\nNote: If overflow is configured on a container using style or css class this method\nwill read the dom the first time it is called. It is therefore preferable for\nperformance reasons to use the autoScroll or overflowY config when vertical\noverflow is desired.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getOverflowYStyle","fires":null,"linenr":null},{"type":null,"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-getPositionOffset\" rel=\"Ext.layout.Layout-method-getPositionOffset\" class=\"docClass\">Ext.layout.Layout.getPositionOffset</a>","name":"getPositionOffset"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is used to offset the DOM position when checking\nwhether the element is a certain child of the target. ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[{"type":"Object","name":"position","html_type":"Object"}],"tagname":"method","files":[{"linenr":316,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"return":null,"private":true,"static":null,"name":"getPositionOffset","doc":"<p>This method is used to offset the DOM position when checking\nwhether the element is a certain child of the target. This is\nrequired in cases where the extra elements prepended to the target\nbefore any of the items. An example of this is when using labelAlign: 'top'\non a field. The label appears first in the DOM before any child items are\ncreated, so when we check the position we need to add an extra offset.\nContainers that create an innerCt are exempt because this new element\npreserves the order</p>\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-getPositionOffset","fires":null,"linenr":null},{"type":null,"overrides":[{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-getRenderData\" rel=\"Ext.layout.container.Container-method-getRenderData\" class=\"docClass\">Ext.layout.container.Container.getRenderData</a>","name":"getRenderData"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["callParent"],"owner":"Ext.layout.container.Auto","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":642,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"return":null,"private":true,"static":null,"name":"getRenderData","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-getRenderData","fires":[],"linenr":642},{"overrides":[{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-getRenderTarget\" rel=\"Ext.layout.container.Container-method-getRenderTarget\" class=\"docClass\">Ext.layout.container.Container.getRenderTarget</a>","name":"getRenderTarget"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Overridden method from Ext.layout.container.Container. ...","method_calls":null,"owner":"Ext.layout.container.Auto","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":673,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"return":{"type":"Ext.Element","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},"private":null,"static":null,"name":"getRenderTarget","doc":"<p>Overridden method from <a href=\"#!/api/Ext.layout.container.Container\" rel=\"Ext.layout.container.Container\" class=\"docClass\">Ext.layout.container.Container</a>.\nUsed in the beforeLayout method to render all items into.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getRenderTarget","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":402,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"getRenderTpl","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getRenderTpl","fires":null,"linenr":402},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getItemsRenderTree","getLayoutItems"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":415,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"getRenderTree","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getRenderTree","fires":[],"linenr":415},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns all items that are rendered ...","method_calls":["getLayoutItems","getRenderTarget","isValidParent"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":356,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"protected":true,"return":{"type":"Array","properties":null,"doc":"<p>All matching items</p>\n","name":"return","html_type":"Array"},"private":null,"static":null,"name":"getRenderedItems","doc":"<p>Returns all items that are rendered</p>\n","chainable":false,"inheritdoc":null,"id":"method-getRenderedItems","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[{"type":"Object","name":"width","html_type":"Object"},{"type":"Object","name":"height","html_type":"Object"},{"type":"Object","name":"contentWidth","html_type":"Object"},{"type":"Object","name":"contentHeight","html_type":"Object"}],"tagname":"method","files":[{"linenr":444,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"getScrollbarsNeeded","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-getScrollbarsNeeded","fires":null,"linenr":444},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns the owner component's resize element. ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":473,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"return":{"type":"Ext.Element","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.Element</a>"},"private":null,"static":null,"name":"getTarget","doc":"<p>Returns the owner component's resize element.</p>\n","chainable":false,"inheritdoc":null,"id":"method-getTarget","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns all items that are both rendered and visible ...","method_calls":["getLayoutItems","getRenderTarget","isValidParent"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":481,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"protected":true,"return":{"type":"Array","properties":null,"doc":"<p>All matching items</p>\n","name":"return","html_type":"Array"},"private":null,"static":null,"name":"getVisibleItems","doc":"<p>Returns all items that are both rendered and visible</p>\n","chainable":false,"inheritdoc":null,"id":"method-getVisibleItems","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1156,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"hasConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-hasConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Initialize configuration for this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":1090,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":null,"static":null,"name":"initConfig","doc":"<p>Initialize configuration for this class. a typical example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Class', {\n    // The default config\n    config: {\n        name: 'Awesome',\n        isAwesome: true\n    },\n\n    constructor: function(config) {\n        this.initConfig(config);\n    }\n});\n\nvar awesome = new My.awesome.Class({\n    name: 'Super Awesome'\n});\n\nalert(awesome.getName()); // 'Super Awesome'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"method-initConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Auto","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"}],"tagname":"method","files":[{"linenr":715,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"private":true,"static":null,"name":"initContextItems","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-initContextItems","fires":null,"linenr":715},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-initLayout\" rel=\"Ext.layout.Layout-method-initLayout\" class=\"docClass\">Ext.layout.Layout.initLayout</a>","name":"initLayout"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"A one-time initialization method called just before rendering. ...","method_calls":["callParent","hasOwnProperty"],"owner":"Ext.layout.container.Auto","inheritable":null,"params":[],"protected":true,"tagname":"method","files":[{"linenr":740,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"private":null,"static":null,"name":"initLayout","doc":"<p>A one-time initialization method called just before rendering.</p>\n","chainable":false,"inheritdoc":null,"id":"method-initLayout","fires":[],"linenr":740},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"In some cases a table-based outerCt/innerCt is required in old IE (see renderTpl). ...","method_calls":["applyChildEls","getTarget","initContextItems"],"owner":"Ext.layout.container.Auto","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"}],"tagname":"method","files":[{"linenr":760,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"private":true,"static":null,"name":"insertTableCt","doc":"<p>In some cases a table-based outerCt/innerCt is required in old IE (see renderTpl).\nMost of the time this is determined at render time, however its possible that\nwe made the wrong determination at render time and now that the layout is in\nprogress we need a table.  If so, this method should be called to replace the\nexisting outerCt with a new table outerCt, and move the child elements to the new\ninnerCt.</p>\n","chainable":false,"inheritdoc":null,"id":"method-insertTableCt","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"itemContext","html_type":"Object"}],"tagname":"method","files":[{"linenr":265,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"isItemBoxParent","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-isItemBoxParent","fires":null,"linenr":265},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"}],"tagname":"method","files":[{"linenr":269,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"isItemLayoutRoot","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-isItemLayoutRoot","fires":null,"linenr":269},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-isItemShrinkWrap\" rel=\"Ext.layout.Layout-method-isItemShrinkWrap\" class=\"docClass\">Ext.layout.Layout.isItemShrinkWrap</a>","name":"isItemShrinkWrap"}],"type":null,"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Column","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"}],"tagname":"method","files":[{"linenr":111,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Column.js"}],"return":null,"private":true,"static":null,"name":"isItemShrinkWrap","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-isItemShrinkWrap","fires":null,"linenr":111},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":288,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"isRunning","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-isRunning","fires":null,"linenr":288},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Validates item is in the proper place in the dom. ...","method_calls":["getPositionOffset"],"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"},{"type":"Object","name":"target","html_type":"Object"},{"type":"Object","name":"position","html_type":"Object"}],"tagname":"method","files":[{"linenr":410,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"protected":true,"private":null,"static":null,"name":"isValidParent","doc":"<p>Validates item is in the proper place in the dom.</p>\n","chainable":false,"inheritdoc":null,"id":"method-isValidParent","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Auto","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"}],"tagname":"method","files":[{"linenr":814,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"private":true,"static":null,"name":"measureContentHeight","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-measureContentHeight","fires":null,"linenr":814},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.container.Auto","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"}],"tagname":"method","files":[{"linenr":829,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"private":true,"static":null,"name":"measureContentWidth","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-measureContentWidth","fires":null,"linenr":829},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Moves Component to the provided target instead. ...","method_calls":["configureItem"],"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"},{"type":"Object","name":"target","html_type":"Object"},{"type":"Object","name":"position","html_type":"Object"}],"tagname":"method","files":[{"linenr":469,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"moveItem","doc":"<p>Moves Component to the provided target instead.</p>\n","chainable":false,"inheritdoc":null,"id":"method-moveItem","fires":[],"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-notifyOwner\" rel=\"Ext.layout.Layout-method-notifyOwner\" class=\"docClass\">Ext.layout.Layout.notifyOwner</a>","name":"notifyOwner"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Called for every layout in the layout context after all the layouts have been finally flushed ...","method_calls":null,"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":237,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"private":true,"static":null,"name":"notifyOwner","doc":"<p>Called for every layout in the layout context after all the layouts have been finally flushed</p>\n","chainable":false,"inheritdoc":null,"id":"method-notifyOwner","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"item","html_type":"Object"}],"tagname":"method","files":[{"linenr":516,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"onAdd","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onAdd","fires":null,"linenr":516},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"names","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"callback","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":1224,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":null,"name":"onConfigUpdate","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-onConfigUpdate","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method is called when a child item changes in some way. ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Ext.Component","tagname":"params","doc":"<p>The child item that has changed.</p>\n","name":"child","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"}],"tagname":"method","files":[{"linenr":483,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"return":{"type":"Boolean","properties":null,"doc":"<p>True if this layout has handled the content change.</p>\n","name":"return","html_type":"Boolean"},"private":null,"static":null,"name":"onContentChange","doc":"<p>This method is called when a child item changes in some way. By default this calls\n<a href=\"#!/api/Ext.AbstractComponent-method-updateLayout\" rel=\"Ext.AbstractComponent-method-updateLayout\" class=\"docClass\">Ext.AbstractComponent.updateLayout</a> on this layout's owner.</p>\n","chainable":false,"inheritdoc":null,"id":"method-onContentChange","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":521,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"onDestroy","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-onDestroy","fires":null,"linenr":521},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":520,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"onRemove","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-onRemove","fires":null,"linenr":520},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.util.ElementContainer","inheritable":null,"params":[{"type":"Object","name":"childEls","html_type":"Object"},{"type":"Object","name":"shared","html_type":"Object"}],"tagname":"method","files":[{"linenr":268,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/ElementContainer.js"}],"private":true,"static":null,"name":"prune","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-prune","fires":null,"linenr":268},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Removes items in the childEls array based on the return value of a supplied test\nfunction. ...","method_calls":["getChildEls"],"owner":"Ext.util.ElementContainer","inheritable":null,"params":[{"type":"Function","tagname":"params","doc":"<p>The test function.</p>\n","name":"testFn","html_type":"Function"}],"tagname":"method","files":[{"linenr":293,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/util/ElementContainer.js"}],"private":null,"static":null,"name":"removeChildEls","doc":"<p>Removes items in the childEls array based on the return value of a supplied test\nfunction. The function is called with a entry in childEls and if the test function\nreturn true, that entry is removed. If false, that entry is kept.</p>\n","chainable":false,"inheritdoc":null,"id":"method-removeChildEls","fires":[],"linenr":null},{"type":null,"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-method-renderChildren\" rel=\"Ext.layout.Layout-method-renderChildren\" class=\"docClass\">Ext.layout.Layout.renderChildren</a>","name":"renderChildren"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["getLayoutItems","getRenderTarget","renderItems"],"owner":"Ext.layout.container.Container","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":428,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Container.js"}],"return":null,"private":true,"static":null,"name":"renderChildren","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-renderChildren","fires":[],"linenr":428},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Renders the given Component into the target Element. ...","method_calls":["afterRenderItem","configureItem"],"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Ext.Component","tagname":"params","doc":"<p>The Component to render</p>\n","name":"item","html_type":"<a href=\"#!/api/Ext.Component\" rel=\"Ext.Component\" class=\"docClass\">Ext.Component</a>"},{"type":"Ext.dom.Element","tagname":"params","doc":"<p>The target Element</p>\n","name":"target","html_type":"<a href=\"#!/api/Ext.dom.Element\" rel=\"Ext.dom.Element\" class=\"docClass\">Ext.dom.Element</a>"},{"type":"Number","tagname":"params","doc":"<p>The position within the target to render the item to</p>\n","name":"position","html_type":"Number"}],"tagname":"method","files":[{"linenr":453,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"renderItem","doc":"<p>Renders the given Component into the target Element.</p>\n","chainable":false,"inheritdoc":null,"id":"method-renderItem","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Iterates over all passed items, ensuring they are rendered. ...","method_calls":["configureItem","isValidParent","moveItem","renderItem"],"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"items","html_type":"Object"},{"type":"Object","name":"target","html_type":"Object"}],"tagname":"method","files":[{"linenr":382,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"protected":true,"private":null,"static":null,"name":"renderItems","doc":"<p>Iterates over all passed items, ensuring they are rendered.  If the items are already rendered,\nalso determines if the items are in the proper place in the dom.</p>\n","chainable":false,"inheritdoc":null,"id":"method-renderItems","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[{"type":"Object","name":"config","html_type":"Object"},{"type":"Object","name":"applyIfNotSet","html_type":"Object"}],"tagname":"method","files":[{"linenr":1164,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","doc":"<p>this</p>\n","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"private":true,"static":null,"name":"setConfig","doc":"\n","chainable":true,"inheritdoc":null,"id":"method-setConfig","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.container.Auto","link":"<a href=\"#!/api/Ext.layout.container.Auto-method-setCtSizeIfNeeded\" rel=\"Ext.layout.container.Auto-method-setCtSizeIfNeeded\" class=\"docClass\">Ext.layout.container.Auto.setCtSizeIfNeeded</a>","name":"setCtSizeIfNeeded"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"This method sets the height and/or width of the outerCt/innerCt to adjust for the\nfollowing browser-specific issues:\n...","method_calls":["callParent"],"owner":"Ext.layout.container.Column","inheritable":null,"params":[{"type":"Object","name":"ownerContext","html_type":"Object"},{"type":"Object","name":"containerSize","html_type":"Object"}],"protected":true,"tagname":"method","files":[{"linenr":192,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Column.js"}],"private":null,"static":null,"name":"setCtSizeIfNeeded","doc":"<p>This method sets the height and/or width of the outerCt/innerCt to adjust for the\nfollowing browser-specific issues:</p>\n\n<ol>\n<li><p>In IE6 and 7 strict if we are using the shrink wrap template, and the outerCt\nhas a 100% width (because the container is not shrink wrapping width currently),\nand the target element has a vertical scrollbar, the browser disregards the\nscrollbar when sizing the width of the outerCt.  This can result in the target\nelement gaining a horizontal scrollbar.  We fix this issue by setting a pixel\nwidth on the outerCt</p></li>\n<li><p>In IE quirks when using the \"non shrink wrap\" template, a long non-breaking word\ncan cause the outerCt's width to expand beyond the width of its container. This\nbehavior is desired if the container has the potential for horizontal overflow,\nbut can cause text to be hidden if the container's overflow is hidden. To prevent\nthis from happening we give the outerCt a fixed width in IE quirks when the\ncontainer does not have horizontal overflow.</p></li>\n<li><p>In some browsers a percentage-height element ignores the horizontal scrollbar\nof its parent (see <a href=\"#!/api/Ext.supports-property-PercentageHeightOverflowBug\" rel=\"Ext.supports-property-PercentageHeightOverflowBug\" class=\"docClass\">Ext.supports.PercentageHeightOverflowBug</a>).  If the browser is\naffected by this bug the outerCt needs a pixel height in order to support\npercentage-height children when not shrink-wrapping height. If the browser is not\naffected by this bug, a height of 100% is assigned to the outerCt (see\nbeginLayoutCycle).</p></li>\n<li><p>In IE6/7 strict when using the \"shrink wrap\" template, percentage heights on\nchildren do not work unless the innerCt td has a height set.  We can't use height\n100% on the innerCt because conent-box sizing will cause any top/bottom padding to\nbe added to the height.  The solution is to set a pixel height on the innerCt.</p></li>\n<li><p>IE8 strict mode has a bug with percentage height children.  if the innerCt has\na height of 100%, has padding, and has a child item with a percentage height, that\nchild item will be sized as a percentage of the parent's height plus padding height.\nIn other words, a child with height:50% would have its height caclulated thusly:\n(parentHeight + parentPaddingHeight) * 0.5\nTo fix this, we have to give the innerCt a pixel height.</p></li>\n<li><p>In IE7 strict if we're using the \"non shrink wrap\" template, and the target\nelement has overflow-y:auto, the outerCt reserves space for the target element's\nvertical scrollbar even when there is no vertical scrollbar.  This is fixed by\nsetting the targetEl's overflow property to \"hidden\" and then back to \"auto\".</p></li>\n</ol>\n\n","chainable":false,"inheritdoc":null,"id":"method-setCtSizeIfNeeded","fires":[],"linenr":192},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Sets the layout owner ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"owner","html_type":"Object"}],"tagname":"method","files":[{"linenr":503,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"setOwner","doc":"<p>Sets the layout owner</p>\n","chainable":false,"inheritdoc":null,"id":"method-setOwner","fires":null,"linenr":null},{"type":null,"overrides":[{"owner":"Ext.layout.container.Container","link":"<a href=\"#!/api/Ext.layout.container.Container-method-setupRenderTpl\" rel=\"Ext.layout.container.Container-method-setupRenderTpl\" class=\"docClass\">Ext.layout.container.Container.setupRenderTpl</a>","name":"setupRenderTpl"}],"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["callParent"],"owner":"Ext.layout.container.Auto","inheritable":null,"params":[{"type":"Object","name":"renderTpl","html_type":"Object"}],"tagname":"method","files":[{"linenr":998,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/container/Auto.js"}],"return":null,"private":true,"static":null,"name":"setupRenderTpl","doc":"\n","chainable":false,"throws":null,"inheritdoc":null,"id":"method-setupRenderTpl","fires":[],"linenr":998},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[{"type":"Object","name":"items","html_type":"Object"},{"type":"Object","name":"reverseProp","html_type":"Object"}],"tagname":"method","files":[{"linenr":574,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"sortWeightedItems","doc":"\n","chainable":false,"inheritdoc":null,"id":"method-sortWeightedItems","fires":null,"linenr":574},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the reference to the class from which this object was instantiated. ...","method_calls":null,"owner":"Ext.Base","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":778,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"protected":true,"return":{"type":"Ext.Class","properties":null,"doc":"\n","name":"return","html_type":"<a href=\"#!/api/Ext.Class\" rel=\"Ext.Class\" class=\"docClass\">Ext.Class</a>"},"private":null,"static":null,"name":"statics","doc":"<p>Get the reference to the class from which this object was instantiated. Note that unlike <a href=\"#!/api/Ext.Base-property-self\" rel=\"Ext.Base-property-self\" class=\"docClass\">self</a>,\n<code>this.statics()</code> is scope-independent and it always returns the class from which it was called, regardless of what\n<code>this</code> points to during run-time</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    statics: {\n        totalCreated: 0,\n        speciesName: 'Cat' // My.Cat.speciesName = 'Cat'\n    },\n\n    constructor: function() {\n        var statics = this.statics();\n\n        alert(statics.speciesName);     // always equals to 'Cat' no matter what 'this' refers to\n                                        // equivalent to: My.Cat.speciesName\n\n        alert(this.self.speciesName);   // dependent on 'this'\n\n        statics.totalCreated++;\n    },\n\n    clone: function() {\n        var cloned = new this.self;                      // dependent on 'this'\n\n        cloned.groupName = this.statics().speciesName;   // equivalent to: My.Cat.speciesName\n\n        return cloned;\n    }\n});\n\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.SnowLeopard', {\n    extend: 'My.Cat',\n\n    statics: {\n        speciesName: 'Snow Leopard'     // My.SnowLeopard.speciesName = 'Snow Leopard'\n    },\n\n    constructor: function() {\n        this.callParent();\n    }\n});\n\nvar cat = new My.Cat();                 // alerts 'Cat', then alerts 'Cat'\n\nvar snowLeopard = new My.SnowLeopard(); // alerts 'Cat', then alerts 'Snow Leopard'\n\nvar clone = snowLeopard.clone();\nalert(<a href=\"#!/api/Ext-method-getClassName\" rel=\"Ext-method-getClassName\" class=\"docClass\">Ext.getClassName</a>(clone));         // alerts 'My.SnowLeopard'\nalert(clone.groupName);                 // alerts 'Cat'\n\nalert(My.Cat.totalCreated);             // alerts 3\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-statics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"tagname":"method","static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.layout.Layout","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":246,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/layout/Layout.js"}],"private":true,"static":null,"name":"undoLayout","doc":"\n","chainable":null,"inheritdoc":null,"id":"method-undoLayout","fires":null,"linenr":246},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":176,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addConfig","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-addConfig","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":256,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addInheritableStatics","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addInheritableStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"name","html_type":"Object"},{"type":"Object","tagname":"params","doc":"\n","name":"member","html_type":"Object"}],"tagname":"method","files":[{"linenr":353,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addMember","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addMember","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add methods / properties to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":296,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"addMembers","doc":"<p>Add methods / properties to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.awesome.Cat', {\n    constructor: function() {\n        ...\n    }\n});\n\n My.awesome.Cat.addMembers({\n     meow: function() {\n        alert('Meowww...');\n     }\n });\n\n var kitty = new My.awesome.Cat;\n kitty.meow();\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addMembers","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Add / override static properties of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":218,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"addStatics","doc":"<p>Add / override static properties of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.addStatics({\n    someProperty: 'someValue',      // My.cool.Class.someProperty = 'someValue'\n    method1: function() { ... },    // My.cool.Class.method1 = function() { ... };\n    method2: function() { ... }     // My.cool.Class.method2 = function() { ... };\n});\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-addStatics","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"xtype","html_type":"Object"}],"tagname":"method","files":[{"linenr":730,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"addXtype","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-addXtype","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Borrow another class' members to the prototype of this class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Ext.Base","tagname":"params","doc":"<p>The class to borrow members from</p>\n","name":"fromClass","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},{"type":"Array/String","tagname":"params","doc":"<p>The names of the members to borrow</p>\n","name":"members","html_type":"Array/String"}],"tagname":"method","files":[{"linenr":383,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":true,"name":"borrow","doc":"<p>Borrow another class' members to the prototype of this class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Bank', {\n    money: '$$$',\n    printMoney: function() {\n        alert('$$$$$$$');\n    }\n});\n\n<a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('Thief', {\n    ...\n});\n\nThief.borrow(Bank, ['money', 'printMoney']);\n\nvar steve = new Thief();\n\nalert(steve.money); // alerts '$$$'\nsteve.printMoney(); // alerts '$$$$$$$'\n</code></pre>\n","chainable":true,"inheritdoc":null,"id":"static-method-borrow","fires":null,"linenr":null},{"overrides":[{"owner":"Ext.layout.Layout","link":"<a href=\"#!/api/Ext.layout.Layout-static-method-create\" rel=\"Ext.layout.Layout-static-method-create\" class=\"docClass\">Ext.layout.Layout.create</a>","name":"create"}],"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create a new instance of this Class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":60,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Object","properties":null,"doc":"<p>the created instance.</p>\n","name":"return","html_type":"Object"},"static":true,"private":null,"name":"create","doc":"<p>Create a new instance of this Class.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    ...\n});\n\nMy.cool.Class.create({\n    someConfig: true\n});\n</code></pre>\n\n<p>All parameters are passed to the constructor of the class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-create","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Create aliases for existing prototype methods. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"String/Object","tagname":"params","doc":"<p>The new method name, or an object to set multiple aliases. See\n<a href=\"#!/api/Ext.Function-method-flexSetter\" rel=\"Ext.Function-method-flexSetter\" class=\"docClass\">flexSetter</a></p>\n","name":"alias","html_type":"String/Object"},{"type":"String/Object","tagname":"params","doc":"<p>The original method name</p>\n","name":"origin","html_type":"String/Object"}],"tagname":"method","files":[{"linenr":696,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"createAlias","doc":"<p>Create aliases for existing prototype methods. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    method1: function() { ... },\n    method2: function() { ... }\n});\n\nvar test = new My.cool.Class();\n\nMy.cool.Class.createAlias({\n    method3: 'method1',\n    method4: 'method2'\n});\n\ntest.method3(); // test.method1()\n\nMy.cool.Class.createAlias('method5', 'method3');\n\ntest.method5(); // test.method3() -&gt; test.method1()\n</code></pre>\n","chainable":null,"inheritdoc":null,"id":"static-method-createAlias","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":["hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"\n","name":"config","html_type":"Object"}],"tagname":"method","files":[{"linenr":81,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"extend","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-extend","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Get the current class' name in string format. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":677,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"String","properties":null,"doc":"<p>className</p>\n","name":"return","html_type":"String"},"static":true,"private":null,"name":"getName","doc":"<p>Get the current class' name in string format.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.cool.Class', {\n    constructor: function() {\n        alert(this.self.getName()); // alerts 'My.cool.Class'\n    }\n});\n\nMy.cool.Class.getName(); // 'My.cool.Class'\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"static-method-getName","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds members to class. ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":373,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"static":true,"private":null,"name":"implement","doc":"<p>Adds members to class.</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-implement","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext.Base-static-method-addMembers\" rel=\"Ext.Base-static-method-addMembers\" class=\"docClass\">addMembers</a> instead.</p>\n","version":"4.1"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Used internally by the mixins pre-processor ...","method_calls":["addConfig","hasOwnProperty"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"name","html_type":"Object"},{"type":"Object","name":"mixinClass","html_type":"Object"}],"tagname":"method","files":[{"linenr":595,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"mixin","doc":"<p>Used internally by the mixins pre-processor</p>\n","chainable":false,"inheritdoc":null,"id":"static-method-mixin","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","name":"fn","html_type":"Object"},{"type":"Object","name":"scope","html_type":"Object"}],"tagname":"method","files":[{"linenr":162,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"onExtended","doc":"\n","chainable":true,"inheritdoc":null,"id":"static-method-onExtended","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Override members of this class. ...","method_calls":["addConfig","addInheritableStatics"],"owner":"Ext.Base","inheritable":true,"params":[{"type":"Object","tagname":"params","doc":"<p>The properties to add to this class. This should be\nspecified as an object literal containing one or more properties.</p>\n","name":"members","html_type":"Object"}],"tagname":"method","files":[{"linenr":452,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"return":{"type":"Ext.Base","properties":null,"doc":"<p>this class</p>\n","name":"return","html_type":"<a href=\"#!/api/Ext.Base\" rel=\"Ext.Base\" class=\"docClass\">Ext.Base</a>"},"static":true,"private":null,"name":"override","doc":"<p>Override members of this class. Overridden methods can be invoked via\n<a href=\"#!/api/Ext.Base-method-callParent\" rel=\"Ext.Base-method-callParent\" class=\"docClass\">callParent</a>.</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.Cat', {\n    constructor: function() {\n        alert(\"I'm a cat!\");\n    }\n});\n\nMy.Cat.override({\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n\nvar kitty = new My.Cat(); // alerts \"I'm going to be a cat!\"\n                          // alerts \"I'm a cat!\"\n                          // alerts \"Meeeeoooowwww\"\n</code></pre>\n\n<p>As of 4.1, direct use of this method is deprecated. Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>\ninstead:</p>\n\n<pre><code><a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a>('My.CatOverride', {\n    override: 'My.Cat',\n    constructor: function() {\n        alert(\"I'm going to be a cat!\");\n\n        this.callParent(arguments);\n\n        alert(\"Meeeeoooowwww\");\n    }\n});\n</code></pre>\n\n<p>The above accomplishes the same result but can be managed by the <a href=\"#!/api/Ext.Loader\" rel=\"Ext.Loader\" class=\"docClass\">Ext.Loader</a>\nwhich can properly order the override and its target class and the build process\ncan determine whether the override is needed based on the required state of the\ntarget class (My.Cat).</p>\n","chainable":true,"inheritdoc":null,"id":"static-method-override","deprecated":{"text":"<p>Use <a href=\"#!/api/Ext-method-define\" rel=\"Ext-method-define\" class=\"docClass\">Ext.define</a> instead</p>\n","version":"4.1.0"},"fires":null,"linenr":null},{"autodetected":{"method_calls":true,"params":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":" ...","method_calls":null,"owner":"Ext.Base","inheritable":true,"params":[],"tagname":"method","files":[{"linenr":140,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/class/Base.js"}],"private":true,"static":true,"name":"triggerExtended","doc":"\n","chainable":false,"inheritdoc":null,"id":"static-method-triggerExtended","fires":null,"linenr":null}],"alternateClassNames":["Ext.layout.ColumnLayout"],"code_type":"ext_define","mixins":[],"doc":"<p>This is the layout style of choice for creating structural layouts in a multi-column format where the width of each\ncolumn can be specified as a percentage or fixed width, but the height is allowed to vary based on the content. This\nclass is intended to be extended or created via the layout:'column' <a href=\"#!/api/Ext.container.Container-cfg-layout\" rel=\"Ext.container.Container-cfg-layout\" class=\"docClass\">Ext.container.Container.layout</a> config,\nand should generally not need to be created directly via the new keyword.</p>\n\n<p>ColumnLayout does not have any direct config options (other than inherited ones), but it does support a specific\nconfig property of <code>columnWidth</code> that can be included in the config of any panel added to it. The layout will use\nthe columnWidth (if present) or width of each panel during layout to determine how to size each panel. If width or\ncolumnWidth is not specified for a given panel, its width will default to the panel's width (or auto).</p>\n\n<p>The width property is always evaluated as pixels, and must be a number greater than or equal to 1. The columnWidth\nproperty is always evaluated as a percentage, and must be a decimal value greater than 0 and less than 1 (e.g., .25).</p>\n\n<p>The basic rules for specifying column widths are pretty simple. The logic makes two passes through the set of\ncontained panels. During the first layout pass, all panels that either have a fixed width or none specified (auto)\nare skipped, but their widths are subtracted from the overall container width.</p>\n\n<p>During the second pass, all panels with columnWidths are assigned pixel widths in proportion to their percentages\nbased on the total <strong>remaining</strong> container width. In other words, percentage width panels are designed to fill\nthe space left over by all the fixed-width and/or auto-width panels. Because of this, while you can specify any\nnumber of columns with different percentages, the columnWidths must always add up to 1 (or 100%) when added\ntogether, otherwise your layout may not render as expected.</p>\n\n<pre class='inline-example '><code>// All columns are percentages -- they must add up to 1\n<a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.panel.Panel</a>', {\n    title: 'Column Layout - Percentage Only',\n    width: 350,\n    height: 250,\n    layout:'column',\n    items: [{\n        title: 'Column 1',\n        columnWidth: 0.25\n    },{\n        title: 'Column 2',\n        columnWidth: 0.55\n    },{\n        title: 'Column 3',\n        columnWidth: 0.20\n    }],\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>()\n});\n\n// Mix of width and columnWidth -- all columnWidth values must add up\n// to 1. The first column will take up exactly 120px, and the last two\n// columns will fill the remaining container width.\n\n<a href=\"#!/api/Ext-method-create\" rel=\"Ext-method-create\" class=\"docClass\">Ext.create</a>('<a href=\"#!/api/Ext.panel.Panel\" rel=\"Ext.panel.Panel\" class=\"docClass\">Ext.Panel</a>', {\n    title: 'Column Layout - Mixed',\n    width: 350,\n    height: 250,\n    layout:'column',\n    items: [{\n        title: 'Column 1',\n        width: 120\n    },{\n        title: 'Column 2',\n        columnWidth: 0.7\n    },{\n        title: 'Column 3',\n        columnWidth: 0.3\n    }],\n    renderTo: <a href=\"#!/api/Ext-method-getBody\" rel=\"Ext-method-getBody\" class=\"docClass\">Ext.getBody</a>()\n});\n</code></pre>\n","name":"Ext.layout.container.Column","id":"class-Ext.layout.container.Column"}