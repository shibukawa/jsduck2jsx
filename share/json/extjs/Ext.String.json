{"autodetected":{},"singleton":true,"aliases":{},"files":[{"linenr":25,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"tagname":"class","members":[{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Adds a set of character entity definitions to the set used by\nhtmlEncode and htmlDecode. ...","method_calls":null,"owner":"Ext.String","inheritable":null,"params":[{"type":"Object","tagname":"params","doc":"<p>The set of character entities to add to the current\ndefinitions.</p>\n","name":"entities","html_type":"Object"}],"tagname":"method","files":[{"linenr":175,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"private":null,"static":null,"name":"addCharacterEntities","doc":"<p>Adds a set of character entity definitions to the set used by\n<a href=\"#!/api/Ext.String-method-htmlEncode\" rel=\"Ext.String-method-htmlEncode\" class=\"docClass\">htmlEncode</a> and <a href=\"#!/api/Ext.String-method-htmlDecode\" rel=\"Ext.String-method-htmlDecode\" class=\"docClass\">htmlDecode</a>.</p>\n\n<p>This object should be keyed by the entity name sequence,\nwith the value being the textual representation of the entity.</p>\n\n<pre><code> <a href=\"#!/api/Ext.String-method-addCharacterEntities\" rel=\"Ext.String-method-addCharacterEntities\" class=\"docClass\">Ext.String.addCharacterEntities</a>({\n     '&amp;amp;Uuml;':'Ü',\n     '&amp;amp;ccedil;':'ç',\n     '&amp;amp;ntilde;':'ñ',\n     '&amp;amp;egrave;':'è'\n });\n var s = <a href=\"#!/api/Ext.String-method-htmlEncode\" rel=\"Ext.String-method-htmlEncode\" class=\"docClass\">Ext.String.htmlEncode</a>(\"A string with entities: èÜçñ\");\n</code></pre>\n\n<p><strong>Note:</strong> the values of the character entities defined on this object are expected\nto be single character values.  As such, the actual values represented by the\ncharacters are sensitive to the character encoding of the JavaScript source\nfile when defined in string literal form. Script tags referencing server\nresources with character entities must ensure that the 'charset' attribute\nof the script node is consistent with the actual character encoding of the\nserver resource.</p>\n\n<p>The set of character entities may be reset back to the default state by using\nthe <a href=\"#!/api/Ext.String-method-resetCharacterEntities\" rel=\"Ext.String-method-resetCharacterEntities\" class=\"docClass\">resetCharacterEntities</a> method</p>\n","chainable":false,"inheritdoc":null,"id":"method-addCharacterEntities","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Capitalize the given string ...","method_calls":null,"owner":"Ext.String","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"string","html_type":"String"}],"tagname":"method","files":[{"linenr":266,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"return":{"type":"String","properties":null,"doc":"\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"capitalize","doc":"<p>Capitalize the given string</p>\n","chainable":false,"inheritdoc":null,"id":"method-capitalize","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Converts a string of characters into a legal, parse-able JavaScript var name as long as the passed\nstring contains at...","method_calls":null,"owner":"Ext.String","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>A string to be converted into a <code>var</code> name.</p>\n","name":"s","html_type":"String"}],"tagname":"method","files":[{"linenr":144,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"return":{"type":"String","properties":null,"doc":"<p>A legal JavaScript <code>var</code> name.</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"createVarName","doc":"<p>Converts a string of characters into a legal, parse-able JavaScript <code>var</code> name as long as the passed\nstring contains at least one alphabetic character. Non alphanumeric characters, and <em>leading</em> non alphabetic\ncharacters will be removed.</p>\n","chainable":false,"inheritdoc":null,"id":"method-createVarName","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Truncate a string and add an ellipsis ('...') to the end if it exceeds the specified length. ...","method_calls":null,"owner":"Ext.String","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The string to truncate.</p>\n","name":"value","html_type":"String"},{"type":"Number","tagname":"params","doc":"<p>The maximum length to allow before truncating.</p>\n","name":"length","html_type":"Number"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p><code>true</code> to try to find a common word break.</p>\n","name":"word","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":284,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"return":{"type":"String","properties":null,"doc":"<p>The converted text.</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"ellipsis","doc":"<p>Truncate a string and add an ellipsis ('...') to the end if it exceeds the specified length.</p>\n","chainable":false,"inheritdoc":null,"id":"method-ellipsis","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Checks if a string ends with a substring ...","method_calls":null,"owner":"Ext.String","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The original string</p>\n","name":"s","html_type":"String"},{"type":"String","tagname":"params","doc":"<p>The substring to check</p>\n","name":"start","html_type":"String"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True to ignore the case in the comparison</p>\n","name":"ignoreCase","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":125,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"private":null,"static":null,"name":"endsWith","doc":"<p>Checks if a string ends with a substring</p>\n","chainable":false,"inheritdoc":null,"id":"method-endsWith","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Escapes the passed string for ' and \\ ...","method_calls":null,"owner":"Ext.String","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The string to escape</p>\n","name":"string","html_type":"String"}],"tagname":"method","files":[{"linenr":314,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"return":{"type":"String","properties":null,"doc":"<p>The escaped string</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"escape","doc":"<p>Escapes the passed string for ' and \\</p>\n","chainable":false,"inheritdoc":null,"id":"method-escape","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Escapes the passed string for use in a regular expression. ...","method_calls":null,"owner":"Ext.String","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"string","html_type":"String"}],"tagname":"method","files":[{"linenr":305,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"return":{"type":"String","properties":null,"doc":"\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"escapeRegex","doc":"<p>Escapes the passed string for use in a regular expression.</p>\n","chainable":false,"inheritdoc":null,"id":"method-escapeRegex","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Allows you to define a tokenized string and pass an arbitrary number of arguments to replace the tokens. ...","method_calls":null,"owner":"Ext.String","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The tokenized string to be formatted.</p>\n","name":"string","html_type":"String"},{"type":"Mixed...","tagname":"params","doc":"<p>The values to replace tokens <code>{0}</code>, <code>{1}</code>, etc in order.</p>\n","name":"values","html_type":"Mixed..."}],"tagname":"method","files":[{"linenr":365,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"return":{"type":"String","properties":null,"doc":"<p>The formatted string.</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"format","doc":"<p>Allows you to define a tokenized string and pass an arbitrary number of arguments to replace the tokens.  Each\ntoken must be unique, and must increment in the format {0}, {1}, etc.  Example usage:</p>\n\n<pre><code>var cls = 'my-class',\n    text = 'Some text';\nvar s = <a href=\"#!/api/Ext.String-method-format\" rel=\"Ext.String-method-format\" class=\"docClass\">Ext.String.format</a>('&lt;div class=\"{0}\"&gt;{1}&lt;/div&gt;', cls, text);\n// s now contains the string: '&lt;div class=\"my-class\"&gt;Some text&lt;/div&gt;'\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-format","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Convert certain characters (&amp;, &lt;, >, ', and \") from their HTML character equivalents. ...","method_calls":null,"owner":"Ext.String","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The string to decode.</p>\n","name":"value","html_type":"String"}],"tagname":"method","files":[{"linenr":165,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"return":{"type":"String","properties":null,"doc":"<p>The decoded text.</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"htmlDecode","doc":"<p>Convert certain characters (&amp;, &lt;, >, ', and \") from their HTML character equivalents.</p>\n","chainable":false,"inheritdoc":null,"id":"method-htmlDecode","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Convert certain characters (&amp;, &lt;, >, ', and \") to their HTML character equivalents for literal display in web ...","method_calls":null,"owner":"Ext.String","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The string to encode.</p>\n","name":"value","html_type":"String"}],"tagname":"method","files":[{"linenr":155,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"return":{"type":"String","properties":null,"doc":"<p>The encoded text.</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"htmlEncode","doc":"<p>Convert certain characters (&amp;, &lt;, >, ', and \") to their HTML character equivalents for literal display in web pages.</p>\n","chainable":false,"inheritdoc":null,"id":"method-htmlEncode","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Inserts a substring into a string. ...","method_calls":null,"owner":"Ext.String","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The original string.</p>\n","name":"s","html_type":"String"},{"type":"String","tagname":"params","doc":"<p>The substring to insert.</p>\n","name":"value","html_type":"String"},{"type":"Number","tagname":"params","doc":"<p>The index to insert the substring. Negative indexes will insert from the end of\nthe string. Example:</p>\n\n<pre><code><a href=\"#!/api/Ext.String-method-insert\" rel=\"Ext.String-method-insert\" class=\"docClass\">Ext.String.insert</a>(\"abcdefg\", \"h\", -1); // abcdefhg\n</code></pre>\n","name":"index","html_type":"Number"}],"tagname":"method","files":[{"linenr":60,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"return":{"type":"String","properties":null,"doc":"<p>The value with the inserted substring</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"insert","doc":"<p>Inserts a substring into a string.</p>\n","chainable":false,"inheritdoc":null,"id":"method-insert","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Pads the left side of a string with a specified character. ...","method_calls":null,"owner":"Ext.String","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The original string.</p>\n","name":"string","html_type":"String"},{"type":"Number","tagname":"params","doc":"<p>The total length of the output string.</p>\n","name":"size","html_type":"Number"},{"type":"String","default":"' '","tagname":"params","doc":"<p>The character with which to pad the original string.</p>\n","name":"character","optional":true,"html_type":"String"}],"tagname":"method","files":[{"linenr":344,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"return":{"type":"String","properties":null,"doc":"<p>The padded string.</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"leftPad","doc":"<p>Pads the left side of a string with a specified character.  This is especially useful\nfor normalizing number and date strings.  Example usage:</p>\n\n<pre><code>var s = <a href=\"#!/api/Ext.String-method-leftPad\" rel=\"Ext.String-method-leftPad\" class=\"docClass\">Ext.String.leftPad</a>('123', 5, '0');\n// s now contains the string: '00123'\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-leftPad","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Returns a string with a specified number of repetitions a given string pattern. ...","method_calls":null,"owner":"Ext.String","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The pattern to repeat.</p>\n","name":"pattern","html_type":"String"},{"type":"Number","tagname":"params","doc":"<p>The number of times to repeat the pattern (may be 0).</p>\n","name":"count","html_type":"Number"},{"type":"String","tagname":"params","doc":"<p>An option string to separate each pattern.</p>\n","name":"sep","html_type":"String"}],"tagname":"method","files":[{"linenr":385,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"private":null,"static":null,"name":"repeat","doc":"<p>Returns a string with a specified number of repetitions a given string pattern.\nThe pattern be separated by a different string.</p>\n\n<pre><code> var s = <a href=\"#!/api/Ext.String-method-repeat\" rel=\"Ext.String-method-repeat\" class=\"docClass\">Ext.String.repeat</a>('---', 4); // = '------------'\n var t = <a href=\"#!/api/Ext.String-method-repeat\" rel=\"Ext.String-method-repeat\" class=\"docClass\">Ext.String.repeat</a>('--', 3, '/'); // = '--/--/--'\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-repeat","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"params":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Resets the set of character entity definitions used by\nhtmlEncode and htmlDecode back to the\ndefault state. ...","method_calls":["addCharacterEntities"],"owner":"Ext.String","inheritable":null,"params":[],"tagname":"method","files":[{"linenr":219,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"private":null,"static":null,"name":"resetCharacterEntities","doc":"<p>Resets the set of character entity definitions used by\n<a href=\"#!/api/Ext.String-method-htmlEncode\" rel=\"Ext.String-method-htmlEncode\" class=\"docClass\">htmlEncode</a> and <a href=\"#!/api/Ext.String-method-htmlDecode\" rel=\"Ext.String-method-htmlDecode\" class=\"docClass\">htmlDecode</a> back to the\ndefault state.</p>\n","chainable":false,"inheritdoc":null,"id":"method-resetCharacterEntities","fires":[],"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Splits a string of space separated words into an array, trimming as needed. ...","method_calls":null,"owner":"Ext.String","inheritable":null,"params":[{"type":"String/Array","tagname":"params","doc":"\n","name":"words","html_type":"String/Array"}],"tagname":"method","files":[{"linenr":406,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"private":null,"static":null,"name":"splitWords","doc":"<p>Splits a string of space separated words into an array, trimming as needed. If the\nwords are already an array, it is returned.</p>\n","chainable":false,"inheritdoc":null,"id":"method-splitWords","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Checks if a string starts with a substring ...","method_calls":null,"owner":"Ext.String","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The original string</p>\n","name":"s","html_type":"String"},{"type":"String","tagname":"params","doc":"<p>The substring to check</p>\n","name":"start","html_type":"String"},{"type":"Boolean","default":"false","tagname":"params","doc":"<p>True to ignore the case in the comparison</p>\n","name":"ignoreCase","optional":true,"html_type":"Boolean"}],"tagname":"method","files":[{"linenr":106,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"private":null,"static":null,"name":"startsWith","doc":"<p>Checks if a string starts with a substring</p>\n","chainable":false,"inheritdoc":null,"id":"method-startsWith","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Utility function that allows you to easily switch a string between two alternating values. ...","method_calls":null,"owner":"Ext.String","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The current string.</p>\n","name":"string","html_type":"String"},{"type":"String","tagname":"params","doc":"<p>The value to compare to the current string.</p>\n","name":"value","html_type":"String"},{"type":"String","tagname":"params","doc":"<p>The new value to use if the string already equals the first value passed in.</p>\n","name":"other","html_type":"String"}],"tagname":"method","files":[{"linenr":323,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"return":{"type":"String","properties":null,"doc":"<p>The new value.</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"toggle","doc":"<p>Utility function that allows you to easily switch a string between two alternating values.  The passed value\nis compared to the current string, and if they are equal, the other value that was passed in is returned.  If\nthey are already different, the first value passed in is returned.  Note that this method returns the new value\nbut does not change the current string.</p>\n\n<pre><code>// alternate sort directions\nsort = <a href=\"#!/api/Ext.String-method-toggle\" rel=\"Ext.String-method-toggle\" class=\"docClass\">Ext.String.toggle</a>(sort, 'ASC', 'DESC');\n\n// instead of conditional logic:\nsort = (sort === 'ASC' ? 'DESC' : 'ASC');\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-toggle","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Trims whitespace from either end of a string, leaving spaces within the string intact. ...","method_calls":null,"owner":"Ext.String","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The string to trim.</p>\n","name":"string","html_type":"String"}],"tagname":"method","files":[{"linenr":252,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"return":{"type":"String","properties":null,"doc":"<p>The trimmed string.</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"trim","doc":"<p>Trims whitespace from either end of a string, leaving spaces within the string intact.  Example:</p>\n\n<pre><code>var s = '  foo bar  ';\nalert('-' + s + '-');                   //alerts \"- foo bar -\"\nalert('-' + <a href=\"#!/api/Ext.String-method-trim\" rel=\"Ext.String-method-trim\" class=\"docClass\">Ext.String.trim</a>(s) + '-');  //alerts \"-foo bar-\"\n</code></pre>\n","chainable":false,"inheritdoc":null,"id":"method-trim","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Uncapitalize the given string. ...","method_calls":null,"owner":"Ext.String","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"\n","name":"string","html_type":"String"}],"tagname":"method","files":[{"linenr":275,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"return":{"type":"String","properties":null,"doc":"\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"uncapitalize","doc":"<p>Uncapitalize the given string.</p>\n","chainable":false,"inheritdoc":null,"id":"method-uncapitalize","fires":null,"linenr":null},{"autodetected":{"method_calls":true,"inheritable":true,"static":true,"private":true,"chainable":true,"inheritdoc":true,"linenr":true,"fires":true},"short_doc":"Appends content to the query string of a URL, handling logic for whether to place\na question mark or ampersand. ...","method_calls":null,"owner":"Ext.String","inheritable":null,"params":[{"type":"String","tagname":"params","doc":"<p>The URL to append to.</p>\n","name":"url","html_type":"String"},{"type":"String","tagname":"params","doc":"<p>The content to append to the URL.</p>\n","name":"string","html_type":"String"}],"tagname":"method","files":[{"linenr":237,"filename":"/Users/yshibukawa/personal/ext-4.2.1.883/src/lang/String.js"}],"return":{"type":"String","properties":null,"doc":"<p>The resulting URL</p>\n","name":"return","html_type":"String"},"private":null,"static":null,"name":"urlAppend","doc":"<p>Appends content to the query string of a URL, handling logic for whether to place\na question mark or ampersand.</p>\n","chainable":false,"inheritdoc":null,"id":"method-urlAppend","fires":null,"linenr":null}],"alternateClassNames":[],"doc":"<p>A collection of useful static methods to deal with strings.</p>\n","name":"Ext.String","id":"class-Ext.String"}