/*
GNU General Public License Usage
This file may be used under the terms of the GNU General Public License version 3.0 as
published by the Free Software Foundation and appearing in the file LICENSE included in the
packaging of this file.

Please review the following information to ensure the GNU General Public License version 3.0
requirements will be met: http://www.gnu.org/copyleft/gpl.html.

This code is generated by sencha2jsx command created by @shibukawa
*/


import "js/web.jsx";
import "googlemaps.jsx";


native class Ext
{
    static var SSL_SECURE_URL : boolean;
    static var emptyFn : function () : void;
    static var enableGarbageCollector : boolean;
    static var enableListenerCollection : boolean;
    static var enumerables : string[];
    static var frameStartTime : variant;
    static var isSecure : boolean;
    static var version : string;

    static function application (config : variant) : void;
    static function apply (object : variant, config : variant, defaults : variant) : void;
    static function apply (object : variant, config : variant) : void;
    static function applyIf (object : variant, config : variant) : void;
    static function bind (fn : function  () : void, scope : variant, args : variant[], appendArgs : boolean) : void;
    static function bind (fn : function  () : void, scope : variant, args : variant[], appendArgs : number) : void;
    static function bind (fn : function  () : void, scope : variant, args : variant[]) : void;
    static function bind (fn : function  () : void, scope : variant, appendArgs : boolean) : void;
    static function bind (fn : function  () : void, scope : variant, appendArgs : number) : void;
    static function bind (fn : function  () : void, scope : variant) : void;
    static function bind (fn : function  () : void, args : variant[], appendArgs : boolean) : void;
    static function bind (fn : function  () : void, args : variant[], appendArgs : number) : void;
    static function bind (fn : function  () : void, args : variant[]) : void;
    static function bind (fn : function  () : void, appendArgs : boolean) : void;
    static function bind (fn : function  () : void, appendArgs : number) : void;
    static function bind (fn : function  () : void) : void;
    static function callback (callback : function  () : void, scope : variant, args : variant[], delay : number) : void;
    static function callback (callback : function  () : void, scope : variant, args : variant[]) : void;
    static function callback (callback : function  () : void, scope : variant, delay : number) : void;
    static function callback (callback : function  () : void, scope : variant) : void;
    static function callback (callback : function  () : void, args : variant[], delay : number) : void;
    static function callback (callback : function  () : void, args : variant[]) : void;
    static function callback (callback : function  () : void, delay : number) : void;
    static function callback (callback : function  () : void) : void;
    static function clone (item : variant) : void;
    static function copyTo (dest : variant, source : variant, names : string, usePrototypeKeys : boolean) : void;
    static function copyTo (dest : variant, source : variant, names : string) : void;
    static function copyTo (dest : variant, source : variant, names : string[], usePrototypeKeys : boolean) : void;
    static function copyTo (dest : variant, source : variant, names : string[]) : void;
    static function create (name : string, args : variant) : void;
    static function createByAlias (alias : string, args : variant) : void;
    static function decode (json : string, safe : boolean) : void;
    static function decode (json : string) : void;
    static function defer (fn : function  () : void, millis : number, scope : variant, args : variant[], appendArgs : boolean) : void;
    static function defer (fn : function  () : void, millis : number, scope : variant, args : variant[], appendArgs : number) : void;
    static function defer (fn : function  () : void, millis : number, scope : variant, args : variant[]) : void;
    static function defer (fn : function  () : void, millis : number, scope : variant, appendArgs : boolean) : void;
    static function defer (fn : function  () : void, millis : number, scope : variant, appendArgs : number) : void;
    static function defer (fn : function  () : void, millis : number, scope : variant) : void;
    static function defer (fn : function  () : void, millis : number, args : variant[], appendArgs : boolean) : void;
    static function defer (fn : function  () : void, millis : number, args : variant[], appendArgs : number) : void;
    static function defer (fn : function  () : void, millis : number, args : variant[]) : void;
    static function defer (fn : function  () : void, millis : number, appendArgs : boolean) : void;
    static function defer (fn : function  () : void, millis : number, appendArgs : number) : void;
    static function defer (fn : function  () : void, millis : number) : void;
    static function define (className : string, data : variant, createdFn : function  () : void) : void;
    static function define (className : string, data : variant) : void;
    static function destroy (args : variant) : void;
    static function dispatch () : void;
    static function each (iterable : variant[], fn : function  () : void, scope : variant, reverse : boolean) : void;
    static function each (iterable : variant[], fn : function  () : void, scope : variant) : void;
    static function each (iterable : variant[], fn : function  () : void, reverse : boolean) : void;
    static function each (iterable : variant[], fn : function  () : void) : void;
    static function each (iterable : NodeList, fn : function  () : void, scope : variant, reverse : boolean) : void;
    static function each (iterable : NodeList, fn : function  () : void, scope : variant) : void;
    static function each (iterable : NodeList, fn : function  () : void, reverse : boolean) : void;
    static function each (iterable : NodeList, fn : function  () : void) : void;
    static function each (iterable : variant, fn : function  () : void, scope : variant, reverse : boolean) : void;
    static function each (iterable : variant, fn : function  () : void, scope : variant) : void;
    static function each (iterable : variant, fn : function  () : void, reverse : boolean) : void;
    static function each (iterable : variant, fn : function  () : void) : void;
    static function encode (o : variant) : void;
    static function exclude (excludes : variant[]) : void;
    static function factory (config : variant, classReference : string, instance : variant, aliasNamespace : string) : void;
    static function factory (config : variant, classReference : string, instance : variant) : void;
    static function factory (config : variant, classReference : string, aliasNamespace : string) : void;
    static function factory (config : variant, classReference : string) : void;
    static function fly (element : string, named : string) : void;
    static function fly (element : string) : void;
    static function fly (element : HTMLElement, named : string) : void;
    static function fly (element : HTMLElement) : void;
    static function get (element : string) : void;
    static function get (element : HTMLElement) : void;
    static function get (element : Ext.dom.Element) : void;
    static function getBody () : void;
    static function getClass () : void;
    static function getClassName (object : Ext.Class) : void;
    static function getClassName (object : variant) : void;
    static function getCmp (id : string) : void;
    static function getDisplayName (object : variant) : void;
    static function getDisplayName () : void;
    static function getDoc () : void;
    static function getDom (el : variant) : void;
    static function getHead () : void;
    static function getOrientation () : void;
    static function getStore (store : string) : void;
    static function getStore (store : variant) : void;
    static function id (el : variant, prefix : string) : void;
    static function id (el : variant) : void;
    static function id (prefix : string) : void;
    static function id () : void;
    static function isArray (target : variant) : void;
    static function isBoolean (value : variant) : void;
    static function isDate (object : variant) : void;
    static function isDefined (value : variant) : void;
    static function isElement (value : variant) : void;
    static function isEmpty (value : variant, allowEmptyString : boolean) : void;
    static function isEmpty (value : variant) : void;
    static function isFunction (value : variant) : void;
    static function isIterable (value : variant) : void;
    static function isMSDate (value : string) : void;
    static function isNumber (value : variant) : void;
    static function isNumeric (value : variant) : void;
    static function isObject (value : variant) : void;
    static function isPrimitive (value : variant) : void;
    static function isString (value : variant) : void;
    static function isTextNode (value : variant) : void;
    static function iterate (object : variant, fn : function  () : void, scope : variant) : void;
    static function iterate (object : variant, fn : function  () : void) : void;
    static function iterate (object : variant[], fn : function  () : void, scope : variant) : void;
    static function iterate (object : variant[], fn : function  () : void) : void;
    static function merge () : void;
    static function namespace (namespace1 : string, namespace2 : string, etc : string) : void;
    static function ns () : void;
    static function onReady (fn : function  () : void, scope : variant, options : boolean) : void;
    static function onReady (fn : function  () : void, scope : variant) : void;
    static function onReady (fn : function  () : void, options : boolean) : void;
    static function onReady (fn : function  () : void) : void;
    static function pass (fn : function  () : void, args : variant[], scope : variant) : void;
    static function pass (fn : function  () : void, args : variant[]) : void;
    static function preg () : void;
    static function query (selector : string, root : HTMLElement) : void;
    static function query (selector : string, root : string) : void;
    static function query (selector : string) : void;
    static function redirect () : void;
    static function reg () : void;
    static function regApplication () : void;
    static function regController () : void;
    static function regLayout () : void;
    static function regStore (id : string, config : variant) : void;
    static function removeNode (node : HTMLElement) : void;
    static function repaint () : void;
    static function require (expressions : string, fn : function  () : void, scope : variant, excludes : string) : void;
    static function require (expressions : string, fn : function  () : void, scope : variant, excludes : variant[]) : void;
    static function require (expressions : string, fn : function  () : void, scope : variant) : void;
    static function require (expressions : string, fn : function  () : void, excludes : string) : void;
    static function require (expressions : string, fn : function  () : void, excludes : variant[]) : void;
    static function require (expressions : string, fn : function  () : void) : void;
    static function require (expressions : string, scope : variant, excludes : string) : void;
    static function require (expressions : string, scope : variant, excludes : variant[]) : void;
    static function require (expressions : string, scope : variant) : void;
    static function require (expressions : string, excludes : string) : void;
    static function require (expressions : string, excludes : variant[]) : void;
    static function require (expressions : string) : void;
    static function require (expressions : variant[], fn : function  () : void, scope : variant, excludes : string) : void;
    static function require (expressions : variant[], fn : function  () : void, scope : variant, excludes : variant[]) : void;
    static function require (expressions : variant[], fn : function  () : void, scope : variant) : void;
    static function require (expressions : variant[], fn : function  () : void, excludes : string) : void;
    static function require (expressions : variant[], fn : function  () : void, excludes : variant[]) : void;
    static function require (expressions : variant[], fn : function  () : void) : void;
    static function require (expressions : variant[], scope : variant, excludes : string) : void;
    static function require (expressions : variant[], scope : variant, excludes : variant[]) : void;
    static function require (expressions : variant[], scope : variant) : void;
    static function require (expressions : variant[], excludes : string) : void;
    static function require (expressions : variant[], excludes : variant[]) : void;
    static function require (expressions : variant[]) : void;
    static function select (selector : string, composite : boolean) : void;
    static function select (selector : HTMLElement[], composite : boolean) : void;
    static function setup (config : variant) : void;
    static function syncRequire (expressions : string, fn : function  () : void, scope : variant, excludes : string) : void;
    static function syncRequire (expressions : string, fn : function  () : void, scope : variant, excludes : variant[]) : void;
    static function syncRequire (expressions : string, fn : function  () : void, scope : variant) : void;
    static function syncRequire (expressions : string, fn : function  () : void, excludes : string) : void;
    static function syncRequire (expressions : string, fn : function  () : void, excludes : variant[]) : void;
    static function syncRequire (expressions : string, fn : function  () : void) : void;
    static function syncRequire (expressions : string, scope : variant, excludes : string) : void;
    static function syncRequire (expressions : string, scope : variant, excludes : variant[]) : void;
    static function syncRequire (expressions : string, scope : variant) : void;
    static function syncRequire (expressions : string, excludes : string) : void;
    static function syncRequire (expressions : string, excludes : variant[]) : void;
    static function syncRequire (expressions : string) : void;
    static function syncRequire (expressions : variant[], fn : function  () : void, scope : variant, excludes : string) : void;
    static function syncRequire (expressions : variant[], fn : function  () : void, scope : variant, excludes : variant[]) : void;
    static function syncRequire (expressions : variant[], fn : function  () : void, scope : variant) : void;
    static function syncRequire (expressions : variant[], fn : function  () : void, excludes : string) : void;
    static function syncRequire (expressions : variant[], fn : function  () : void, excludes : variant[]) : void;
    static function syncRequire (expressions : variant[], fn : function  () : void) : void;
    static function syncRequire (expressions : variant[], scope : variant, excludes : string) : void;
    static function syncRequire (expressions : variant[], scope : variant, excludes : variant[]) : void;
    static function syncRequire (expressions : variant[], scope : variant) : void;
    static function syncRequire (expressions : variant[], excludes : string) : void;
    static function syncRequire (expressions : variant[], excludes : variant[]) : void;
    static function syncRequire (expressions : variant[]) : void;
    static function toArray (iterable : variant, start : number, end : number) : void;
    static function toArray (iterable : variant, start : number) : void;
    static function toArray (iterable : variant) : void;
    static function typeOf (value : variant) : void;
    static function valueFrom (value : variant, defaultValue : variant, allowBlank : boolean) : void;
    static function valueFrom (value : variant, defaultValue : variant) : void;
    static function widget (name : string) : void;

    class AbstractComponent extends Ext.Evented
    {
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class AbstractManager extends Ext.Base
    {
        var all : Ext.util.HashMap;

        function constructor (config : variant);
        function create (config : variant, defaultType : string) : void;
        function each (fn : function  () : void, scope : variant) : void;
        function each (fn : function  () : void) : void;
        function get (id : string) : void;
        function getCount () : void;
        function isRegistered (type : string) : void;
        function onAvailable (id : string, fn : function  () : void, scope : variant) : void;
        function register (item : variant) : void;
        function registerType (type : string, cls : function  () : void) : void;
        function unregister (item : variant) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }


    class ActionSheet extends Ext.Sheet
    {
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class Ajax extends Ext.data.Connection
    {
        static var autoAbort : boolean;

        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class Anim extends Ext.Base
    {
        static function constructor (config : variant);
        static function run (el : Ext.dom.Element, anim : string, config : variant) : void;
        static function run (el : HTMLElement, anim : string, config : variant) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }


    class Array
    {
        static function clean (array : variant[]) : void;
        static function clone (array : variant[]) : void;
        static function contains (array : variant[], item : variant) : void;
        static function difference (arrayA : variant[], arrayB : variant[]) : void;
        static function each (iterable : variant[], fn : function  () : void, scope : variant, reverse : boolean) : void;
        static function each (iterable : variant[], fn : function  () : void, scope : variant) : void;
        static function each (iterable : variant[], fn : function  () : void, reverse : boolean) : void;
        static function each (iterable : variant[], fn : function  () : void) : void;
        static function each (iterable : NodeList, fn : function  () : void, scope : variant, reverse : boolean) : void;
        static function each (iterable : NodeList, fn : function  () : void, scope : variant) : void;
        static function each (iterable : NodeList, fn : function  () : void, reverse : boolean) : void;
        static function each (iterable : NodeList, fn : function  () : void) : void;
        static function each (iterable : variant, fn : function  () : void, scope : variant, reverse : boolean) : void;
        static function each (iterable : variant, fn : function  () : void, scope : variant) : void;
        static function each (iterable : variant, fn : function  () : void, reverse : boolean) : void;
        static function each (iterable : variant, fn : function  () : void) : void;
        static function erase (array : variant[], index : number, removeCount : number) : void;
        static function every (array : variant[], fn : function  () : void, scope : variant) : void;
        static function filter (array : variant[], fn : function  () : void, scope : variant) : void;
        static function flatten (array : variant[]) : void;
        static function forEach (array : variant[], fn : function  () : void, scope : variant) : void;
        static function forEach (array : variant[], fn : function  () : void) : void;
        static function from (value : variant, newReference : boolean) : void;
        static function from (value : variant) : void;
        static function include (array : variant[], item : variant) : void;
        static function indexOf (array : variant[], item : variant, from : number) : void;
        static function indexOf (array : variant[], item : variant) : void;
        static function insert (array : variant[], index : number, items : variant[]) : void;
        static function intersect (array1 : variant[], array2 : variant[], etc : variant[]) : void;
        static function map (array : variant[], fn : function  () : void, scope : variant) : void;
        static function max (array : variant[], comparisonFn : function  () : void) : void;
        static function max (array : variant[]) : void;
        static function max (array : NodeList, comparisonFn : function  () : void) : void;
        static function max (array : NodeList) : void;
        static function mean (array : variant[]) : void;
        static function merge (array1 : variant[], array2 : variant[], etc : variant[]) : void;
        static function min (array : variant[], comparisonFn : function  () : void) : void;
        static function min (array : variant[]) : void;
        static function min (array : NodeList, comparisonFn : function  () : void) : void;
        static function min (array : NodeList) : void;
        static function pluck (array : variant[], propertyName : string) : void;
        static function pluck (array : NodeList, propertyName : string) : void;
        static function remove (array : variant[], item : variant) : void;
        static function replace (array : variant[], index : number, removeCount : number, insert : variant[]) : void;
        static function replace (array : variant[], index : number, removeCount : number) : void;
        static function slice (array : variant[], begin : number, end : number) : void;
        static function some (array : variant[], fn : function  () : void, scope : variant) : void;
        static function sort (array : variant[], sortFn : function  () : void) : void;
        static function sort (array : variant[]) : void;
        static function splice (array : variant[], index : number, removeCount : number) : void;
        static function sum (array : variant[]) : void;
        static function toArray (iterable : variant, start : number, end : number) : void;
        static function toArray (iterable : variant, start : number) : void;
        static function toArray (iterable : variant) : void;
        static function union (array1 : variant[], array2 : variant[], etc : variant[]) : void;
        static function unique (array : variant[]) : void;
    }

    class Audio extends Ext.Media
    {
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class Base
    {
        var self : Ext.Class;

        function callOverridden (args : variant[]) : void;
        function callParent (args : variant[]) : void;
        function callSuper (args : variant[]) : void;
        function getInitialConfig (name : string) : void;
        function getInitialConfig () : void;
        function initConfig (instanceConfig : variant) : void;
        function statics () : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class Button extends Ext.Component
    {
        function getAutoEvent () : void;
        function getBadgeCls () : void;
        function getBadgeText () : void;
        function getHandler () : void;
        function getIcon () : void;
        function getIconAlign () : void;
        function getIconCls () : void;
        function getLabelCls () : void;
        function getPressedCls () : void;
        function getPressedDelay () : void;
        function getScope () : void;
        function getText () : void;
        function setAutoEvent (autoEvent : string) : void;
        function setBadgeCls (badgeCls : string) : void;
        function setBadgeText (badgeText : string) : void;
        function setHandler (handler : function  () : void) : void;
        function setIcon (icon : string) : void;
        function setIconAlign (iconAlign : string) : void;
        function setIconCls (iconCls : string) : void;
        function setLabelCls (labelCls : string) : void;
        function setPressedCls (pressedCls : string) : void;
        function setPressedDelay (pressedDelay : number) : void;
        function setPressedDelay (pressedDelay : boolean) : void;
        function setScope (scope : variant) : void;
        function setText (text : string) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class Class
    {
        function constructor (data : variant, onCreated : function  () : void);
        function constructor (data : variant);
    }

    class ClassManager
    {
        static function addNameAliasMappings (aliases : variant) : void;
        static function addNameAlternateMappings (alternates : variant) : void;
        static function get (name : string) : void;
        static function getAliasesByName (name : string) : void;
        static function getByAlias (alias : string) : void;
        static function getClass (object : variant) : void;
        static function getName (object : Ext.Class) : void;
        static function getName (object : variant) : void;
        static function getNameByAlias (alias : string) : void;
        static function getNameByAlternate (alternate : string) : void;
        static function getNamesByExpression (expression : string) : void;
        static function instantiate (name : string, args : variant) : void;
        static function instantiateByAlias (alias : string, args : variant) : void;
        static function isCreated (className : string) : void;
        static function set (name : string, value : variant) : void;
        static function setAlias (cls : Ext.Class, alias : string) : void;
        static function setAlias (cls : string, alias : string) : void;
        static function setNamespace (name : string, value : variant) : void;
    }

    class Component extends Ext.AbstractComponent
    {
        function addCls (cls : string, prefix : string, suffix : string) : void;
        function addCls (cls : string, prefix : string) : void;
        function addCls (cls : string) : void;
        function disable () : void;
        function enable () : void;
        function getAlignmentInfo (component : variant, alignment : variant) : void;
        function getBaseCls () : void;
        function getBorder () : void;
        function getBottom () : void;
        function getCentered () : void;
        function getCls () : void;
        function getContentEl () : void;
        function getData () : void;
        function getDisabled () : void;
        function getDisabledCls () : void;
        function getDocked () : void;
        function getFlex () : void;
        function getFloatingCls () : void;
        function getHeight () : void;
        function getHidden () : void;
        function getHiddenCls () : void;
        function getHideAnimation () : void;
        function getHtml () : void;
        function getItemId () : void;
        function getLeft () : void;
        function getMargin () : void;
        function getMaxHeight () : void;
        function getMaxWidth () : void;
        function getMinHeight () : void;
        function getMinWidth () : void;
        function getPadding () : void;
        function getParent () : void;
        function getPlugins () : void;
        function getRecord () : void;
        function getRenderTo () : void;
        function getRight () : void;
        function getShowAnimation () : void;
        function getSize () : void;
        function getStyle () : void;
        function getStyleHtmlCls () : void;
        function getStyleHtmlContent () : void;
        function getTop () : void;
        function getTpl () : void;
        function getTplWriteMode () : void;
        function getUi () : void;
        function getWidth () : void;
        function getXTypes () : void;
        function getZIndex () : void;
        function hasParent () : void;
        function hide (animation : variant) : void;
        function hide (animation : boolean) : void;
        function hide () : void;
        function isDisabled () : void;
        function isHidden () : void;
        function isXType (xtype : string, shallow : boolean) : void;
        function isXType (xtype : string) : void;
        function removeCls (cls : string, prefix : string, suffix : string) : void;
        function removeCls (cls : string, prefix : string) : void;
        function removeCls (cls : string) : void;
        function replaceCls (oldCls : string, newCls : string, prefix : string, suffix : string) : void;
        function replaceCls (oldCls : string, newCls : string, prefix : string) : void;
        function replaceCls (oldCls : string, newCls : string) : void;
        function resetFloating () : void;
        function setBaseCls (baseCls : string) : void;
        function setBorder (border : number) : void;
        function setBorder (border : string) : void;
        function setBottom (bottom : number) : void;
        function setBottom (bottom : string) : void;
        function setCentered (centered : boolean) : void;
        function setCls (cls : string) : void;
        function setCls (cls : string[]) : void;
        function setContentEl (contentEl : Ext.dom.Element) : void;
        function setContentEl (contentEl : HTMLElement) : void;
        function setContentEl (contentEl : string) : void;
        function setData (data : variant) : void;
        function setDisabled (disabled : boolean) : void;
        function setDisabledCls (disabledCls : string) : void;
        function setDocked (docked : string) : void;
        function setDraggable (draggable : variant) : void;
        function setFlex (flex : number) : void;
        function setFloatingCls (floatingCls : string) : void;
        function setHeight (height : number) : void;
        function setHeight (height : string) : void;
        function setHidden (hidden : boolean) : void;
        function setHiddenCls (hiddenCls : string) : void;
        function setHideAnimation (hideAnimation : string) : void;
        function setHideAnimation (hideAnimation : variant) : void;
        function setHtml (html : string) : void;
        function setHtml (html : Ext.dom.Element) : void;
        function setHtml (html : HTMLElement) : void;
        function setItemId (itemId : string) : void;
        function setLeft (left : number) : void;
        function setLeft (left : string) : void;
        function setMargin (margin : number) : void;
        function setMargin (margin : string) : void;
        function setMaxHeight (maxHeight : number) : void;
        function setMaxHeight (maxHeight : string) : void;
        function setMaxWidth (maxWidth : number) : void;
        function setMaxWidth (maxWidth : string) : void;
        function setMinHeight (minHeight : number) : void;
        function setMinHeight (minHeight : string) : void;
        function setMinWidth (minWidth : number) : void;
        function setMinWidth (minWidth : string) : void;
        function setPadding (padding : number) : void;
        function setPadding (padding : string) : void;
        function setPlugins (plugins : variant) : void;
        function setPlugins (plugins : variant[]) : void;
        function setRecord (record : Ext.data.Model) : void;
        function setRenderTo (renderTo : Ext.dom.Element) : void;
        function setRight (right : number) : void;
        function setRight (right : string) : void;
        function setScrollable () : void;
        function setShowAnimation (showAnimation : string) : void;
        function setShowAnimation (showAnimation : variant) : void;
        function setSize (width : number, height : number) : void;
        function setStyle (style : string) : void;
        function setStyle (style : variant) : void;
        function setStyleHtmlCls (styleHtmlCls : string) : void;
        function setStyleHtmlContent (styleHtmlContent : boolean) : void;
        function setTop (top : number) : void;
        function setTop (top : string) : void;
        function setTpl (tpl : string) : void;
        function setTpl (tpl : string[]) : void;
        function setTpl (tpl : Ext.Template) : void;
        function setTpl (tpl : Ext.XTemplate[]) : void;
        function setTplWriteMode (tplWriteMode : string) : void;
        function setUi (ui : string) : void;
        function setWidth (width : number) : void;
        function setWidth (width : string) : void;
        function setZIndex (zIndex : number) : void;
        function show (animation : variant) : void;
        function show (animation : boolean) : void;
        function show () : void;
        function showBy (component : Ext.Component, alignment : string) : void;
        function showBy (component : Ext.Component) : void;
        function up (selector : string) : void;
        function up () : void;
        function updateStyleHtmlCls (newHtmlCls : variant, oldHtmlCls : variant) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }


    class ComponentQuery
    {
        static function is (component : Ext.Component, selector : string) : void;
        static function query (selector : string, root : Ext.Container) : void;
    }

    class Container extends Ext.Component
    {
        function add (newItems : variant) : void;
        function add (newItems : variant[]) : void;
        function add (newItems : Ext.Component) : void;
        function add (newItems : Ext.Component[]) : void;
        function animateActiveItem (activeItem : variant, animation : variant) : void;
        function animateActiveItem (activeItem : variant, animation : Ext.fx.layout.Card) : void;
        function animateActiveItem (activeItem : number, animation : variant) : void;
        function animateActiveItem (activeItem : number, animation : Ext.fx.layout.Card) : void;
        function applyMasked (masked : boolean) : void;
        function applyMasked (masked : variant) : void;
        function applyMasked (masked : Ext.Mask) : void;
        function applyMasked (masked : Ext.LoadMask) : void;
        function child (selector : string) : void;
        function down (selector : string) : void;
        function getActiveItem () : void;
        function getAt (index : number) : void;
        function getAutoDestroy () : void;
        function getComponent (component : string) : void;
        function getComponent (component : number) : void;
        function getControl () : void;
        function getDefaultType () : void;
        function getDefaults () : void;
        function getDockedComponent (component : string) : void;
        function getDockedComponent (component : number) : void;
        function getDockedItems () : void;
        function getHideOnMaskTap () : void;
        function getInnerItems () : void;
        function getItems () : void;
        function getMasked () : void;
        function getModal () : void;
        function getScrollable () : boolean;
        function insert (index : number, item : variant) : void;
        function mask (mask : variant) : void;
        function query (selector : string) : void;
        function remove (item : variant, destroy : boolean) : void;
        function remove (item : variant) : void;
        function removeAll (destroy : boolean, everything : boolean) : void;
        function removeAt (index : number) : void;
        function removeInnerAt (index : number) : void;
        function setActiveItem (activeItem : variant) : void;
        function setActiveItem (activeItem : string) : void;
        function setActiveItem (activeItem : number) : void;
        function setAutoDestroy (autoDestroy : boolean) : void;
        function setControl (control : variant) : void;
        function setDefaultType (defaultType : string) : void;
        function setDefaults (defaults : variant) : void;
        function setHideOnMaskTap (hideOnMaskTap : boolean) : void;
        function setItems (items : variant[]) : void;
        function setItems (items : variant) : void;
        function setLayout (layout : variant) : void;
        function setLayout (layout : string) : void;
        function setMasked (masked : boolean) : void;
        function setMasked (masked : variant) : void;
        function setMasked (masked : Ext.Mask) : void;
        function setMasked (masked : Ext.LoadMask) : void;
        function setModal (modal : boolean) : void;
        function unmask () : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class Date
    {
    }

    class DateExtras
    {
        static var DAY : string;
        static var HOUR : string;
        static var MILLI : string;
        static var MINUTE : string;
        static var MONTH : string;
        static var SECOND : string;
        static var YEAR : string;
        static var dayNames : variant[];
        static var defaultFormat : string;
        static var defaults : variant;
        static var formatCodes : variant;
        static var formatFunctions : variant;
        static var monthNames : variant[];
        static var monthNumbers : variant;
        static var parseFunctions : variant;
        static var useStrict : boolean;

        static function add (date : Date, interval : string, value : number) : void;
        static function align (date : Date, unit : string) : void;
        static function between (date : Date, start : Date, end : Date) : void;
        static function clearTime (date : Date, clone : boolean) : void;
        static function clearTime (date : Date) : void;
        static function clone (date : Date) : void;
        static function diff (min : Date, max : Date, unit : string) : void;
        static function format (date : Date, format : string) : void;
        static function getDayOfYear (date : Date) : void;
        static function getDaysInMonth (date : Date) : void;
        static function getElapsed (dateA : Date, dateB : Date) : void;
        static function getElapsed (dateA : Date) : void;
        static function getFirstDateOfMonth (date : Date) : void;
        static function getFirstDayOfMonth (date : Date) : void;
        static function getGMTOffset (date : Date, colon : boolean) : void;
        static function getGMTOffset (date : Date) : void;
        static function getLastDateOfMonth (date : Date) : void;
        static function getLastDayOfMonth (date : Date) : void;
        static function getMonthNumber (name : string) : void;
        static function getShortDayName (day : number) : void;
        static function getShortMonthName (month : number) : void;
        static function getSuffix (date : Date) : void;
        static function getTimezone (date : Date) : void;
        static function getWeekOfYear (date : Date) : void;
        static function isDST (date : Date) : void;
        static function isLeapYear (date : Date) : void;
        static function isValid (year : number, month : number, day : number, hour : number, minute : number, second : number, millisecond : number) : void;
        static function isValid (year : number, month : number, day : number, hour : number, minute : number, second : number) : void;
        static function isValid (year : number, month : number, day : number, hour : number, minute : number) : void;
        static function isValid (year : number, month : number, day : number, hour : number) : void;
        static function isValid (year : number, month : number, day : number) : void;
        static function now () : void;
        static function parse (input : string, format : string, strict : boolean) : void;
        static function parse (input : string, format : string) : void;
        static function parse (input : number, format : string, strict : boolean) : void;
        static function parse (input : number, format : string) : void;
    }

    class Decorator extends Ext.Component
    {
        function getComponent () : void;
        function setComponent (component : variant) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class DomHelper
    {
        function append (el : string, o : variant, returnElement : boolean) : void;
        function append (el : string, o : variant) : void;
        function append (el : string, o : string, returnElement : boolean) : void;
        function append (el : string, o : string) : void;
        function append (el : HTMLElement, o : variant, returnElement : boolean) : void;
        function append (el : HTMLElement, o : variant) : void;
        function append (el : HTMLElement, o : string, returnElement : boolean) : void;
        function append (el : HTMLElement, o : string) : void;
        function append (el : Ext.dom.Element, o : variant, returnElement : boolean) : void;
        function append (el : Ext.dom.Element, o : variant) : void;
        function append (el : Ext.dom.Element, o : string, returnElement : boolean) : void;
        function append (el : Ext.dom.Element, o : string) : void;
        function applyStyles (el : string, styles : string) : void;
        function applyStyles (el : string, styles : variant) : void;
        function applyStyles (el : string, styles : function  () : void) : void;
        function applyStyles (el : HTMLElement, styles : string) : void;
        function applyStyles (el : HTMLElement, styles : variant) : void;
        function applyStyles (el : HTMLElement, styles : function  () : void) : void;
        function createTemplate (o : variant) : void;
        function generateStyles (styles : variant, buffer : string[]) : void;
        function generateStyles (styles : variant) : void;
        function insertAfter (el : string, o : variant, returnElement : boolean) : void;
        function insertAfter (el : string, o : variant) : void;
        function insertAfter (el : HTMLElement, o : variant, returnElement : boolean) : void;
        function insertAfter (el : HTMLElement, o : variant) : void;
        function insertAfter (el : Ext.dom.Element, o : variant, returnElement : boolean) : void;
        function insertAfter (el : Ext.dom.Element, o : variant) : void;
        function insertBefore (el : string, o : variant, returnElement : boolean) : void;
        function insertBefore (el : string, o : variant) : void;
        function insertBefore (el : string, o : string, returnElement : boolean) : void;
        function insertBefore (el : string, o : string) : void;
        function insertBefore (el : HTMLElement, o : variant, returnElement : boolean) : void;
        function insertBefore (el : HTMLElement, o : variant) : void;
        function insertBefore (el : HTMLElement, o : string, returnElement : boolean) : void;
        function insertBefore (el : HTMLElement, o : string) : void;
        function insertBefore (el : Ext.dom.Element, o : variant, returnElement : boolean) : void;
        function insertBefore (el : Ext.dom.Element, o : variant) : void;
        function insertBefore (el : Ext.dom.Element, o : string, returnElement : boolean) : void;
        function insertBefore (el : Ext.dom.Element, o : string) : void;
        function insertFirst (el : string, o : variant, returnElement : boolean) : void;
        function insertFirst (el : string, o : variant) : void;
        function insertFirst (el : string, o : string, returnElement : boolean) : void;
        function insertFirst (el : string, o : string) : void;
        function insertFirst (el : HTMLElement, o : variant, returnElement : boolean) : void;
        function insertFirst (el : HTMLElement, o : variant) : void;
        function insertFirst (el : HTMLElement, o : string, returnElement : boolean) : void;
        function insertFirst (el : HTMLElement, o : string) : void;
        function insertFirst (el : Ext.dom.Element, o : variant, returnElement : boolean) : void;
        function insertFirst (el : Ext.dom.Element, o : variant) : void;
        function insertFirst (el : Ext.dom.Element, o : string, returnElement : boolean) : void;
        function insertFirst (el : Ext.dom.Element, o : string) : void;
        function insertHtml (where : string, el : HTMLElement, html : string) : void;
        function insertHtml (where : string, el : Text, html : string) : void;
        function markup (spec : variant) : void;
        function overwrite (el : string, o : variant, returnElement : boolean) : void;
        function overwrite (el : string, o : variant) : void;
        function overwrite (el : string, o : string, returnElement : boolean) : void;
        function overwrite (el : string, o : string) : void;
        function overwrite (el : HTMLElement, o : variant, returnElement : boolean) : void;
        function overwrite (el : HTMLElement, o : variant) : void;
        function overwrite (el : HTMLElement, o : string, returnElement : boolean) : void;
        function overwrite (el : HTMLElement, o : string) : void;
        function overwrite (el : Ext.dom.Element, o : variant, returnElement : boolean) : void;
        function overwrite (el : Ext.dom.Element, o : variant) : void;
        function overwrite (el : Ext.dom.Element, o : string, returnElement : boolean) : void;
        function overwrite (el : Ext.dom.Element, o : string) : void;
    }

    class DomQuery extends Ext.dom.Query
    {
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }


    class Evented extends Ext.Base
    {
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class Function
    {
        static function alias (object : variant, methodName : string) : void;
        static function alias (object : function  () : void, methodName : string) : void;
        static function bind (fn : function  () : void, scope : variant, args : variant[], appendArgs : boolean) : void;
        static function bind (fn : function  () : void, scope : variant, args : variant[], appendArgs : number) : void;
        static function bind (fn : function  () : void, scope : variant, args : variant[]) : void;
        static function bind (fn : function  () : void, scope : variant, appendArgs : boolean) : void;
        static function bind (fn : function  () : void, scope : variant, appendArgs : number) : void;
        static function bind (fn : function  () : void, scope : variant) : void;
        static function bind (fn : function  () : void, args : variant[], appendArgs : boolean) : void;
        static function bind (fn : function  () : void, args : variant[], appendArgs : number) : void;
        static function bind (fn : function  () : void, args : variant[]) : void;
        static function bind (fn : function  () : void, appendArgs : boolean) : void;
        static function bind (fn : function  () : void, appendArgs : number) : void;
        static function bind (fn : function  () : void) : void;
        static function clone (method : function  () : void) : void;
        static function createBuffered (fn : function  () : void, buffer : number, scope : variant, args : variant[]) : void;
        static function createBuffered (fn : function  () : void, buffer : number, scope : variant) : void;
        static function createBuffered (fn : function  () : void, buffer : number, args : variant[]) : void;
        static function createBuffered (fn : function  () : void, buffer : number) : void;
        static function createDelayed (fn : function  () : void, delay : number, scope : variant, args : variant[], appendArgs : boolean) : void;
        static function createDelayed (fn : function  () : void, delay : number, scope : variant, args : variant[], appendArgs : number) : void;
        static function createDelayed (fn : function  () : void, delay : number, scope : variant, args : variant[]) : void;
        static function createDelayed (fn : function  () : void, delay : number, scope : variant, appendArgs : boolean) : void;
        static function createDelayed (fn : function  () : void, delay : number, scope : variant, appendArgs : number) : void;
        static function createDelayed (fn : function  () : void, delay : number, scope : variant) : void;
        static function createDelayed (fn : function  () : void, delay : number, args : variant[], appendArgs : boolean) : void;
        static function createDelayed (fn : function  () : void, delay : number, args : variant[], appendArgs : number) : void;
        static function createDelayed (fn : function  () : void, delay : number, args : variant[]) : void;
        static function createDelayed (fn : function  () : void, delay : number, appendArgs : boolean) : void;
        static function createDelayed (fn : function  () : void, delay : number, appendArgs : number) : void;
        static function createDelayed (fn : function  () : void, delay : number) : void;
        static function createInterceptor (origFn : function  () : void, newFn : function  () : void, scope : variant, returnValue : variant) : void;
        static function createInterceptor (origFn : function  () : void, newFn : function  () : void, scope : variant) : void;
        static function createInterceptor (origFn : function  () : void, newFn : function  () : void) : void;
        static function createSequence (originalFn : function  () : void, newFn : function  () : void, scope : variant) : void;
        static function createSequence (originalFn : function  () : void, newFn : function  () : void) : void;
        static function createThrottled (fn : function  () : void, interval : number, scope : variant) : void;
        static function createThrottled (fn : function  () : void, interval : number) : void;
        static function defer (fn : function  () : void, millis : number, scope : variant, args : variant[], appendArgs : boolean) : void;
        static function defer (fn : function  () : void, millis : number, scope : variant, args : variant[], appendArgs : number) : void;
        static function defer (fn : function  () : void, millis : number, scope : variant, args : variant[]) : void;
        static function defer (fn : function  () : void, millis : number, scope : variant, appendArgs : boolean) : void;
        static function defer (fn : function  () : void, millis : number, scope : variant, appendArgs : number) : void;
        static function defer (fn : function  () : void, millis : number, scope : variant) : void;
        static function defer (fn : function  () : void, millis : number, args : variant[], appendArgs : boolean) : void;
        static function defer (fn : function  () : void, millis : number, args : variant[], appendArgs : number) : void;
        static function defer (fn : function  () : void, millis : number, args : variant[]) : void;
        static function defer (fn : function  () : void, millis : number, appendArgs : boolean) : void;
        static function defer (fn : function  () : void, millis : number, appendArgs : number) : void;
        static function defer (fn : function  () : void, millis : number) : void;
        static function flexSetter (fn : function  () : void) : void;
        static function interceptAfter (object : variant, methodName : string, fn : function  () : void, scope : variant) : void;
        static function interceptAfter (object : variant, methodName : string, fn : function  () : void) : void;
        static function interceptBefore (object : variant, methodName : string, fn : function  () : void, scope : variant) : void;
        static function interceptBefore (object : variant, methodName : string, fn : function  () : void) : void;
        static function pass (fn : function  () : void, args : variant[], scope : variant) : void;
        static function pass (fn : function  () : void, args : variant[]) : void;
    }

    class Img extends Ext.Component
    {
        function getBackgroundCls () : void;
        function getImageCls () : void;
        function getMode () : void;
        function getSrc () : void;
        function setBackgroundCls (backgroundCls : string) : void;
        function setImageCls (imageCls : string) : void;
        function setMode (mode : string) : void;
        function setSrc (src : string) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }


    class JSON
    {
        static function decode (json : string, safe : boolean) : void;
        static function decode (json : string) : void;
        static function encode (o : variant) : void;
        static function encodeDate (d : Date) : void;
    }

    class Label extends Ext.Component
    {
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class LoadMask extends Ext.Mask
    {
        function bindStore (store : Ext.data.Store) : void;
        function getIndicator () : void;
        function getMessage () : void;
        function getMessageCls () : void;
        function setIndicator (indicator : boolean) : void;
        function setMessage (message : string) : void;
        function setMessageCls (messageCls : string) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class Loader
    {
        static var history : variant[];

        static function addClassPathMappings (paths : Object ) : void;
        static function exclude (excludes : variant[]) : void;
        static function getConfig (name : string) : void;
        static function getPath (className : string) : void;
        static function onReady (fn : function  () : void, scope : variant, withDomReady : boolean) : void;
        static function require (expressions : string, fn : function  () : void, scope : variant, excludes : string) : void;
        static function require (expressions : string, fn : function  () : void, scope : variant, excludes : variant[]) : void;
        static function require (expressions : string, fn : function  () : void, scope : variant) : void;
        static function require (expressions : string, fn : function  () : void, excludes : string) : void;
        static function require (expressions : string, fn : function  () : void, excludes : variant[]) : void;
        static function require (expressions : string, fn : function  () : void) : void;
        static function require (expressions : string, scope : variant, excludes : string) : void;
        static function require (expressions : string, scope : variant, excludes : variant[]) : void;
        static function require (expressions : string, scope : variant) : void;
        static function require (expressions : string, excludes : string) : void;
        static function require (expressions : string, excludes : variant[]) : void;
        static function require (expressions : string) : void;
        static function require (expressions : variant[], fn : function  () : void, scope : variant, excludes : string) : void;
        static function require (expressions : variant[], fn : function  () : void, scope : variant, excludes : variant[]) : void;
        static function require (expressions : variant[], fn : function  () : void, scope : variant) : void;
        static function require (expressions : variant[], fn : function  () : void, excludes : string) : void;
        static function require (expressions : variant[], fn : function  () : void, excludes : variant[]) : void;
        static function require (expressions : variant[], fn : function  () : void) : void;
        static function require (expressions : variant[], scope : variant, excludes : string) : void;
        static function require (expressions : variant[], scope : variant, excludes : variant[]) : void;
        static function require (expressions : variant[], scope : variant) : void;
        static function require (expressions : variant[], excludes : string) : void;
        static function require (expressions : variant[], excludes : variant[]) : void;
        static function require (expressions : variant[]) : void;
        static function setConfig (name : variant, value : variant) : void;
        static function setConfig (name : variant) : void;
        static function setConfig (name : string, value : variant) : void;
        static function setConfig (name : string) : void;
        static function setPath (name : string, path : string) : void;
        static function setPath (name : string) : void;
        static function setPath (name : variant, path : string) : void;
        static function setPath (name : variant) : void;
        static function syncRequire (expressions : string, fn : function  () : void, scope : variant, excludes : string) : void;
        static function syncRequire (expressions : string, fn : function  () : void, scope : variant, excludes : variant[]) : void;
        static function syncRequire (expressions : string, fn : function  () : void, scope : variant) : void;
        static function syncRequire (expressions : string, fn : function  () : void, excludes : string) : void;
        static function syncRequire (expressions : string, fn : function  () : void, excludes : variant[]) : void;
        static function syncRequire (expressions : string, fn : function  () : void) : void;
        static function syncRequire (expressions : string, scope : variant, excludes : string) : void;
        static function syncRequire (expressions : string, scope : variant, excludes : variant[]) : void;
        static function syncRequire (expressions : string, scope : variant) : void;
        static function syncRequire (expressions : string, excludes : string) : void;
        static function syncRequire (expressions : string, excludes : variant[]) : void;
        static function syncRequire (expressions : string) : void;
        static function syncRequire (expressions : variant[], fn : function  () : void, scope : variant, excludes : string) : void;
        static function syncRequire (expressions : variant[], fn : function  () : void, scope : variant, excludes : variant[]) : void;
        static function syncRequire (expressions : variant[], fn : function  () : void, scope : variant) : void;
        static function syncRequire (expressions : variant[], fn : function  () : void, excludes : string) : void;
        static function syncRequire (expressions : variant[], fn : function  () : void, excludes : variant[]) : void;
        static function syncRequire (expressions : variant[], fn : function  () : void) : void;
        static function syncRequire (expressions : variant[], scope : variant, excludes : string) : void;
        static function syncRequire (expressions : variant[], scope : variant, excludes : variant[]) : void;
        static function syncRequire (expressions : variant[], scope : variant) : void;
        static function syncRequire (expressions : variant[], excludes : string) : void;
        static function syncRequire (expressions : variant[], excludes : variant[]) : void;
        static function syncRequire (expressions : variant[]) : void;
    }

    class Logger
    {
        static function deprecate () : void;
        static function error () : void;
        static function info () : void;
        static function log (message : string, priority : number) : void;
        static function verbose () : void;
        static function warn () : void;
    }

    class Map extends Ext.Container
    {
        function getGeo () : void;
        function getMap () : void;
        function getMapListeners () : void;
        function getUseCurrentLocation () : void;
        function setGeo (geo : Ext.util.Geolocation) : void;
        function setMap (map : google.maps.Map) : void;
        function setMapCenter (coordinates : variant) : void;
        function setMapCenter (coordinates : google.maps.LatLng) : void;
        function setMapListeners (mapListeners : variant) : void;
        function setMapOptions (mapOptions : variant) : void;
        function setUseCurrentLocation (useCurrentLocation : boolean) : void;
        function setUseCurrentLocation (useCurrentLocation : Ext.util.Geolocation) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class Mask extends Ext.Component
    {
        function getTransparent () : void;
        function setTransparent (transparent : boolean) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class Media extends Ext.Component
    {
        function getAutoPause () : void;
        function getAutoResume () : void;
        function getCurrentTime () : void;
        function getDuration () : void;
        function getEnableControls () : void;
        function getLoop () : void;
        function getMedia () : void;
        function getMuted () : void;
        function getPreload () : void;
        function getUrl () : void;
        function getVolume () : void;
        function isPlaying () : void;
        function pause () : void;
        function play () : void;
        function setAutoPause (autoPause : boolean) : void;
        function setAutoResume (autoResume : boolean) : void;
        function setEnableControls (enableControls : boolean) : void;
        function setLoop (loop : boolean) : void;
        function setMedia (media : Ext.dom.Element) : void;
        function setMuted (muted : boolean) : void;
        function setPreload (preload : boolean) : void;
        function setUrl (url : string) : void;
        function setVolume (volume : number) : void;
        function stop () : void;
        function toggle () : void;
        function updateEnableControls (enableControls : variant) : void;
        function updateLoop (loop : variant) : void;
        function updateUrl (newUrl : variant) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class Menu extends Ext.Button
    {
    }

    class MessageBox extends Ext.Sheet
    {
        function alert (title : string, message : string, fn : function  () : void, scope : variant) : void;
        function alert (title : string, message : string, fn : function  () : void) : void;
        function alert (title : string, message : string, scope : variant) : void;
        function alert (title : string, message : string) : void;
        function confirm (title : string, message : string, fn : function  () : void, scope : variant) : void;
        function confirm (title : string, message : string, fn : function  () : void) : void;
        function getButtons () : void;
        function getDefaultTextHeight () : void;
        function getPrompt () : void;
        function getTitle () : void;
        function prompt (title : string, message : string, fn : function  () : void, scope : variant, multiLine : boolean, value : string, prompt : variant) : void;
        function prompt (title : string, message : string, fn : function  () : void, scope : variant, multiLine : boolean, value : string) : void;
        function prompt (title : string, message : string, fn : function  () : void, scope : variant, multiLine : boolean, prompt : variant) : void;
        function prompt (title : string, message : string, fn : function  () : void, scope : variant, multiLine : boolean) : void;
        function prompt (title : string, message : string, fn : function  () : void, scope : variant, multiLine : number, value : string, prompt : variant) : void;
        function prompt (title : string, message : string, fn : function  () : void, scope : variant, multiLine : number, value : string) : void;
        function prompt (title : string, message : string, fn : function  () : void, scope : variant, multiLine : number, prompt : variant) : void;
        function prompt (title : string, message : string, fn : function  () : void, scope : variant, multiLine : number) : void;
        function prompt (title : string, message : string, fn : function  () : void, scope : variant, value : string, prompt : variant) : void;
        function prompt (title : string, message : string, fn : function  () : void, scope : variant, value : string) : void;
        function prompt (title : string, message : string, fn : function  () : void, scope : variant, prompt : variant) : void;
        function prompt (title : string, message : string, fn : function  () : void, scope : variant) : void;
        function setButtons (buttons : variant[]) : void;
        function setButtons (buttons : variant) : void;
        function setDefaultTextHeight (defaultTextHeight : number) : void;
        function setIconCls (iconCls : string) : void;
        function setMessage (message : string) : void;
        function setPrompt (prompt : variant) : void;
        function setTitle (title : string) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class Msg extends Ext.MessageBox
    {
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class Number
    {
        static function constrain (number : number, min : number, max : number) : void;
        static function from (value : variant, defaultValue : number) : void;
        static function snap (value : number, increment : number, minValue : number, maxValue : number) : void;
        static function toFixed (value : number, precision : number) : void;
    }

    class Object
    {
        static function chain (object : variant) : void;
        static function each (object : variant, fn : function  () : void, scope : variant) : void;
        static function each (object : variant, fn : function  () : void) : void;
        static function fromQueryString (queryString : string, recursive : boolean) : void;
        static function fromQueryString (queryString : string) : void;
        static function getKey (object : variant, value : variant) : void;
        static function getKeys (object : variant) : void;
        static function getSize (object : variant) : void;
        static function getValues (object : variant) : void;
        static function merge (source : variant, objs : variant) : void;
        static function mergeIf (source : variant) : void;
        static function toQueryObjects (name : string, value : variant, recursive : boolean) : void;
        static function toQueryObjects (name : string, value : variant) : void;
        static function toQueryString (object : variant, recursive : boolean) : void;
        static function toQueryString (object : variant) : void;
    }

    class Panel extends Ext.Container
    {
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class ProgressIndicator extends Ext.Container
    {
        function getMonitoredStates () : void;
        function setFallbackText (fallbackText : string) : void;
        function setFallbackText (fallbackText : variant) : void;
        function setLoadingText (loadingText : string) : void;
        function setLoadingText (loadingText : Ext.XTemplate) : void;
        function setLoadingText (loadingText : variant) : void;
        function setMonitoredStates (monitoredStates : variant) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }



    class SegmentedButton extends Ext.Container
    {
        function getAllowDepress () : void;
        function getAllowMultiple () : void;
        function getAllowToggle () : void;
        function getPressedButtons () : void;
        function getPressedCls () : void;
        function isPressed (button : Ext.Button) : void;
        function setAllowDepress (allowDepress : boolean) : void;
        function setAllowMultiple (allowMultiple : boolean) : void;
        function setAllowToggle (allowToggle : boolean) : void;
        function setPressedButtons (pressedButtons : variant[]) : void;
        function setPressedCls (pressedCls : string) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class Sheet extends Ext.Panel
    {
        function getEnter () : void;
        function getExit () : void;
        function getStretchX () : void;
        function getStretchY () : void;
        function setEnter (enter : string) : void;
        function setExit (exit : string) : void;
        function setStretchX (stretchX : boolean) : void;
        function setStretchY (stretchY : boolean) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class Spacer extends Ext.Component
    {
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class String
    {
        static function capitalize (string : string) : void;
        static function ellipsis (value : string, length : number, word : boolean) : void;
        static function escape (string : string) : void;
        static function escapeRegex (string : string) : void;
        static function format (string : string, values : string) : void;
        static function htmlDecode (value : string) : void;
        static function htmlEncode (value : string) : void;
        static function leftPad (string : string, size : number, character : string) : void;
        static function leftPad (string : string, size : number) : void;
        static function repeat (pattern : string, count : number, sep : string) : void;
        static function toggle (string : string, value : string, other : string) : void;
        static function trim (string : string) : void;
        static function urlAppend (url : string, string : string) : void;
    }


    class Template extends Ext.Base
    {
        var isTemplate : boolean;

        function constructor (html : variant[]);
        function constructor (html : variant);
        function append (el : string, values : variant, returnElement : boolean) : void;
        function append (el : string, values : variant) : void;
        function append (el : string, values : variant[], returnElement : boolean) : void;
        function append (el : string, values : variant[]) : void;
        function append (el : HTMLElement, values : variant, returnElement : boolean) : void;
        function append (el : HTMLElement, values : variant) : void;
        function append (el : HTMLElement, values : variant[], returnElement : boolean) : void;
        function append (el : HTMLElement, values : variant[]) : void;
        function append (el : Ext.dom.Element, values : variant, returnElement : boolean) : void;
        function append (el : Ext.dom.Element, values : variant) : void;
        function append (el : Ext.dom.Element, values : variant[], returnElement : boolean) : void;
        function append (el : Ext.dom.Element, values : variant[]) : void;
        function apply (values : variant) : void;
        function apply (values : variant[]) : void;
        function applyOut (values : variant, out : variant[]) : void;
        function applyOut (values : variant[], out : variant[]) : void;
        function applyTemplate (values : variant) : void;
        function applyTemplate (values : variant[]) : void;
        function compile () : void;
        function insertAfter (el : string, values : variant, returnElement : boolean) : void;
        function insertAfter (el : string, values : variant) : void;
        function insertAfter (el : string, values : variant[], returnElement : boolean) : void;
        function insertAfter (el : string, values : variant[]) : void;
        function insertAfter (el : HTMLElement, values : variant, returnElement : boolean) : void;
        function insertAfter (el : HTMLElement, values : variant) : void;
        function insertAfter (el : HTMLElement, values : variant[], returnElement : boolean) : void;
        function insertAfter (el : HTMLElement, values : variant[]) : void;
        function insertAfter (el : Ext.dom.Element, values : variant, returnElement : boolean) : void;
        function insertAfter (el : Ext.dom.Element, values : variant) : void;
        function insertAfter (el : Ext.dom.Element, values : variant[], returnElement : boolean) : void;
        function insertAfter (el : Ext.dom.Element, values : variant[]) : void;
        function insertBefore (el : string, values : variant, returnElement : boolean) : void;
        function insertBefore (el : string, values : variant) : void;
        function insertBefore (el : string, values : variant[], returnElement : boolean) : void;
        function insertBefore (el : string, values : variant[]) : void;
        function insertBefore (el : HTMLElement, values : variant, returnElement : boolean) : void;
        function insertBefore (el : HTMLElement, values : variant) : void;
        function insertBefore (el : HTMLElement, values : variant[], returnElement : boolean) : void;
        function insertBefore (el : HTMLElement, values : variant[]) : void;
        function insertBefore (el : Ext.dom.Element, values : variant, returnElement : boolean) : void;
        function insertBefore (el : Ext.dom.Element, values : variant) : void;
        function insertBefore (el : Ext.dom.Element, values : variant[], returnElement : boolean) : void;
        function insertBefore (el : Ext.dom.Element, values : variant[]) : void;
        function insertFirst (el : string, values : variant, returnElement : boolean) : void;
        function insertFirst (el : string, values : variant) : void;
        function insertFirst (el : string, values : variant[], returnElement : boolean) : void;
        function insertFirst (el : string, values : variant[]) : void;
        function insertFirst (el : HTMLElement, values : variant, returnElement : boolean) : void;
        function insertFirst (el : HTMLElement, values : variant) : void;
        function insertFirst (el : HTMLElement, values : variant[], returnElement : boolean) : void;
        function insertFirst (el : HTMLElement, values : variant[]) : void;
        function insertFirst (el : Ext.dom.Element, values : variant, returnElement : boolean) : void;
        function insertFirst (el : Ext.dom.Element, values : variant) : void;
        function insertFirst (el : Ext.dom.Element, values : variant[], returnElement : boolean) : void;
        function insertFirst (el : Ext.dom.Element, values : variant[]) : void;
        function overwrite (el : string, values : variant, returnElement : boolean) : void;
        function overwrite (el : string, values : variant) : void;
        function overwrite (el : string, values : variant[], returnElement : boolean) : void;
        function overwrite (el : string, values : variant[]) : void;
        function overwrite (el : HTMLElement, values : variant, returnElement : boolean) : void;
        function overwrite (el : HTMLElement, values : variant) : void;
        function overwrite (el : HTMLElement, values : variant[], returnElement : boolean) : void;
        function overwrite (el : HTMLElement, values : variant[]) : void;
        function overwrite (el : Ext.dom.Element, values : variant, returnElement : boolean) : void;
        function overwrite (el : Ext.dom.Element, values : variant) : void;
        function overwrite (el : Ext.dom.Element, values : variant[], returnElement : boolean) : void;
        function overwrite (el : Ext.dom.Element, values : variant[]) : void;
        function set (html : string, compile : boolean) : void;
        function set (html : string) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function from (el : string, config : variant) : void;
        static function from (el : string) : void;
        static function from (el : HTMLElement, config : variant) : void;
        static function from (el : HTMLElement) : void;
        static function getName () : void;
    }

    class Title extends Ext.Component
    {
        function getTitle () : void;
        function setTitle (title : string) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class TitleBar extends Ext.Container
    {
        function getMaxButtonWidth () : void;
        function getTitle () : void;
        function getTitleAlign () : void;
        function setMaxButtonWidth (maxButtonWidth : string) : void;
        function setTitle (title : string) : void;
        function setTitleAlign (titleAlign : string) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class Toolbar extends Ext.Container
    {
        function getTitle () : void;
        function hideTitle () : void;
        function setTitle (title : string) : void;
        function setTitle (title : Ext.Title) : void;
        function showTitle () : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class Version
    {
        function constructor (version : string);
        function constructor (version : number);
        function deprecate (packageName : string, since : string, closure : function  () : void, scope : variant) : void;
        function equals (target : string) : void;
        function equals (target : number) : void;
        function getBuild () : void;
        function getMajor () : void;
        function getMinor () : void;
        function getPatch () : void;
        function getRelease () : void;
        function getShortVersion () : void;
        function getVersion (packageName : string) : void;
        function getVersion () : void;
        function gt (target : string) : void;
        function gt (target : number) : void;
        function gtEq (target : string) : void;
        function gtEq (target : number) : void;
        function isGreaterThan (target : string) : void;
        function isGreaterThan (target : number) : void;
        function isGreaterThanOrEqual (target : string) : void;
        function isGreaterThanOrEqual (target : number) : void;
        function isLessThan (target : string) : void;
        function isLessThan (target : number) : void;
        function isLessThanOrEqual (target : string) : void;
        function isLessThanOrEqual (target : number) : void;
        function lt (target : string) : void;
        function lt (target : number) : void;
        function ltEq (target : string) : void;
        function ltEq (target : number) : void;
        function match (target : string) : void;
        function match (target : number) : void;
        function setVersion (packageName : string, version : string) : void;
        function setVersion (packageName : string, version : Ext.Version) : void;
        function toArray () : void;
        function toNumber (value : number) : void;
        static function compare (current : string, target : string) : void;
        static function getComponentValue (value : variant) : void;
    }

    class Video extends Ext.Media
    {
        function getPosterUrl () : void;
        function setPosterUrl (posterUrl : string) : void;
        function updatePosterUrl (newUrl : variant) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class Viewport extends Ext.viewport.Default
    {
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class XTemplate extends Ext.Template
    {
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function from (el : string, config : variant) : void;
        static function from (el : string) : void;
        static function from (el : HTMLElement, config : variant) : void;
        static function from (el : HTMLElement) : void;
        static function getName () : void;
        static function getTpl (instance : variant, name : string) : void;
    }


    class XTemplateParser extends Ext.Base
    {
        var level : number;

        function constructor (config : variant);
        function doCase (action : string, actions : variant) : void;
        function doDefault () : void;
        function doElse () : void;
        function doElseIf (action : string, actions : variant) : void;
        function doEnd (type : string, actions : variant) : void;
        function doEval (text : string) : void;
        function doExec (action : string, actions : variant) : void;
        function doExpr (expr : string) : void;
        function doFor (action : string, actions : variant) : void;
        function doIf (action : string, actions : variant) : void;
        function doSwitch (action : string, actions : variant) : void;
        function doTag (tag : string) : void;
        function doText (text : string) : void;
        function doTpl () : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class anims
    {
        static var cube : variant;
        static var fade : variant;
        static var flip : variant;
        static var pop : variant;
        static var slide : variant;
        static var wipe : variant;

    }

    class app
    {

        class Action extends Ext.Base
        {
            function constructor (config : variant);
            function execute () : void;
            function getAction () : void;
            function getApplication () : void;
            function getArgs () : void;
            function getBeforeFilters () : void;
            function getController () : void;
            function getData () : void;
            function getScope () : void;
            function getTitle () : void;
            function getUrl () : void;
            function resume () : void;
            function setAction (action : string) : void;
            function setApplication (application : Ext.app.Application) : void;
            function setArgs (args : variant[]) : void;
            function setBeforeFilters (beforeFilters : variant[]) : void;
            function setController (controller : Ext.app.Controller) : void;
            function setData (data : variant) : void;
            function setScope (scope : variant) : void;
            function setTitle (title : variant) : void;
            function setUrl (url : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Application extends Ext.app.Controller
        {
            function dispatch (action : Ext.app.Action, addToHistory : boolean) : void;
            function dispatch (action : Ext.app.Action) : void;
            function getAppFolder () : void;
            function getControllers () : void;
            function getCurrentProfile () : void;
            function getHistory () : void;
            function getLaunch () : void;
            function getProfiles () : void;
            function getRequires () : void;
            function getRouter () : void;
            function setAppFolder (appFolder : string) : void;
            function setControllers (controllers : variant[]) : void;
            function setCurrentProfile (currentProfile : Ext.app.Profile) : void;
            function setHistory (history : Ext.app.History) : void;
            function setLaunch (launch : function  () : void) : void;
            function setName (name : string) : void;
            function setProfiles (profiles : variant[]) : void;
            function setRequires (requires : string[]) : void;
            function setRouter (router : Ext.app.Router) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
        }

        class Controller extends Ext.Base
        {
            function getApplication () : void;
            function getBefore () : void;
            function getControl () : void;
            function getModels () : void;
            function getRefs () : void;
            function getRoutes () : void;
            function getStores () : void;
            function getViews () : void;
            function redirectTo (place : variant) : void;
            function setApplication (application : Ext.app.Application) : void;
            function setBefore (before : variant) : void;
            function setControl (control : variant) : void;
            function setModels (models : string[]) : void;
            function setRefs (refs : variant) : void;
            function setRoutes (routes : variant) : void;
            function setStores (stores : string[]) : void;
            function setViews (views : variant[]) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class History extends Ext.Base
        {
            function add (action : Ext.app.Action, silent : boolean) : void;
            function back () : void;
            function getActions () : void;
            function getToken () : void;
            function getUpdateUrl () : void;
            function setActions (actions : variant[]) : void;
            function setToken (token : string) : void;
            function setUpdateUrl (updateUrl : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Profile extends Ext.Base
        {
            function getApplication () : void;
            function getControllers () : void;
            function getModels () : void;
            function getNamespace () : void;
            function getStores () : void;
            function getViews () : void;
            function isActive () : void;
            function launch () : void;
            function setApplication (application : Ext.app.Application) : void;
            function setControllers (controllers : variant[]) : void;
            function setModels (models : variant[]) : void;
            function setName (name : string) : void;
            function setNamespace (namespace : string) : void;
            function setStores (stores : variant[]) : void;
            function setViews (views : variant[]) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
        }


        class Router extends Ext.Base
        {
            function constructor (config : variant);
            function connect (url : string, params : variant) : void;
            function connect (url : string) : void;
            function draw (fn : function  () : void) : void;
            function getDefaults () : void;
            function getRoutes () : void;
            function recognize (url : string) : void;
            function setDefaults (defaults : variant) : void;
            function setRoutes (routes : variant[]) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }
    }

    class behavior
    {

        class Behavior extends Ext.Base
        {
            function constructor (component : variant);
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }



    }

    class browser extends Ext.env.Browser
    {
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class carousel
    {

        class Carousel extends Ext.Container
        {
            function getActiveIndex () : void;
            function getAnimation () : void;
            function getBufferSize () : void;
            function getDirection () : void;
            function getDirectionLock () : void;
            function getIndicator () : void;
            function getItemConfig () : void;
            function getItemLength () : void;
            function next () : void;
            function previous () : void;
            function setAnimation (animation : variant) : void;
            function setBufferSize (bufferSize : number) : void;
            function setDirection (direction : string) : void;
            function setDirectionLock (directionLock : boolean) : void;
            function setIndicator (indicator : boolean) : void;
            function setItemConfig (itemConfig : variant) : void;
            function setItemLength (itemLength : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }



    }

    class chart
    {

        class AbstractChart extends Ext.draw.Component
        {
            var version : string;

            function bindStore (store : Ext.data.Store) : void;
            function cancelLayout () : void;
            function getAxes () : void;
            function getColors () : void;
            function getHighlightItem () : void;
            function getInnerPadding () : void;
            function getInsetPadding () : void;
            function getInteractions () : void;
            function getItemForPoint (x : number, y : number) : void;
            function getItemsForPoint (x : number, y : number) : void;
            function getLegend () : void;
            function getLegendStore () : void;
            function getSeries () : void;
            function getShadow () : void;
            function getStore () : void;
            function redraw () : void;
            function resumeThicknessChanged () : void;
            function scheduleLayout () : void;
            function setAnimate (animate : boolean) : void;
            function setAnimate (animate : variant) : void;
            function setAxes (axes : Ext.chart.axis.Axis) : void;
            function setAxes (axes : variant[]) : void;
            function setAxes (axes : variant) : void;
            function setColors (colors : boolean) : void;
            function setColors (colors : variant[]) : void;
            function setHighlightItem (highlightItem : variant) : void;
            function setInnerPadding (innerPadding : variant) : void;
            function setInsetPadding (insetPadding : variant) : void;
            function setInsetPadding (insetPadding : number) : void;
            function setInteractions (interactions : variant[]) : void;
            function setLegend (legend : Ext.chart.Legend) : void;
            function setLegend (legend : variant) : void;
            function setSeries (series : Ext.chart.series.Series) : void;
            function setSeries (series : variant[]) : void;
            function setShadow (shadow : boolean) : void;
            function setShadow (shadow : variant) : void;
            function setStore (store : Ext.data.Store) : void;
            function suspendThicknessChanged () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class CartesianChart extends Ext.chart.AbstractChart
        {
            function getFlipXY () : void;
            function getInnerRegion () : void;
            function setFlipXY (flipXY : boolean) : void;
            function setInnerRegion (innerRegion : variant[]) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Legend extends Ext.dataview.DataView
        {
            function getHorizontalHeight () : void;
            function getToggleable () : void;
            function getVerticalWidth () : void;
            function setHorizontalHeight (horizontalHeight : number) : void;
            function setToggleable (toggleable : boolean) : void;
            function setVerticalWidth (verticalWidth : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class MarkerHolder extends Ext.mixin.Mixin
        {
            function bindMarker (name : string, marker : Ext.chart.Markers) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Markers extends Ext.draw.sprite.Instancing
        {
            function clear (category : string) : void;
            function getMarkerBBoxFor (category : string, index : variant, isWithoutTransform : boolean) : void;
            function getMarkerBBoxFor (category : string, index : variant) : void;
            function putMarkerFor (category : string, markerAttr : variant, index : string, canonical : boolean, keepRevision : boolean) : void;
            function putMarkerFor (category : string, markerAttr : variant, index : string, canonical : boolean) : void;
            function putMarkerFor (category : string, markerAttr : variant, index : string) : void;
            function putMarkerFor (category : string, markerAttr : variant, index : number, canonical : boolean, keepRevision : boolean) : void;
            function putMarkerFor (category : string, markerAttr : variant, index : number, canonical : boolean) : void;
            function putMarkerFor (category : string, markerAttr : variant, index : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class PolarChart extends Ext.chart.AbstractChart
        {
            function getCenter () : void;
            function getRadius () : void;
            function setCenter (center : variant[]) : void;
            function setRadius (radius : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class SpaceFillingChart extends Ext.chart.AbstractChart
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class axis
        {

            class Axis extends Ext.Base
            {
                function getBackground () : void;
                function getChart () : void;
                function getCoordFor (value : variant, field : string, idx : number, items : Ext.util.MixedCollection) : void;
                function getCoordFor (value : variant, field : string, idx : number) : void;
                function getCoordFor (value : variant, field : string, items : Ext.util.MixedCollection) : void;
                function getCoordFor (value : variant, field : string) : void;
                function getFields () : void;
                function getGrid () : void;
                function getHidden () : void;
                function getIncrement () : void;
                function getLabel () : void;
                function getLabelInSpan () : void;
                function getLayout () : void;
                function getMajorTickSteps () : void;
                function getMaxZoom () : void;
                function getMaximum () : void;
                function getMinZoom () : void;
                function getMinimum () : void;
                function getMinorTickSteps () : void;
                function getNeedHighPrecision () : void;
                function getPosition () : void;
                function getRange () : void;
                function getRenderer () : void;
                function getSegmenter () : void;
                function getStyle () : void;
                function getTitle () : void;
                function getTitleMargin () : void;
                function getVisibleRange () : void;
                function processData () : void;
                function renderFrame () : void;
                function setBackground (background : variant) : void;
                function setChart (chart : Ext.chart.AbstractChart) : void;
                function setFields (fields : variant[]) : void;
                function setGrid (grid : variant) : void;
                function setHidden (hidden : boolean) : void;
                function setIncrement (increment : number) : void;
                function setLabel (label : variant) : void;
                function setLabelInSpan (labelInSpan : boolean) : void;
                function setLayout (layout : variant) : void;
                function setLayout (layout : Ext.chart.axis.layout.Layout) : void;
                function setMajorTickSteps (majorTickSteps : number) : void;
                function setMaxZoom (maxZoom : number) : void;
                function setMaximum (maximum : number) : void;
                function setMinZoom (minZoom : number) : void;
                function setMinimum (minimum : number) : void;
                function setMinorTickSteps (minorTickSteps : number) : void;
                function setNeedHighPrecision (needHighPrecision : boolean) : void;
                function setPosition (position : string) : void;
                function setRenderer (renderer : function  () : void) : void;
                function setSegmenter (segmenter : variant) : void;
                function setSegmenter (segmenter : Ext.chart.axis.segmenter.Segmenter) : void;
                function setStyle (style : variant) : void;
                function setTitle (title : string) : void;
                function setTitle (title : variant) : void;
                function setTitleMargin (titleMargin : number) : void;
                function setVisibleRange (visibleRange : variant[]) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Category extends Ext.chart.axis.Axis
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Numeric extends Ext.chart.axis.Axis
            {
                function getAggregator () : void;
                function setAggregator (aggregator : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Time extends Ext.chart.axis.Numeric
            {
                function getCalculateByLabelSize () : void;
                function getDateFormat () : void;
                function getFromDate () : void;
                function getStep () : void;
                function getToDate () : void;
                function setCalculateByLabelSize (calculateByLabelSize : boolean) : void;
                function setDateFormat (dateFormat : string) : void;
                function setDateFormat (dateFormat : boolean) : void;
                function setFromDate (fromDate : Date) : void;
                function setStep (step : variant[]) : void;
                function setToDate (toDate : Date) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class layout
            {

                class CombineDuplicate extends Ext.chart.axis.layout.Discrete
                {
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }

                class Continuous extends Ext.chart.axis.layout.Layout
                {
                    function getAdjustMaximumByMajorUnit () : void;
                    function getAdjustMinimumByMajorUnit () : void;
                    function setAdjustMaximumByMajorUnit (adjustMaximumByMajorUnit : boolean) : void;
                    function setAdjustMinimumByMajorUnit (adjustMinimumByMajorUnit : boolean) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }

                class Discrete extends Ext.chart.axis.layout.Layout
                {
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }

                class Layout extends Ext.Base
                {
                    function constructor (config : variant);
                    function calculateLayout (context : variant) : void;
                    function calculateMajorTicks (context : variant) : void;
                    function calculateMinorTicks (context : variant) : void;
                    function getAxis () : void;
                    function processData (series : Ext.chart.series.Series) : void;
                    function setAxis (axis : Ext.chart.axis.Axis) : void;
                    function snapEnds (context : variant, min : number, max : number, estStepSize : number) : void;
                    function trimByRange (context : variant, out : variant, trimMin : number, trimMax : number) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }
            }

            class segmenter
            {

                class Names extends Ext.chart.axis.segmenter.Segmenter
                {
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }

                class Numeric extends Ext.chart.axis.segmenter.Segmenter
                {
                    function exactStep (start : variant, estStepSize : variant) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }

                class Segmenter extends Ext.Base
                {
                    function constructor (config : variant);
                    function add (value : variant, step : number, unit : variant) : void;
                    function align (value : variant, step : number, unit : variant) : void;
                    function diff (min : variant, max : variant, unit : variant) : void;
                    function from (value : variant) : void;
                    function getAxis () : void;
                    function preferredStep (start : variant, estStepSize : variant) : void;
                    function renderer (value : variant, context : variant) : void;
                    function setAxis (axis : Ext.chart.axis.Axis) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }

                class Time extends Ext.chart.axis.segmenter.Segmenter
                {
                    function getStep () : void;
                    function setStep (step : variant) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }
            }

            class sprite
            {

            }
        }

        class grid
        {

            class CircularGrid extends Ext.draw.sprite.Circle
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class HorizontalGrid extends Ext.draw.sprite.Sprite
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class RadialGrid extends Ext.draw.sprite.Path
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class VerticalGrid extends Ext.draw.sprite.Sprite
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }
        }

        class interactions
        {

            class Abstract extends Ext.Base
            {
                var throttleGap : number;

                function getChart () : void;
                function getEnabled () : void;
                function getGesture () : void;
                function getItemForEvent (e : Event) : void;
                function getItemsForEvent (e : Event) : void;
                function initialize () : void;
                function onGesture () : void;
                function setChart (chart : Ext.chart.AbstractChart) : void;
                function setEnabled (enabled : boolean) : void;
                function setGesture (gesture : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class CrossZoom extends Ext.chart.interactions.Abstract
            {
                function getAxes () : void;
                function getUndoButton () : void;
                function setAxes (axes : variant) : void;
                function setAxes (axes : variant[]) : void;
                function setUndoButton (undoButton : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class ItemHighlight extends Ext.chart.interactions.Abstract
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class ItemInfo extends Ext.chart.interactions.Abstract
            {
                function getPanel () : void;
                function setPanel (panel : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class PanZoom extends Ext.chart.interactions.Abstract
            {
                function getAxes () : void;
                function getHideLabelInGesture () : void;
                function getMaxZoom () : void;
                function getMinZoom () : void;
                function getModeToggleButton () : void;
                function getPanGesture () : void;
                function getShowOverflowArrows () : void;
                function getZoomOnPanGesture () : void;
                function setAxes (axes : variant) : void;
                function setAxes (axes : variant[]) : void;
                function setHideLabelInGesture (hideLabelInGesture : boolean) : void;
                function setMaxZoom (maxZoom : variant) : void;
                function setMinZoom (minZoom : variant) : void;
                function setModeToggleButton (modeToggleButton : variant) : void;
                function setPanGesture (panGesture : string) : void;
                function setShowOverflowArrows (showOverflowArrows : boolean) : void;
                function setZoomOnPanGesture (zoomOnPanGesture : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Rotate extends Ext.chart.interactions.Abstract
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class RotatePie3D extends Ext.chart.interactions.Rotate
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }
        }

        class label
        {

            class Callout extends Ext.draw.modifier.Modifier
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Label extends Ext.draw.sprite.Text
            {
                function getField () : void;
                function getFx () : void;
                function setField (field : variant) : void;
                function setFx (fx : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }
        }

        class series
        {

            class Area extends Ext.chart.series.StackedCartesian
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Bar extends Ext.chart.series.StackedCartesian
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class CandleStick extends Ext.chart.series.Cartesian
            {
                function getCloseField () : void;
                function getHighField () : void;
                function getLowField () : void;
                function getOpenField () : void;
                function setCloseField (closeField : string) : void;
                function setHighField (highField : string) : void;
                function setLowField (lowField : string) : void;
                function setOpenField (openField : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Cartesian extends Ext.chart.series.Series
            {
                function getXAxis () : void;
                function getXField () : void;
                function getYAxis () : void;
                function getYField () : void;
                function setXAxis (xAxis : Ext.chart.axis.Axis) : void;
                function setXField (xField : string) : void;
                function setYAxis (yAxis : Ext.chart.axis.Axis) : void;
                function setYField (yField : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Gauge extends Ext.chart.series.Series
            {
                function getCenter () : void;
                function getDonut () : void;
                function getField () : void;
                function getMaximum () : void;
                function getMinimum () : void;
                function getNeedle () : void;
                function getNeedleLength () : void;
                function getNeedleWidth () : void;
                function getRadius () : void;
                function getRegion () : void;
                function getRotation () : void;
                function getSectors () : void;
                function getTotalAngle () : void;
                function getValue () : void;
                function getWholeDisk () : void;
                function setCenter (center : variant[]) : void;
                function setDonut (donut : number) : void;
                function setField (field : string) : void;
                function setMaximum (maximum : number) : void;
                function setMinimum (minimum : number) : void;
                function setNeedle (needle : boolean) : void;
                function setNeedleLength (needleLength : number) : void;
                function setNeedleWidth (needleWidth : number) : void;
                function setRadius (radius : number) : void;
                function setRegion (region : variant[]) : void;
                function setRotation (rotation : number) : void;
                function setSectors (sectors : variant[]) : void;
                function setTotalAngle (totalAngle : variant) : void;
                function setValue (value : number) : void;
                function setWholeDisk (wholeDisk : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }


            class Line extends Ext.chart.series.Cartesian
            {
                function getAggregator () : void;
                function getFill () : void;
                function getSelectionTolerance () : void;
                function getSmooth () : void;
                function getStep () : void;
                function setAggregator (aggregator : variant) : void;
                function setFill (fill : boolean) : void;
                function setSelectionTolerance (selectionTolerance : number) : void;
                function setSmooth (smooth : boolean) : void;
                function setSmooth (smooth : number) : void;
                function setStep (step : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Pie extends Ext.chart.series.Polar
            {
                function getDonut () : void;
                function getItemForAngle (angle : number) : void;
                function getTotalAngle () : void;
                function setDonut (donut : boolean) : void;
                function setDonut (donut : number) : void;
                function setTotalAngle (totalAngle : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Pie3D extends Ext.chart.series.Polar
            {
                function getDistortion () : void;
                function getDonut () : void;
                function getField () : void;
                function getRegion () : void;
                function getThickness () : void;
                function setDistortion (distortion : number) : void;
                function setDonut (donut : boolean) : void;
                function setDonut (donut : number) : void;
                function setField (field : string) : void;
                function setRegion (region : variant[]) : void;
                function setThickness (thickness : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Polar extends Ext.chart.series.Series
            {
                function getCenter () : void;
                function getOffsetX () : void;
                function getOffsetY () : void;
                function getRadius () : void;
                function getRotation () : void;
                function getXAxis () : void;
                function getXField () : void;
                function getYAxis () : void;
                function getYField () : void;
                function setCenter (center : variant[]) : void;
                function setOffsetX (offsetX : number) : void;
                function setOffsetY (offsetY : number) : void;
                function setRadius (radius : number) : void;
                function setRotation (rotation : number) : void;
                function setXAxis (xAxis : variant) : void;
                function setXField (xField : string) : void;
                function setYAxis (yAxis : variant) : void;
                function setYField (yField : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Radar extends Ext.chart.series.Polar
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Scatter extends Ext.chart.series.Cartesian
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Series extends Ext.Base
            {
                var seriesType : string;
                var type : string;

                function getAnimate () : void;
                function getBackground () : void;
                function getColors () : void;
                function getHidden () : void;
                function getHighlightCfg () : void;
                function getHighlightItem () : void;
                function getItemForPoint (x : number, y : number, target : variant) : void;
                function getItemForPoint (x : number, y : number) : void;
                function getItemInstancing () : void;
                function getLabel () : void;
                function getLabelOverflowPadding () : void;
                function getMarker () : void;
                function getMarkerSubStyle () : void;
                function getOverlaySurface () : void;
                function getRenderer () : void;
                function getShowInLegend () : void;
                function getSprites () : void;
                function getStyle () : void;
                function getSubStyle () : void;
                function getSurface () : void;
                function getTitle () : void;
                function provideLegendInfo (target : variant[]) : void;
                function setAnimate (animate : variant) : void;
                function setBackground (background : variant) : void;
                function setColors (colors : variant[]) : void;
                function setHidden (hidden : boolean) : void;
                function setHidden (hidden : variant[]) : void;
                function setHiddenByIndex (index : number, value : boolean) : void;
                function setHighlightCfg (highlightCfg : variant) : void;
                function setHighlightItem (highlightItem : variant) : void;
                function setItemInstancing (itemInstancing : variant) : void;
                function setLabel (label : variant) : void;
                function setLabelOverflowPadding (labelOverflowPadding : number) : void;
                function setMarker (marker : variant) : void;
                function setMarkerSubStyle (markerSubStyle : variant) : void;
                function setOverlaySurface (overlaySurface : variant) : void;
                function setRenderer (renderer : function  () : void) : void;
                function setShowInLegend (showInLegend : boolean) : void;
                function setStore (store : variant) : void;
                function setStyle (style : variant) : void;
                function setSubStyle (subStyle : variant) : void;
                function setSurface (surface : variant) : void;
                function setTitle (title : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class StackedCartesian extends Ext.chart.series.Cartesian
            {
                function getStacked () : void;
                function setStacked (stacked : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class sprite
            {

                class Aggregative extends Ext.chart.series.sprite.Cartesian
                {
                    function getAggregator () : void;
                    function setAggregator (aggregator : variant) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }

                class Area extends Ext.chart.series.sprite.StackedCartesian
                {
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }

                class Bar extends Ext.chart.series.sprite.StackedCartesian
                {
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }

                class CandleStick extends Ext.chart.series.sprite.Aggregative
                {
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }

                class Cartesian extends Ext.draw.sprite.Sprite
                {
                    function binarySearch (key : string) : void;
                    function getField () : void;
                    function getFlipXY () : void;
                    function getIndexNearPoint (x : number, y : number) : void;
                    function renderClipped (surface : Ext.draw.Surface, ctx : Ext.draw.engine.Canvas, clip : variant[], region : variant[]) : void;
                    function renderClipped (surface : Ext.draw.Surface, ctx : Ext.draw.engine.SvgContext, clip : variant[], region : variant[]) : void;
                    function setField (field : string) : void;
                    function setFlipXY (flipXY : boolean) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }

                class Line extends Ext.chart.series.sprite.Aggregative
                {
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }

                class Pie3DPart extends Ext.draw.sprite.Path
                {
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }

                class PieSlice extends Ext.draw.sprite.Sector
                {
                    function getRendererIndex () : void;
                    function setRendererIndex (rendererIndex : number) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }

                class Polar extends Ext.draw.sprite.Sprite
                {
                    function getField () : void;
                    function setField (field : variant) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }

                class Radar extends Ext.chart.series.sprite.Polar
                {
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }

                class Scatter extends Ext.chart.series.sprite.Cartesian
                {
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }

                class StackedCartesian extends Ext.chart.series.sprite.Cartesian
                {
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }
            }
        }
    }

    class data
    {

        class ArrayStore extends Ext.data.Store
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Batch extends Ext.Base
        {
            var current : number;
            var hasException : boolean;
            var isComplete : boolean;
            var isRunning : boolean;
            var operations : Ext.data.Operation[];
            var total : number;

            function add (operation : variant) : void;
            function getAutoStart () : void;
            function getPauseOnException () : void;
            function getProxy () : void;
            function pause () : void;
            function runOperation (index : number) : void;
            function setAutoStart (autoStart : boolean) : void;
            function setPauseOnException (pauseOnException : boolean) : void;
            function setProxy (proxy : Ext.data.proxy.Proxy) : void;
            function start () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Connection extends Ext.Base
        {
            function abort (request : variant) : void;
            function abort () : void;
            function abortAll () : void;
            function getAsync () : void;
            function getAutoAbort () : void;
            function getDefaultHeaders () : void;
            function getDefaultPostHeader () : void;
            function getDefaultXhrHeader () : void;
            function getDisableCaching () : void;
            function getDisableCachingParam () : void;
            function getExtraParams () : void;
            function getMethod () : void;
            function getPassword () : void;
            function getTimeout () : void;
            function getUrl () : void;
            function getUseDefaultHeader () : void;
            function getUseDefaultXhrHeader () : void;
            function getUsername () : void;
            function isLoading (request : variant) : void;
            function parseStatus (status : number, xhr : XMLHttpRequest) : void;
            function request (options : variant) : void;
            function setAsync (async : boolean) : void;
            function setAutoAbort (autoAbort : boolean) : void;
            function setDefaultHeaders (defaultHeaders : variant) : void;
            function setDefaultPostHeader (defaultPostHeader : string) : void;
            function setDefaultXhrHeader (defaultXhrHeader : string) : void;
            function setDisableCaching (disableCaching : boolean) : void;
            function setDisableCachingParam (disableCachingParam : string) : void;
            function setExtraParams (extraParams : variant) : void;
            function setMethod (method : string) : void;
            function setOptions (options : variant, scope : variant) : void;
            function setPassword (password : string) : void;
            function setTimeout (timeout : number) : void;
            function setUrl (url : string) : void;
            function setUseDefaultHeader (useDefaultHeader : boolean) : void;
            function setUseDefaultXhrHeader (useDefaultXhrHeader : boolean) : void;
            function setUsername (username : string) : void;
            function upload (form : string, url : string, params : string, options : variant) : void;
            function upload (form : HTMLElement, url : string, params : string, options : variant) : void;
            function upload (form : Ext.dom.Element, url : string, params : string, options : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class DirectStore extends Ext.data.Store
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Error extends Ext.Base
        {
            function constructor (config : variant);
            function getField () : void;
            function getMessage () : void;
            function setField (field : string) : void;
            function setMessage (message : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Errors extends Ext.util.Collection
        {
            function getByField (fieldName : string) : void;
            function isValid () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Field extends Ext.Base
        {
            function constructor (config : variant);
            function getAllowNull () : void;
            function getBubbleEvents () : void;
            function getConvert () : void;
            function getDateFormat () : void;
            function getDecode () : void;
            function getDefaultValue () : void;
            function getEncode () : void;
            function getMapping () : void;
            function getPersist () : void;
            function getSortDir () : void;
            function getSortType () : void;
            function getType () : void;
            function setAllowNull (allowNull : boolean) : void;
            function setBubbleEvents (bubbleEvents : string) : void;
            function setConvert (convert : function  () : void) : void;
            function setDateFormat (dateFormat : string) : void;
            function setDecode (decode : variant) : void;
            function setDefaultValue (defaultValue : variant) : void;
            function setEncode (encode : variant) : void;
            function setMapping (mapping : string) : void;
            function setMapping (mapping : number) : void;
            function setName (name : string) : void;
            function setPersist (persist : boolean) : void;
            function setSortDir (sortDir : string) : void;
            function setSortType (sortType : function  () : void) : void;
            function setType (type : string) : void;
            function setType (type : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
        }

        class JsonP extends Ext.Base
        {
            static var callbackKey : string;
            static var disableCaching : boolean;
            static var disableCachingParam : string;
            static var timeout : number;

            static function abort (request : variant) : void;
            static function abort (request : string) : void;
            static function request (options : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }


        class Model extends Ext.Base
        {
            var associations : Ext.util.Collection;
            var dirty : boolean;
            var editing : boolean;
            var fields : Ext.util.MixedCollection;
            var modified : variant;
            var phantom : boolean;
            var raw : variant;
            var stores : variant[];
            var validations : Ext.util.Collection;

            function beginEdit () : void;
            function cancelEdit () : void;
            function commit (silent : boolean) : void;
            function commit () : void;
            function copy (id : string) : void;
            function endEdit (silent : boolean, modifiedFieldNames : string[]) : void;
            function erase (options : variant, scope : variant) : void;
            function erase (options : function  () : void, scope : variant) : void;
            function get (fieldName : string) : void;
            function getAssociatedData () : void;
            function getAssociations () : void;
            function getBelongsTo () : void;
            function getChanges () : void;
            function getClientIdProperty () : void;
            function getData (includeAssociated : boolean) : void;
            function getFields () : void;
            function getHasMany () : void;
            function getHasOne () : void;
            function getIdProperty () : void;
            function getIdentifier () : void;
            function getIsErased () : void;
            function getProxy () : void;
            function getUseCache () : void;
            function getValidations () : void;
            function isModified (fieldName : string) : void;
            function isValid () : void;
            function join (store : Ext.data.Store) : void;
            function reject (silent : boolean) : void;
            function reject () : void;
            function save (options : variant, scope : variant) : void;
            function save (options : variant) : void;
            function save (options : function  () : void, scope : variant) : void;
            function save (options : function  () : void) : void;
            function save () : void;
            function set (fieldName : string, value : variant) : void;
            function set (fieldName : variant, value : variant) : void;
            function setAssociations (associations : variant[]) : void;
            function setBelongsTo (belongsTo : string) : void;
            function setBelongsTo (belongsTo : variant) : void;
            function setBelongsTo (belongsTo : string[]) : void;
            function setBelongsTo (belongsTo : variant[]) : void;
            function setClientIdProperty (clientIdProperty : string) : void;
            function setConvertedData (data : variant) : void;
            function setData (rawData : variant) : void;
            function setDirty () : void;
            function setFields () : void;
            function setHasMany (hasMany : string) : void;
            function setHasMany (hasMany : variant) : void;
            function setHasMany (hasMany : string[]) : void;
            function setHasMany (hasMany : variant[]) : void;
            function setHasOne (hasOne : string) : void;
            function setHasOne (hasOne : variant) : void;
            function setHasOne (hasOne : string[]) : void;
            function setHasOne (hasOne : variant[]) : void;
            function setIdProperty (idProperty : string) : void;
            function setIdentifier (identifier : variant) : void;
            function setIdentifier (identifier : string) : void;
            function setProxy (proxy : variant) : void;
            function setProxy (proxy : Ext.data.proxy.Proxy) : void;
            function setUseCache (useCache : boolean) : void;
            function setValidations (validations : variant[]) : void;
            function toUrl () : void;
            function unjoin (store : Ext.data.Store) : void;
            function validate () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
            static function load (id : number, config : variant, scope : variant) : void;
            static function load (id : number, config : variant) : void;
            static function load (id : number) : void;
        }

        class ModelManager extends Ext.AbstractManager
        {
            static var associationStack : variant;
            static var defaultProxyType : variant;

            static function getModel (id : string) : void;
            static function getModel (id : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class NodeInterface extends Ext.Base
        {
            var childNodes : variant;
            var firstChild : variant;
            var lastChild : variant;
            var nextSibling : variant;
            var parentNode : variant;
            var previousSibling : variant;

            function appendChild (node : Ext.data.NodeInterface) : void;
            function appendChild (node : Ext.data.NodeInterface[]) : void;
            function bubble (fn : function  () : void, scope : variant, args : variant[]) : void;
            function bubble (fn : function  () : void, scope : variant) : void;
            function bubble (fn : function  () : void, args : variant[]) : void;
            function bubble (fn : function  () : void) : void;
            function cascadeBy (fn : function  () : void, scope : variant, args : variant[]) : void;
            function cascadeBy (fn : function  () : void, scope : variant) : void;
            function cascadeBy (fn : function  () : void, args : variant[]) : void;
            function cascadeBy (fn : function  () : void) : void;
            function collapse (recursive : function  () : void, callback : function  () : void, scope : variant) : void;
            function collapse (recursive : function  () : void, callback : function  () : void) : void;
            function collapse (recursive : function  () : void, scope : variant) : void;
            function collapse (recursive : function  () : void) : void;
            function collapse (scope : variant) : void;
            function collapse () : void;
            function contains (node : Ext.data.NodeInterface) : void;
            function copy (newId : string, deep : boolean) : void;
            function copy (newId : string) : void;
            function copy (deep : boolean) : void;
            function copy () : void;
            function eachChild (fn : function  () : void, scope : variant, args : variant[]) : void;
            function eachChild (fn : function  () : void, scope : variant) : void;
            function eachChild (fn : function  () : void, args : variant[]) : void;
            function eachChild (fn : function  () : void) : void;
            function expand (recursive : function  () : void, callback : function  () : void, scope : variant) : void;
            function expand (recursive : function  () : void, callback : function  () : void) : void;
            function expand (recursive : function  () : void, scope : variant) : void;
            function expand (recursive : function  () : void) : void;
            function expand (scope : variant) : void;
            function expand () : void;
            function findChild (attribute : string, value : variant, deep : boolean) : void;
            function findChild (attribute : string, value : variant) : void;
            function findChildBy (fn : function  () : void, scope : variant, deep : boolean) : void;
            function findChildBy (fn : function  () : void, scope : variant) : void;
            function findChildBy (fn : function  () : void, deep : boolean) : void;
            function findChildBy (fn : function  () : void) : void;
            function getChildAt (index : number) : void;
            function getDepth () : void;
            function getPath (field : string, separator : string) : void;
            function getPath (field : string) : void;
            function getPath () : void;
            function hasChildNodes () : void;
            function indexOf (child : Ext.data.NodeInterface) : void;
            function insertBefore (node : Ext.data.NodeInterface, refNode : Ext.data.NodeInterface) : void;
            function insertChild (index : number, node : Ext.data.Model) : void;
            function isAncestor (node : Ext.data.NodeInterface) : void;
            function isExpandable () : void;
            function isExpanded () : void;
            function isFirst () : void;
            function isLast () : void;
            function isLeaf () : void;
            function isLoaded () : void;
            function isLoading () : void;
            function isRoot () : void;
            function isVisible () : void;
            function remove (destroy : boolean) : void;
            function remove () : void;
            function removeAll (destroy : boolean) : void;
            function removeAll () : void;
            function removeChild (node : Ext.data.NodeInterface, destroy : boolean) : void;
            function removeChild (node : Ext.data.NodeInterface) : void;
            function replaceChild (newChild : Ext.data.NodeInterface, oldChild : Ext.data.NodeInterface) : void;
            function sort (sortFn : function  () : void, recursive : boolean, suppressEvent : boolean) : void;
            function updateInfo (silent : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function decorate (record : Ext.data.Model) : void;
            static function getName () : void;
        }

        class NodeStore extends Ext.data.Store
        {
            function getFolderSort () : void;
            function getNode () : void;
            function getRecursive () : void;
            function getRootVisible () : void;
            function isVisible (node : variant) : void;
            function setFolderSort (folderSort : boolean) : void;
            function setNode (node : Ext.data.Model) : void;
            function setRecursive (recursive : boolean) : void;
            function setRootVisible (rootVisible : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Operation extends Ext.Base
        {
            function constructor (config : variant);
            function constructor ();
            function allowWrite () : void;
            function getAction () : void;
            function getAddRecords () : void;
            function getBatch () : void;
            function getCallback () : void;
            function getError () : void;
            function getFilters () : void;
            function getGrouper () : void;
            function getLimit () : void;
            function getModel () : void;
            function getNode () : void;
            function getPage () : void;
            function getParams () : void;
            function getRequest () : void;
            function getResponse () : void;
            function getResultSet () : void;
            function getScope () : void;
            function getSorters () : void;
            function getStart () : void;
            function getSynchronous () : void;
            function getUrl () : void;
            function getWithCredentials () : void;
            function hasException () : void;
            function isComplete () : void;
            function isRunning () : void;
            function isStarted () : void;
            function setAction (action : string) : void;
            function setAddRecords (addRecords : boolean) : void;
            function setBatch (batch : Ext.data.Batch) : void;
            function setCallback (callback : function  () : void) : void;
            function setCompleted () : void;
            function setException (error : string) : void;
            function setException (error : variant) : void;
            function setException () : void;
            function setFilters (filters : Ext.util.Filter[]) : void;
            function setGrouper (grouper : Ext.util.Grouper) : void;
            function setLimit (limit : number) : void;
            function setModel (model : Ext.data.Model) : void;
            function setNode (node : variant) : void;
            function setPage (page : variant) : void;
            function setParams (params : variant) : void;
            function setRecords (records : variant[]) : void;
            function setRequest (request : Ext.data.Request) : void;
            function setResponse (response : variant) : void;
            function setResultSet (resultSet : Ext.data.ResultSet) : void;
            function setScope (scope : variant) : void;
            function setSorters (sorters : Ext.util.Sorter[]) : void;
            function setStart (start : number) : void;
            function setStarted () : void;
            function setSuccessful () : void;
            function setSynchronous (synchronous : boolean) : void;
            function setUrl (url : variant) : void;
            function setWithCredentials (withCredentials : boolean) : void;
            function wasSuccessful () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Request extends Ext.Base
        {
            function constructor (config : variant);
            function constructor ();
            function getAction () : void;
            function getArgs () : void;
            function getCallback () : void;
            function getCallbackKey () : void;
            function getDirectFn () : void;
            function getDisableCaching () : void;
            function getHeaders () : void;
            function getJsonData () : void;
            function getMethod () : void;
            function getOperation () : void;
            function getParams () : void;
            function getPassword () : void;
            function getProxy () : void;
            function getRecords () : void;
            function getScope () : void;
            function getTimeout () : void;
            function getUrl () : void;
            function getUseDefaultXhrHeader () : void;
            function getUsername () : void;
            function getWithCredentials () : void;
            function getXmlData () : void;
            function setAction (action : string) : void;
            function setArgs (args : variant) : void;
            function setCallback (callback : variant) : void;
            function setCallbackKey (callbackKey : string) : void;
            function setDirectFn (directFn : variant) : void;
            function setDisableCaching (disableCaching : boolean) : void;
            function setHeaders (headers : variant) : void;
            function setJsonData (jsonData : variant) : void;
            function setMethod (method : string) : void;
            function setOperation (operation : Ext.data.Operation) : void;
            function setParams (params : variant) : void;
            function setPassword (password : string) : void;
            function setProxy (proxy : Ext.data.proxy.Proxy) : void;
            function setRecords (records : variant) : void;
            function setScope (scope : variant) : void;
            function setTimeout (timeout : number) : void;
            function setUrl (url : string) : void;
            function setUseDefaultXhrHeader (useDefaultXhrHeader : variant) : void;
            function setUsername (username : string) : void;
            function setWithCredentials (withCredentials : boolean) : void;
            function setXmlData (xmlData : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class ResultSet extends Ext.Base
        {
            function constructor (config : variant);
            function constructor ();
            function getCount () : void;
            function getLoaded () : void;
            function getMessage () : void;
            function getRecords () : void;
            function getSuccess () : void;
            function getTotal () : void;
            function setCount (count : number) : void;
            function setLoaded (loaded : boolean) : void;
            function setMessage (message : string) : void;
            function setRecords (records : Ext.data.Model[]) : void;
            function setSuccess (success : boolean) : void;
            function setTotal (total : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class SortTypes extends Ext.Base
        {
            static var stripTagsRE : RegExp;

            static function asDate (value : variant) : void;
            static function asFloat (value : variant) : void;
            static function asInt (value : variant) : void;
            static function asText (value : variant) : void;
            static function asUCString (value : variant) : void;
            static function asUCText (value : variant) : void;
            static function none (value : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Store extends Ext.Evented
        {
            var currentPage : number;

            function add (model : Ext.data.Model[]) : void;
            function add (model : Ext.data.Model) : void;
            function addData (data : variant[]) : void;
            function applyData (data : variant[]) : void;
            function applyData (data : variant) : void;
            function average (field : string) : void;
            function clearFilter (suppressEvent : boolean) : void;
            function clearFilter () : void;
            function each (fn : function  () : void, scope : variant) : void;
            function each (fn : function  () : void) : void;
            function filter (filters : variant[], value : string, anyMatch : boolean, caseSensitive : boolean) : void;
            function filter (filters : variant[], value : string, anyMatch : boolean) : void;
            function filter (filters : variant[], value : string) : void;
            function filter (filters : variant[], anyMatch : boolean, caseSensitive : boolean) : void;
            function filter (filters : variant[], anyMatch : boolean) : void;
            function filter (filters : variant[]) : void;
            function filter (filters : Ext.util.Filter[], value : string, anyMatch : boolean, caseSensitive : boolean) : void;
            function filter (filters : Ext.util.Filter[], value : string, anyMatch : boolean) : void;
            function filter (filters : Ext.util.Filter[], value : string) : void;
            function filter (filters : Ext.util.Filter[], anyMatch : boolean, caseSensitive : boolean) : void;
            function filter (filters : Ext.util.Filter[], anyMatch : boolean) : void;
            function filter (filters : Ext.util.Filter[]) : void;
            function filter (filters : string, value : string, anyMatch : boolean, caseSensitive : boolean) : void;
            function filter (filters : string, value : string, anyMatch : boolean) : void;
            function filter (filters : string, value : string) : void;
            function filter (filters : string, anyMatch : boolean, caseSensitive : boolean) : void;
            function filter (filters : string, anyMatch : boolean) : void;
            function filter (filters : string) : void;
            function filterBy (fn : function  () : void, scope : variant) : void;
            function filterBy (fn : function  () : void) : void;
            function find (fieldName : string, value : string, startIndex : number, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : void;
            function find (fieldName : string, value : string, startIndex : number, anyMatch : boolean, caseSensitive : boolean) : void;
            function find (fieldName : string, value : string, startIndex : number, anyMatch : boolean) : void;
            function find (fieldName : string, value : string, startIndex : number) : void;
            function find (fieldName : string, value : string, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : void;
            function find (fieldName : string, value : string, anyMatch : boolean, caseSensitive : boolean) : void;
            function find (fieldName : string, value : string, anyMatch : boolean) : void;
            function find (fieldName : string, value : string) : void;
            function find (fieldName : string, value : RegExp, startIndex : number, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : void;
            function find (fieldName : string, value : RegExp, startIndex : number, anyMatch : boolean, caseSensitive : boolean) : void;
            function find (fieldName : string, value : RegExp, startIndex : number, anyMatch : boolean) : void;
            function find (fieldName : string, value : RegExp, startIndex : number) : void;
            function find (fieldName : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : void;
            function find (fieldName : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean) : void;
            function find (fieldName : string, value : RegExp, anyMatch : boolean) : void;
            function find (fieldName : string, value : RegExp) : void;
            function findBy (fn : function  () : void, scope : variant, startIndex : number) : void;
            function findBy (fn : function  () : void, scope : variant) : void;
            function findBy (fn : function  () : void, startIndex : number) : void;
            function findBy (fn : function  () : void) : void;
            function findExact (fieldName : string, value : variant, startIndex : number) : void;
            function findExact (fieldName : string, value : variant) : void;
            function findRecord (fieldName : string, value : string, startIndex : number, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : void;
            function findRecord (fieldName : string, value : string, startIndex : number, anyMatch : boolean, caseSensitive : boolean) : void;
            function findRecord (fieldName : string, value : string, startIndex : number, anyMatch : boolean) : void;
            function findRecord (fieldName : string, value : string, startIndex : number) : void;
            function findRecord (fieldName : string, value : string, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : void;
            function findRecord (fieldName : string, value : string, anyMatch : boolean, caseSensitive : boolean) : void;
            function findRecord (fieldName : string, value : string, anyMatch : boolean) : void;
            function findRecord (fieldName : string, value : string) : void;
            function findRecord (fieldName : string, value : RegExp, startIndex : number, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : void;
            function findRecord (fieldName : string, value : RegExp, startIndex : number, anyMatch : boolean, caseSensitive : boolean) : void;
            function findRecord (fieldName : string, value : RegExp, startIndex : number, anyMatch : boolean) : void;
            function findRecord (fieldName : string, value : RegExp, startIndex : number) : void;
            function findRecord (fieldName : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : void;
            function findRecord (fieldName : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean) : void;
            function findRecord (fieldName : string, value : RegExp, anyMatch : boolean) : void;
            function findRecord (fieldName : string, value : RegExp) : void;
            function first () : void;
            function getAllCount () : void;
            function getAt (index : number) : void;
            function getAutoLoad () : void;
            function getAutoSync () : void;
            function getBuffered () : void;
            function getById (id : string) : void;
            function getClearOnPageLoad () : void;
            function getCount () : void;
            function getData () : void;
            function getDestroyRemovedRecords () : void;
            function getFields () : void;
            function getGroupDir () : void;
            function getGroupField () : void;
            function getGroupString (record : Ext.data.Model) : void;
            function getGrouper () : void;
            function getGroups (groupName : string) : void;
            function getGroups () : void;
            function getModel () : void;
            function getModelDefaults () : void;
            function getNewRecords () : void;
            function getPageSize () : void;
            function getParams () : void;
            function getPlugins () : void;
            function getProxy () : void;
            function getRange (startIndex : number, endIndex : number) : void;
            function getRange (startIndex : number) : void;
            function getRange () : void;
            function getRemoteFilter () : void;
            function getRemoteGroup () : void;
            function getRemoteSort () : void;
            function getRemovedRecords () : void;
            function getStoreId () : void;
            function getSyncRemovedRecords () : void;
            function getTotalCount () : void;
            function getUpdatedRecords () : void;
            function indexOf (record : Ext.data.Model) : void;
            function indexOfId (id : string) : void;
            function insert (index : number, records : Ext.data.Model[]) : void;
            function isAutoLoading () : void;
            function isFiltered () : void;
            function isGrouped () : void;
            function isLoaded () : void;
            function isLoading () : void;
            function isSorted () : void;
            function last () : void;
            function load (options : variant, scope : variant) : void;
            function load (options : variant) : void;
            function load (options : function  () : void, scope : variant) : void;
            function load (options : function  () : void) : void;
            function load () : void;
            function loadPage (page : number, options : variant, scope : variant) : void;
            function max (field : string) : void;
            function min (field : string) : void;
            function nextPage (options : variant) : void;
            function previousPage (options : variant) : void;
            function queryBy (fn : function  () : void, scope : variant) : void;
            function queryBy (fn : function  () : void) : void;
            function remove (records : Ext.data.Model) : void;
            function remove (records : Ext.data.Model[]) : void;
            function removeAll (silent : boolean) : void;
            function removeAll () : void;
            function removeAt (index : number) : void;
            function setAutoLoad (autoLoad : boolean) : void;
            function setAutoLoad (autoLoad : variant) : void;
            function setAutoSync (autoSync : boolean) : void;
            function setBuffered (buffered : boolean) : void;
            function setClearOnPageLoad (clearOnPageLoad : boolean) : void;
            function setData (data : variant[]) : void;
            function setData (data : Ext.data.Model[]) : void;
            function setDestroyRemovedRecords (destroyRemovedRecords : boolean) : void;
            function setFields (fields : variant[]) : void;
            function setFilters (filters : variant[]) : void;
            function setGroupDir (groupDir : string) : void;
            function setGroupField (groupField : string) : void;
            function setGrouper (grouper : variant) : void;
            function setModel (model : string) : void;
            function setModelDefaults (modelDefaults : variant) : void;
            function setPageSize (pageSize : number) : void;
            function setParams (params : variant) : void;
            function setPlugins (plugins : variant) : void;
            function setPlugins (plugins : variant[]) : void;
            function setProxy (proxy : string) : void;
            function setProxy (proxy : Ext.data.proxy.Proxy) : void;
            function setProxy (proxy : variant) : void;
            function setRemoteFilter (remoteFilter : boolean) : void;
            function setRemoteGroup (remoteGroup : boolean) : void;
            function setRemoteSort (remoteSort : boolean) : void;
            function setSorters (sorters : variant[]) : void;
            function setStoreId (storeId : string) : void;
            function setSyncRemovedRecords (syncRemovedRecords : boolean) : void;
            function setTotalCount (totalCount : number) : void;
            function sort (sorters : string, defaultDirection : string, where : string) : void;
            function sort (sorters : string, defaultDirection : string) : void;
            function sort (sorters : string) : void;
            function sort (sorters : Ext.util.Sorter[], defaultDirection : string, where : string) : void;
            function sort (sorters : Ext.util.Sorter[], defaultDirection : string) : void;
            function sort (sorters : Ext.util.Sorter[]) : void;
            function sum (field : string) : void;
            function sync (options : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class StoreManager extends Ext.util.Collection
        {
            static function lookup (store : string) : void;
            static function lookup (store : variant) : void;
            static function register (stores : Ext.data.Store) : void;
            static function unregister (stores : string) : void;
            static function unregister (stores : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class TreeStore extends Ext.data.NodeStore
        {
            function getClearOnLoad () : void;
            function getDefaultRootId () : void;
            function getDefaultRootProperty () : void;
            function getNodeById (id : variant) : void;
            function getNodeParam () : void;
            function getRoot () : void;
            function setClearOnLoad (clearOnLoad : boolean) : void;
            function setDefaultRootId (defaultRootId : string) : void;
            function setDefaultRootProperty (defaultRootProperty : string) : void;
            function setNodeParam (nodeParam : string) : void;
            function setRoot (root : Ext.data.Model) : void;
            function setRoot (root : Ext.data.NodeInterface) : void;
            function setRoot (root : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Types extends Ext.Base
        {
            static var AUTO : variant;
            static var BOOL : variant;
            static var BOOLEAN : variant;
            static var DATE : variant;
            static var FLOAT : variant;
            static var INT : variant;
            static var INTEGER : variant;
            static var NUMBER : variant;
            static var STRING : variant;
            static var stripRe : RegExp;

            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Validations extends Ext.Base
        {
            static var emailMessage : string;
            static var emailRe : RegExp;
            static var exclusionMessage : string;
            static var formatMessage : string;
            static var inclusionMessage : string;
            static var lengthMessage : string;
            static var presenceMessage : string;

            static function constructor (config : variant);
            static function email (config : variant, email : string) : void;
            static function exclusion (config : variant, value : string) : void;
            static function format (config : variant, value : string) : void;
            static function getMessage (type : string) : void;
            static function inclusion (config : variant, value : string) : void;
            static function length (config : variant, value : string) : void;
            static function presence (config : variant, value : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class association
        {

            class Association extends Ext.Base
            {
                function constructor (config : variant);
                function constructor ();
                function getAssociatedModel () : void;
                function getAssociatedName () : void;
                function getAssociationKey () : void;
                function getOwnerModel () : void;
                function getOwnerName () : void;
                function getPrimaryKey () : void;
                function getReader () : void;
                function getType () : void;
                function setAssociatedModel (associatedModel : string) : void;
                function setAssociatedName (associatedName : string) : void;
                function setAssociationKey (associationKey : string) : void;
                function setName (name : variant) : void;
                function setOwnerModel (ownerModel : Ext.data.Model) : void;
                function setOwnerModel (ownerModel : string) : void;
                function setOwnerName (ownerName : string) : void;
                function setPrimaryKey (primaryKey : string) : void;
                function setReader (reader : Ext.data.reader.Reader) : void;
                function setType (type : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
            }

            class BelongsTo extends Ext.data.association.Association
            {
                function getForeignKey () : void;
                function getGetterName () : void;
                function getInstanceName () : void;
                function getSetterName () : void;
                function setForeignKey (foreignKey : string) : void;
                function setGetterName (getterName : string) : void;
                function setInstanceName (instanceName : variant) : void;
                function setSetterName (setterName : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class HasMany extends Ext.data.association.Association
            {
                function getAutoLoad () : void;
                function getAutoSync () : void;
                function getFilterProperty () : void;
                function getForeignKey () : void;
                function getStore () : void;
                function getStoreName () : void;
                function setAutoLoad (autoLoad : boolean) : void;
                function setAutoSync (autoSync : boolean) : void;
                function setFilterProperty (filterProperty : string) : void;
                function setForeignKey (foreignKey : string) : void;
                function setStore (store : variant) : void;
                function setStoreName (storeName : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class HasOne extends Ext.data.association.Association
            {
                function getForeignKey () : void;
                function getGetterName () : void;
                function getInstanceName () : void;
                function getSetterName () : void;
                function setForeignKey (foreignKey : string) : void;
                function setGetterName (getterName : string) : void;
                function setInstanceName (instanceName : variant) : void;
                function setSetterName (setterName : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }
        }

        class identifier
        {

            class Sequential extends Ext.data.identifier.Simple
            {
                function getSeed () : void;
                function setSeed (seed : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Simple extends Ext.Base
            {
                function constructor (config : variant);
                function getPrefix () : void;
                function setPrefix (prefix : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Uuid extends Ext.data.identifier.Simple
            {
                var salt : variant;
                var timestamp : variant;

                function getId () : void;
                function getVersion () : void;
                function reconfigure (config : variant) : void;
                function setId (id : variant) : void;
                function setVersion (version : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }
        }

        class plugin
        {

            class Buffered extends Ext.Evented
            {
                function getBufferedCollection () : void;
                function getLeadingBufferZone () : void;
                function getPageFromRecordIndex (index : number) : void;
                function getPurgePageCount () : void;
                function getStore () : void;
                function getTrailingBufferZone () : void;
                function getViewSize () : void;
                function prefetch (options : variant) : void;
                function prefetch () : void;
                function prefetchPage (page : number, options : variant) : void;
                function prefetchPage (page : number) : void;
                function setBufferedCollection (bufferedCollection : variant) : void;
                function setLeadingBufferZone (leadingBufferZone : number) : void;
                function setPurgePageCount (purgePageCount : number) : void;
                function setStore (store : variant) : void;
                function setTrailingBufferZone (trailingBufferZone : number) : void;
                function setViewSize (viewSize : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }
        }

        class proxy
        {

            class Ajax extends Ext.data.proxy.Server
            {
                var actionMethods : variant;

                function getHeaders () : void;
                function getMethod (request : Ext.data.Request) : void;
                function getPassword () : void;
                function getUseDefaultXhrHeader () : void;
                function getUsername () : void;
                function getWithCredentials () : void;
                function setHeaders (headers : variant) : void;
                function setPassword (password : string) : void;
                function setUseDefaultXhrHeader (useDefaultXhrHeader : boolean) : void;
                function setUsername (username : string) : void;
                function setWithCredentials (withCredentials : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Client extends Ext.data.proxy.Proxy
            {
                function clear () : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Direct extends Ext.data.proxy.Server
            {
                function getDirectFn () : void;
                function getParamOrder () : void;
                function getParamsAsHash () : void;
                function setDirectFn (directFn : function  () : void) : void;
                function setDirectFn (directFn : string) : void;
                function setParamOrder (paramOrder : string) : void;
                function setParamOrder (paramOrder : string[]) : void;
                function setParamsAsHash (paramsAsHash : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class JsonP extends Ext.data.proxy.Server
            {
                function abort () : void;
                function getAutoAppendParams () : void;
                function getCallbackKey () : void;
                function getDefaultWriterType () : void;
                function getRecordParam () : void;
                function setAutoAppendParams (autoAppendParams : boolean) : void;
                function setCallbackKey (callbackKey : string) : void;
                function setDefaultWriterType (defaultWriterType : string) : void;
                function setRecordParam (recordParam : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class LocalStorage extends Ext.data.proxy.WebStorage
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Memory extends Ext.data.proxy.Client
            {
                function getData () : void;
                function setData (data : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Proxy extends Ext.Evented
            {
                function batch (options : variant) : void;
                function create (operation : Ext.data.Operation, callback : function  () : void, scope : variant) : void;
                function getBatchActions () : void;
                function getBatchOrder () : void;
                function getModel () : void;
                function getReader () : void;
                function getWriter () : void;
                function read (operation : Ext.data.Operation, callback : function  () : void, scope : variant) : void;
                function setBatchActions (batchActions : boolean) : void;
                function setBatchOrder (batchOrder : string) : void;
                function setModel (model : string) : void;
                function setModel (model : Ext.data.Model) : void;
                function setReader (reader : variant) : void;
                function setReader (reader : string) : void;
                function setReader (reader : Ext.data.reader.Reader) : void;
                function setWriter (writer : variant) : void;
                function setWriter (writer : string) : void;
                function setWriter (writer : Ext.data.writer.Writer) : void;
                function update (operation : Ext.data.Operation, callback : function  () : void, scope : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Rest extends Ext.data.proxy.Ajax
            {
                function getActionMethods () : void;
                function getAppendId () : void;
                function getFormat () : void;
                function setActionMethods (actionMethods : variant) : void;
                function setAppendId (appendId : boolean) : void;
                function setFormat (format : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Server extends Ext.data.proxy.Proxy
            {
                function afterRequest (request : Ext.data.Request, success : boolean) : void;
                function buildRequest (operation : Ext.data.Operation) : void;
                function buildUrl (request : Ext.data.Request) : void;
                function doRequest (operation : Ext.data.Operation, callback : function  () : void, scope : variant) : void;
                function encodeFilters (filters : Ext.util.Filter[]) : void;
                function encodeSorters (sorters : Ext.util.Sorter[]) : void;
                function getApi () : void;
                function getCacheString () : void;
                function getDirectionParam () : void;
                function getEnablePagingParams () : void;
                function getExtraParams () : void;
                function getFilterParam () : void;
                function getGroupParam () : void;
                function getLimitParam () : void;
                function getNoCache () : void;
                function getPageParam () : void;
                function getSimpleSortMode () : void;
                function getSortParam () : void;
                function getStartParam () : void;
                function getTimeout () : void;
                function processResponse (success : boolean, operation : Ext.data.Operation, request : Ext.data.Request, response : variant, callback : function  () : void, scope : variant) : void;
                function setApi (api : variant) : void;
                function setCacheString (cacheString : string) : void;
                function setDirectionParam (directionParam : string) : void;
                function setEnablePagingParams (enablePagingParams : boolean) : void;
                function setExtraParam (name : string, value : variant) : void;
                function setExtraParams (extraParams : variant) : void;
                function setFilterParam (filterParam : string) : void;
                function setGroupParam (groupParam : string) : void;
                function setLimitParam (limitParam : string) : void;
                function setNoCache (noCache : boolean) : void;
                function setPageParam (pageParam : string) : void;
                function setSimpleSortMode (simpleSortMode : boolean) : void;
                function setSortParam (sortParam : string) : void;
                function setStartParam (startParam : string) : void;
                function setTimeout (timeout : number) : void;
                function setUrl (url : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class SessionStorage extends Ext.data.proxy.WebStorage
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Sql extends Ext.data.proxy.Client
            {
                function getColumns () : void;
                function getDatabase () : void;
                function getDefaultDateFormat () : void;
                function getRecordData (record : variant) : void;
                function getTable () : void;
                function getTableExists () : void;
                function getUniqueIdStrategy () : void;
                function setColumns (columns : string) : void;
                function setDatabase (database : string) : void;
                function setDefaultDateFormat (defaultDateFormat : string) : void;
                function setTable (table : string) : void;
                function setTableExists (tableExists : boolean) : void;
                function setUniqueIdStrategy (uniqueIdStrategy : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class WebStorage extends Ext.data.proxy.Client
            {
                var cache : variant;

                function getDefaultDateFormat () : void;
                function getEnablePagingParams () : void;
                function setDefaultDateFormat (defaultDateFormat : string) : void;
                function setEnablePagingParams (enablePagingParams : boolean) : void;
                function setRecord (record : Ext.data.Model, id : string) : void;
                function setRecord (record : Ext.data.Model) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }
        }

        class reader
        {

            class Array extends Ext.data.reader.Json
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Json extends Ext.data.reader.Reader
            {
                function getRecord () : void;
                function getUseSimpleAccessors () : void;
                function setRecord (record : string) : void;
                function setUseSimpleAccessors (useSimpleAccessors : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Reader extends Ext.Base
            {
                var metaData : variant;
                var rawData : variant;

                function getClientIdProperty () : void;
                function getIdProperty () : void;
                function getImplicitIncludes () : void;
                function getMessageProperty () : void;
                function getModel () : void;
                function getResponseData (response : variant) : void;
                function getRootProperty () : void;
                function getSuccessProperty () : void;
                function getTotalProperty () : void;
                function read (response : variant) : void;
                function readRecords (data : variant) : void;
                function setClientIdProperty (clientIdProperty : string) : void;
                function setIdProperty (idProperty : string) : void;
                function setImplicitIncludes (implicitIncludes : boolean) : void;
                function setMessageProperty (messageProperty : string) : void;
                function setModel (model : variant) : void;
                function setRootProperty (rootProperty : string) : void;
                function setSuccessProperty (successProperty : string) : void;
                function setTotalProperty (totalProperty : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Xml extends Ext.data.reader.Reader
            {
                function getRecord () : void;
                function setRecord (record : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }
        }

        class writer
        {

            class Json extends Ext.data.writer.Writer
            {
                function getAllowSingle () : void;
                function getEncode () : void;
                function getEncodeRequest () : void;
                function getRootProperty () : void;
                function setAllowSingle (allowSingle : boolean) : void;
                function setEncode (encode : boolean) : void;
                function setEncodeRequest (encodeRequest : boolean) : void;
                function setRootProperty (rootProperty : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Writer extends Ext.Base
            {
                function constructor (config : variant);
                function constructor ();
                function getNameProperty () : void;
                function getRecordData (record : variant) : void;
                function getWriteAllFields () : void;
                function setNameProperty (nameProperty : string) : void;
                function setWriteAllFields (writeAllFields : boolean) : void;
                function write (request : Ext.data.Request) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Xml extends Ext.data.writer.Writer
            {
                function getDefaultDocumentRoot () : void;
                function getDocumentRoot () : void;
                function getHeader () : void;
                function getRecord () : void;
                function setDefaultDocumentRoot (defaultDocumentRoot : string) : void;
                function setDocumentRoot (documentRoot : string) : void;
                function setHeader (header : string) : void;
                function setRecord (record : string) : void;
                function writeRecords (request : variant, data : variant[]) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }
        }
    }

    class dataview
    {

        class DataView extends Ext.Container
        {
            function collectData () : void;
            function findItemByChild () : void;
            function findTargetByEvent () : void;
            function getDeferEmptyText () : void;
            function getEmptyText () : void;
            function getInline () : void;
            function getItemAt (index : number) : void;
            function getItemCls () : void;
            function getItemConfig () : void;
            function getItemIndex (item : number) : void;
            function getItemTpl () : void;
            function getLoadingText () : void;
            function getMaxItemCache () : void;
            function getNode () : void;
            function getNodes () : void;
            function getPressedCls () : void;
            function getPressedDelay () : void;
            function getRecords () : void;
            function getScrollToTopOnRefresh () : void;
            function getSelectedCls () : void;
            function getSelectedNodes () : void;
            function getSelectedRecords () : void;
            function getStore () : void;
            function getTriggerCtEvent () : void;
            function getTriggerEvent () : void;
            function getUseComponents () : void;
            function getViewItems () : void;
            function handleException () : void;
            function prepareData (data : variant, index : number, record : Ext.data.Model) : void;
            function prepareData (data : variant[], index : number, record : Ext.data.Model) : void;
            function refresh () : void;
            function refreshNode () : void;
            function setDeferEmptyText (deferEmptyText : boolean) : void;
            function setEmptyText (emptyText : string) : void;
            function setInline (inline : boolean) : void;
            function setInline (inline : variant) : void;
            function setItemCls (itemCls : string) : void;
            function setItemConfig (itemConfig : variant) : void;
            function setItemTpl (itemTpl : string) : void;
            function setItemTpl (itemTpl : string[]) : void;
            function setItemTpl (itemTpl : Ext.XTemplate) : void;
            function setLoadingText (loadingText : string) : void;
            function setLoadingText (loadingText : boolean) : void;
            function setMaxItemCache (maxItemCache : number) : void;
            function setPressedCls (pressedCls : string) : void;
            function setPressedDelay (pressedDelay : number) : void;
            function setScrollToTopOnRefresh (scrollToTopOnRefresh : boolean) : void;
            function setSelectedCls (selectedCls : string) : void;
            function setStore (store : Ext.data.Store) : void;
            function setStore (store : variant) : void;
            function setTriggerCtEvent (triggerCtEvent : string) : void;
            function setTriggerEvent (triggerEvent : string) : void;
            function setUseComponents (useComponents : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class IndexBar extends Ext.Component
        {
            function getDirection () : void;
            function getLetters () : void;
            function getListPrefix () : void;
            function isHorizontal () : void;
            function isVertical () : void;
            function refresh () : void;
            function setDirection (direction : string) : void;
            function setLetters (letters : variant[]) : void;
            function setListPrefix (listPrefix : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class List extends Ext.dataview.DataView
        {
            var bufferSize : number;

            function getDisclosureProperty () : void;
            function getGrouped () : void;
            function getIcon () : void;
            function getIndexBar () : void;
            function getInfinite () : void;
            function getItemHeight () : void;
            function getMinimumBufferDistance () : void;
            function getOnItemDisclosure () : void;
            function getPinHeaders () : void;
            function getPreventSelectionOnDisclose () : void;
            function getRefreshHeightOnUpdate () : void;
            function getScrollDockedItems () : void;
            function getStriped () : void;
            function getUseHeaders () : void;
            function getUseSimpleItems () : void;
            function getVariableHeights () : void;
            function setDisclosureProperty (disclosureProperty : string) : void;
            function setGrouped (grouped : boolean) : void;
            function setIcon (icon : variant) : void;
            function setIndexBar (indexBar : boolean) : void;
            function setIndexBar (indexBar : variant) : void;
            function setInfinite (infinite : boolean) : void;
            function setItemHeight (itemHeight : number) : void;
            function setMinimumBufferDistance (minimumBufferDistance : number) : void;
            function setOnItemDisclosure (onItemDisclosure : boolean) : void;
            function setOnItemDisclosure (onItemDisclosure : function  () : void) : void;
            function setOnItemDisclosure (onItemDisclosure : variant) : void;
            function setPinHeaders (pinHeaders : boolean) : void;
            function setPreventSelectionOnDisclose (preventSelectionOnDisclose : boolean) : void;
            function setRefreshHeightOnUpdate (refreshHeightOnUpdate : boolean) : void;
            function setStriped (striped : boolean) : void;
            function setUseHeaders (useHeaders : boolean) : void;
            function setUseSimpleItems (useSimpleItems : boolean) : void;
            function setVariableHeights (variableHeights : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }


        class NestedList extends Ext.Container
        {
            function getAllowDeselect () : void;
            function getBackButton () : void;
            function getBackText () : void;
            function getClearSelectionOnListChange () : void;
            function getDetailCard () : void;
            function getDetailContainer () : void;
            function getDisplayField () : void;
            function getEmptyText () : void;
            function getItemHeight () : void;
            function getItemTextTpl (node : Ext.data.Model) : void;
            function getListConfig () : void;
            function getLoadingText () : void;
            function getOnItemDisclosure () : void;
            function getStore () : void;
            function getSubList () : void;
            function getTitle () : void;
            function getTitleTextTpl (node : Ext.data.Model) : void;
            function getToolbar () : void;
            function getUpdateTitleText () : void;
            function getUseSimpleItems () : void;
            function getUseTitleAsBackText () : void;
            function getVariableHeights () : void;
            function goToLeaf (node : Ext.data.NodeInterface) : void;
            function goToNode (node : Ext.data.NodeInterface) : void;
            function onBackTap () : void;
            function onItemTap (list : Ext.dataview.List, index : number, target : Ext.dom.Element, record : Ext.data.Model, e : Ext.event.Event) : void;
            function setAllowDeselect (allowDeselect : boolean) : void;
            function setBackButton (backButton : variant) : void;
            function setBackText (backText : string) : void;
            function setClearSelectionOnListChange (clearSelectionOnListChange : boolean) : void;
            function setDetailCard (detailCard : Ext.Component) : void;
            function setDetailContainer (detailContainer : Ext.Container) : void;
            function setDisplayField (displayField : string) : void;
            function setEmptyText (emptyText : string) : void;
            function setItemHeight (itemHeight : number) : void;
            function setListConfig (listConfig : variant) : void;
            function setLoadingText (loadingText : string) : void;
            function setOnItemDisclosure (onItemDisclosure : boolean) : void;
            function setOnItemDisclosure (onItemDisclosure : function  () : void) : void;
            function setStore (store : Ext.data.TreeStore) : void;
            function setStore (store : string) : void;
            function setTitle (title : string) : void;
            function setToolbar (toolbar : Ext.Toolbar) : void;
            function setToolbar (toolbar : variant) : void;
            function setToolbar (toolbar : boolean) : void;
            function setUpdateTitleText (updateTitleText : boolean) : void;
            function setUseSimpleItems (useSimpleItems : boolean) : void;
            function setUseTitleAsBackText (useTitleAsBackText : boolean) : void;
            function setVariableHeights (variableHeights : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class component
        {


            class DataItem extends Ext.Container
            {
                function getDataMap () : void;
                function getItemCls () : void;
                function setDataMap (dataMap : variant) : void;
                function setItemCls (itemCls : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class ListItem extends Ext.dataview.component.DataItem
            {
                function getBody () : void;
                function getDisclosure () : void;
                function getHeader () : void;
                function setBody (body : variant) : void;
                function setDisclosure (disclosure : variant) : void;
                function setHeader (header : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class SimpleListItem extends Ext.Component
            {
                function getDisclosure () : void;
                function getHeader () : void;
                function setDisclosure (disclosure : variant) : void;
                function setHeader (header : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }
        }

        class element
        {

            class Container extends Ext.Component
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

        }
    }

    class device
    {

        class Accelerometer extends Ext.Base
        {
            static function constructor ();
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Browser extends Ext.Base
        {
            static function constructor ();
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Camera extends Ext.Base
        {
            static function constructor ();
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Capture extends Ext.Base
        {
            static function constructor ();
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }


        class Compass extends Ext.Base
        {
            static function constructor ();
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Connection extends Ext.Base
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Contacts extends Ext.Base
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Device extends Ext.Base
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class FileSystem extends Ext.Base
        {
            static function constructor ();
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Geolocation extends Ext.Base
        {
            static function constructor ();
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Globalization extends Ext.Base
        {
            static function constructor ();
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Media extends Ext.Base
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Notification extends Ext.Base
        {
            static function constructor ();
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Orientation extends Ext.Base
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Purchases extends Ext.Base
        {
            static function constructor ();
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;

            class Product extends Ext.data.Model
            {
                function purchase (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
                static function load (id : number, config : variant, scope : variant) : void;
                static function load (id : number, config : variant) : void;
                static function load (id : number) : void;
            }
        }

        class Push extends Ext.Base
        {
            static function constructor ();
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class SQLite extends Ext.Base
        {
            static function constructor ();
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Splashscreen extends Ext.Base
        {
            static function constructor ();
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class accelerometer
        {

            class Abstract extends Ext.Base
            {
                function getFrequency () : void;
                function setFrequency (frequency : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }


        }

        class browser
        {

            class Abstract extends Ext.Base
            {
                function close () : void;
                function open (options : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }



        }

        class camera
        {

            class Abstract extends Ext.Base
            {
                function capture (options : variant, scope : variant, destination : string, encoding : string, width : number, height : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }



        }

        class capture
        {


        }

        class communicator
        {


            class Default extends Ext.Base
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }
        }

        class compass
        {

            class Abstract extends Ext.Base
            {
                function getFrequency () : void;
                function setFrequency (frequency : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }


        }

        class connection
        {

            class Abstract extends Ext.Evented
            {
                var CELL_2G : string;
                var CELL_3G : string;
                var CELL_4G : string;
                var ETHERNET : string;
                var NONE : string;
                var UNKNOWN : string;
                var WIFI : string;

                function getOnline () : void;
                function getType () : void;
                function isOnline () : void;
                function setOnline (online : boolean) : void;
                function setType (type : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }



        }

        class contacts
        {

            class Abstract extends Ext.Base
            {
                function getContacts (config : variant) : void;
                function getIncludeImages () : void;
                function setIncludeImages (includeImages : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }


        }

        class device
        {

            class Abstract extends Ext.Base
            {
                var name : string;
                var platform : string;
                var scheme : variant;
                var uuid : string;

                function openURL (url : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }



        }

        class filesystem
        {

            class Abstract extends Ext.Base
            {
                function getFileSystemSize () : void;
                function getFileSystemType () : void;
                function getReaderType () : void;
                function getStringEncoding () : void;
                function setFileSystemSize (fileSystemSize : number) : void;
                function setFileSystemType (fileSystemType : number) : void;
                function setReaderType (readerType : string) : void;
                function setStringEncoding (stringEncoding : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }


            class Cordova extends Ext.device.filesystem.HTML5
            {
                function constructor ();
                function download (config : variant) : void;
                function readMetadata (config : variant) : void;
                function upload (config : variant) : void;
                function writeMetadata (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class DirectoryEntry extends Ext.device.filesystem.Entry
            {
                function getDirectory (config : variant) : void;
                function getFile (config : variant) : void;
                function readEntries (config : variant) : void;
                function removeRecursively (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Entry extends Ext.Base
            {
                function constructor (directory : variant, path : variant, fileSystem : variant);
                function copyTo (config : variant) : void;
                function getFileSystem () : void;
                function getFullPath () : void;
                function getParent (config : variant) : void;
                function isDirectory () : void;
                function isFile () : void;
                function moveTo (config : variant) : void;
                function remove (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
            }

            class FileEntry extends Ext.device.filesystem.Entry
            {
                function getOffset () : void;
                function read (config : variant) : void;
                function seek (config : variant) : void;
                function truncate (config : variant) : void;
                function write (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class FileSystem extends Ext.Base
            {
                function constructor (id : variant);
                function getRoot () : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class HTML5 extends Ext.device.filesystem.Abstract
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }


        }

        class geolocation
        {

            class Abstract extends Ext.Base
            {
                function clearWatch () : void;
                function getAllowHighAccuracy () : void;
                function getCurrentPosition (config : variant) : void;
                function getFrequency () : void;
                function getMaximumAge () : void;
                function getTimeout () : void;
                function setAllowHighAccuracy (allowHighAccuracy : boolean) : void;
                function setFrequency (frequency : number) : void;
                function setMaximumAge (maximumAge : number) : void;
                function setTimeout (timeout : number) : void;
                function watchPosition (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }



        }

        class globalization
        {

            class Abstract extends Ext.Base
            {
                function getCurrencyCode () : void;
                function getDateType () : void;
                function getFormatLength () : void;
                function getItems () : void;
                function getNumberType () : void;
                function getSelector () : void;
                function setCurrencyCode (currencyCode : string) : void;
                function setDateType (dateType : string) : void;
                function setFormatLength (formatLength : string) : void;
                function setItems (items : string) : void;
                function setNumberType (numberType : string) : void;
                function setSelector (selector : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }


        }

        class media
        {

            class Abstract extends Ext.Base
            {
                function getSrc () : void;
                function setSrc (src : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

        }

        class notification
        {

            class Abstract extends Ext.Base
            {
                function show (config : variant) : void;
                function vibrate () : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }



        }

        class orientation
        {

            class Abstract extends Ext.Base
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }


        }

        class purchases
        {

            class Purchase extends Ext.data.Model
            {
                function complete (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
                static function load (id : number, config : variant, scope : variant) : void;
                static function load (id : number, config : variant) : void;
                static function load (id : number) : void;
            }

        }

        class push
        {

            class Abstract extends Ext.Base
            {
                var ALERT : number;
                var BADGE : number;
                var SOUND : number;

                function register (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }


        }

        class splashscreen
        {

            class Abstract extends Ext.Base
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }


        }

        class sqlite
        {

            class Database extends Ext.Base
            {
                function constructor (id : variant, version : variant);
                function changeVersion (config : variant) : void;
                function getVersion () : void;
                function readTransaction (config : variant) : void;
                function transaction (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class SQLResultSet extends Ext.Base
            {
                function constructor (data : variant);
                function getInsertId () : void;
                function getRows () : void;
                function getRowsAffected () : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class SQLResultSetRowList extends Ext.Base
            {
                function constructor (data : variant);
                function getLength () : void;
                function item (index : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class SQLTransaction extends Ext.Base
            {
                function constructor (id : variant);
                function executeSql (config : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

        }

        class storage
        {

            class Abstract extends Ext.Base
            {
                function getDatabaseDisplayName () : void;
                function getDatabaseName () : void;
                function getDatabaseSize () : void;
                function getDatabaseVersion () : void;
                function setDatabaseDisplayName (databaseDisplayName : string) : void;
                function setDatabaseName (databaseName : string) : void;
                function setDatabaseSize (databaseSize : variant) : void;
                function setDatabaseVersion (databaseVersion : string) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }


            class HTML5
            {


                class HTML5 extends Ext.device.storage.Abstract
                {
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }

            }

        }

        class tunnel
        {

            class Abstract extends Ext.Base
            {
                function constructor ();
                function broadcast (message : string) : void;
                function connect (receiverId : string) : void;
                function onConnect (callback : function  () : void) : void;
                function onMessage (callback : function  () : void) : void;
                function send (receiverId : string, message : variant, foreground : boolean) : void;
                function send (receiverId : string, message : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }
        }
    }

    class direct
    {

        class Event extends Ext.Base
        {
            function constructor (config : variant);
            function getCode () : void;
            function getData () : void;
            function getMessage () : void;
            function getResult () : void;
            function getStatus () : void;
            function getTransaction () : void;
            function getXhr () : void;
            function setCode (code : variant) : void;
            function setData (data : variant) : void;
            function setMessage (message : string) : void;
            function setName (name : string) : void;
            function setResult (result : variant) : void;
            function setStatus (status : boolean) : void;
            function setTransaction (transaction : variant) : void;
            function setXhr (xhr : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
        }

        class ExceptionEvent extends Ext.direct.RemotingEvent
        {
            function getError () : void;
            function setError (error : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class JsonProvider extends Ext.direct.Provider
        {
            function createEvent (response : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Manager extends Ext.Base
        {
            static function addProvider (provider : Ext.direct.Provider) : void;
            static function addProvider (provider : variant) : void;
            static function getProvider (id : string) : void;
            static function getProvider (id : Ext.direct.Provider) : void;
            static function parseMethod (fn : string) : void;
            static function parseMethod (fn : function  () : void) : void;
            static function removeProvider (provider : string) : void;
            static function removeProvider (provider : Ext.direct.Provider) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class PollingProvider extends Ext.direct.JsonProvider
        {
            function getBaseParams () : void;
            function getInterval () : void;
            function getUrl () : void;
            function setBaseParams (baseParams : variant) : void;
            function setInterval (interval : number) : void;
            function setUrl (url : string) : void;
            function setUrl (url : function  () : void) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Provider extends Ext.Base
        {
            var isProvider : boolean;

            function connect () : void;
            function disconnect () : void;
            function isConnected () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class RemotingEvent extends Ext.direct.Event
        {
            function getTid () : void;
            function setTid (tid : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }


        class RemotingProvider extends Ext.direct.JsonProvider
        {
            function getActions () : void;
            function getEnableBuffer () : void;
            function getEnableUrlEncode () : void;
            function getMaxRetries () : void;
            function getNamespace () : void;
            function getTimeout () : void;
            function getUrl () : void;
            function setActions (actions : variant) : void;
            function setEnableBuffer (enableBuffer : number) : void;
            function setEnableBuffer (enableBuffer : boolean) : void;
            function setEnableUrlEncode (enableUrlEncode : string) : void;
            function setMaxRetries (maxRetries : number) : void;
            function setNamespace (namespace : string) : void;
            function setNamespace (namespace : variant) : void;
            function setTimeout (timeout : number) : void;
            function setUrl (url : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Transaction extends Ext.Base
        {
            function constructor (config : variant);
            function getAction () : void;
            function getArgs () : void;
            function getCallback () : void;
            function getData () : void;
            function getForm () : void;
            function getId () : void;
            function getMethod () : void;
            function getProvider () : void;
            function getRetryCount () : void;
            function setAction (action : variant) : void;
            function setArgs (args : variant) : void;
            function setCallback (callback : variant) : void;
            function setData (data : variant) : void;
            function setForm (form : variant) : void;
            function setId (id : variant) : void;
            function setMethod (method : variant) : void;
            function setProvider (provider : variant) : void;
            function setRetryCount (retryCount : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }
    }

    class dom
    {

        class CompositeElement extends Ext.dom.CompositeElementLite
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class CompositeElementLite extends Ext.Base
        {
            var elements : HTMLElement[];

            function add (els : HTMLElement[], root : HTMLElement) : void;
            function add (els : HTMLElement[], root : string) : void;
            function add (els : HTMLElement[]) : void;
            function add (els : Ext.dom.CompositeElementLite, root : HTMLElement) : void;
            function add (els : Ext.dom.CompositeElementLite, root : string) : void;
            function add (els : Ext.dom.CompositeElementLite) : void;
            function clear () : void;
            function each (fn : function  () : void, scope : variant) : void;
            function each (fn : function  () : void) : void;
            function fill (els : HTMLElement[]) : void;
            function fill (els : Ext.dom.CompositeElementLite) : void;
            function filter (selector : string) : void;
            function filter (selector : function  () : void) : void;
            function getCount () : void;
            function indexOf (el : string) : void;
            function indexOf (el : HTMLElement) : void;
            function indexOf (el : Ext.dom.Element) : void;
            function indexOf (el : number) : void;
            function item (index : number) : void;
            function removeElement (el : string, removeDom : boolean) : void;
            function removeElement (el : string) : void;
            function removeElement (el : HTMLElement, removeDom : boolean) : void;
            function removeElement (el : HTMLElement) : void;
            function removeElement (el : Ext.dom.Element, removeDom : boolean) : void;
            function removeElement (el : Ext.dom.Element) : void;
            function removeElement (el : number, removeDom : boolean) : void;
            function removeElement (el : number) : void;
            function replaceElement (el : string, replacement : string, domReplace : boolean) : void;
            function replaceElement (el : string, replacement : string) : void;
            function replaceElement (el : string, replacement : Ext.dom.Element, domReplace : boolean) : void;
            function replaceElement (el : string, replacement : Ext.dom.Element) : void;
            function replaceElement (el : HTMLElement, replacement : string, domReplace : boolean) : void;
            function replaceElement (el : HTMLElement, replacement : string) : void;
            function replaceElement (el : HTMLElement, replacement : Ext.dom.Element, domReplace : boolean) : void;
            function replaceElement (el : HTMLElement, replacement : Ext.dom.Element) : void;
            function replaceElement (el : Ext.dom.Element, replacement : string, domReplace : boolean) : void;
            function replaceElement (el : Ext.dom.Element, replacement : string) : void;
            function replaceElement (el : Ext.dom.Element, replacement : Ext.dom.Element, domReplace : boolean) : void;
            function replaceElement (el : Ext.dom.Element, replacement : Ext.dom.Element) : void;
            function replaceElement (el : number, replacement : string, domReplace : boolean) : void;
            function replaceElement (el : number, replacement : string) : void;
            function replaceElement (el : number, replacement : Ext.dom.Element, domReplace : boolean) : void;
            function replaceElement (el : number, replacement : Ext.dom.Element) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Element extends Ext.Base
        {
            var DISPLAY : number;
            var OFFSETS : number;
            var VISIBILITY : number;
            var defaultUnit : string;
            var dom : HTMLElement;
            var id : string;

            function addCls (names : string, prefix : string, suffix : string) : void;
            function addCls (names : string, prefix : string) : void;
            function addCls (names : string) : void;
            function appendChild (element : HTMLElement) : void;
            function appendChild (element : Ext.dom.Element) : void;
            function appendTo (el : string) : void;
            function appendTo (el : HTMLElement) : void;
            function appendTo (el : Ext.dom.Element) : void;
            function applyStyles (styles : string) : void;
            function applyStyles (styles : variant) : void;
            function applyStyles (styles : function  () : void) : void;
            function child (selector : string, returnDom : boolean) : void;
            function child (selector : string) : void;
            function contains (element : HTMLElement) : void;
            function contains (element : string) : void;
            function createChild (config : variant, insertBefore : HTMLElement, returnDom : boolean) : void;
            function createChild (config : variant, insertBefore : HTMLElement) : void;
            function createChild (config : variant, returnDom : boolean) : void;
            function createChild (config : variant) : void;
            function cssTranslate () : void;
            function down (selector : string, returnDom : boolean) : void;
            function down (selector : string) : void;
            function findParent (simpleSelector : string, maxDepth : number, returnEl : boolean) : void;
            function findParent (simpleSelector : string, maxDepth : number) : void;
            function findParent (simpleSelector : string, maxDepth : string, returnEl : boolean) : void;
            function findParent (simpleSelector : string, maxDepth : string) : void;
            function findParent (simpleSelector : string, maxDepth : HTMLElement, returnEl : boolean) : void;
            function findParent (simpleSelector : string, maxDepth : HTMLElement) : void;
            function findParent (simpleSelector : string, maxDepth : Ext.dom.Element, returnEl : boolean) : void;
            function findParent (simpleSelector : string, maxDepth : Ext.dom.Element) : void;
            function findParent (simpleSelector : string, returnEl : boolean) : void;
            function findParent (simpleSelector : string) : void;
            function findParentNode (simpleSelector : string, maxDepth : number, returnEl : boolean) : void;
            function findParentNode (simpleSelector : string, maxDepth : number) : void;
            function findParentNode (simpleSelector : string, maxDepth : string, returnEl : boolean) : void;
            function findParentNode (simpleSelector : string, maxDepth : string) : void;
            function findParentNode (simpleSelector : string, maxDepth : HTMLElement, returnEl : boolean) : void;
            function findParentNode (simpleSelector : string, maxDepth : HTMLElement) : void;
            function findParentNode (simpleSelector : string, maxDepth : Ext.dom.Element, returnEl : boolean) : void;
            function findParentNode (simpleSelector : string, maxDepth : Ext.dom.Element) : void;
            function findParentNode (simpleSelector : string, returnEl : boolean) : void;
            function findParentNode (simpleSelector : string) : void;
            function first (selector : string, returnDom : boolean) : void;
            function first (selector : string) : void;
            function first (returnDom : boolean) : void;
            function first () : void;
            function getAlignToXY (element : variant, position : string, offsets : variant[]) : void;
            function getAlignToXY (element : variant, position : string) : void;
            function getAlignToXY (element : variant, offsets : variant[]) : void;
            function getAlignToXY (element : variant) : void;
            function getAttribute (name : string, namespace : string) : void;
            function getAttribute (name : string) : void;
            function getBorderWidth (side : string) : void;
            function getBottom () : void;
            function getBox (contentBox : boolean, local : boolean) : void;
            function getBox (contentBox : boolean) : void;
            function getBox () : void;
            function getHeight (contentHeight : boolean) : void;
            function getHeight () : void;
            function getHtml () : void;
            function getLeft () : void;
            function getMargin (sides : string) : void;
            function getMargin () : void;
            function getOffsetsTo (element : variant) : void;
            function getOuterHeight () : void;
            function getOuterWidth () : void;
            function getPadding (side : string) : void;
            function getPageBox (asRegion : boolean) : void;
            function getPageBox () : void;
            function getRight () : void;
            function getScrollParent () : void;
            function getSize (contentSize : boolean) : void;
            function getSize () : void;
            function getStyle (prop : string) : void;
            function getTop () : void;
            function getValue (asNumber : boolean) : void;
            function getWidth (contentWidth : boolean) : void;
            function getWidth () : void;
            function getX () : void;
            function getXY () : void;
            function getY () : void;
            function hasCls (name : string) : void;
            function hide () : void;
            function insertAfter (el : string) : void;
            function insertAfter (el : HTMLElement) : void;
            function insertAfter (el : Ext.dom.Element) : void;
            function insertBefore (el : string) : void;
            function insertBefore (el : HTMLElement) : void;
            function insertBefore (el : Ext.dom.Element) : void;
            function insertFirst (element : string) : void;
            function insertFirst (element : HTMLElement) : void;
            function insertFirst (element : Ext.dom.Element) : void;
            function insertHtml (where : string, html : string, returnEl : boolean) : void;
            function insertHtml (where : string, html : string) : void;
            function insertSibling (el : string, where : string, returnDom : boolean) : void;
            function insertSibling (el : string, where : string) : void;
            function insertSibling (el : string, returnDom : boolean) : void;
            function insertSibling (el : string) : void;
            function insertSibling (el : HTMLElement, where : string, returnDom : boolean) : void;
            function insertSibling (el : HTMLElement, where : string) : void;
            function insertSibling (el : HTMLElement, returnDom : boolean) : void;
            function insertSibling (el : HTMLElement) : void;
            function insertSibling (el : Ext.dom.Element, where : string, returnDom : boolean) : void;
            function insertSibling (el : Ext.dom.Element, where : string) : void;
            function insertSibling (el : Ext.dom.Element, returnDom : boolean) : void;
            function insertSibling (el : Ext.dom.Element) : void;
            function insertSibling (el : variant, where : string, returnDom : boolean) : void;
            function insertSibling (el : variant, where : string) : void;
            function insertSibling (el : variant, returnDom : boolean) : void;
            function insertSibling (el : variant) : void;
            function insertSibling (el : variant[], where : string, returnDom : boolean) : void;
            function insertSibling (el : variant[], where : string) : void;
            function insertSibling (el : variant[], returnDom : boolean) : void;
            function insertSibling (el : variant[]) : void;
            function is (selector : string) : void;
            function isDescendent () : void;
            function isStyle (style : string, value : string) : void;
            function last (selector : string, returnDom : boolean) : void;
            function last (selector : string) : void;
            function last (returnDom : boolean) : void;
            function last () : void;
            function mask () : void;
            function next (selector : string, returnDom : boolean) : void;
            function next (selector : string) : void;
            function next (returnDom : boolean) : void;
            function next () : void;
            function parent (selector : string, returnDom : boolean) : void;
            function parent (selector : string) : void;
            function parent (returnDom : boolean) : void;
            function parent () : void;
            function prev (selector : string, returnDom : boolean) : void;
            function prev (selector : string) : void;
            function prev (returnDom : boolean) : void;
            function prev () : void;
            function query (selector : string) : void;
            function removeCls (names : string, prefix : string, suffix : string) : void;
            function removeCls (names : string, prefix : string) : void;
            function removeCls (names : string) : void;
            function repaint () : void;
            function replace (element : string) : void;
            function replace (element : HTMLElement) : void;
            function replace (element : Ext.dom.Element) : void;
            function replaceCls (oldName : string, newName : string, prefix : string, suffix : string) : void;
            function replaceCls (oldName : string, newName : string, prefix : string) : void;
            function replaceCls (oldName : string, newName : string) : void;
            function replaceWith (el : string) : void;
            function replaceWith (el : HTMLElement) : void;
            function replaceWith (el : Ext.dom.Element) : void;
            function replaceWith (el : variant) : void;
            function select (selector : string, composite : boolean) : void;
            function select (selector : HTMLElement[], composite : boolean) : void;
            function set (attributes : variant, useSet : boolean) : void;
            function set (attributes : variant) : void;
            function setBottom (bottom : string) : void;
            function setBox (box : variant) : void;
            function setCls (className : string) : void;
            function setCls (className : variant[]) : void;
            function setHeight (height : number) : void;
            function setHeight (height : string) : void;
            function setHtml (html : string) : void;
            function setLeft (left : string) : void;
            function setMaxHeight (height : number) : void;
            function setMaxHeight (height : string) : void;
            function setMaxWidth (width : number) : void;
            function setMaxWidth (width : string) : void;
            function setMinHeight (height : number) : void;
            function setMinHeight (height : string) : void;
            function setMinWidth (width : number) : void;
            function setMinWidth (width : string) : void;
            function setRight (right : string) : void;
            function setSize (width : number, height : number) : void;
            function setSize (width : number, height : string) : void;
            function setSize (width : string, height : number) : void;
            function setSize (width : string, height : string) : void;
            function setStyle (property : string, value : string) : void;
            function setStyle (property : string) : void;
            function setStyle (property : variant, value : string) : void;
            function setStyle (property : variant) : void;
            function setTop (top : string) : void;
            function setTopLeft () : void;
            function setVisibilityMode (mode : variant) : void;
            function setVisible (visible : boolean) : void;
            function setWidth (width : number) : void;
            function setWidth (width : string) : void;
            function setX (x : number) : void;
            function setXY (pos : number[]) : void;
            function setY (y : number) : void;
            function show () : void;
            function toggleCls (className : string) : void;
            function translatePoints (x : number, y : number) : void;
            function translatePoints (x : number) : void;
            function translatePoints (x : variant[], y : number) : void;
            function translatePoints (x : variant[]) : void;
            function unmask () : void;
            function up (simpleSelector : string, maxDepth : number) : void;
            function up (simpleSelector : string, maxDepth : string) : void;
            function up (simpleSelector : string, maxDepth : HTMLElement) : void;
            function up (simpleSelector : string, maxDepth : Ext.dom.Element) : void;
            function up (simpleSelector : string) : void;
            function wrap (config : variant, domNode : boolean) : void;
            function wrap (config : variant) : void;
            function wrap (domNode : boolean) : void;
            function wrap () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function fly (element : string, named : string) : void;
            static function fly (element : string) : void;
            static function fly (element : HTMLElement, named : string) : void;
            static function fly (element : HTMLElement) : void;
            static function fromPoint (x : number, y : number) : void;
            static function get (element : string) : void;
            static function get (element : HTMLElement) : void;
            static function get (element : Ext.dom.Element) : void;
            static function getName () : void;
            static function normalize (prop : string) : void;
            static function parseBox (box : number) : void;
            static function parseBox (box : string) : void;
            static function parseStyles (styles : string) : void;
            static function select (selector : string, composite : boolean, root : HTMLElement) : void;
            static function select (selector : string, composite : boolean, root : string) : void;
            static function select (selector : string, composite : boolean) : void;
            static function select (selector : HTMLElement[], composite : boolean, root : HTMLElement) : void;
            static function select (selector : HTMLElement[], composite : boolean, root : string) : void;
            static function select (selector : HTMLElement[], composite : boolean) : void;
            static function serializeForm (form : variant) : void;
            static function unitizeBox (box : number, units : string) : void;
            static function unitizeBox (box : string, units : string) : void;
        }

        class Query extends Ext.Base
        {
            function is (el : string, selector : string) : void;
            function is (el : HTMLElement, selector : string) : void;
            function is (el : variant[], selector : string) : void;
            function select (selector : string, root : HTMLElement) : void;
            function select (selector : string, root : string) : void;
            function select (selector : string) : void;
            function selectNode (selector : string, root : HTMLElement) : void;
            function selectNode (selector : string, root : string) : void;
            function selectNode (selector : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }
    }

    class draw
    {

        class Animator extends Ext.Base
        {
            static function add (animation : variant) : void;
            static function addFrameCallback (callback : function  () : void, scope : variant) : void;
            static function animationTime () : void;
            static function cancel (id : string) : void;
            static function contains (animation : variant) : void;
            static function empty () : void;
            static function remove (animation : variant) : void;
            static function removeFrameCallback (id : string) : void;
            static function schedule (callback : function  () : void, scope : variant) : void;
            static function step (frameTime : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Color extends Ext.Base
        {
            function constructor (red : number, green : number, blue : number, alpha : number);
            function constructor (red : number, green : number, blue : number);
            function createDarker (factor : number) : void;
            function createDarker () : void;
            function createLighter (factor : number) : void;
            function createLighter () : void;
            function getGrayscale () : void;
            function getHSL (target : variant[]) : void;
            function getHSL () : void;
            function setFromString (str : string) : void;
            function setHSL (h : number, s : number, l : number) : void;
            function toHex (color : string) : void;
            function toHex (color : variant[]) : void;
            override function toString () : string;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create (red : Ext.draw.Color, green : number, blue : number, alpha : number) : void;
            static function create (red : Ext.draw.Color, green : number, blue : number) : void;
            static function create (red : Ext.draw.Color, green : number) : void;
            static function create (red : Ext.draw.Color) : void;
            static function create (red : string, green : number, blue : number, alpha : number) : void;
            static function create (red : string, green : number, blue : number) : void;
            static function create (red : string, green : number) : void;
            static function create (red : string) : void;
            static function create (red : number[], green : number, blue : number, alpha : number) : void;
            static function create (red : number[], green : number, blue : number) : void;
            static function create (red : number[], green : number) : void;
            static function create (red : number[]) : void;
            static function create (red : number, green : number, blue : number, alpha : number) : void;
            static function create (red : number, green : number, blue : number) : void;
            static function create (red : number, green : number) : void;
            static function create (red : number) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function fly (red : number, green : number, blue : number, alpha : number) : void;
            static function fly (red : number, green : number, blue : number) : void;
            static function fly (red : number, green : number) : void;
            static function fly (red : number) : void;
            static function fly (red : string, green : number, blue : number, alpha : number) : void;
            static function fly (red : string, green : number, blue : number) : void;
            static function fly (red : string, green : number) : void;
            static function fly (red : string) : void;
            static function fromHSL (h : number, s : number, l : number) : void;
            static function fromString (string : string) : void;
            static function getName () : void;
        }

        class Component extends Ext.Container
        {
            function getBackground () : void;
            function getResizeHandler () : void;
            function getSprites () : void;
            function getSurface (id : string) : void;
            function getSurface () : void;
            function onPlaceWatermark () : void;
            function renderFrame () : void;
            function setBackground (background : variant) : void;
            function setResizeHandler (resizeHandler : function  () : void) : void;
            function setSprites (sprites : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Draw extends Ext.Base
        {
            static function degrees (radian : number) : void;
            static function isBBoxIntersect (bbox1 : variant, bbox2 : variant, padding : number) : void;
            static function isBBoxIntersect (bbox1 : variant, bbox2 : variant) : void;
            static function rad (degrees : number) : void;
            static function reflectFn (a : variant) : void;
            static function smooth (dataX : variant, dataY : variant, value : variant) : void;
            static function spline (points : variant[]) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Group extends Ext.Base
        {
            function add (sprite : Ext.draw.sprite.Sprite) : void;
            function addAll (sprites : variant[]) : void;
            function addAll (sprites : Ext.draw.sprite.Sprite) : void;
            function clear (destroySprite : boolean) : void;
            function clear () : void;
            function each (fn : function  () : void) : void;
            function get (id : string) : void;
            function get (id : number) : void;
            function getAt (index : number) : void;
            function getBBox (isWithTransform : variant) : void;
            function getSurface () : void;
            function hide (o : boolean) : void;
            function remove (sprite : Ext.draw.sprite.Sprite, destroySprite : boolean) : void;
            function remove (sprite : Ext.draw.sprite.Sprite) : void;
            function setAttributes (o : variant) : void;
            function setDirty () : void;
            function setSurface (surface : variant) : void;
            function show (o : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class LimitedCache extends Ext.Base
        {
            function constructor (config : variant);
            function clear () : void;
            function get (id : string, args : variant) : void;
            function getFeeder () : void;
            function getLimit () : void;
            function getScope () : void;
            function setFeeder (feeder : function  () : void) : void;
            function setLimit (limit : number) : void;
            function setScope (scope : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Matrix extends Ext.Base
        {
            var a : number;

            function constructor (xx : number, xy : number, yx : number, yy : number, dx : number, dy : number);
            function append (xx : number, xy : number, yx : number, yy : number, dx : number, dy : number) : void;
            function appendMatrix (matrix : Ext.draw.Matrix) : void;
            function clone () : void;
            function equals (matrix : Ext.draw.Matrix) : void;
            function flipX () : void;
            function flipY () : void;
            function getDX () : void;
            function getDY () : void;
            function getScaleX () : void;
            function getScaleY () : void;
            function getXX () : void;
            function getXY () : void;
            function getYX () : void;
            function getYY () : void;
            function inverse (target : Ext.draw.Matrix) : void;
            function inverse () : void;
            function isIdentity () : void;
            function multiply (matrix : Ext.draw.Matrix) : void;
            function prepend (xx : number, xy : number, yx : number, yy : number, dx : number, dy : number) : void;
            function prependMatrix (matrix : Ext.draw.Matrix) : void;
            function reset () : void;
            function rotate (angle : number, rcx : Nullable.<number>, rcy : Nullable.<number>, prepend : boolean) : void;
            function rotate (angle : number, rcx : Nullable.<number>, rcy : Nullable.<number>) : void;
            function rotateFromVector (x : number, y : number, prepend : boolean) : void;
            function rotateFromVector (x : number, y : number) : void;
            function scale (sx : number, sy : number, scx : number, scy : number, prepend : boolean) : void;
            function scale (sx : number, sy : number, scx : number, scy : number) : void;
            function set (xx : number, xy : number, yx : number, yy : number, dx : number, dy : number) : void;
            function skewX (angle : number) : void;
            function skewY (angle : number) : void;
            function split () : void;
            function toArray () : void;
            function toContext (ctx : variant) : void;
            override function toString () : string;
            function toSvg () : void;
            function toVerticalArray () : void;
            function transformBBox (bbox : variant, radius : number, target : variant) : void;
            function transformBBox (bbox : variant, radius : number) : void;
            function transformBBox (bbox : variant, target : variant) : void;
            function transformBBox (bbox : variant) : void;
            function transformList (list : variant[]) : void;
            function transformPoint (point : variant[]) : void;
            function translate (x : number, y : number, prepend : boolean) : void;
            function translate (x : number, y : number) : void;
            function x (x : number, y : number) : void;
            function y (x : number, y : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create (mat : variant) : void;
            static function createAffineMatrixFromTwoPair (x0 : number, y0 : number, x1 : number, y1 : number, x0p : number, y0p : number, x1p : number, y1p : number) : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function createPanZoomFromTwoPair (x0 : number, y0 : number, x1 : number, y1 : number, x0p : number, y0p : number, x1p : number, y1p : number) : void;
            static function fly (elements : variant[]) : void;
            static function getName () : void;
        }

        class Path extends Ext.Base
        {
            function constructor (pathString : string);
            function arc (x : number, y : number, radius : number, startAngle : number, endAngle : number, anticlockwise : number) : void;
            function arcSvg (rx : number, ry : number, rotation : number, fA : number, fS : number, x2 : number, y2 : number) : void;
            function arcTo (x1 : number, y1 : number, x2 : number, y2 : number, rx : number, ry : number, rotation : number) : void;
            function arcTo (x1 : number, y1 : number, x2 : number, y2 : number, rx : number, ry : number) : void;
            function arcTo (x1 : number, y1 : number, x2 : number, y2 : number, rx : number) : void;
            function arcTo (x1 : number, y1 : number, x2 : number, y2 : number) : void;
            function bezierCurveTo (cx1 : number, cy1 : number, cx2 : number, cy2 : number, x : number, y : number) : void;
            function clear () : void;
            function clone () : void;
            function closePath () : void;
            function ellipse (cx : number, cy : number, radiusX : number, radiusY : number, rotation : number, startAngle : number, endAngle : number, anticlockwise : number) : void;
            function fromStripes (stripes : variant[]) : void;
            function fromSvgString (pathString : string) : void;
            function getDimension (target : variant) : void;
            function getDimension () : void;
            function getDimensionWithTransform (matrix : Ext.draw.Matrix, target : variant) : void;
            function getDimensionWithTransform (matrix : Ext.draw.Matrix) : void;
            function isPointInPath (x : number, y : number) : void;
            function lineTo (x : number, y : number) : void;
            function moveTo (x : number, y : number) : void;
            function quadraticCurveTo (cx : number, cy : number, x : number, y : number) : void;
            function rect (x : number, y : number, width : number, height : number) : void;
            override function toString () : string;
            function toStripes (target : variant[]) : void;
            function toStripes () : void;
            function transform (matrix : Ext.draw.Matrix) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class SegmentTree extends Ext.Base
        {
            function constructor (config : variant);
            function getAggregation (min : number, max : number, estStep : number) : void;
            function getStrategy () : void;
            function setData (dataX : number, dataOpen : number, dataHigh : number, dataLow : number, dataClose : number) : void;
            function setStrategy (strategy : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }


        class Surface extends Ext.Component
        {
            var devicePixelRatio : variant;

            function add () : void;
            function clear () : void;
            function getBackground () : void;
            function getDirty () : void;
            function getGroups () : void;
            function getItems () : void;
            function getRegion () : void;
            function onAdd (sprite : Ext.draw.sprite.Sprite) : void;
            function remove (sprite : Ext.draw.sprite.Sprite, destroySprite : boolean) : void;
            function removeAll () : void;
            function renderFrame () : void;
            function repaint () : void;
            function resetTransform () : void;
            function roundPixel (num : number) : void;
            function setBackground (background : variant) : void;
            function setGroups (groups : variant[]) : void;
            function setItems (items : Ext.draw.Group) : void;
            function setRegion (region : variant[]) : void;
            function waitFor (surface : Ext.draw.Surface) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
            static function stableSort (list : variant[]) : void;
        }

        class TextMeasurer extends Ext.Base
        {
            static function measureText (text : string, font : string) : void;
            static function measureTextSingleLine (text : string, font : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class TimingFunctions extends Ext.Base
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class engine
        {

            class Canvas extends Ext.draw.Surface
            {
                function getHighPrecision () : void;
                function setHighPrecision (highPrecision : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Svg extends Ext.draw.Surface
            {
                function createSvgNode (type : string) : void;
                function getHighPrecision () : void;
                function setHighPrecision (highPrecision : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class SvgContext extends Ext.Base
            {
                function constructor (SvgSurface : variant);
                function arc (x : number, y : number, radius : number, startAngle : number, endAngle : number, anticlockwise : number) : void;
                function arcSvg (r1 : number, r2 : number, rotation : number, large : number, swipe : number, x2 : number, y2 : number) : void;
                function arcTo (x1 : number, y1 : number, x2 : number, y2 : number, radiusX : number, radiusY : number, rotation : number) : void;
                function beginPath () : void;
                function bezierCurveTo (x1 : number, y1 : number, x2 : number, y2 : number, x3 : number, y3 : number) : void;
                function clear () : void;
                function closePath () : void;
                function createLinearGradient (x0 : number, y0 : number, x1 : number, y1 : number) : void;
                function createRadialGradient (x0 : number, y0 : number, r0 : number, x1 : number, y1 : number, r1 : number) : void;
                function drawImage (image : HTMLElement, sx : number, sy : number, sw : number, sh : number, dx : number, dy : number, dw : number, dh : number) : void;
                function ellipse (x : number, y : number, radiusX : number, radiusY : number, rotation : number, startAngle : number, endAngle : number, anticlockwise : number) : void;
                function fill () : void;
                function fillRect (x : number, y : number, width : number, height : number) : void;
                function fillStroke (attr : variant, transformFillStroke : boolean) : void;
                function fillStroke (attr : variant) : void;
                function fillText (text : string, x : number, y : number) : void;
                function lineTo (x : number, y : number) : void;
                function moveTo (x : number, y : number) : void;
                function rect (x : number, y : number, width : number, height : number) : void;
                function restore () : void;
                function save () : void;
                function setTransform (xx : number, yx : number, xy : number, yy : number, dx : number, dy : number) : void;
                function stroke () : void;
                function strokeRect (x : number, y : number, width : number, height : number) : void;
                function strokeText (text : string, x : number, y : number) : void;
                function transform (xx : number, yx : number, xy : number, yy : number, dx : number, dy : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;

                class Gradient extends Ext.Base
                {
                    function constructor (ctx : variant, surface : variant, element : variant, compression : variant);
                    function addColorStop (offset : number, color : string) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }
            }
        }

        class gradient
        {

            class Gradient extends Ext.Base
            {
                function constructor (config : variant);
                function generateGradient (ctx : Ext.draw.engine.SvgContext, bbox : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Linear extends Ext.draw.gradient.Gradient
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Radial extends Ext.draw.gradient.Gradient
            {
                function getEnd () : void;
                function getStart () : void;
                function setEnd (end : variant) : void;
                function setStart (start : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }
        }

        class modifier
        {

            class Animation extends Ext.draw.modifier.Modifier
            {
                function clearDurationOn (attrs : variant) : void;
                function clearEasingOn (attrs : variant) : void;
                function getCustomDuration () : void;
                function getCustomEasings () : void;
                function getDuration () : void;
                function getEasing () : void;
                function setCustomDuration (customDuration : variant) : void;
                function setCustomEasings (customEasings : variant) : void;
                function setDuration (duration : number) : void;
                function setDurationOn (attrs : variant, duration : string) : void;
                function setEasing (easing : function  () : void) : void;
                function setEasingOn (attrs : variant, easing : string) : void;
                function stop () : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Highlight extends Ext.draw.modifier.Modifier
            {
                function filterChanges (attr : variant, changes : variant) : void;
                function getEnabled () : void;
                function getHighlightStyle () : void;
                function setEnabled (enabled : boolean) : void;
                function setHighlightStyle (highlightStyle : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Modifier extends Ext.Base
            {
                function constructor (config : variant);
                function getNext () : void;
                function getPrevious () : void;
                function getSprite () : void;
                function popUp (attributes : variant, changes : variant) : void;
                function prepareAttributes (attr : variant) : void;
                function pushDown (attr : variant, changes : variant) : void;
                function setNext (next : Ext.draw.modifier.Modifier) : void;
                function setPrevious (previous : Ext.draw.modifier.Modifier) : void;
                function setSprite (sprite : Ext.draw.sprite.Sprite) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Target extends Ext.draw.modifier.Modifier
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }
        }

        class sprite
        {


            class Arc extends Ext.draw.sprite.Circle
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }



            class Circle extends Ext.draw.sprite.Path
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Composite extends Ext.draw.sprite.Sprite
            {
                function add (sprite : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Ellipse extends Ext.draw.sprite.Path
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class EllipticalArc extends Ext.draw.sprite.Ellipse
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Image extends Ext.draw.sprite.Rect
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Instancing extends Ext.draw.sprite.Sprite
            {
                function createInstance (config : variant, data : variant, bypassNormalization : boolean, avoidCopy : boolean) : void;
                function createInstance (config : variant, data : variant, bypassNormalization : boolean) : void;
                function createInstance (config : variant, data : variant) : void;
                function createInstance (config : variant, bypassNormalization : boolean, avoidCopy : boolean) : void;
                function createInstance (config : variant, bypassNormalization : boolean) : void;
                function createInstance (config : variant) : void;
                function getBBoxFor (index : number, isWithoutTransform : boolean) : void;
                function getBBoxFor (index : number) : void;
                function getTemplate () : void;
                function setAttributesFor (index : number, changes : variant, bypassNormalization : boolean) : void;
                function setAttributesFor (index : number, changes : variant) : void;
                function setTemplate (template : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Path extends Ext.draw.sprite.Sprite
            {
                function updatePath (path : Ext.draw.Path, attr : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Rect extends Ext.draw.sprite.Path
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Sector extends Ext.draw.sprite.Path
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Sprite extends Ext.Base
            {
                var attr : variant;

                function getBBox (isWithoutTransform : boolean) : void;
                function getBBox () : void;
                function getBBoxCenter (isWithoutTransform : boolean) : void;
                function getParent () : void;
                function hide () : void;
                function preRender () : void;
                function render (surface : Ext.draw.Surface, ctx : variant, region : variant[]) : void;
                function setAttributes (changes : variant, bypassNormalization : boolean, avoidCopy : boolean) : void;
                function setAttributes (changes : variant, bypassNormalization : boolean) : void;
                function setAttributes (changes : variant) : void;
                function setParent (parent : variant) : void;
                function show () : void;
                function updatePlainBBox (plain : variant) : void;
                function updateTransformedBBox (transform : variant, plain : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Text extends Ext.draw.sprite.Sprite
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }
        }
    }

    class env
    {

        class Browser extends Ext.Base
        {
            var engineName : string;
            var engineVersion : Ext.Version;
            var isSecure : boolean;
            var isStrict : boolean;
            var name : string;
            var userAgent : string;
            var version : Ext.Version;

            function constructor (userAgent : variant);
            function is (value : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Feature extends Ext.Base
        {
            function constructor ();
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class OS extends Ext.Base
        {
            var name : string;
            var version : Ext.Version;

            function constructor (userAgent : variant, platform : variant, browserScope : variant);
            function is (value : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }
    }

    class event
    {



        class Dom
        {
            var distance : number;
            var pageX : number;
            var pageY : number;
            var target : HTMLElement;

            function constructor (event : variant);
            function getTarget (selector : string, maxDepth : number, returnEl : boolean) : void;
            function getTarget (selector : string, maxDepth : number) : void;
            function getTarget (selector : string, maxDepth : variant, returnEl : boolean) : void;
            function getTarget (selector : string, maxDepth : variant) : void;
            function getTarget (selector : string, returnEl : boolean) : void;
            function getTarget (selector : string) : void;
            function getTarget (maxDepth : number, returnEl : boolean) : void;
            function getTarget (maxDepth : number) : void;
            function getTarget (maxDepth : variant, returnEl : boolean) : void;
            function getTarget (maxDepth : variant) : void;
            function getTarget (returnEl : boolean) : void;
            function getTarget () : void;
            function getTime () : void;
            function preventDefault () : void;
        }

        class Event extends Ext.Base
        {
            var angle : number;
            var direction : number;
            var duration : number;
            var rotation : number;
            var scale : number;

            function stopEvent () : void;
            function stopPropagation () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }



        class publisher
        {




            class Dom extends Ext.event.publisher.Publisher
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }



            class Publisher extends Ext.Base
            {
                function constructor ();
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

        }

        class recognizer
        {






            class MultiTouch extends Ext.event.recognizer.Touch
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }


            class Recognizer extends Ext.Base
            {
                function constructor (config : variant);
                function getCallbackScope () : void;
                function getOnFailed () : void;
                function getOnRecognized () : void;
                function setCallbackScope (callbackScope : variant) : void;
                function setOnFailed (onFailed : variant) : void;
                function setOnRecognized (onRecognized : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }


            class SingleTouch extends Ext.event.recognizer.Touch
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Swipe extends Ext.event.recognizer.SingleTouch
            {
                function getMaxDuration () : void;
                function getMaxOffset () : void;
                function getMinDistance () : void;
                function setMaxDuration (maxDuration : number) : void;
                function setMaxOffset (maxOffset : number) : void;
                function setMinDistance (minDistance : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }


            class Touch extends Ext.event.recognizer.Recognizer
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

        }
    }

    class feature extends Ext.env.Feature
    {
        static function has (value : string) : void;
        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class field
    {

        class Checkbox extends Ext.field.Field
        {
            function check () : void;
            function doChecked () : void;
            function doUnChecked () : void;
            function getChecked () : void;
            function getGroupValues () : void;
            function getSubmitValue () : void;
            function isChecked () : void;
            function resetGroupValues () : void;
            function setGroupValues (values : variant[]) : void;
            function uncheck () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class DatePicker extends Ext.field.Select
        {
            function getDateFormat () : void;
            function getDestroyPickerOnHide () : void;
            function getFormattedValue (format : string) : void;
            function setDateFormat (dateFormat : string) : void;
            function setDestroyPickerOnHide (destroyPickerOnHide : boolean) : void;
            function setPicker (picker : variant) : void;
            function setPicker (picker : Ext.picker.Date) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Email extends Ext.field.Text
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Field extends Ext.Decorator
        {
            var isField : boolean;
            var originalValue : variant;

            function getClearIcon () : void;
            function getInputCls () : void;
            function getLabel () : void;
            function getLabelAlign () : void;
            function getLabelCls () : void;
            function getLabelWidth () : void;
            function getLabelWrap () : void;
            function getRequired () : void;
            function getRequiredCls () : void;
            function getTabIndex () : void;
            function getValue () : void;
            function isDirty () : void;
            function reset () : void;
            function resetOriginalValue () : void;
            function setClearIcon (clearIcon : boolean) : void;
            function setInputCls (inputCls : string) : void;
            function setLabel (label : string) : void;
            function setLabelAlign (labelAlign : string) : void;
            function setLabelCls (labelCls : string) : void;
            function setLabelWidth (labelWidth : number) : void;
            function setLabelWidth (labelWidth : string) : void;
            function setLabelWrap (labelWrap : boolean) : void;
            function setName (name : string) : void;
            function setRequired (required : boolean) : void;
            function setRequiredCls (requiredCls : string) : void;
            function setTabIndex (tabIndex : number) : void;
            function setValue (value : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
        }

        class File extends Ext.field.Field
        {
            function getAccept () : void;
            function getCapture () : void;
            function getMultiple () : void;
            function setAccept (accept : string) : void;
            function setCapture (capture : string) : void;
            function setMultiple (multiple : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }


        class Hidden extends Ext.field.Text
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Input extends Ext.Component
        {
            var isFocused : boolean;

            function blur () : void;
            function focus () : void;
            function getAutoCapitalize () : void;
            function getAutoComplete () : void;
            function getAutoCorrect () : void;
            function getChecked () : void;
            function getFastFocus () : void;
            function getFocusCls () : void;
            function getMaxLength () : void;
            function getMaxRows () : void;
            function getMaxValue () : void;
            function getMinValue () : void;
            function getPattern () : void;
            function getPlaceHolder () : void;
            function getReadOnly () : void;
            function getStartValue () : void;
            function getStepValue () : void;
            function getTabIndex () : void;
            function getType () : void;
            function getValue () : void;
            function isDirty () : void;
            function reset () : void;
            function select () : void;
            function setAutoCapitalize (autoCapitalize : boolean) : void;
            function setAutoComplete (autoComplete : boolean) : void;
            function setAutoCorrect (autoCorrect : boolean) : void;
            function setFastFocus (fastFocus : boolean) : void;
            function setFocusCls (focusCls : string) : void;
            function setMaxLength (maxLength : number) : void;
            function setMaxRows (maxRows : number) : void;
            function setMaxValue (maxValue : number) : void;
            function setMinValue (minValue : number) : void;
            function setName (name : string) : void;
            function setPattern (pattern : string) : void;
            function setPlaceHolder (placeHolder : string) : void;
            function setReadOnly (readOnly : boolean) : void;
            function setStartValue (startValue : variant) : void;
            function setStepValue (stepValue : number) : void;
            function setTabIndex (tabIndex : number) : void;
            function setType (type : string) : void;
            function updateUseMask (newUseMask : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
        }

        class Number extends Ext.field.Text
        {
            function getMaxValue () : void;
            function getMinValue () : void;
            function getStepValue () : void;
            function setMaxValue (maxValue : number) : void;
            function setMinValue (minValue : number) : void;
            function setStepValue (stepValue : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Password extends Ext.field.Text
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Radio extends Ext.field.Checkbox
        {
            function getGroupValue () : void;
            function setGroupValue (value : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Search extends Ext.field.Text
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Select extends Ext.field.Text
        {
            function getAutoSelect () : void;
            function getDefaultPhonePickerConfig () : void;
            function getDefaultTabletPickerConfig () : void;
            function getDisplayField () : void;
            function getHiddenName () : void;
            function getOptions () : void;
            function getStore () : void;
            function getUsePicker () : void;
            function getValueField () : void;
            function onStoreDataChanged (store : variant) : void;
            function setAutoSelect (autoSelect : boolean) : void;
            function setDefaultPhonePickerConfig (defaultPhonePickerConfig : variant) : void;
            function setDefaultTabletPickerConfig (defaultTabletPickerConfig : variant) : void;
            function setDisplayField (displayField : string) : void;
            function setDisplayField (displayField : number) : void;
            function setHiddenName (hiddenName : string) : void;
            function setOptions (options : variant[]) : void;
            function setStore (store : Ext.data.Store) : void;
            function setStore (store : variant) : void;
            function setStore (store : string) : void;
            function setUsePicker (usePicker : string) : void;
            function setUsePicker (usePicker : boolean) : void;
            function setValueField (valueField : string) : void;
            function setValueField (valueField : number) : void;
            function showPicker () : void;
            function updateOptions (newOptions : variant[]) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Slider extends Ext.field.Field
        {
            function getIncrement () : void;
            function getMaxValue () : void;
            function getMinValue () : void;
            function getReadOnly () : void;
            function getValues () : void;
            function setIncrement (increment : number) : void;
            function setMaxValue (maxValue : number) : void;
            function setMinValue (minValue : number) : void;
            function setReadOnly (readOnly : boolean) : void;
            function setValues (value : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Spinner extends Ext.field.Number
        {
            function getAccelerateOnTapHold () : void;
            function getCycle () : void;
            function getDefaultValue () : void;
            function getGroupButtons () : void;
            function setAccelerateOnTapHold (accelerateOnTapHold : boolean) : void;
            function setCycle (cycle : boolean) : void;
            function setDefaultValue (defaultValue : number) : void;
            function setGroupButtons (groupButtons : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Text extends Ext.field.Field
        {
            var startValue : variant;

            function blur () : void;
            function focus () : void;
            function getAutoCapitalize () : void;
            function getAutoComplete () : void;
            function getAutoCorrect () : void;
            function getMaxLength () : void;
            function getPlaceHolder () : void;
            function getReadOnly () : void;
            function select () : void;
            function setAutoCapitalize (autoCapitalize : boolean) : void;
            function setAutoComplete (autoComplete : boolean) : void;
            function setAutoCorrect (autoCorrect : boolean) : void;
            function setMaxLength (maxLength : number) : void;
            function setPlaceHolder (placeHolder : string) : void;
            function setReadOnly (readOnly : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class TextArea extends Ext.field.Text
        {
            function getMaxRows () : void;
            function setMaxRows (maxRows : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }


        class Toggle extends Ext.field.Slider
        {
            function getActiveLabel () : void;
            function getInactiveLabel () : void;
            function getMaxValueCls () : void;
            function getMinValueCls () : void;
            function setActiveLabel (activeLabel : string) : void;
            function setInactiveLabel (inactiveLabel : string) : void;
            function setMaxValueCls (maxValueCls : string) : void;
            function setMinValueCls (minValueCls : string) : void;
            function toggle () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Url extends Ext.field.Text
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }
    }

    class form
    {

        class FieldSet extends Ext.Container
        {
            function setInstructions (instructions : string) : void;
            function setTitle (title : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Panel extends Ext.Panel
        {
            function getApi () : void;
            function getBaseParams () : void;
            function getEnctype () : void;
            function getMethod () : void;
            function getMultipartDetection () : void;
            function getParamOrder () : void;
            function getParamsAsHash () : void;
            function getStandardSubmit () : void;
            function getSubmitOnAction () : void;
            function getTimeout () : void;
            function getTrackResetOnLoad () : void;
            function getUrl () : void;
            function getValues (enabled : boolean, all : boolean) : void;
            function getValues (enabled : boolean) : void;
            function getValues () : void;
            function load (options : variant) : void;
            function reset () : void;
            function setApi (api : variant) : void;
            function setBaseParams (baseParams : variant) : void;
            function setEnctype (enctype : variant) : void;
            function setMethod (method : string) : void;
            function setMultipartDetection (multipartDetection : boolean) : void;
            function setParamOrder (paramOrder : string) : void;
            function setParamOrder (paramOrder : string[]) : void;
            function setParamsAsHash (paramsAsHash : boolean) : void;
            function setStandardSubmit (standardSubmit : boolean) : void;
            function setSubmitOnAction (submitOnAction : variant) : void;
            function setTimeout (timeout : number) : void;
            function setTrackResetOnLoad (trackResetOnLoad : boolean) : void;
            function setUrl (url : string) : void;
            function setValues (values : variant) : void;
            function submit (options : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }
    }

    class fx
    {

        class Animation extends Ext.Base
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }




        class animation
        {

            class Abstract extends Ext.Evented
            {
                function getAfter () : void;
                function getBefore () : void;
                function getDelay () : void;
                function getDirection () : void;
                function getDuration () : void;
                function getEasing () : void;
                function getElement () : void;
                function getIteration () : void;
                function getOnBeforeEnd () : void;
                function getOnBeforeStart () : void;
                function getOnEnd () : void;
                function getPreserveEndState () : void;
                function getReplacePrevious () : void;
                function getReverse () : void;
                function getScope () : void;
                function setAfter (after : variant) : void;
                function setBefore (before : variant) : void;
                function setDelay (delay : number) : void;
                function setDirection (direction : string) : void;
                function setDuration (duration : number) : void;
                function setEasing (easing : string) : void;
                function setElement (element : variant) : void;
                function setIteration (iteration : number) : void;
                function setName (name : string) : void;
                function setOnBeforeEnd (onBeforeEnd : variant) : void;
                function setOnBeforeStart (onBeforeStart : variant) : void;
                function setOnEnd (onEnd : variant) : void;
                function setPreserveEndState (preserveEndState : boolean) : void;
                function setReplacePrevious (replacePrevious : boolean) : void;
                function setReverse (reverse : variant) : void;
                function setScope (scope : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
            }


            class Fade extends Ext.fx.animation.Abstract
            {
                function getOut () : void;
                function setOut (out : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }



            class Pop extends Ext.fx.animation.Abstract
            {
                function getOut () : void;
                function setOut (out : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }


            class Slide extends Ext.fx.animation.Abstract
            {
                function getIsElementBoxFit () : void;
                function getOffset () : void;
                function getOut () : void;
                function getUseCssTransform () : void;
                function setContainerBox (containerBox : string) : void;
                function setElementBox (elementBox : string) : void;
                function setIsElementBoxFit (isElementBoxFit : boolean) : void;
                function setOffset (offset : number) : void;
                function setOut (out : boolean) : void;
                function setUseCssTransform (useCssTransform : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }


            class Wipe extends Ext.fx.Animation
            {
                function getDirection () : void;
                function getEasing () : void;
                function getOut () : void;
                function setDirection (direction : string) : void;
                function setEasing (easing : string) : void;
                function setOut (out : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

        }

        class easing
        {

            class Abstract extends Ext.Base
            {
                function constructor (config : variant);
                function getStartTime () : void;
                function getStartValue () : void;
                function setStartTime (startTime : number) : void;
                function setStartValue (startValue : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }





            class Linear extends Ext.fx.easing.Abstract
            {
                function getDuration () : void;
                function getEndValue () : void;
                function setDuration (duration : number) : void;
                function setEndValue (endValue : number) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

        }

        class layout
        {

            class Card extends Ext.Base
            {
                function constructor (config : variant);
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class card
            {

                class Abstract extends Ext.Evented
                {
                    function getDirection () : void;
                    function getDuration () : void;
                    function getLayout () : void;
                    function getReverse () : void;
                    function setDirection (direction : string) : void;
                    function setDuration (duration : variant) : void;
                    function setLayout (layout : variant) : void;
                    function setReverse (reverse : variant) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }







                class Scroll extends Ext.fx.layout.card.Abstract
                {
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }




                class Style extends Ext.fx.layout.card.Abstract
                {
                    function getInAnimation () : void;
                    function getOutAnimation () : void;
                    function setInAnimation (inAnimation : variant) : void;
                    function setOutAnimation (outAnimation : variant) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }
            }
        }

        class runner
        {

            class Css extends Ext.Evented
            {
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }


        }
    }


    class layout
    {

        class Abstract extends Ext.Base
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Box extends Ext.layout.Default
        {
            function getAlign () : void;
            function getOrient () : void;
            function getPack () : void;
            function setAlign (align : string) : void;
            function setOrient (orient : string) : void;
            function setPack (pack : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Card extends Ext.layout.Default
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Default extends Ext.layout.Abstract
        {
            function getAnimation () : void;
            function setAnimation (animation : Ext.fx.layout.Card) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Fit extends Ext.layout.Default
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class FlexBox extends Ext.layout.Box
        {
            function setItemFlex (item : Ext.Component, flex : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Float extends Ext.layout.Default
        {
            function getDirection () : void;
            function setDirection (direction : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class HBox extends Ext.layout.FlexBox
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class VBox extends Ext.layout.FlexBox
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class wrapper
        {

            class BoxDock extends Ext.Base
            {
                function constructor (config : variant);
                function getBodyElement () : void;
                function getContainer () : void;
                function getDirection () : void;
                function getElement () : void;
                function getInnerWrapper () : void;
                function getSizeState () : void;
                function setBodyElement (bodyElement : variant) : void;
                function setContainer (container : variant) : void;
                function setDirection (direction : string) : void;
                function setElement (element : variant) : void;
                function setInnerWrapper (innerWrapper : variant) : void;
                function setSizeState (sizeState : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Dock extends Ext.Base
            {
                function constructor (config : variant);
                function getBodyElement () : void;
                function getContainer () : void;
                function getDirection () : void;
                function getElement () : void;
                function getInnerWrapper () : void;
                function getSizeState () : void;
                function setBodyElement (bodyElement : variant) : void;
                function setContainer (container : variant) : void;
                function setDirection (direction : string) : void;
                function setElement (element : variant) : void;
                function setInnerWrapper (innerWrapper : variant) : void;
                function setSizeState (sizeState : boolean) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Inner extends Ext.Base
            {
                function constructor (config : variant);
                function getContainer () : void;
                function getSizeState () : void;
                function setContainer (container : variant) : void;
                function setSizeState (sizeState : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }
        }
    }

    class mixin
    {

        class Bindable extends Ext.mixin.Mixin
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }



        class Mixin extends Ext.Base
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Observable extends Ext.mixin.Mixin
        {
            function addAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function addAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
            function addAfterListener (eventName : string, fn : function  () : void) : void;
            function addAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            function addAfterListener (eventName : string, fn : string, scope : variant) : void;
            function addAfterListener (eventName : string, fn : string) : void;
            function addAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function addAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            function addAfterListener (eventName : string[], fn : function  () : void) : void;
            function addAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function addAfterListener (eventName : string[], fn : string, scope : variant) : void;
            function addAfterListener (eventName : string[], fn : string) : void;
            function addAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function addAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            function addAfterListener (eventName : variant, fn : function  () : void) : void;
            function addAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function addAfterListener (eventName : variant, fn : string, scope : variant) : void;
            function addAfterListener (eventName : variant, fn : string) : void;
            function addBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function addBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            function addBeforeListener (eventName : string, fn : function  () : void) : void;
            function addBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            function addBeforeListener (eventName : string, fn : string, scope : variant) : void;
            function addBeforeListener (eventName : string, fn : string) : void;
            function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function addBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            function addBeforeListener (eventName : string[], fn : function  () : void) : void;
            function addBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function addBeforeListener (eventName : string[], fn : string, scope : variant) : void;
            function addBeforeListener (eventName : string[], fn : string) : void;
            function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function addBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            function addBeforeListener (eventName : variant, fn : function  () : void) : void;
            function addBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function addBeforeListener (eventName : variant, fn : string, scope : variant) : void;
            function addBeforeListener (eventName : variant, fn : string) : void;
            function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function addListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            function addListener (eventName : string, fn : function  () : void, scope : variant) : void;
            function addListener (eventName : string, fn : function  () : void, order : string) : void;
            function addListener (eventName : string, fn : function  () : void) : void;
            function addListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            function addListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            function addListener (eventName : string, fn : string, scope : variant, order : string) : void;
            function addListener (eventName : string, fn : string, scope : variant) : void;
            function addListener (eventName : string, fn : string, order : string) : void;
            function addListener (eventName : string, fn : string) : void;
            function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function addListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function addListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            function addListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            function addListener (eventName : string[], fn : function  () : void, order : string) : void;
            function addListener (eventName : string[], fn : function  () : void) : void;
            function addListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            function addListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function addListener (eventName : string[], fn : string, scope : variant, order : string) : void;
            function addListener (eventName : string[], fn : string, scope : variant) : void;
            function addListener (eventName : string[], fn : string, order : string) : void;
            function addListener (eventName : string[], fn : string) : void;
            function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function addListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            function addListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            function addListener (eventName : variant, fn : function  () : void, order : string) : void;
            function addListener (eventName : variant, fn : function  () : void) : void;
            function addListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            function addListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function addListener (eventName : variant, fn : string, scope : variant, order : string) : void;
            function addListener (eventName : variant, fn : string, scope : variant) : void;
            function addListener (eventName : variant, fn : string, order : string) : void;
            function addListener (eventName : variant, fn : string) : void;
            function clearListeners () : void;
            function enableBubble (events : string) : void;
            function enableBubble (events : string[]) : void;
            function fireAction (eventName : string, args : variant[], fn : function  () : void, scope : variant) : void;
            function fireEvent (eventName : string, args : variant) : void;
            function getBubbleEvents () : void;
            function getListeners () : void;
            function hasListener (eventName : string) : void;
            function on (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function on (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function on (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            function on (eventName : string, fn : function  () : void, scope : variant) : void;
            function on (eventName : string, fn : function  () : void, order : string) : void;
            function on (eventName : string, fn : function  () : void) : void;
            function on (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            function on (eventName : string, fn : string, scope : variant, options : variant) : void;
            function on (eventName : string, fn : string, scope : variant, order : string) : void;
            function on (eventName : string, fn : string, scope : variant) : void;
            function on (eventName : string, fn : string, order : string) : void;
            function on (eventName : string, fn : string) : void;
            function on (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function on (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function on (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            function on (eventName : string[], fn : function  () : void, scope : variant) : void;
            function on (eventName : string[], fn : function  () : void, order : string) : void;
            function on (eventName : string[], fn : function  () : void) : void;
            function on (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            function on (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function on (eventName : string[], fn : string, scope : variant, order : string) : void;
            function on (eventName : string[], fn : string, scope : variant) : void;
            function on (eventName : string[], fn : string, order : string) : void;
            function on (eventName : string[], fn : string) : void;
            function on (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function on (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function on (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            function on (eventName : variant, fn : function  () : void, scope : variant) : void;
            function on (eventName : variant, fn : function  () : void, order : string) : void;
            function on (eventName : variant, fn : function  () : void) : void;
            function on (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            function on (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function on (eventName : variant, fn : string, scope : variant, order : string) : void;
            function on (eventName : variant, fn : string, scope : variant) : void;
            function on (eventName : variant, fn : string, order : string) : void;
            function on (eventName : variant, fn : string) : void;
            function onAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function onAfter (eventName : string, fn : function  () : void, scope : variant) : void;
            function onAfter (eventName : string, fn : function  () : void) : void;
            function onAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
            function onAfter (eventName : string, fn : string, scope : variant) : void;
            function onAfter (eventName : string, fn : string) : void;
            function onAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function onAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
            function onAfter (eventName : string[], fn : function  () : void) : void;
            function onAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function onAfter (eventName : string[], fn : string, scope : variant) : void;
            function onAfter (eventName : string[], fn : string) : void;
            function onAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function onAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
            function onAfter (eventName : variant, fn : function  () : void) : void;
            function onAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function onAfter (eventName : variant, fn : string, scope : variant) : void;
            function onAfter (eventName : variant, fn : string) : void;
            function onBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function onBefore (eventName : string, fn : function  () : void, scope : variant) : void;
            function onBefore (eventName : string, fn : function  () : void) : void;
            function onBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
            function onBefore (eventName : string, fn : string, scope : variant) : void;
            function onBefore (eventName : string, fn : string) : void;
            function onBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function onBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
            function onBefore (eventName : string[], fn : function  () : void) : void;
            function onBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function onBefore (eventName : string[], fn : string, scope : variant) : void;
            function onBefore (eventName : string[], fn : string) : void;
            function onBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function onBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
            function onBefore (eventName : variant, fn : function  () : void) : void;
            function onBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function onBefore (eventName : variant, fn : string, scope : variant) : void;
            function onBefore (eventName : variant, fn : string) : void;
            function relayEvents (object : variant, events : string) : void;
            function relayEvents (object : variant, events : variant[]) : void;
            function relayEvents (object : variant, events : variant) : void;
            function removeAfterListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function removeAfterListener (eventName : string, fn : function  () : void, scope : variant) : void;
            function removeAfterListener (eventName : string, fn : function  () : void) : void;
            function removeAfterListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            function removeAfterListener (eventName : string, fn : string, scope : variant) : void;
            function removeAfterListener (eventName : string, fn : string) : void;
            function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function removeAfterListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            function removeAfterListener (eventName : string[], fn : function  () : void) : void;
            function removeAfterListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function removeAfterListener (eventName : string[], fn : string, scope : variant) : void;
            function removeAfterListener (eventName : string[], fn : string) : void;
            function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function removeAfterListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            function removeAfterListener (eventName : variant, fn : function  () : void) : void;
            function removeAfterListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function removeAfterListener (eventName : variant, fn : string, scope : variant) : void;
            function removeAfterListener (eventName : variant, fn : string) : void;
            function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function removeBeforeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            function removeBeforeListener (eventName : string, fn : function  () : void) : void;
            function removeBeforeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            function removeBeforeListener (eventName : string, fn : string, scope : variant) : void;
            function removeBeforeListener (eventName : string, fn : string) : void;
            function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function removeBeforeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            function removeBeforeListener (eventName : string[], fn : function  () : void) : void;
            function removeBeforeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function removeBeforeListener (eventName : string[], fn : string, scope : variant) : void;
            function removeBeforeListener (eventName : string[], fn : string) : void;
            function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function removeBeforeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            function removeBeforeListener (eventName : variant, fn : function  () : void) : void;
            function removeBeforeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function removeBeforeListener (eventName : variant, fn : string, scope : variant) : void;
            function removeBeforeListener (eventName : variant, fn : string) : void;
            function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function removeListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function removeListener (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            function removeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            function removeListener (eventName : string, fn : function  () : void, order : string) : void;
            function removeListener (eventName : string, fn : function  () : void) : void;
            function removeListener (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            function removeListener (eventName : string, fn : string, scope : variant, options : variant) : void;
            function removeListener (eventName : string, fn : string, scope : variant, order : string) : void;
            function removeListener (eventName : string, fn : string, scope : variant) : void;
            function removeListener (eventName : string, fn : string, order : string) : void;
            function removeListener (eventName : string, fn : string) : void;
            function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function removeListener (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function removeListener (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            function removeListener (eventName : string[], fn : function  () : void, scope : variant) : void;
            function removeListener (eventName : string[], fn : function  () : void, order : string) : void;
            function removeListener (eventName : string[], fn : function  () : void) : void;
            function removeListener (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            function removeListener (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function removeListener (eventName : string[], fn : string, scope : variant, order : string) : void;
            function removeListener (eventName : string[], fn : string, scope : variant) : void;
            function removeListener (eventName : string[], fn : string, order : string) : void;
            function removeListener (eventName : string[], fn : string) : void;
            function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function removeListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function removeListener (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            function removeListener (eventName : variant, fn : function  () : void, scope : variant) : void;
            function removeListener (eventName : variant, fn : function  () : void, order : string) : void;
            function removeListener (eventName : variant, fn : function  () : void) : void;
            function removeListener (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            function removeListener (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function removeListener (eventName : variant, fn : string, scope : variant, order : string) : void;
            function removeListener (eventName : variant, fn : string, scope : variant) : void;
            function removeListener (eventName : variant, fn : string, order : string) : void;
            function removeListener (eventName : variant, fn : string) : void;
            function resumeEvents (discardQueuedEvents : boolean) : void;
            function setBubbleEvents (bubbleEvents : string) : void;
            function setBubbleEvents (bubbleEvents : string[]) : void;
            function setListeners (listeners : variant) : void;
            function suspendEvents () : void;
            function un (eventName : string, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function un (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function un (eventName : string, fn : function  () : void, scope : variant, order : string) : void;
            function un (eventName : string, fn : function  () : void, scope : variant) : void;
            function un (eventName : string, fn : function  () : void, order : string) : void;
            function un (eventName : string, fn : function  () : void) : void;
            function un (eventName : string, fn : string, scope : variant, options : variant, order : string) : void;
            function un (eventName : string, fn : string, scope : variant, options : variant) : void;
            function un (eventName : string, fn : string, scope : variant, order : string) : void;
            function un (eventName : string, fn : string, scope : variant) : void;
            function un (eventName : string, fn : string, order : string) : void;
            function un (eventName : string, fn : string) : void;
            function un (eventName : string[], fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function un (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function un (eventName : string[], fn : function  () : void, scope : variant, order : string) : void;
            function un (eventName : string[], fn : function  () : void, scope : variant) : void;
            function un (eventName : string[], fn : function  () : void, order : string) : void;
            function un (eventName : string[], fn : function  () : void) : void;
            function un (eventName : string[], fn : string, scope : variant, options : variant, order : string) : void;
            function un (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function un (eventName : string[], fn : string, scope : variant, order : string) : void;
            function un (eventName : string[], fn : string, scope : variant) : void;
            function un (eventName : string[], fn : string, order : string) : void;
            function un (eventName : string[], fn : string) : void;
            function un (eventName : variant, fn : function  () : void, scope : variant, options : variant, order : string) : void;
            function un (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function un (eventName : variant, fn : function  () : void, scope : variant, order : string) : void;
            function un (eventName : variant, fn : function  () : void, scope : variant) : void;
            function un (eventName : variant, fn : function  () : void, order : string) : void;
            function un (eventName : variant, fn : function  () : void) : void;
            function un (eventName : variant, fn : string, scope : variant, options : variant, order : string) : void;
            function un (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function un (eventName : variant, fn : string, scope : variant, order : string) : void;
            function un (eventName : variant, fn : string, scope : variant) : void;
            function un (eventName : variant, fn : string, order : string) : void;
            function un (eventName : variant, fn : string) : void;
            function unAfter (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function unAfter (eventName : string, fn : function  () : void, scope : variant) : void;
            function unAfter (eventName : string, fn : function  () : void) : void;
            function unAfter (eventName : string, fn : string, scope : variant, options : variant) : void;
            function unAfter (eventName : string, fn : string, scope : variant) : void;
            function unAfter (eventName : string, fn : string) : void;
            function unAfter (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function unAfter (eventName : string[], fn : function  () : void, scope : variant) : void;
            function unAfter (eventName : string[], fn : function  () : void) : void;
            function unAfter (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function unAfter (eventName : string[], fn : string, scope : variant) : void;
            function unAfter (eventName : string[], fn : string) : void;
            function unAfter (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function unAfter (eventName : variant, fn : function  () : void, scope : variant) : void;
            function unAfter (eventName : variant, fn : function  () : void) : void;
            function unAfter (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function unAfter (eventName : variant, fn : string, scope : variant) : void;
            function unAfter (eventName : variant, fn : string) : void;
            function unBefore (eventName : string, fn : function  () : void, scope : variant, options : variant) : void;
            function unBefore (eventName : string, fn : function  () : void, scope : variant) : void;
            function unBefore (eventName : string, fn : function  () : void) : void;
            function unBefore (eventName : string, fn : string, scope : variant, options : variant) : void;
            function unBefore (eventName : string, fn : string, scope : variant) : void;
            function unBefore (eventName : string, fn : string) : void;
            function unBefore (eventName : string[], fn : function  () : void, scope : variant, options : variant) : void;
            function unBefore (eventName : string[], fn : function  () : void, scope : variant) : void;
            function unBefore (eventName : string[], fn : function  () : void) : void;
            function unBefore (eventName : string[], fn : string, scope : variant, options : variant) : void;
            function unBefore (eventName : string[], fn : string, scope : variant) : void;
            function unBefore (eventName : string[], fn : string) : void;
            function unBefore (eventName : variant, fn : function  () : void, scope : variant, options : variant) : void;
            function unBefore (eventName : variant, fn : function  () : void, scope : variant) : void;
            function unBefore (eventName : variant, fn : function  () : void) : void;
            function unBefore (eventName : variant, fn : string, scope : variant, options : variant) : void;
            function unBefore (eventName : variant, fn : string, scope : variant) : void;
            function unBefore (eventName : variant, fn : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }




        class Templatable extends Ext.mixin.Mixin
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

    }

    class navigation
    {


        class View extends Ext.Container
        {
            function getDefaultBackButtonText () : void;
            function getNavigationBar () : void;
            function getPreviousItem () : void;
            function getUseTitleForBackButtonText () : void;
            function pop (count : number) : void;
            function pop (count : string) : void;
            function pop (count : variant) : void;
            function push (view : variant) : void;
            function reset () : void;
            function setDefaultBackButtonText (defaultBackButtonText : string) : void;
            function setNavigationBar (navigationBar : boolean) : void;
            function setNavigationBar (navigationBar : variant) : void;
            function setUseTitleForBackButtonText (useTitleForBackButtonText : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }
    }

    class os extends Ext.env.OS
    {
        static var deviceType : string;

        static function addMembers (members : variant) : void;
        static function addStatics (members : variant) : void;
        static function callParent (args : variant) : void;
        static function create () : void;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : void;
    }

    class picker
    {

        class Date extends Ext.picker.Picker
        {
            function getDayText () : void;
            function getMonthText () : void;
            function getSlotOrder () : void;
            function getYearFrom () : void;
            function getYearText () : void;
            function getYearTo () : void;
            function setDayText (dayText : string) : void;
            function setMonthText (monthText : string) : void;
            function setSlotOrder (slotOrder : variant[]) : void;
            function setYearFrom (yearFrom : number) : void;
            function setYearText (yearText : string) : void;
            function setYearTo (yearTo : number) : void;
            function updateDayText (newDayText : variant, oldDayText : variant) : void;
            function updateMonthText (newMonthText : variant, oldMonthText : variant) : void;
            function updateYearFrom () : void;
            function updateYearText (yearText : variant) : void;
            function updateYearTo () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Picker extends Ext.Sheet
        {
            function applyCancelButton (config : variant) : void;
            function applyDoneButton (config : variant) : void;
            function getCancelButton () : void;
            function getDoneButton () : void;
            function getSlots () : void;
            function getToolbar () : void;
            function getToolbarPosition () : void;
            function getUseTitles () : void;
            function getValue (useDom : variant) : void;
            function getValues () : void;
            function setCancelButton (cancelButton : string) : void;
            function setCancelButton (cancelButton : variant) : void;
            function setDoneButton (doneButton : string) : void;
            function setDoneButton (doneButton : variant) : void;
            function setSlots (slots : variant[]) : void;
            function setToolbar (toolbar : Ext.TitleBar) : void;
            function setToolbar (toolbar : Ext.Toolbar) : void;
            function setToolbar (toolbar : variant) : void;
            function setToolbarPosition (toolbarPosition : string) : void;
            function setUseTitles (useTitles : boolean) : void;
            function setValue (values : variant, animated : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

    }

    class plugin
    {

        class BufferedList
        {
            function getList () : void;
            function setList (list : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class ListPaging extends Ext.Component
        {
            function getAutoPaging () : void;
            function getLoadMoreText () : void;
            function getNoMoreRecordsText () : void;
            function setAutoPaging (autoPaging : boolean) : void;
            function setLoadMoreText (loadMoreText : string) : void;
            function setNoMoreRecordsText (noMoreRecordsText : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class PullRefresh extends Ext.Component
        {
            function getAutoSnapBack () : void;
            function getLastUpdatedDateFormat () : void;
            function getLastUpdatedText () : void;
            function getList () : void;
            function getLoadedText () : void;
            function getLoadingText () : void;
            function getOverpullSnapBackDuration () : void;
            function getPullText () : void;
            function getPullTpl () : void;
            function getReleaseText () : void;
            function getScrollerAutoRefresh () : void;
            function getSnappingAnimationDuration () : void;
            function setAutoSnapBack (autoSnapBack : boolean) : void;
            function setLastUpdatedDateFormat (lastUpdatedDateFormat : string) : void;
            function setLastUpdatedText (lastUpdatedText : string) : void;
            function setList (list : Ext.dataview.List) : void;
            function setLoadedText (loadedText : string) : void;
            function setLoadingText (loadingText : string) : void;
            function setOverpullSnapBackDuration (overpullSnapBackDuration : number) : void;
            function setPullText (pullText : string) : void;
            function setPullTpl (pullTpl : Ext.XTemplate) : void;
            function setPullTpl (pullTpl : string) : void;
            function setPullTpl (pullTpl : variant[]) : void;
            function setReleaseText (releaseText : string) : void;
            function setScrollerAutoRefresh (scrollerAutoRefresh : boolean) : void;
            function setSnappingAnimationDuration (snappingAnimationDuration : number) : void;
            function snapBack (force : boolean) : void;
            function snapBack () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class SortableList extends Ext.Component
        {
            function getHandleSelector () : void;
            function getList () : void;
            function setHandleSelector (handleSelector : string) : void;
            function setList (list : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }
    }

    class scroll
    {


        class Scroller extends Ext.Evented
        {
            function getDirection () : void;
            function getDirectionLock () : void;
            function getDisabled () : void;
            function getInitialOffset () : void;
            function getMomentumEasing () : void;
            function getSlotSnapEasing () : void;
            function getSlotSnapSize () : void;
            function getTranslatable () : void;
            function isAxisEnabled (axis : string) : void;
            function scrollBy (x : number, y : number, animation : boolean) : void;
            function scrollBy (x : number, y : number, animation : variant) : void;
            function scrollBy (x : number, y : number) : void;
            function scrollTo (x : number, y : number, animation : boolean) : void;
            function scrollTo (x : number, y : number, animation : variant) : void;
            function scrollTo (x : number, y : number) : void;
            function scrollToEnd (animation : variant) : void;
            function setDirection (direction : string) : void;
            function setDirectionLock (directionLock : boolean) : void;
            function setDisabled (disabled : boolean) : void;
            function setInitialOffset (initialOffset : variant) : void;
            function setInitialOffset (initialOffset : number) : void;
            function setMomentumEasing (momentumEasing : variant) : void;
            function setSlotSnapEasing (slotSnapEasing : variant) : void;
            function setSlotSnapSize (slotSnapSize : number) : void;
            function setSlotSnapSize (slotSnapSize : variant) : void;
            function setTranslatable (translatable : variant) : void;
            function updateBoundary () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class View extends Ext.Evented
        {
            function getCls () : void;
            function getElement () : void;
            function getIndicators () : void;
            function getIndicatorsHidingDelay () : void;
            function getIndicatorsUi () : void;
            function getScroller () : void;
            function setCls (cls : string) : void;
            function setElement (element : variant) : void;
            function setIndicators (indicators : variant) : void;
            function setIndicatorsHidingDelay (indicatorsHidingDelay : number) : void;
            function setIndicatorsUi (indicatorsUi : string) : void;
            function setScroller (scroller : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class indicator
        {

            class Abstract extends Ext.Component
            {
                function getActive () : void;
                function getAutoHide () : void;
                function getAxis () : void;
                function getBarCls () : void;
                function getLength () : void;
                function getMinLength () : void;
                function getRatio () : void;
                function getValue () : void;
                function setActive (active : boolean) : void;
                function setAutoHide (autoHide : boolean) : void;
                function setAxis (axis : string) : void;
                function setBarCls (barCls : string) : void;
                function setLength (length : variant) : void;
                function setMinLength (minLength : number) : void;
                function setRatio (ratio : number) : void;
                function setValue (value : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }



        }
    }

    class slider
    {

        class Slider extends Ext.Container
        {
            function applyIncrement (increment : number) : void;
            function getAllowThumbsOverlapping () : void;
            function getAnimation () : void;
            function getIncrement () : void;
            function getMaxValue () : void;
            function getMinValue () : void;
            function getReadOnly () : void;
            function getThumb (index : number) : void;
            function getThumb () : void;
            function getThumbConfig () : void;
            function getThumbs () : void;
            function getValue () : void;
            function getValues () : void;
            function setAllowThumbsOverlapping (allowThumbsOverlapping : boolean) : void;
            function setAnimation (animation : boolean) : void;
            function setAnimation (animation : variant) : void;
            function setIncrement (increment : number) : void;
            function setMaxValue (maxValue : number) : void;
            function setMinValue (minValue : number) : void;
            function setReadOnly (readOnly : boolean) : void;
            function setThumbConfig (thumbConfig : variant) : void;
            function setValue (value : number) : void;
            function setValue (value : number[]) : void;
            function setValues (value : variant) : void;
            function updateValue (newValue : variant, oldValue : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }


    }


    class tab
    {


        class Panel extends Ext.Container
        {
            function doTabChange (tabBar : variant, newTab : variant) : void;
            function getTabBar () : void;
            function getTabBarPosition () : void;
            function setTabBar (tabBar : variant) : void;
            function setTabBarPosition (tabBarPosition : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

    }

    class util
    {

        class AbstractMixedCollection extends Ext.Base
        {
            function add (key : string, obj : variant) : void;
            function addAll (objs : variant) : void;
            function addAll (objs : variant[]) : void;
            function clear () : void;
            function clone () : void;
            function collect (property : string, root : string, allowNull : boolean) : void;
            function collect (property : string, root : string) : void;
            function collect (property : string, allowNull : boolean) : void;
            function collect (property : string) : void;
            function contains (o : variant) : void;
            function containsKey (key : string) : void;
            function each (fn : function  () : void, scope : variant) : void;
            function each (fn : function  () : void) : void;
            function eachKey (fn : function  () : void, scope : variant) : void;
            function eachKey (fn : function  () : void) : void;
            function filter (property : Ext.util.Filter[], value : string, anyMatch : boolean, caseSensitive : boolean) : void;
            function filter (property : Ext.util.Filter[], value : string, anyMatch : boolean) : void;
            function filter (property : Ext.util.Filter[], value : string) : void;
            function filter (property : Ext.util.Filter[], value : RegExp, anyMatch : boolean, caseSensitive : boolean) : void;
            function filter (property : Ext.util.Filter[], value : RegExp, anyMatch : boolean) : void;
            function filter (property : Ext.util.Filter[], value : RegExp) : void;
            function filter (property : string, value : string, anyMatch : boolean, caseSensitive : boolean) : void;
            function filter (property : string, value : string, anyMatch : boolean) : void;
            function filter (property : string, value : string) : void;
            function filter (property : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean) : void;
            function filter (property : string, value : RegExp, anyMatch : boolean) : void;
            function filter (property : string, value : RegExp) : void;
            function filterBy (fn : function  () : void, scope : variant) : void;
            function filterBy (fn : function  () : void) : void;
            function findBy (fn : function  () : void, scope : variant) : void;
            function findBy (fn : function  () : void) : void;
            function findIndex (property : string, value : string, start : number, anyMatch : boolean, caseSensitive : boolean) : void;
            function findIndex (property : string, value : string, start : number, anyMatch : boolean) : void;
            function findIndex (property : string, value : string, start : number) : void;
            function findIndex (property : string, value : string, anyMatch : boolean, caseSensitive : boolean) : void;
            function findIndex (property : string, value : string, anyMatch : boolean) : void;
            function findIndex (property : string, value : string) : void;
            function findIndex (property : string, value : RegExp, start : number, anyMatch : boolean, caseSensitive : boolean) : void;
            function findIndex (property : string, value : RegExp, start : number, anyMatch : boolean) : void;
            function findIndex (property : string, value : RegExp, start : number) : void;
            function findIndex (property : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean) : void;
            function findIndex (property : string, value : RegExp, anyMatch : boolean) : void;
            function findIndex (property : string, value : RegExp) : void;
            function findIndexBy (fn : function  () : void, scope : variant, start : number) : void;
            function findIndexBy (fn : function  () : void, scope : variant) : void;
            function findIndexBy (fn : function  () : void, start : number) : void;
            function findIndexBy (fn : function  () : void) : void;
            function first () : void;
            function get (key : string) : void;
            function get (key : number) : void;
            function getAt (index : number) : void;
            function getByKey (key : string) : void;
            function getByKey (key : number) : void;
            function getCount () : void;
            function getKey (item : variant) : void;
            function getRange (start : number, end : number) : void;
            function getRange (start : number) : void;
            function getRange () : void;
            function indexOf (o : variant) : void;
            function indexOfKey (key : string) : void;
            function insert (index : number, key : string, obj : variant) : void;
            function insert (index : number, key : string) : void;
            function last () : void;
            function remove (o : variant) : void;
            function removeAll (items : variant[]) : void;
            function removeAt (index : number) : void;
            function removeAtKey (key : string) : void;
            function replace (key : string, o : variant) : void;
            function replace (key : string) : void;
            function sum (property : string, root : string, start : number, end : number) : void;
            function sum (property : string, root : string, start : number) : void;
            function sum (property : string, root : string) : void;
            function sum (property : string, start : number, end : number) : void;
            function sum (property : string, start : number) : void;
            function sum (property : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }


        class BufferedCollection extends Ext.util.Collection
        {
            function getPageSize () : void;
            function getTotalCount () : void;
            function setPageSize (pageSize : number) : void;
            function setTotalCount (totalCount : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Collection extends Ext.Base
        {
            var all : variant[];
            var indices : variant;
            var items : variant[];
            var keys : variant[];
            var length : number;
            var map : variant;

            function constructor (keyFn : variant, config : variant);
            function add (key : string, item : variant) : void;
            function addAll (addItems : variant) : void;
            function addAll (addItems : variant[]) : void;
            function clear () : void;
            function clone () : void;
            function contains (item : variant) : void;
            function containsKey (key : string) : void;
            function each (fn : function  () : void, scope : variant) : void;
            function eachKey (fn : function  () : void, scope : variant) : void;
            function filterBy (fn : function  () : void, scope : variant) : void;
            function findBy (fn : function  () : void, scope : variant) : void;
            function findIndexBy (fn : function  () : void, scope : variant, start : number) : void;
            function findIndexBy (fn : function  () : void, scope : variant) : void;
            function first () : void;
            function get (key : string) : void;
            function get (key : number) : void;
            function getAt (index : number) : void;
            function getAutoFilter () : void;
            function getAutoSort () : void;
            function getByKey (key : string) : void;
            function getByKey (key : number) : void;
            function getCount () : void;
            function getKey (item : variant) : void;
            function getRange (start : number, end : number) : void;
            function getRange (start : number) : void;
            function getRange () : void;
            function indexOf (item : variant) : void;
            function indexOfKey (key : string) : void;
            function insert (index : number, key : string, item : variant) : void;
            function last () : void;
            function remove (item : variant) : void;
            function removeAll (items : variant[]) : void;
            function removeAt (index : number) : void;
            function removeAtKey (key : string) : void;
            function replace (oldKey : string, item : variant) : void;
            function setAutoFilter (autoFilter : boolean) : void;
            function setAutoSort (autoSort : boolean) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class DelayedTask extends Ext.Base
        {
            function constructor (fn : function  () : void, scope : variant, args : variant[]);
            function cancel () : void;
            function delay (delay : number, newFn : function  () : void, newScope : variant, newArgs : variant[]) : void;
            function getArgs () : void;
            function getDelay () : void;
            function getFn () : void;
            function getInterval () : void;
            function getScope () : void;
            function setArgs (args : variant) : void;
            function setDelay (delay : variant) : void;
            function setFn (fn : variant) : void;
            function setInterval (interval : variant) : void;
            function setScope (scope : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Draggable extends Ext.Base
        {
            function disable () : void;
            function enable () : void;
            function getCls () : void;
            function getConstraint () : void;
            function getDirection () : void;
            function getDisabled () : void;
            function getDraggingCls () : void;
            function getElement () : void;
            function getInitialOffset () : void;
            function getTranslatable () : void;
            function setCls (cls : string) : void;
            function setConstraint (constraint : string) : void;
            function setDirection (direction : string) : void;
            function setDisabled (disabled : variant) : void;
            function setDraggingCls (draggingCls : string) : void;
            function setElement (element : variant) : void;
            function setInitialOffset (initialOffset : variant) : void;
            function setInitialOffset (initialOffset : number) : void;
            function setTranslatable (translatable : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Droppable extends Ext.Base
        {
            function disable () : void;
            function enable () : void;
            function getBaseCls () : void;
            function isDisabled () : void;
            function isMonitoring () : void;
            function setBaseCls (baseCls : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Filter extends Ext.Base
        {
            function constructor (config : variant);
            function getAnyMatch () : void;
            function getCaseSensitive () : void;
            function getExactMatch () : void;
            function getFilterFn () : function (collection : Ext.util.MixedCollection) : boolean;
            function getId () : void;
            function getProperty () : void;
            function getRoot () : void;
            function getScope () : void;
            function getValue () : void;
            function setAnyMatch (anyMatch : boolean) : void;
            function setCaseSensitive (caseSensitive : boolean) : void;
            function setExactMatch (exactMatch : boolean) : void;
            function setFilterFn (filterFn : function  () : void) : void;
            function setId (id : string) : void;
            function setProperty (property : string) : void;
            function setRoot (root : string) : void;
            function setScope (scope : variant) : void;
            function setValue (value : RegExp) : void;
            function setValue (value : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Format extends Ext.Base
        {
            static var defaultDateFormat : string;
            static var potentialUndefinedKeys : variant[];

            static function date (value : string, format : string) : void;
            static function date (value : string) : void;
            static function date (value : Date, format : string) : void;
            static function date (value : Date) : void;
            static function ellipsis (value : string, length : number, word : boolean) : void;
            static function ellipsis (value : string, length : number) : void;
            static function escape (string : string) : void;
            static function escapeRegex (str : string) : void;
            static function format (string : string, values : string) : void;
            static function htmlDecode (value : string) : void;
            static function htmlEncode (value : string) : void;
            static function leftPad (string : string, size : number, char : string) : void;
            static function leftPad (string : string, size : number) : void;
            static function toggle (string : string, value : string, other : string) : void;
            static function trim (string : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Geolocation extends Ext.Evented
        {
            var accuracy : number;
            var altitude : number;
            var altitudeAccuracy : number;
            var heading : number;
            var latitude : number;
            var longitude : number;
            var speed : number;
            var timestamp : Date;

            function getAllowHighAccuracy () : void;
            function getAutoUpdate () : void;
            function getFrequency () : void;
            function getMaximumAge () : void;
            function getTimeout () : void;
            function setAllowHighAccuracy (allowHighAccuracy : boolean) : void;
            function setAutoUpdate (autoUpdate : boolean) : void;
            function setFrequency (frequency : number) : void;
            function setMaximumAge (maximumAge : number) : void;
            function setTimeout (timeout : number) : void;
            function updateLocation (callback : function  () : void, scope : variant) : void;
            function updateLocation (callback : function  () : void) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Grouper extends Ext.util.Sorter
        {
            function getGroupFn () : void;
            function getSortProperty () : void;
            function setGroupFn (groupFn : function  () : void) : void;
            function setSortProperty (sortProperty : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class HashMap extends Ext.Base
        {
            function add (key : string, value : variant) : void;
            function clear (initial : variant) : void;
            function clone () : void;
            function contains (value : variant) : void;
            function containsKey (key : string) : void;
            function each (fn : function  () : void, scope : variant) : void;
            function each (fn : function  () : void) : void;
            function get (key : string) : void;
            function getCount () : void;
            function getKeys () : void;
            function getValues () : void;
            function remove (o : variant) : void;
            function removeByKey (key : string) : void;
            function replace (key : string, value : variant) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Inflector extends Ext.Base
        {
            static function classify (word : string) : void;
            static function clearPlurals () : void;
            static function clearSingulars () : void;
            static function isTransnumeral (word : string) : void;
            static function ordinalize (number : number) : void;
            static function plural (matcher : RegExp, replacer : string) : void;
            static function pluralize (word : string) : void;
            static function singular (matcher : RegExp, replacer : string) : void;
            static function singularize (word : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }


        class LineSegment extends Ext.Base
        {
            function constructor (point1 : Ext.util.Point, point2 : Ext.util.Point);
            function intersects (lineSegment : Ext.util.LineSegment) : void;
            override function toString () : string;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class MixedCollection extends Ext.util.AbstractMixedCollection
        {
            function reorder (mapping : variant) : void;
            function sortBy (sorterFn : function  () : void) : void;
            function sortByKey (dir : string, fn : function  () : void) : void;
            function sortByKey (dir : string) : void;
            function sortByKey (fn : function  () : void) : void;
            function sortByKey () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }


        class PaintMonitor extends Ext.Base
        {
            function constructor (config : variant);
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Point extends Ext.Base
        {
            function constructor (x : number, y : number);
            function constructor (x : number);
            function constructor ();
            function clone () : void;
            function copyFrom (point : Ext.util.Point) : void;
            function copyFrom (point : variant) : void;
            function equals (point : Ext.util.Point) : void;
            function equals (point : variant) : void;
            function isCloseTo (point : Ext.util.Point, threshold : variant) : void;
            function isCloseTo (point : Ext.util.Point, threshold : number) : void;
            function isCloseTo (point : variant, threshold : variant) : void;
            function isCloseTo (point : variant, threshold : number) : void;
            function roundedEquals (point : Ext.util.Point) : void;
            function roundedEquals (point : variant) : void;
            override function toString () : string;
            function translate (x : number, y : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function from (object : variant) : void;
            static function fromEvent (e : Event) : void;
            static function fromTouch (touch : Event) : void;
            static function getName () : void;
        }


        class Region extends Ext.Base
        {
            function constructor (top : number, right : number, bottom : number, left : number);
            function adjust (top : number, right : number, bottom : number, left : number) : void;
            function constrainTo (targetRegion : Ext.util.Region) : void;
            function contains (region : Ext.util.Region) : void;
            function copy () : void;
            function equals (region : Ext.util.Region) : void;
            function getOutOfBoundOffset (axis : string, p : Ext.util.Point) : void;
            function getOutOfBoundOffset (axis : variant, p : Ext.util.Point) : void;
            function getOutOfBoundOffsetX (p : number) : void;
            function getOutOfBoundOffsetY (p : number) : void;
            function intersect (region : Ext.util.Region) : void;
            function isOutOfBound (axis : string, p : Ext.util.Point) : void;
            function isOutOfBound (axis : string, p : number) : void;
            function isOutOfBoundX (p : number) : void;
            function isOutOfBoundY (p : number) : void;
            function round () : void;
            override function toString () : string;
            function translateBy (offset : variant) : void;
            function union (region : Ext.util.Region) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function from (o : variant) : void;
            static function getName () : void;
            static function getRegion (el : string) : void;
            static function getRegion (el : HTMLElement) : void;
            static function getRegion (el : Ext.dom.Element) : void;
        }

        class SizeMonitor extends Ext.Base
        {
            function constructor (config : variant);
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Sortable extends Ext.mixin.Mixin
        {
            var defaultSortDirection : string;
            var isSortable : boolean;
            var sortRoot : string;
            var sorters : Ext.util.MixedCollection;

            function initSortable () : void;
            function sort (sorters : string, direction : string, where : string, doSort : boolean) : void;
            function sort (sorters : string, direction : string, where : string) : void;
            function sort (sorters : string, direction : string, doSort : boolean) : void;
            function sort (sorters : string, direction : string) : void;
            function sort (sorters : string, doSort : boolean) : void;
            function sort (sorters : string) : void;
            function sort (sorters : Ext.util.Sorter[], direction : string, where : string, doSort : boolean) : void;
            function sort (sorters : Ext.util.Sorter[], direction : string, where : string) : void;
            function sort (sorters : Ext.util.Sorter[], direction : string, doSort : boolean) : void;
            function sort (sorters : Ext.util.Sorter[], direction : string) : void;
            function sort (sorters : Ext.util.Sorter[], doSort : boolean) : void;
            function sort (sorters : Ext.util.Sorter[]) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class Sorter extends Ext.Base
        {
            function constructor (config : variant);
            function getDirection () : void;
            function getId () : void;
            function getProperty () : void;
            function getRoot () : void;
            function getSorterFn () : void;
            function getTransform () : void;
            function setDirection (direction : string) : void;
            function setId (id : variant) : void;
            function setProperty (property : string) : void;
            function setRoot (root : string) : void;
            function setSorterFn (sorterFn : function  () : void) : void;
            function setTransform (transform : function  () : void) : void;
            function toggle () : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class TapRepeater extends Ext.Base
        {
            function getAccelerate () : void;
            function getDelay () : void;
            function getEl () : void;
            function getInterval () : void;
            function getPressCls () : void;
            function getPreventDefault () : void;
            function getStopDefault () : void;
            function getTimer () : void;
            function setAccelerate (accelerate : boolean) : void;
            function setDelay (delay : number) : void;
            function setEl (el : variant) : void;
            function setInterval (interval : number) : void;
            function setPressCls (pressCls : variant) : void;
            function setPreventDefault (preventDefault : boolean) : void;
            function setStopDefault (stopDefault : boolean) : void;
            function setTimer (timer : number) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }




        class Wrapper extends Ext.Base
        {
            function constructor (elementConfig : variant, wrappedElement : variant);
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class paintmonitor
        {

            class Abstract extends Ext.Base
            {
                function constructor (config : variant);
                function getArgs () : void;
                function getCallback () : void;
                function getElement () : void;
                function getScope () : void;
                function setArgs (args : variant[]) : void;
                function setCallback (callback : variant) : void;
                function setElement (element : variant) : void;
                function setScope (scope : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }


        }

        class sizemonitor
        {

            class Abstract extends Ext.Base
            {
                function constructor (config : variant);
                function getArgs () : void;
                function getCallback () : void;
                function getElement () : void;
                function getScope () : void;
                function setArgs (args : variant[]) : void;
                function setCallback (callback : variant) : void;
                function setElement (element : variant) : void;
                function setScope (scope : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }



        }

        class translatable
        {

            class Abstract extends Ext.Evented
            {
                function getEasing () : void;
                function getEasingX () : void;
                function getEasingY () : void;
                function getUseWrapper () : void;
                function setEasing (easing : variant) : void;
                function setEasingX (easingX : variant) : void;
                function setEasingY (easingY : variant) : void;
                function setUseWrapper (useWrapper : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }



            class Dom extends Ext.util.translatable.Abstract
            {
                function getElement () : void;
                function setElement (element : variant) : void;
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

        }
    }

    class ux
    {

        class ActionOverFlowMenuButton extends Ext.ux.MenuButton
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class ApplicationMenu extends Ext.Menu
        {
            function getDefaults () : void;
            function setDefaults (defaults : variant) : void;
        }

        class ContextMenu extends Ext.Menu
        {
        }

        class MenuButton extends Ext.Button
        {
            function getMenuItems () : void;
            function setMenuItems (menuItems : variant[]) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class TabMenuButton extends Ext.ux.MenuButton
        {
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }

        class device
        {

            class Analytics extends Ext.Base
            {
                static function constructor ();
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class Twitter extends Ext.Base
            {
                static function constructor ();
                static function addMembers (members : variant) : void;
                static function addStatics (members : variant) : void;
                static function callParent (args : variant) : void;
                static function create () : void;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : void;
            }

            class analytics
            {

                class Abstract extends Ext.Base
                {
                    function getAccountID () : void;
                    function registerAccount (accountID : string) : void;
                    function setAccountID (accountID : variant) : void;
                    function trackEvent (config : variant) : void;
                    function trackPageview (config : string) : void;
                    static function addMembers (members : variant) : void;
                    static function addStatics (members : variant) : void;
                    static function callParent (args : variant) : void;
                    static function create () : void;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : void;
                }

            }

            class twitter
            {


            }
        }
    }

    class viewport
    {


        class Default extends Ext.Container
        {
            var isReady : boolean;

            function getAutoMaximize () : void;
            function getOrientation () : void;
            function getPreventPanning () : void;
            function getPreventZooming () : void;
            function getWindowHeight () : void;
            function getWindowWidth () : void;
            function hideAllMenus (animation : variant) : void;
            function hideMenu (side : string) : void;
            function hideOtherMenus (side : string, animation : string) : void;
            function removeMenu (side : string) : void;
            function setAutoMaximize (autoMaximize : boolean) : void;
            function setMenu (menu : Ext.Menu, config : variant) : void;
            function setPreventPanning (preventPanning : boolean) : void;
            function setPreventZooming (preventZooming : boolean) : void;
            function showMenu (side : string) : void;
            function toggleMenu (side : string) : void;
            static function addMembers (members : variant) : void;
            static function addStatics (members : variant) : void;
            static function callParent (args : variant) : void;
            static function create () : void;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : void;
        }



    }
} = """Ext;""";