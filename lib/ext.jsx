/*
GNU General Public License Usage
This file may be used under the terms of the GNU General Public License version 3.0 as
published by the Free Software Foundation and appearing in the file LICENSE included in the
packaging of this file.

Please review the following information to ensure the GNU General Public License version 3.0
requirements will be met: http://www.gnu.org/copyleft/gpl.html.

This code is generated by sencha2jsx command created by @shibukawa
*/


import "js/web.jsx";


native class Ext
{
    static var BLANK_IMAGE_URL : string;
    static var SSL_SECURE_URL : string;
    static var USE_NATIVE_JSON : boolean;
    static var chromeVersion : number;
    static var emptyFn : function () : void;
    static var emptyString : variant;
    static var enableFx : boolean;
    static var enableGarbageCollector : boolean;
    static var enableListenerCollection : boolean;
    static var enableNestedListenerRemoval : boolean;
    static var enumerables : string[];
    static var firefoxVersion : number;
    static var globalEvents : Ext.util.Observable;
    static var ieVersion : number;
    static var isChrome : boolean;
    static var isFF10 : boolean;
    static var isFF3_0 : boolean;
    static var isFF3_5 : boolean;
    static var isFF3_6 : boolean;
    static var isFF4 : boolean;
    static var isFF5 : boolean;
    static var isGecko : boolean;
    static var isGecko10 : boolean;
    static var isGecko3 : boolean;
    static var isGecko4 : boolean;
    static var isGecko5 : boolean;
    static var isIE : boolean;
    static var isIE10 : boolean;
    static var isIE10m : boolean;
    static var isIE10p : boolean;
    static var isIE6 : boolean;
    static var isIE7 : boolean;
    static var isIE7m : boolean;
    static var isIE7p : boolean;
    static var isIE8 : boolean;
    static var isIE8m : boolean;
    static var isIE8p : boolean;
    static var isIE9 : boolean;
    static var isIE9m : boolean;
    static var isIE9p : boolean;
    static var isLinux : boolean;
    static var isMac : boolean;
    static var isOpera : boolean;
    static var isOpera10_5 : boolean;
    static var isReady : boolean;
    static var isSafari : boolean;
    static var isSafari2 : boolean;
    static var isSafari3 : boolean;
    static var isSafari4 : boolean;
    static var isSafari5 : boolean;
    static var isSafari5_0 : boolean;
    static var isSecure : boolean;
    static var isWebKit : boolean;
    static var isWindows : boolean;
    static var name : string;
    static var operaVersion : number;
    static var safariVersion : number;
    static var useShims : boolean;
    static var webKitVersion : number;

    static function addBehaviors (obj : variant) : void;
    static function addNamespaces (namespace : string) : void;
    static function addNamespaces (namespace : string[]) : void;
    static function application (config : variant) : void;
    static function application (config : string) : void;
    static function apply (object : variant, config : variant, defaults : variant) : variant;
    static function apply (object : variant, config : variant) : variant;
    static function applyIf (object : variant, config : variant) : variant;
    static function batchLayouts (fn : function  () : void, scope : variant) : void;
    static function batchLayouts (fn : function  () : void) : void;
    static function bind (fn : function  () : void, scope : variant, args : variant[], appendArgs : boolean) : function () : void;
    static function bind (fn : function  () : void, scope : variant, args : variant[], appendArgs : number) : function () : void;
    static function bind (fn : function  () : void, scope : variant, args : variant[]) : function () : void;
    static function bind (fn : function  () : void, scope : variant, appendArgs : boolean) : function () : void;
    static function bind (fn : function  () : void, scope : variant, appendArgs : number) : function () : void;
    static function bind (fn : function  () : void, scope : variant) : function () : void;
    static function bind (fn : function  () : void, args : variant[], appendArgs : boolean) : function () : void;
    static function bind (fn : function  () : void, args : variant[], appendArgs : number) : function () : void;
    static function bind (fn : function  () : void, args : variant[]) : function () : void;
    static function bind (fn : function  () : void, appendArgs : boolean) : function () : void;
    static function bind (fn : function  () : void, appendArgs : number) : function () : void;
    static function bind (fn : function  () : void) : function () : void;
    static function callback (callback : function  () : void, scope : variant, args : variant[], delay : number) : variant;
    static function callback (callback : function  () : void, scope : variant, args : variant[]) : variant;
    static function callback (callback : function  () : void, scope : variant, delay : number) : variant;
    static function callback (callback : function  () : void, scope : variant) : variant;
    static function callback (callback : function  () : void, args : variant[], delay : number) : variant;
    static function callback (callback : function  () : void, args : variant[]) : variant;
    static function callback (callback : function  () : void, delay : number) : variant;
    static function callback (callback : function  () : void) : variant;
    static function clone (item : variant) : variant;
    static function coerce (from : variant, to : variant) : variant;
    static function copyTo (dest : variant, source : variant, names : string, usePrototypeKeys : boolean) : variant;
    static function copyTo (dest : variant, source : variant, names : string) : variant;
    static function copyTo (dest : variant, source : variant, names : string[], usePrototypeKeys : boolean) : variant;
    static function copyTo (dest : variant, source : variant, names : string[]) : variant;
    static function create (name : string, args : variant) : variant;
    static function create (name : string) : variant;
    static function create (args : variant) : variant;
    static function create () : variant;
    static function createByAlias (alias : string, args : variant) : variant;
    static function decode (json : string, safe : boolean) : variant;
    static function decode (json : string) : variant;
    static function defer (fn : function  () : void, millis : number, scope : variant, args : variant[], appendArgs : boolean) : number;
    static function defer (fn : function  () : void, millis : number, scope : variant, args : variant[], appendArgs : number) : number;
    static function defer (fn : function  () : void, millis : number, scope : variant, args : variant[]) : number;
    static function defer (fn : function  () : void, millis : number, scope : variant, appendArgs : boolean) : number;
    static function defer (fn : function  () : void, millis : number, scope : variant, appendArgs : number) : number;
    static function defer (fn : function  () : void, millis : number, scope : variant) : number;
    static function defer (fn : function  () : void, millis : number, args : variant[], appendArgs : boolean) : number;
    static function defer (fn : function  () : void, millis : number, args : variant[], appendArgs : number) : number;
    static function defer (fn : function  () : void, millis : number, args : variant[]) : number;
    static function defer (fn : function  () : void, millis : number, appendArgs : boolean) : number;
    static function defer (fn : function  () : void, millis : number, appendArgs : number) : number;
    static function defer (fn : function  () : void, millis : number) : number;
    static function define (className : string, data : variant, createdFn : function  () : void) : Ext.Base;
    static function deprecate (packageName : string, since : string, closure : function  () : void, scope : variant) : void;
    static function destroy (args : Ext.dom.Element) : void;
    static function destroy (args : Ext.util.Observable) : void;
    static function destroy (args : Ext.dom.Element[]) : void;
    static function destroy (args : Ext.util.Observable[]) : void;
    static function destroyMembers (o : variant, args : string) : void;
    static function each (iterable : variant[], fn : function  () : void, scope : variant, reverse : boolean) : boolean;
    static function each (iterable : variant[], fn : function  () : void, scope : variant) : boolean;
    static function each (iterable : variant[], fn : function  () : void, reverse : boolean) : boolean;
    static function each (iterable : variant[], fn : function  () : void) : boolean;
    static function each (iterable : NodeList, fn : function  () : void, scope : variant, reverse : boolean) : boolean;
    static function each (iterable : NodeList, fn : function  () : void, scope : variant) : boolean;
    static function each (iterable : NodeList, fn : function  () : void, reverse : boolean) : boolean;
    static function each (iterable : NodeList, fn : function  () : void) : boolean;
    static function each (iterable : variant, fn : function  () : void, scope : variant, reverse : boolean) : boolean;
    static function each (iterable : variant, fn : function  () : void, scope : variant) : boolean;
    static function each (iterable : variant, fn : function  () : void, reverse : boolean) : boolean;
    static function each (iterable : variant, fn : function  () : void) : boolean;
    static function encode (o : variant) : string;
    static function exclude (excludes : variant[]) : variant;
    static function fly (dom : string, named : string) : Ext.dom.Element.Fly;
    static function fly (dom : string) : Ext.dom.Element.Fly;
    static function fly (dom : HTMLElement, named : string) : Ext.dom.Element.Fly;
    static function fly (dom : HTMLElement) : Ext.dom.Element.Fly;
    static function get (el : string) : Ext.dom.Element;
    static function get (el : HTMLElement) : Ext.dom.Element;
    static function get (el : Ext.dom.Element) : Ext.dom.Element;
    static function getBody () : Ext.dom.Element;
    static function getClass (object : variant) : Ext.Class;
    static function getClassName (object : Ext.Class) : string;
    static function getClassName (object : variant) : string;
    static function getCmp (id : string) : variant;
    static function getDoc () : Ext.dom.Element;
    static function getDom (el : string) : variant;
    static function getDom (el : HTMLElement) : variant;
    static function getDom (el : Ext.dom.Element) : variant;
    static function getHead () : Ext.dom.Element;
    static function getNamespace (className : string) : string;
    static function getOrientation () : string;
    static function getScrollbarSize (force : boolean) : variant;
    static function getScrollbarSize () : variant;
    static function getStore (store : string) : Ext.data.Store;
    static function getStore (store : variant) : Ext.data.Store;
    static function getVersion (packageName : string) : Ext.Version;
    static function getVersion () : Ext.Version;
    static function id (el : HTMLElement, prefix : string) : string;
    static function id (el : HTMLElement) : string;
    static function id (el : Ext.dom.Element, prefix : string) : string;
    static function id (el : Ext.dom.Element) : string;
    static function id (prefix : string) : string;
    static function id () : string;
    static function identityFn (o : variant) : void;
    static function isArray (target : variant) : boolean;
    static function isBoolean (value : variant) : boolean;
    static function isDate (object : variant) : boolean;
    static function isDefined (value : variant) : boolean;
    static function isElement (value : variant) : boolean;
    static function isEmpty (value : variant, allowEmptyString : boolean) : boolean;
    static function isEmpty (value : variant) : boolean;
    static function isFunction (value : variant) : boolean;
    static function isIterable (value : variant) : boolean;
    static function isNumber (value : variant) : boolean;
    static function isNumeric (value : variant) : boolean;
    static function isObject (value : variant) : boolean;
    static function isPrimitive (value : variant) : boolean;
    static function isString (value : variant) : boolean;
    static function isTextNode (value : variant) : boolean;
    static function iterate (object : variant, fn : function  () : void, scope : variant) : void;
    static function iterate (object : variant, fn : function  () : void) : void;
    static function iterate (object : variant[], fn : function  () : void, scope : variant) : void;
    static function iterate (object : variant[], fn : function  () : void) : void;
    static function log (options : string, message : string) : void;
    static function log (options : string) : void;
    static function log (options : variant, message : string) : void;
    static function log (options : variant) : void;
    static function log () : void;
    static function merge (destination : variant, object : variant) : variant;
    static function namespace (namespaces : string) : variant;
    static function ns (namespaces : string) : variant;
    static function on (eventName : string, fn : function  () : void, scope : variant, options : variant) : variant;
    static function on (eventName : string, fn : function  () : void, scope : variant) : variant;
    static function on (eventName : string, fn : function  () : void) : variant;
    static function on (eventName : string, scope : variant, options : variant) : variant;
    static function on (eventName : string, scope : variant) : variant;
    static function on (eventName : string) : variant;
    static function on (eventName : variant, fn : function  () : void, scope : variant, options : variant) : variant;
    static function on (eventName : variant, fn : function  () : void, scope : variant) : variant;
    static function on (eventName : variant, fn : function  () : void) : variant;
    static function on (eventName : variant, scope : variant, options : variant) : variant;
    static function on (eventName : variant, scope : variant) : variant;
    static function on (eventName : variant) : variant;
    static function onDocumentReady (fn : function  () : void, scope : variant, options : variant) : void;
    static function onDocumentReady (fn : function  () : void, scope : variant) : void;
    static function onDocumentReady (fn : function  () : void) : void;
    static function onReady (fn : function  () : void, scope : variant, options : variant) : void;
    static function override (target : variant, overrides : variant) : void;
    static function pass (fn : function  () : void, args : variant[], scope : variant) : function () : void;
    static function pass (fn : function  () : void, args : variant[]) : function () : void;
    static function preg (ptype : string, cls : function  () : void) : void;
    static function query (path : string, root : HTMLElement, type : string, single : boolean) : HTMLElement[];
    static function query (path : string, root : HTMLElement, type : string) : HTMLElement[];
    static function query (path : string, root : HTMLElement, single : boolean) : HTMLElement[];
    static function query (path : string, root : HTMLElement) : HTMLElement[];
    static function query (path : string, type : string, single : boolean) : HTMLElement[];
    static function query (path : string, type : string) : HTMLElement[];
    static function query (path : string, single : boolean) : HTMLElement[];
    static function query (path : string) : HTMLElement[];
    static function regStore (id : string, config : variant) : void;
    static function removeNode (node : HTMLElement) : void;
    static function require (expressions : string, fn : function  () : void, scope : variant, excludes : string) : void;
    static function require (expressions : string, fn : function  () : void, scope : variant, excludes : variant[]) : void;
    static function require (expressions : string, fn : function  () : void, scope : variant) : void;
    static function require (expressions : string, fn : function  () : void, excludes : string) : void;
    static function require (expressions : string, fn : function  () : void, excludes : variant[]) : void;
    static function require (expressions : string, fn : function  () : void) : void;
    static function require (expressions : string, scope : variant, excludes : string) : void;
    static function require (expressions : string, scope : variant, excludes : variant[]) : void;
    static function require (expressions : string, scope : variant) : void;
    static function require (expressions : string, excludes : string) : void;
    static function require (expressions : string, excludes : variant[]) : void;
    static function require (expressions : string) : void;
    static function require (expressions : variant[], fn : function  () : void, scope : variant, excludes : string) : void;
    static function require (expressions : variant[], fn : function  () : void, scope : variant, excludes : variant[]) : void;
    static function require (expressions : variant[], fn : function  () : void, scope : variant) : void;
    static function require (expressions : variant[], fn : function  () : void, excludes : string) : void;
    static function require (expressions : variant[], fn : function  () : void, excludes : variant[]) : void;
    static function require (expressions : variant[], fn : function  () : void) : void;
    static function require (expressions : variant[], scope : variant, excludes : string) : void;
    static function require (expressions : variant[], scope : variant, excludes : variant[]) : void;
    static function require (expressions : variant[], scope : variant) : void;
    static function require (expressions : variant[], excludes : string) : void;
    static function require (expressions : variant[], excludes : variant[]) : void;
    static function require (expressions : variant[]) : void;
    static function resumeLayouts (flush : variant) : void;
    static function select (selector : string, unique : boolean) : Ext.dom.CompositeElement;
    static function select (selector : string) : Ext.dom.CompositeElement;
    static function setGlyphFontFamily (fontFamily : string) : void;
    static function setVersion (packageName : string, version : string) : variant;
    static function setVersion (packageName : string, version : Ext.Version) : variant;
    static function suspendLayouts () : void;
    static function syncRequire (expressions : string, fn : function  () : void, scope : variant, excludes : string) : void;
    static function syncRequire (expressions : string, fn : function  () : void, scope : variant, excludes : variant[]) : void;
    static function syncRequire (expressions : string, fn : function  () : void, scope : variant) : void;
    static function syncRequire (expressions : string, fn : function  () : void, excludes : string) : void;
    static function syncRequire (expressions : string, fn : function  () : void, excludes : variant[]) : void;
    static function syncRequire (expressions : string, fn : function  () : void) : void;
    static function syncRequire (expressions : string, scope : variant, excludes : string) : void;
    static function syncRequire (expressions : string, scope : variant, excludes : variant[]) : void;
    static function syncRequire (expressions : string, scope : variant) : void;
    static function syncRequire (expressions : string, excludes : string) : void;
    static function syncRequire (expressions : string, excludes : variant[]) : void;
    static function syncRequire (expressions : string) : void;
    static function syncRequire (expressions : variant[], fn : function  () : void, scope : variant, excludes : string) : void;
    static function syncRequire (expressions : variant[], fn : function  () : void, scope : variant, excludes : variant[]) : void;
    static function syncRequire (expressions : variant[], fn : function  () : void, scope : variant) : void;
    static function syncRequire (expressions : variant[], fn : function  () : void, excludes : string) : void;
    static function syncRequire (expressions : variant[], fn : function  () : void, excludes : variant[]) : void;
    static function syncRequire (expressions : variant[], fn : function  () : void) : void;
    static function syncRequire (expressions : variant[], scope : variant, excludes : string) : void;
    static function syncRequire (expressions : variant[], scope : variant, excludes : variant[]) : void;
    static function syncRequire (expressions : variant[], scope : variant) : void;
    static function syncRequire (expressions : variant[], excludes : string) : void;
    static function syncRequire (expressions : variant[], excludes : variant[]) : void;
    static function syncRequire (expressions : variant[]) : void;
    static function toArray (iterable : variant, start : number, end : number) : variant[];
    static function toArray (iterable : variant, start : number) : variant[];
    static function toArray (iterable : variant) : variant[];
    static function typeOf (value : variant) : string;
    static function un (eventName : string, fn : function  () : void, scope : variant) : void;
    static function un (eventName : string, fn : function  () : void) : void;
    static function valueFrom (value : variant, defaultValue : variant, allowBlank : boolean) : variant;
    static function valueFrom (value : variant, defaultValue : variant) : variant;
    static function widget (name : string, config : variant) : variant;
    static function widget (name : string) : variant;
    static function widget (config : variant) : variant;
    static function widget () : variant;

    class AbstractComponent extends Ext.Base
    {
        var _isLayoutRoot : boolean;
        var contentPaddingProperty : string;
        var draggable : boolean;
        var frameSize : variant;
        var isComponent : boolean;
        var maskOnDisable : boolean;
        var ownerCt : Ext.container.Container;
        var rendered : boolean;

        function constructor (config : variant);
        function constructor ();
        function addCls (cls : string) : Ext.Component;
        function addCls (cls : string[]) : Ext.Component;
        function addClsWithUI (classes : string, skip : variant) : void;
        function addClsWithUI (classes : string[], skip : variant) : void;
        function addListener (element : variant, listeners : variant, scope : variant, options : variant) : variant;
        function addPropertyToState (state : variant, propName : string, value : string) : boolean;
        function addPropertyToState (state : variant, propName : string) : boolean;
        function addUIClsToElement (ui : string) : void;
        function afterComponentLayout (width : number, height : number, oldWidth : Nullable.<number>, oldHeight : Nullable.<number>) : void;
        function afterSetPosition (x : number, y : number) : void;
        function animate (animObj : variant) : variant;
        function beforeBlur (e : Ext.EventObject) : void;
        function beforeComponentLayout (adjWidth : number, adjHeight : number) : void;
        function beforeDestroy () : void;
        function beforeFocus (e : Ext.EventObject) : void;
        function beforeLayout () : void;
        function destroy () : void;
        function disable (silent : boolean) : void;
        function disable () : void;
        function doComponentLayout () : variant;
        function enable (silent : boolean) : void;
        function enable () : void;
        function findPlugin (ptype : string) : Ext.AbstractPlugin;
        function getBubbleTarget () : Ext.container.Container;
        function getEl () : Ext.dom.Element;
        function getHeight () : number;
        function getId () : string;
        function getItemId () : string;
        function getLoader () : Ext.ComponentLoader;
        function getLocalX () : number;
        function getLocalXY () : Number[];
        function getLocalY () : number;
        function getPlugin (pluginId : string) : Ext.AbstractPlugin;
        function getSize () : variant;
        function getSizeModel (ownerCtSizeModel : variant) : variant;
        function getState () : variant;
        function getWidth () : number;
        function getX () : number;
        function getXTypes () : string;
        function getXY () : Number[];
        function getY () : number;
        function hasCls (className : string) : boolean;
        function hasUICls (cls : string) : void;
        function initEvents () : void;
        function is (selector : string) : boolean;
        function isDescendantOf (container : Ext.container.Container) : boolean;
        function isDisabled () : boolean;
        function isDraggable () : boolean;
        function isDroppable () : boolean;
        function isFloating () : boolean;
        function isHidden () : boolean;
        function isLayoutRoot () : void;
        function isLayoutSuspended () : boolean;
        function isVisible (deep : boolean) : boolean;
        function isVisible () : boolean;
        function isXType (xtype : string, shallow : boolean) : boolean;
        function isXType (xtype : string) : boolean;
        function nextNode (selector : string) : Ext.Component;
        function nextNode () : Ext.Component;
        function nextSibling (selector : string) : Ext.Component;
        function nextSibling () : Ext.Component;
        function onAdded (container : Ext.container.Container, pos : number) : void;
        function onDisable () : void;
        function onEnable () : void;
        function onPosition (x : number, y : number) : void;
        function onRemoved (destroying : boolean) : void;
        function onResize (width : variant, height : variant, oldWidth : variant, oldHeight : variant) : void;
        function postBlur (e : Ext.EventObject) : void;
        function previousNode (selector : string) : Ext.Component;
        function previousNode () : Ext.Component;
        function previousSibling (selector : string) : Ext.Component;
        function previousSibling () : Ext.Component;
        function registerFloatingItem (cmp : variant) : void;
        function removeCls (cls : string) : Ext.Component;
        function removeCls (cls : string[]) : Ext.Component;
        function removeClsWithUI (cls : string) : void;
        function removeClsWithUI (cls : string[]) : void;
        function removeUIClsFromElement (ui : string) : void;
        function setBorder (border : string) : void;
        function setBorder (border : number) : void;
        function setDisabled (disabled : boolean) : void;
        function setDocked (dock : variant, layoutParent : boolean) : Ext.Component;
        function setDocked (dock : variant) : Ext.Component;
        function setHeight (height : number) : Ext.Component;
        function setLocalX (x : variant) : Ext.util.Positionable;
        function setLocalXY (x : variant, y : variant) : Ext.util.Positionable;
        function setLocalY (y : variant) : Ext.util.Positionable;
        function setMargin (margin : number) : void;
        function setMargin (margin : string) : void;
        function setSize (width : number, height : number) : Ext.Component;
        function setSize (width : number, height : string) : Ext.Component;
        function setSize (width : string, height : number) : Ext.Component;
        function setSize (width : string, height : string) : Ext.Component;
        function setSize (width : variant, height : number) : Ext.Component;
        function setSize (width : variant, height : string) : Ext.Component;
        function setUI (ui : string) : void;
        function setVisible (visible : boolean) : Ext.Component;
        function setWidth (width : number) : Ext.Component;
        function setX (x : variant, animate : variant) : Ext.util.Positionable;
        function setXY (xy : variant, animate : variant) : Ext.util.Positionable;
        function setY (y : variant, animate : variant) : Ext.util.Positionable;
        function up (selector : string, limit : string) : Ext.container.Container;
        function up (selector : string, limit : number) : Ext.container.Container;
        function up (selector : string, limit : Ext.Component) : Ext.container.Container;
        function up (selector : string) : Ext.container.Container;
        function up (selector : Ext.Component, limit : string) : Ext.container.Container;
        function up (selector : Ext.Component, limit : number) : Ext.container.Container;
        function up (selector : Ext.Component, limit : Ext.Component) : Ext.container.Container;
        function up (selector : Ext.Component) : Ext.container.Container;
        function up (limit : number) : Ext.container.Container;
        function up () : Ext.container.Container;
        function update (htmlOrData : string, loadScripts : boolean, callback : function  () : void) : void;
        function update (htmlOrData : string, loadScripts : boolean) : void;
        function update (htmlOrData : string, callback : function  () : void) : void;
        function update (htmlOrData : string) : void;
        function update (htmlOrData : variant, loadScripts : boolean, callback : function  () : void) : void;
        function update (htmlOrData : variant, loadScripts : boolean) : void;
        function update (htmlOrData : variant, callback : function  () : void) : void;
        function update (htmlOrData : variant) : void;
        function updateLayout (options : variant) : void;
        function updateLayout () : void;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function cancelLayout (comp : Ext.Component) : void;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function flushLayouts () : void;
        static function getName () : string;
        static function resumeLayouts (flush : boolean) : void;
        static function resumeLayouts () : void;
        static function suspendLayouts () : void;
        static function updateLayout (comp : Ext.Component, defer : boolean) : void;
        static function updateLayout (comp : Ext.Component) : void;
    }

    class AbstractManager extends Ext.Base
    {
        var all : Ext.util.HashMap;

        function constructor (config : variant);
        function create (config : variant, defaultType : string) : variant;
        function each (fn : function  () : void, scope : variant) : void;
        function get (id : string) : variant;
        function getCount () : number;
        function isRegistered (type : string) : boolean;
        function onAvailable (id : string, fn : function  () : void, scope : variant) : void;
        function register (item : variant) : void;
        function registerType (type : string, cls : function  () : void) : void;
        function unregister (item : variant) : void;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class AbstractPlugin extends Ext.Base
    {
        var isPlugin : boolean;

        function constructor (config : variant);
        function constructor ();
        function clonePlugin (overrideCfg : variant) : void;
        function clonePlugin () : void;
        function destroy () : void;
        function disable () : void;
        function enable () : void;
        function getCmp () : Ext.Component;
        function init (client : Ext.Component) : void;
        function setCmp (cmp : Ext.Component) : void;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Action extends Ext.Base
    {
        function constructor (config : variant);
        function disable () : void;
        function each (fn : function  () : void, scope : variant) : void;
        function enable () : void;
        function execute (args : variant) : void;
        function getIconCls () : void;
        function getText () : void;
        function hide () : void;
        function isDisabled () : void;
        function isHidden () : void;
        function setDisabled (disabled : boolean) : void;
        function setHandler (fn : function  () : void, scope : variant) : void;
        function setHidden (hidden : boolean) : void;
        function setIconCls (cls : string) : void;
        function setText (text : string) : void;
        function show () : void;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Ajax extends Ext.data.Connection
    {
        static var autoAbort : boolean;
        static var defaultHeaders : variant;
        static var disableCaching : boolean;
        static var extraParams : variant;
        static var method : string;
        static var timeout : number;
        static var url : string;

        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Array
    {
        static function clean (array : variant[]) : variant[];
        static function clone (array : variant[]) : variant[];
        static function contains (array : variant[], item : variant) : boolean;
        static function difference (arrayA : variant[], arrayB : variant[]) : variant[];
        static function each (iterable : variant[], fn : function  () : void, scope : variant, reverse : boolean) : boolean;
        static function each (iterable : variant[], fn : function  () : void, scope : variant) : boolean;
        static function each (iterable : variant[], fn : function  () : void, reverse : boolean) : boolean;
        static function each (iterable : variant[], fn : function  () : void) : boolean;
        static function each (iterable : NodeList, fn : function  () : void, scope : variant, reverse : boolean) : boolean;
        static function each (iterable : NodeList, fn : function  () : void, scope : variant) : boolean;
        static function each (iterable : NodeList, fn : function  () : void, reverse : boolean) : boolean;
        static function each (iterable : NodeList, fn : function  () : void) : boolean;
        static function each (iterable : variant, fn : function  () : void, scope : variant, reverse : boolean) : boolean;
        static function each (iterable : variant, fn : function  () : void, scope : variant) : boolean;
        static function each (iterable : variant, fn : function  () : void, reverse : boolean) : boolean;
        static function each (iterable : variant, fn : function  () : void) : boolean;
        static function equals (array1 : variant[], array2 : variant[]) : boolean;
        static function erase (array : variant[], index : number, removeCount : number) : variant[];
        static function every (array : variant[], fn : function  () : void, scope : variant) : boolean;
        static function filter (array : variant[], fn : function  () : void, scope : variant) : variant[];
        static function findBy (array : variant[], fn : function  () : void, scope : variant) : variant;
        static function findBy (array : variant[], fn : function  () : void) : variant;
        static function flatten (array : variant[]) : variant[];
        static function forEach (array : variant[], fn : function  () : void, scope : variant) : void;
        static function forEach (array : variant[], fn : function  () : void) : void;
        static function from (value : variant, newReference : boolean) : variant[];
        static function from (value : variant) : variant[];
        static function include (array : variant[], item : variant) : void;
        static function indexOf (array : variant[], item : variant, from : number) : number;
        static function indexOf (array : variant[], item : variant) : number;
        static function insert (array : variant[], index : number, items : variant[]) : variant[];
        static function intersect (array1 : variant[], array2 : variant[], etc : variant[]) : variant[];
        static function map (array : variant[], fn : function  () : void, scope : variant) : variant[];
        static function map (array : variant[], fn : function  () : void) : variant[];
        static function max (array : variant[], comparisonFn : function  () : void) : variant;
        static function max (array : variant[]) : variant;
        static function max (array : NodeList, comparisonFn : function  () : void) : variant;
        static function max (array : NodeList) : variant;
        static function mean (array : variant[]) : number;
        static function merge (array1 : variant[], array2 : variant[], etc : variant[]) : variant[];
        static function min (array : variant[], comparisonFn : function  () : void) : variant;
        static function min (array : variant[]) : variant;
        static function min (array : NodeList, comparisonFn : function  () : void) : variant;
        static function min (array : NodeList) : variant;
        static function pluck (array : variant[], propertyName : string) : variant[];
        static function pluck (array : NodeList, propertyName : string) : variant[];
        static function push (target : variant[], elements : variant) : variant[];
        static function remove (array : variant[], item : variant) : variant[];
        static function replace (array : variant[], index : number, removeCount : number, insert : variant[]) : variant[];
        static function replace (array : variant[], index : number, removeCount : number) : variant[];
        static function slice (array : variant[], begin : number, end : number) : variant[];
        static function some (array : variant[], fn : function  () : void, scope : variant) : boolean;
        static function sort (array : variant[], sortFn : function  () : void) : variant[];
        static function sort (array : variant[]) : variant[];
        static function splice (array : variant[], index : number, removeCount : number, elements : variant) : variant[];
        static function sum (array : variant[]) : number;
        static function toArray (iterable : variant, start : number, end : number) : variant[];
        static function toArray (iterable : variant, start : number) : variant[];
        static function toArray (iterable : variant) : variant[];
        static function toMap (array : variant[], getKey : string, scope : variant) : variant;
        static function toMap (array : variant[], getKey : string) : variant;
        static function toMap (array : variant[], getKey : function  () : void, scope : variant) : variant;
        static function toMap (array : variant[], getKey : function  () : void) : variant;
        static function toMap (array : variant[], scope : variant) : variant;
        static function toMap (array : variant[]) : variant;
        static function toValueMap (array : variant[], getKey : string, scope : variant) : variant;
        static function toValueMap (array : variant[], getKey : string) : variant;
        static function toValueMap (array : variant[], getKey : function  () : void, scope : variant) : variant;
        static function toValueMap (array : variant[], getKey : function  () : void) : variant;
        static function toValueMap (array : variant[], scope : variant) : variant;
        static function toValueMap (array : variant[]) : variant;
        static function union (array1 : variant[], array2 : variant[], etc : variant[]) : variant[];
        static function unique (array : variant[]) : variant[];
    }

    class Base
    {
        var self : Ext.Class;

        function callParent (args : variant[]) : variant;
        function callSuper (args : variant[]) : variant;
        function getInitialConfig (name : string) : variant;
        function getInitialConfig () : variant;
        function initConfig (config : variant) : variant;
        function statics () : Ext.Class;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Class
    {
        function constructor (data : variant, onCreated : function  () : void);
    }

    class ClassManager
    {
        static function addNameAliasMappings (aliases : variant) : variant;
        static function addNameAlternateMappings (alternates : variant) : variant;
        static function get (name : string) : Ext.Class;
        static function getAliasesByName (name : string) : variant[];
        static function getByAlias (alias : string) : Ext.Class;
        static function getClass (object : variant) : Ext.Class;
        static function getDisplayName (object : variant) : string;
        static function getName (object : Ext.Class) : string;
        static function getName (object : variant) : string;
        static function getNameByAlias (alias : string) : string;
        static function getNameByAlternate (alternate : string) : string;
        static function getNamesByExpression (expression : string) : string[];
        static function instantiateByAlias (alias : string, args : variant) : variant;
        static function isCreated (className : string) : boolean;
        static function set (name : string, value : variant) : variant;
        static function setAlias (cls : Ext.Class, alias : string) : variant;
        static function setAlias (cls : string, alias : string) : variant;
        static function setNamespace (name : string, value : variant) : void;
    }

    class Component extends Ext.AbstractComponent
    {
        var floatParent : Ext.container.Container;
        var scrollFlags : variant;
        var zIndexManager : Ext.ZIndexManager;
        var zIndexParent : Ext.container.Container;

        function constructor (config : Ext.dom.Element);
        function constructor (config : string);
        function constructor (config : variant);
        function afterComponentLayout () : void;
        function afterHide (callback : function  () : void, scope : variant) : void;
        function afterHide (callback : function  () : void) : void;
        function afterHide (scope : variant) : void;
        function afterHide () : void;
        function afterRender () : void;
        function afterSetPosition (ax : variant, ay : variant) : void;
        function afterShow (animateTarget : string, callback : function  () : void, scope : variant) : void;
        function afterShow (animateTarget : string, callback : function  () : void) : void;
        function afterShow (animateTarget : string, scope : variant) : void;
        function afterShow (animateTarget : string) : void;
        function afterShow (animateTarget : Ext.dom.Element, callback : function  () : void, scope : variant) : void;
        function afterShow (animateTarget : Ext.dom.Element, callback : function  () : void) : void;
        function afterShow (animateTarget : Ext.dom.Element, scope : variant) : void;
        function afterShow (animateTarget : Ext.dom.Element) : void;
        function afterShow (callback : function  () : void, scope : variant) : void;
        function afterShow (callback : function  () : void) : void;
        function afterShow (scope : variant) : void;
        function afterShow () : void;
        override function beforeLayout () : void;
        function beforeShow () : void;
        function bubble (fn : function  () : void, scope : variant, args : variant[]) : variant;
        function bubble (fn : function  () : void, scope : variant) : variant;
        function bubble (fn : function  () : void, args : variant[]) : variant;
        function bubble (fn : function  () : void) : variant;
        function cancelFocus () : void;
        function cloneConfig (overrides : variant) : Ext.Component;
        function findParentBy (fn : function  () : void) : Ext.container.Container;
        function findParentByType (xtype : string) : Ext.container.Container;
        function findParentByType (xtype : Ext.Class) : Ext.container.Container;
        function focus (selectText : boolean, delay : boolean, callback : function  () : void, scope : function  () : void) : Ext.Component;
        function focus (selectText : boolean, delay : boolean, callback : function  () : void) : Ext.Component;
        function focus (selectText : boolean, delay : boolean) : Ext.Component;
        function focus (selectText : boolean, delay : number, callback : function  () : void, scope : function  () : void) : Ext.Component;
        function focus (selectText : boolean, delay : number, callback : function  () : void) : Ext.Component;
        function focus (selectText : boolean, delay : number) : Ext.Component;
        function focus (selectText : boolean, callback : function  () : void, scope : function  () : void) : Ext.Component;
        function focus (selectText : boolean, callback : function  () : void) : Ext.Component;
        function focus (selectText : boolean) : Ext.Component;
        function focus (delay : number, callback : function  () : void, scope : function  () : void) : Ext.Component;
        function focus (delay : number, callback : function  () : void) : Ext.Component;
        function focus (delay : number) : Ext.Component;
        function focus (callback : function  () : void, scope : function  () : void) : Ext.Component;
        function focus (callback : function  () : void) : Ext.Component;
        function focus () : Ext.Component;
        override function getBubbleTarget () : Ext.container.Container;
        override function getEl () : Ext.dom.Element;
        override function getId () : string;
        function getPosition (local : boolean) : Number[];
        function getPosition () : Number[];
        function getXType () : string;
        function hide (animateTarget : string, callback : function  () : void, scope : variant) : void;
        function hide (animateTarget : string, callback : function  () : void) : void;
        function hide (animateTarget : string, scope : variant) : void;
        function hide (animateTarget : string) : void;
        function hide (animateTarget : Ext.dom.Element, callback : function  () : void, scope : variant) : void;
        function hide (animateTarget : Ext.dom.Element, callback : function  () : void) : void;
        function hide (animateTarget : Ext.dom.Element, scope : variant) : void;
        function hide (animateTarget : Ext.dom.Element) : void;
        function hide (animateTarget : Ext.Component, callback : function  () : void, scope : variant) : void;
        function hide (animateTarget : Ext.Component, callback : function  () : void) : void;
        function hide (animateTarget : Ext.Component, scope : variant) : void;
        function hide (animateTarget : Ext.Component) : void;
        function hide (callback : function  () : void, scope : variant) : void;
        function hide (callback : function  () : void) : void;
        function hide (scope : variant) : void;
        function hide () : void;
        function initComponent () : void;
        function onAdded () : void;
        function onDestroy () : void;
        function onHide (animateTarget : string, callback : function  () : void, scope : variant) : void;
        function onHide (animateTarget : string, callback : function  () : void) : void;
        function onHide (animateTarget : string, scope : variant) : void;
        function onHide (animateTarget : string) : void;
        function onHide (animateTarget : Ext.dom.Element, callback : function  () : void, scope : variant) : void;
        function onHide (animateTarget : Ext.dom.Element, callback : function  () : void) : void;
        function onHide (animateTarget : Ext.dom.Element, scope : variant) : void;
        function onHide (animateTarget : Ext.dom.Element) : void;
        function onHide (animateTarget : Ext.Component, callback : function  () : void, scope : variant) : void;
        function onHide (animateTarget : Ext.Component, callback : function  () : void) : void;
        function onHide (animateTarget : Ext.Component, scope : variant) : void;
        function onHide (animateTarget : Ext.Component) : void;
        function onHide (callback : function  () : void, scope : variant) : void;
        function onHide (callback : function  () : void) : void;
        function onHide (scope : variant) : void;
        function onHide () : void;
        function onShow (animateTarget : string, callback : function  () : void, scope : variant) : void;
        function onShow (animateTarget : string, callback : function  () : void) : void;
        function onShow (animateTarget : string, scope : variant) : void;
        function onShow (animateTarget : string) : void;
        function onShow (animateTarget : Ext.dom.Element, callback : function  () : void, scope : variant) : void;
        function onShow (animateTarget : Ext.dom.Element, callback : function  () : void) : void;
        function onShow (animateTarget : Ext.dom.Element, scope : variant) : void;
        function onShow (animateTarget : Ext.dom.Element) : void;
        function onShow (callback : function  () : void, scope : variant) : void;
        function onShow (callback : function  () : void) : void;
        function onShow (scope : variant) : void;
        function onShow () : void;
        function onShowComplete (callback : function  () : void, scope : variant) : void;
        function onShowComplete (callback : function  () : void) : void;
        function onShowComplete (scope : variant) : void;
        function onShowComplete () : void;
        function scrollBy (deltaX : number, deltaY : number, animate : boolean) : void;
        function scrollBy (deltaX : number, deltaY : number, animate : variant) : void;
        function scrollBy (deltaX : number, deltaY : boolean, animate : boolean) : void;
        function scrollBy (deltaX : number, deltaY : boolean, animate : variant) : void;
        function scrollBy (deltaX : number, deltaY : variant, animate : boolean) : void;
        function scrollBy (deltaX : number, deltaY : variant, animate : variant) : void;
        function scrollBy (deltaX : Number[], deltaY : number, animate : boolean) : void;
        function scrollBy (deltaX : Number[], deltaY : number, animate : variant) : void;
        function scrollBy (deltaX : Number[], deltaY : boolean, animate : boolean) : void;
        function scrollBy (deltaX : Number[], deltaY : boolean, animate : variant) : void;
        function scrollBy (deltaX : Number[], deltaY : variant, animate : boolean) : void;
        function scrollBy (deltaX : Number[], deltaY : variant, animate : variant) : void;
        function scrollBy (deltaX : variant, deltaY : number, animate : boolean) : void;
        function scrollBy (deltaX : variant, deltaY : number, animate : variant) : void;
        function scrollBy (deltaX : variant, deltaY : boolean, animate : boolean) : void;
        function scrollBy (deltaX : variant, deltaY : boolean, animate : variant) : void;
        function scrollBy (deltaX : variant, deltaY : variant, animate : boolean) : void;
        function scrollBy (deltaX : variant, deltaY : variant, animate : variant) : void;
        function setAutoScroll (scroll : boolean) : variant;
        function setBorderRegion (region : string) : string;
        function setLoading (load : boolean, targetEl : boolean) : Ext.LoadMask;
        function setLoading (load : boolean) : Ext.LoadMask;
        function setLoading (load : variant, targetEl : boolean) : Ext.LoadMask;
        function setLoading (load : variant) : Ext.LoadMask;
        function setLoading (load : string, targetEl : boolean) : Ext.LoadMask;
        function setLoading (load : string) : Ext.LoadMask;
        function setOverflowXY (overflowX : string, overflowY : string) : variant;
        function setPagePosition (x : number, y : number, animate : boolean) : variant;
        function setPagePosition (x : number, y : number, animate : variant) : variant;
        function setPagePosition (x : number, y : number) : variant;
        function setPagePosition (x : number, animate : boolean) : variant;
        function setPagePosition (x : number, animate : variant) : variant;
        function setPagePosition (x : number) : variant;
        function setPagePosition (x : Number[], y : number, animate : boolean) : variant;
        function setPagePosition (x : Number[], y : number, animate : variant) : variant;
        function setPagePosition (x : Number[], y : number) : variant;
        function setPagePosition (x : Number[], animate : boolean) : variant;
        function setPagePosition (x : Number[], animate : variant) : variant;
        function setPagePosition (x : Number[]) : variant;
        function setPosition (x : number, y : number, animate : boolean) : variant;
        function setPosition (x : number, y : number, animate : variant) : variant;
        function setPosition (x : number, y : number) : variant;
        function setPosition (x : number, animate : boolean) : variant;
        function setPosition (x : number, animate : variant) : variant;
        function setPosition (x : number) : variant;
        function setPosition (x : Number[], y : number, animate : boolean) : variant;
        function setPosition (x : Number[], y : number, animate : variant) : variant;
        function setPosition (x : Number[], y : number) : variant;
        function setPosition (x : Number[], animate : boolean) : variant;
        function setPosition (x : Number[], animate : variant) : variant;
        function setPosition (x : Number[]) : variant;
        function setPosition (x : variant, y : number, animate : boolean) : variant;
        function setPosition (x : variant, y : number, animate : variant) : variant;
        function setPosition (x : variant, y : number) : variant;
        function setPosition (x : variant, animate : boolean) : variant;
        function setPosition (x : variant, animate : variant) : variant;
        function setPosition (x : variant) : variant;
        function setRegionWeight (weight : number) : number;
        function show (animateTarget : string, callback : function  () : void, scope : variant) : void;
        function show (animateTarget : string, callback : function  () : void) : void;
        function show (animateTarget : string, scope : variant) : void;
        function show (animateTarget : string) : void;
        function show (animateTarget : Ext.dom.Element, callback : function  () : void, scope : variant) : void;
        function show (animateTarget : Ext.dom.Element, callback : function  () : void) : void;
        function show (animateTarget : Ext.dom.Element, scope : variant) : void;
        function show (animateTarget : Ext.dom.Element) : void;
        function show (callback : function  () : void, scope : variant) : void;
        function show (callback : function  () : void) : void;
        function show (scope : variant) : void;
        function show () : void;
        function showAt (x : number, y : number, animate : boolean) : void;
        function showAt (x : number, y : number, animate : variant) : void;
        function showAt (x : number, y : number) : void;
        function showAt (x : number, animate : boolean) : void;
        function showAt (x : number, animate : variant) : void;
        function showAt (x : number) : void;
        function showAt (x : Number[], y : number, animate : boolean) : void;
        function showAt (x : Number[], y : number, animate : variant) : void;
        function showAt (x : Number[], y : number) : void;
        function showAt (x : Number[], animate : boolean) : void;
        function showAt (x : Number[], animate : variant) : void;
        function showAt (x : Number[]) : void;
        function showBy (component : Ext.Component, position : string, offsets : Number[]) : variant;
        function showBy (component : Ext.Component, position : string) : variant;
        function showBy (component : Ext.Component, offsets : Number[]) : variant;
        function showBy (component : Ext.Component) : variant;
        function showBy (component : Ext.dom.Element, position : string, offsets : Number[]) : variant;
        function showBy (component : Ext.dom.Element, position : string) : variant;
        function showBy (component : Ext.dom.Element, offsets : Number[]) : variant;
        function showBy (component : Ext.dom.Element) : variant;
        function updateBox (box : variant) : variant;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class ComponentLoader extends Ext.ElementLoader
    {
        override function setTarget (target : string) : void;
        function setTarget (target : Ext.Component) : void;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class ComponentManager extends Ext.AbstractManager
    {
        static function create (config : variant, defaultType : string) : Ext.Component;
        static function create (config : variant) : Ext.Component;
        static function registerType (type : variant, cls : variant) : void;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class ComponentQuery extends Ext.Base
    {
        static function is (component : Ext.Component, selector : string) : boolean;
        static function query (selector : string, root : Ext.container.Container) : Ext.Component[];
        static function query (selector : string) : Ext.Component[];
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Date
    {
        static var DAY : string;
        static var HOUR : string;
        static var MILLI : string;
        static var MINUTE : string;
        static var MONTH : string;
        static var SECOND : string;
        static var YEAR : string;
        static var dayNames : string[];
        static var defaultFormat : string;
        static var defaults : variant;
        static var formatCodes : variant;
        static var formatFunctions : variant;
        static var monthNames : string[];
        static var monthNumbers : variant;
        static var parseFunctions : variant;
        static var useStrict : boolean;

        static function add (date : Date, interval : string, value : number) : Date;
        static function between (date : Date, start : Date, end : Date) : boolean;
        static function clearTime (date : Date, clone : boolean) : Date;
        static function clearTime (date : Date) : Date;
        static function clone (date : Date) : Date;
        static function format (date : Date, format : string) : string;
        static function formatContainsDateInfo (format : string) : boolean;
        static function formatContainsHourInfo (format : string) : boolean;
        static function getDayOfYear (date : Date) : number;
        static function getDaysInMonth (date : Date) : number;
        static function getElapsed (dateA : Date, dateB : Date) : number;
        static function getElapsed (dateA : Date) : number;
        static function getFirstDateOfMonth (date : Date) : Date;
        static function getFirstDayOfMonth (date : Date) : number;
        static function getGMTOffset (date : Date, colon : boolean) : string;
        static function getGMTOffset (date : Date) : string;
        static function getLastDateOfMonth (date : Date) : Date;
        static function getLastDayOfMonth (date : Date) : number;
        static function getMonthNumber (name : string) : number;
        static function getShortDayName (day : number) : string;
        static function getShortMonthName (month : number) : string;
        static function getSuffix (date : Date) : string;
        static function getTimezone (date : Date) : string;
        static function getWeekOfYear (date : Date) : number;
        static function isDST (date : Date) : boolean;
        static function isEqual (date1 : Date, date2 : Date) : boolean;
        static function isLeapYear (date : Date) : boolean;
        static function isValid (year : number, month : number, day : number, hour : number, minute : number, second : number, millisecond : number) : boolean;
        static function isValid (year : number, month : number, day : number, hour : number, minute : number, second : number) : boolean;
        static function isValid (year : number, month : number, day : number, hour : number, minute : number) : boolean;
        static function isValid (year : number, month : number, day : number, hour : number) : boolean;
        static function isValid (year : number, month : number, day : number) : boolean;
        static function now () : number;
        static function parse (input : string, format : string, strict : boolean) : Date;
        static function parse (input : string, format : string) : Date;
        static function subtract (date : Date, interval : string, value : number) : Date;
        static function unescapeFormat (format : string) : string;
    }

    class DomHelper extends Ext.dom.Helper
    {
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Editor extends Ext.container.Container
    {
        function afterRender (ct : variant, position : variant) : void;
        function cancelEdit (remainVisible : boolean) : void;
        function cancelEdit () : void;
        function completeEdit (remainVisible : boolean) : void;
        function completeEdit () : void;
        function getValue () : variant;
        override function onHide () : void;
        override function onShow () : void;
        function realign (autoSize : boolean) : void;
        function realign () : void;
        function setValue (value : variant) : void;
        function startEdit (el : string, value : string) : void;
        function startEdit (el : string) : void;
        function startEdit (el : HTMLElement, value : string) : void;
        function startEdit (el : HTMLElement) : void;
        function startEdit (el : Ext.dom.Element, value : string) : void;
        function startEdit (el : Ext.dom.Element) : void;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class ElementLoader extends Ext.Base
    {
        var isLoader : boolean;

        function constructor (config : variant);
        function abort () : void;
        function destroy () : void;
        function getTarget () : Ext.Component;
        function isAutoRefreshing () : boolean;
        function load (options : variant) : void;
        function setTarget (target : string) : void;
        function setTarget (target : HTMLElement) : void;
        function setTarget (target : Ext.dom.Element) : void;
        function startAutoRefresh (interval : number, options : variant) : void;
        function startAutoRefresh (interval : number) : void;
        function stopAutoRefresh () : void;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Error extends Error
    {
        static var ignore : boolean;
        static var notify : boolean;

        function constructor (config : string);
        function constructor (config : variant);
        override function toString () : string;
        static function handle (err : Ext.Error) : void;
        static function raise (err : string) : void;
        static function raise (err : variant) : void;
    }

    class EventManager
    {
        static var idleEvent : variant;

        static function addListener (el : string, eventName : string, handler : function  () : void, scope : variant, options : variant) : void;
        static function addListener (el : string, eventName : string, handler : function  () : void, scope : variant) : void;
        static function addListener (el : string, eventName : string, handler : function  () : void) : void;
        static function addListener (el : string, eventName : string, handler : string, scope : variant, options : variant) : void;
        static function addListener (el : string, eventName : string, handler : string, scope : variant) : void;
        static function addListener (el : string, eventName : string, handler : string) : void;
        static function addListener (el : Ext.dom.Element, eventName : string, handler : function  () : void, scope : variant, options : variant) : void;
        static function addListener (el : Ext.dom.Element, eventName : string, handler : function  () : void, scope : variant) : void;
        static function addListener (el : Ext.dom.Element, eventName : string, handler : function  () : void) : void;
        static function addListener (el : Ext.dom.Element, eventName : string, handler : string, scope : variant, options : variant) : void;
        static function addListener (el : Ext.dom.Element, eventName : string, handler : string, scope : variant) : void;
        static function addListener (el : Ext.dom.Element, eventName : string, handler : string) : void;
        static function addListener (el : HTMLElement, eventName : string, handler : function  () : void, scope : variant, options : variant) : void;
        static function addListener (el : HTMLElement, eventName : string, handler : function  () : void, scope : variant) : void;
        static function addListener (el : HTMLElement, eventName : string, handler : function  () : void) : void;
        static function addListener (el : HTMLElement, eventName : string, handler : string, scope : variant, options : variant) : void;
        static function addListener (el : HTMLElement, eventName : string, handler : string, scope : variant) : void;
        static function addListener (el : HTMLElement, eventName : string, handler : string) : void;
        static function addListener (el : Window, eventName : string, handler : function  () : void, scope : variant, options : variant) : void;
        static function addListener (el : Window, eventName : string, handler : function  () : void, scope : variant) : void;
        static function addListener (el : Window, eventName : string, handler : function  () : void) : void;
        static function addListener (el : Window, eventName : string, handler : string, scope : variant, options : variant) : void;
        static function addListener (el : Window, eventName : string, handler : string, scope : variant) : void;
        static function addListener (el : Window, eventName : string, handler : string) : void;
        static function getId (element : HTMLElement) : string;
        static function getId (element : Ext.dom.Element) : string;
        static function getKeyEvent () : string;
        static function getPageX (event : variant) : number;
        static function getPageXY (event : variant) : Number[];
        static function getPageY (event : variant) : number;
        static function getRelatedTarget (event : variant) : HTMLElement;
        static function getTarget (event : variant) : HTMLElement;
        static function on (el : string, eventName : string, handler : function  () : void, scope : variant, options : variant) : void;
        static function on (el : string, eventName : string, handler : function  () : void, scope : variant) : void;
        static function on (el : string, eventName : string, handler : function  () : void) : void;
        static function on (el : string, eventName : string, handler : string, scope : variant, options : variant) : void;
        static function on (el : string, eventName : string, handler : string, scope : variant) : void;
        static function on (el : string, eventName : string, handler : string) : void;
        static function on (el : Ext.dom.Element, eventName : string, handler : function  () : void, scope : variant, options : variant) : void;
        static function on (el : Ext.dom.Element, eventName : string, handler : function  () : void, scope : variant) : void;
        static function on (el : Ext.dom.Element, eventName : string, handler : function  () : void) : void;
        static function on (el : Ext.dom.Element, eventName : string, handler : string, scope : variant, options : variant) : void;
        static function on (el : Ext.dom.Element, eventName : string, handler : string, scope : variant) : void;
        static function on (el : Ext.dom.Element, eventName : string, handler : string) : void;
        static function on (el : HTMLElement, eventName : string, handler : function  () : void, scope : variant, options : variant) : void;
        static function on (el : HTMLElement, eventName : string, handler : function  () : void, scope : variant) : void;
        static function on (el : HTMLElement, eventName : string, handler : function  () : void) : void;
        static function on (el : HTMLElement, eventName : string, handler : string, scope : variant, options : variant) : void;
        static function on (el : HTMLElement, eventName : string, handler : string, scope : variant) : void;
        static function on (el : HTMLElement, eventName : string, handler : string) : void;
        static function on (el : Window, eventName : string, handler : function  () : void, scope : variant, options : variant) : void;
        static function on (el : Window, eventName : string, handler : function  () : void, scope : variant) : void;
        static function on (el : Window, eventName : string, handler : function  () : void) : void;
        static function on (el : Window, eventName : string, handler : string, scope : variant, options : variant) : void;
        static function on (el : Window, eventName : string, handler : string, scope : variant) : void;
        static function on (el : Window, eventName : string, handler : string) : void;
        static function onDocumentReady (fn : function  () : void, scope : variant, options : variant) : void;
        static function onDocumentReady (fn : function  () : void, scope : variant) : void;
        static function onDocumentReady (fn : function  () : void) : void;
        static function onWindowResize (fn : function  () : void, scope : variant, options : boolean) : void;
        static function onWindowResize (fn : function  () : void, scope : variant) : void;
        static function onWindowUnload (fn : function  () : void, scope : variant, options : boolean) : void;
        static function pollScroll () : void;
        static function preventDefault (event : Event) : void;
        static function purgeElement (el : string, eventName : string) : void;
        static function purgeElement (el : string) : void;
        static function purgeElement (el : Ext.dom.Element, eventName : string) : void;
        static function purgeElement (el : Ext.dom.Element) : void;
        static function purgeElement (el : HTMLElement, eventName : string) : void;
        static function purgeElement (el : HTMLElement) : void;
        static function purgeElement (el : Window, eventName : string) : void;
        static function purgeElement (el : Window) : void;
        static function removeAll (el : string) : void;
        static function removeAll (el : Ext.dom.Element) : void;
        static function removeAll (el : HTMLElement) : void;
        static function removeAll (el : Window) : void;
        static function removeListener (el : string, eventName : string, fn : function  () : void, scope : variant) : void;
        static function removeListener (el : Ext.dom.Element, eventName : string, fn : function  () : void, scope : variant) : void;
        static function removeListener (el : HTMLElement, eventName : string, fn : function  () : void, scope : variant) : void;
        static function removeListener (el : Window, eventName : string, fn : function  () : void, scope : variant) : void;
        static function removeResizeListener (fn : function  () : void, scope : variant) : void;
        static function removeUnloadListener (fn : function  () : void, scope : variant) : void;
        static function stopEvent (event : Event) : void;
        static function stopPropagation (event : Event) : void;
        static function un (el : string, eventName : string, fn : function  () : void, scope : variant) : void;
        static function un (el : Ext.dom.Element, eventName : string, fn : function  () : void, scope : variant) : void;
        static function un (el : HTMLElement, eventName : string, fn : function  () : void, scope : variant) : void;
        static function un (el : Window, eventName : string, fn : function  () : void, scope : variant) : void;
    }

    class EventObject
    {
        static var A : number;
        static var ALT : number;
        static var B : number;
        static var BACKSPACE : number;
        static var C : number;
        static var CAPS_LOCK : number;
        static var CONTEXT_MENU : number;
        static var CTRL : number;
        static var D : number;
        static var DELETE : number;
        static var DOWN : number;
        static var E : number;
        static var EIGHT : number;
        static var END : number;
        static var ENTER : number;
        static var ESC : number;
        static var F : number;
        static var F1 : number;
        static var F10 : number;
        static var F11 : number;
        static var F12 : number;
        static var F2 : number;
        static var F3 : number;
        static var F4 : number;
        static var F5 : number;
        static var F6 : number;
        static var F7 : number;
        static var F8 : number;
        static var F9 : number;
        static var FIVE : number;
        static var FOUR : number;
        static var G : number;
        static var H : number;
        static var HOME : number;
        static var I : number;
        static var INSERT : number;
        static var J : number;
        static var K : number;
        static var L : number;
        static var LEFT : number;
        static var M : number;
        static var N : number;
        static var NINE : number;
        static var NUM_CENTER : number;
        static var NUM_DIVISION : number;
        static var NUM_EIGHT : number;
        static var NUM_FIVE : number;
        static var NUM_FOUR : number;
        static var NUM_MINUS : number;
        static var NUM_MULTIPLY : number;
        static var NUM_NINE : number;
        static var NUM_ONE : number;
        static var NUM_PERIOD : number;
        static var NUM_PLUS : number;
        static var NUM_SEVEN : number;
        static var NUM_SIX : number;
        static var NUM_THREE : number;
        static var NUM_TWO : number;
        static var NUM_ZERO : number;
        static var O : number;
        static var ONE : number;
        static var P : number;
        static var PAGE_DOWN : number;
        static var PAGE_UP : number;
        static var PAUSE : number;
        static var PRINT_SCREEN : number;
        static var Q : number;
        static var R : number;
        static var RETURN : number;
        static var RIGHT : number;
        static var S : number;
        static var SEVEN : number;
        static var SHIFT : number;
        static var SIX : number;
        static var SPACE : number;
        static var T : number;
        static var TAB : number;
        static var THREE : number;
        static var TWO : number;
        static var U : number;
        static var UP : number;
        static var V : number;
        static var W : number;
        static var WHEEL_SCALE : number;
        static var X : number;
        static var Y : number;
        static var Z : number;
        static var ZERO : number;
        static var altKey : boolean;
        static var ctrlKey : boolean;
        static var shiftKey : boolean;

        static function correctWheelDelta (delta : number) : void;
        static function getCharCode () : number;
        static function getKey () : number;
        static function getPoint () : Ext.util.Point;
        static function getRelatedTarget (selector : string, maxDepth : number, returnEl : boolean) : HTMLElement;
        static function getRelatedTarget (selector : string, maxDepth : number) : HTMLElement;
        static function getRelatedTarget (selector : string, maxDepth : HTMLElement, returnEl : boolean) : HTMLElement;
        static function getRelatedTarget (selector : string, maxDepth : HTMLElement) : HTMLElement;
        static function getRelatedTarget (selector : string, returnEl : boolean) : HTMLElement;
        static function getRelatedTarget (selector : string) : HTMLElement;
        static function getRelatedTarget (maxDepth : number, returnEl : boolean) : HTMLElement;
        static function getRelatedTarget (maxDepth : number) : HTMLElement;
        static function getRelatedTarget (maxDepth : HTMLElement, returnEl : boolean) : HTMLElement;
        static function getRelatedTarget (maxDepth : HTMLElement) : HTMLElement;
        static function getRelatedTarget (returnEl : boolean) : HTMLElement;
        static function getRelatedTarget () : HTMLElement;
        static function getTarget (selector : string, maxDepth : number, returnEl : boolean) : HTMLElement;
        static function getTarget (selector : string, maxDepth : number) : HTMLElement;
        static function getTarget (selector : string, maxDepth : HTMLElement, returnEl : boolean) : HTMLElement;
        static function getTarget (selector : string, maxDepth : HTMLElement) : HTMLElement;
        static function getTarget (selector : string, returnEl : boolean) : HTMLElement;
        static function getTarget (selector : string) : HTMLElement;
        static function getTarget (maxDepth : number, returnEl : boolean) : HTMLElement;
        static function getTarget (maxDepth : number) : HTMLElement;
        static function getTarget (maxDepth : HTMLElement, returnEl : boolean) : HTMLElement;
        static function getTarget (maxDepth : HTMLElement) : HTMLElement;
        static function getTarget (returnEl : boolean) : HTMLElement;
        static function getTarget () : HTMLElement;
        static function getWheelDelta () : number;
        static function getWheelDeltas () : variant;
        static function getX () : number;
        static function getXY () : Number[];
        static function getY () : number;
        static function hasModifier () : boolean;
        static function injectEvent (target : Ext.dom.Element) : void;
        static function injectEvent (target : HTMLElement) : void;
        static function injectEvent () : void;
        static function isNavKeyPress () : boolean;
        static function isSpecialKey () : boolean;
        static function preventDefault () : void;
        static function stopEvent () : void;
        static function stopPropagation () : void;
        static function within (el : string, related : boolean, allowEl : boolean) : boolean;
        static function within (el : string, related : boolean) : boolean;
        static function within (el : string) : boolean;
        static function within (el : HTMLElement, related : boolean, allowEl : boolean) : boolean;
        static function within (el : HTMLElement, related : boolean) : boolean;
        static function within (el : HTMLElement) : boolean;
        static function within (el : Ext.dom.Element, related : boolean, allowEl : boolean) : boolean;
        static function within (el : Ext.dom.Element, related : boolean) : boolean;
        static function within (el : Ext.dom.Element) : boolean;
    }

    class FocusManager extends Ext.Base
    {
        static var enabled : boolean;
        static var focusedCmp : Ext.Component;
        static var whitelist : string[];

        static function constructor (config : variant);
        static function addXTypeToWhitelist (xtype : string) : void;
        static function addXTypeToWhitelist (xtype : string[]) : void;
        static function disable () : void;
        static function enable (options : boolean) : void;
        static function enable (options : variant) : void;
        static function removeXTypeFromWhitelist (xtype : string) : void;
        static function removeXTypeFromWhitelist (xtype : string[]) : void;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Function
    {
        static function alias (object : variant, methodName : string) : function () : void;
        static function alias (object : function  () : void, methodName : string) : function () : void;
        static function bind (fn : function  () : void, scope : variant, args : variant[], appendArgs : boolean) : function () : void;
        static function bind (fn : function  () : void, scope : variant, args : variant[], appendArgs : number) : function () : void;
        static function bind (fn : function  () : void, scope : variant, args : variant[]) : function () : void;
        static function bind (fn : function  () : void, scope : variant, appendArgs : boolean) : function () : void;
        static function bind (fn : function  () : void, scope : variant, appendArgs : number) : function () : void;
        static function bind (fn : function  () : void, scope : variant) : function () : void;
        static function bind (fn : function  () : void, args : variant[], appendArgs : boolean) : function () : void;
        static function bind (fn : function  () : void, args : variant[], appendArgs : number) : function () : void;
        static function bind (fn : function  () : void, args : variant[]) : function () : void;
        static function bind (fn : function  () : void, appendArgs : boolean) : function () : void;
        static function bind (fn : function  () : void, appendArgs : number) : function () : void;
        static function bind (fn : function  () : void) : function () : void;
        static function clone (method : function  () : void) : function () : void;
        static function createBuffered (fn : function  () : void, buffer : number, scope : variant, args : variant[]) : function () : void;
        static function createBuffered (fn : function  () : void, buffer : number, scope : variant) : function () : void;
        static function createBuffered (fn : function  () : void, buffer : number, args : variant[]) : function () : void;
        static function createBuffered (fn : function  () : void, buffer : number) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, scope : variant, args : variant[], appendArgs : boolean) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, scope : variant, args : variant[], appendArgs : number) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, scope : variant, args : variant[]) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, scope : variant, appendArgs : boolean) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, scope : variant, appendArgs : number) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, scope : variant) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, args : variant[], appendArgs : boolean) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, args : variant[], appendArgs : number) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, args : variant[]) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, appendArgs : boolean) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number, appendArgs : number) : function () : void;
        static function createDelayed (fn : function  () : void, delay : number) : function () : void;
        static function createInterceptor (origFn : function  () : void, newFn : function  () : void, scope : variant, returnValue : variant) : function () : void;
        static function createInterceptor (origFn : function  () : void, newFn : function  () : void, scope : variant) : function () : void;
        static function createInterceptor (origFn : function  () : void, newFn : function  () : void) : function () : void;
        static function createSequence (originalFn : function  () : void, newFn : function  () : void, scope : variant) : function () : void;
        static function createSequence (originalFn : function  () : void, newFn : function  () : void) : function () : void;
        static function createThrottled (fn : function  () : void, interval : number, scope : variant) : function () : void;
        static function createThrottled (fn : function  () : void, interval : number) : function () : void;
        static function defer (fn : function  () : void, millis : number, scope : variant, args : variant[], appendArgs : boolean) : number;
        static function defer (fn : function  () : void, millis : number, scope : variant, args : variant[], appendArgs : number) : number;
        static function defer (fn : function  () : void, millis : number, scope : variant, args : variant[]) : number;
        static function defer (fn : function  () : void, millis : number, scope : variant, appendArgs : boolean) : number;
        static function defer (fn : function  () : void, millis : number, scope : variant, appendArgs : number) : number;
        static function defer (fn : function  () : void, millis : number, scope : variant) : number;
        static function defer (fn : function  () : void, millis : number, args : variant[], appendArgs : boolean) : number;
        static function defer (fn : function  () : void, millis : number, args : variant[], appendArgs : number) : number;
        static function defer (fn : function  () : void, millis : number, args : variant[]) : number;
        static function defer (fn : function  () : void, millis : number, appendArgs : boolean) : number;
        static function defer (fn : function  () : void, millis : number, appendArgs : number) : number;
        static function defer (fn : function  () : void, millis : number) : number;
        static function flexSetter (setter : function  () : void) : function () : void;
        static function interceptAfter (object : variant, methodName : string, fn : function  () : void, scope : variant) : function () : void;
        static function interceptAfter (object : variant, methodName : string, fn : function  () : void) : function () : void;
        static function interceptBefore (object : variant, methodName : string, fn : function  () : void, scope : variant) : function () : void;
        static function interceptBefore (object : variant, methodName : string, fn : function  () : void) : function () : void;
        static function pass (fn : function  () : void, args : variant[], scope : variant) : function () : void;
        static function pass (fn : function  () : void, args : variant[]) : function () : void;
    }

    class Img extends Ext.Component
    {
        override function onDestroy () : void;
        function onRender () : void;
        function setSrc (src : string) : void;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class JSON
    {
        static function decode (json : string, safe : boolean) : variant;
        static function decode (json : string) : variant;
        static function encode (o : variant) : string;
        static function encodeDate (d : Date) : string;
        static function encodeString (s : string) : string;
        static function encodeValue (o : variant) : string;
    }

    class LoadMask extends Ext.Component
    {
        function constructor (config : variant);
        function constructor ();
        override function afterRender () : void;
        override function afterShow () : void;
        function bindStore (store : Ext.data.Store) : void;
        function getStoreListeners (store : variant) : variant;
        override function hide () : void;
        override function onDestroy () : void;
        override function onDisable () : void;
        override function onHide () : void;
        override function onShow () : void;
        override function show () : void;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Loader
    {
        static var history : variant[];

        static function addClassPathMappings (paths : Object ) : variant;
        static function exclude (excludes : variant[]) : variant;
        static function getConfig (name : string) : variant;
        static function getPath (className : string) : string;
        static function loadScript (options : variant) : void;
        static function loadScript (options : string) : void;
        static function onReady (fn : function  () : void, scope : variant, withDomReady : boolean) : void;
        static function require (expressions : string, fn : function  () : void, scope : variant, excludes : string) : void;
        static function require (expressions : string, fn : function  () : void, scope : variant, excludes : variant[]) : void;
        static function require (expressions : string, fn : function  () : void, scope : variant) : void;
        static function require (expressions : string, fn : function  () : void, excludes : string) : void;
        static function require (expressions : string, fn : function  () : void, excludes : variant[]) : void;
        static function require (expressions : string, fn : function  () : void) : void;
        static function require (expressions : string, scope : variant, excludes : string) : void;
        static function require (expressions : string, scope : variant, excludes : variant[]) : void;
        static function require (expressions : string, scope : variant) : void;
        static function require (expressions : string, excludes : string) : void;
        static function require (expressions : string, excludes : variant[]) : void;
        static function require (expressions : string) : void;
        static function require (expressions : variant[], fn : function  () : void, scope : variant, excludes : string) : void;
        static function require (expressions : variant[], fn : function  () : void, scope : variant, excludes : variant[]) : void;
        static function require (expressions : variant[], fn : function  () : void, scope : variant) : void;
        static function require (expressions : variant[], fn : function  () : void, excludes : string) : void;
        static function require (expressions : variant[], fn : function  () : void, excludes : variant[]) : void;
        static function require (expressions : variant[], fn : function  () : void) : void;
        static function require (expressions : variant[], scope : variant, excludes : string) : void;
        static function require (expressions : variant[], scope : variant, excludes : variant[]) : void;
        static function require (expressions : variant[], scope : variant) : void;
        static function require (expressions : variant[], excludes : string) : void;
        static function require (expressions : variant[], excludes : variant[]) : void;
        static function require (expressions : variant[]) : void;
        static function setConfig (config : variant) : variant;
        static function setPath (name : string, path : string) : variant;
        static function setPath (name : string) : variant;
        static function setPath (name : variant, path : string) : variant;
        static function setPath (name : variant) : variant;
        static function syncRequire (expressions : string, fn : function  () : void, scope : variant, excludes : string) : void;
        static function syncRequire (expressions : string, fn : function  () : void, scope : variant, excludes : variant[]) : void;
        static function syncRequire (expressions : string, fn : function  () : void, scope : variant) : void;
        static function syncRequire (expressions : string, fn : function  () : void, excludes : string) : void;
        static function syncRequire (expressions : string, fn : function  () : void, excludes : variant[]) : void;
        static function syncRequire (expressions : string, fn : function  () : void) : void;
        static function syncRequire (expressions : string, scope : variant, excludes : string) : void;
        static function syncRequire (expressions : string, scope : variant, excludes : variant[]) : void;
        static function syncRequire (expressions : string, scope : variant) : void;
        static function syncRequire (expressions : string, excludes : string) : void;
        static function syncRequire (expressions : string, excludes : variant[]) : void;
        static function syncRequire (expressions : string) : void;
        static function syncRequire (expressions : variant[], fn : function  () : void, scope : variant, excludes : string) : void;
        static function syncRequire (expressions : variant[], fn : function  () : void, scope : variant, excludes : variant[]) : void;
        static function syncRequire (expressions : variant[], fn : function  () : void, scope : variant) : void;
        static function syncRequire (expressions : variant[], fn : function  () : void, excludes : string) : void;
        static function syncRequire (expressions : variant[], fn : function  () : void, excludes : variant[]) : void;
        static function syncRequire (expressions : variant[], fn : function  () : void) : void;
        static function syncRequire (expressions : variant[], scope : variant, excludes : string) : void;
        static function syncRequire (expressions : variant[], scope : variant, excludes : variant[]) : void;
        static function syncRequire (expressions : variant[], scope : variant) : void;
        static function syncRequire (expressions : variant[], excludes : string) : void;
        static function syncRequire (expressions : variant[], excludes : variant[]) : void;
        static function syncRequire (expressions : variant[]) : void;
    }

    class MessageBox extends Ext.window.MessageBox
    {
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class ModelManager extends Ext.AbstractManager
    {
        static var associationStack : Ext.data.association.Association[];

        static function getModel (id : string) : Ext.data.Model;
        static function getModel (id : variant) : Ext.data.Model;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class Number
    {
        static function constrain (number : number, min : number, max : number) : number;
        static function correctFloat (The : number) : number;
        static function from (value : variant, defaultValue : number) : number;
        static function randomInt (from : number, to : number) : number;
        static function snap (value : number, increment : number, minValue : number, maxValue : number) : number;
        static function snapInRange (value : number, increment : number, minValue : number, maxValue : number) : number;
        static function snapInRange (value : number, increment : number, minValue : number) : number;
        static function snapInRange (value : number, increment : number) : number;
        static function toFixed (value : number, precision : number) : void;
    }

    class Object
    {
        static function chain (object : variant) : void;
        static function each (object : variant, fn : function  () : void, scope : variant) : void;
        static function each (object : variant, fn : function  () : void) : void;
        static function equals (object1 : variant, object2 : variant) : boolean;
        static function fromQueryString (queryString : string, recursive : boolean) : variant;
        static function fromQueryString (queryString : string) : variant;
        static function getKey (object : variant, value : variant) : void;
        static function getKeys (object : variant) : string[];
        static function getSize (object : variant) : number;
        static function getValues (object : variant) : variant[];
        static function isEmpty (object : variant) : boolean;
        static function merge (destination : variant, object : variant) : variant;
        static function toQueryObjects (name : string, value : variant, recursive : boolean) : variant[];
        static function toQueryObjects (name : string, value : variant) : variant[];
        static function toQueryObjects (name : string, value : variant[], recursive : boolean) : variant[];
        static function toQueryObjects (name : string, value : variant[]) : variant[];
        static function toQueryString (object : variant, recursive : boolean) : string;
        static function toQueryString (object : variant) : string;
    }

    class PluginManager extends Ext.AbstractManager
    {
        static function create (config : variant, defaultType : function  () : void) : Ext.Component;
        static function create (config : variant) : Ext.Component;
        static function findByType (type : string, defaultsOnly : boolean) : Ext.AbstractPlugin[];
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class ProgressBar extends Ext.Component
    {
        override function initComponent () : void;
        function initRenderData () : variant;
        function isWaiting () : boolean;
        override function onDestroy () : void;
        function onRender () : void;
        function reset (hide : boolean) : variant;
        function reset () : variant;
        function updateProgress (value : number, text : string, animate : boolean) : variant;
        function updateProgress (value : number, text : string) : variant;
        function updateProgress (value : number, animate : boolean) : variant;
        function updateProgress (value : number) : variant;
        function updateProgress (text : string, animate : boolean) : variant;
        function updateProgress (text : string) : variant;
        function updateProgress (animate : boolean) : variant;
        function updateProgress () : variant;
        function updateText (text : string) : variant;
        function updateText () : variant;
        function wait (config : variant) : variant;
        function wait () : variant;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }


    class Shadow extends Ext.Base
    {
        function constructor (config : variant);
        function constructor ();
        function hide () : void;
        function isVisible () : void;
        function realign (left : number, top : number, width : number, height : number) : void;
        function setOpacity (opacity : number) : void;
        function setZIndex (zindex : number) : void;
        function show (targetEl : string) : void;
        function show (targetEl : HTMLElement) : void;
        function show (targetEl : Ext.dom.Element) : void;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }


    class String
    {
        static function addCharacterEntities (entities : variant) : void;
        static function capitalize (string : string) : string;
        static function createVarName (s : string) : string;
        static function ellipsis (value : string, length : number, word : boolean) : string;
        static function ellipsis (value : string, length : number) : string;
        static function endsWith (s : string, start : string, ignoreCase : boolean) : void;
        static function endsWith (s : string, start : string) : void;
        static function escape (string : string) : string;
        static function escapeRegex (string : string) : string;
        static function format (string : string, values : variant) : string;
        static function htmlDecode (value : string) : string;
        static function htmlEncode (value : string) : string;
        static function insert (s : string, value : string, index : number) : string;
        static function leftPad (string : string, size : number, character : string) : string;
        static function leftPad (string : string, size : number) : string;
        static function repeat (pattern : string, count : number, sep : string) : void;
        static function resetCharacterEntities () : void;
        static function splitWords (words : string) : void;
        static function splitWords (words : variant[]) : void;
        static function startsWith (s : string, start : string, ignoreCase : boolean) : void;
        static function startsWith (s : string, start : string) : void;
        static function toggle (string : string, value : string, other : string) : string;
        static function trim (string : string) : string;
        static function uncapitalize (string : string) : string;
        static function urlAppend (url : string, string : string) : string;
    }

    class Template extends Ext.Base
    {
        var isTemplate : boolean;

        function constructor (html : string, config : variant);
        function constructor (html : string);
        function append (el : string, values : variant, returnElement : boolean) : variant;
        function append (el : string, values : variant) : variant;
        function append (el : string, values : variant[], returnElement : boolean) : variant;
        function append (el : string, values : variant[]) : variant;
        function append (el : HTMLElement, values : variant, returnElement : boolean) : variant;
        function append (el : HTMLElement, values : variant) : variant;
        function append (el : HTMLElement, values : variant[], returnElement : boolean) : variant;
        function append (el : HTMLElement, values : variant[]) : variant;
        function append (el : Ext.dom.Element, values : variant, returnElement : boolean) : variant;
        function append (el : Ext.dom.Element, values : variant) : variant;
        function append (el : Ext.dom.Element, values : variant[], returnElement : boolean) : variant;
        function append (el : Ext.dom.Element, values : variant[]) : variant;
        function apply (values : variant) : string;
        function apply (values : variant[]) : string;
        function applyOut (values : variant, out : variant[]) : variant[];
        function applyOut (values : variant[], out : variant[]) : variant[];
        function applyTemplate (values : variant) : string;
        function applyTemplate (values : variant[]) : string;
        function compile () : variant;
        function insertAfter (el : string, values : variant, returnElement : boolean) : variant;
        function insertAfter (el : string, values : variant) : variant;
        function insertAfter (el : string, values : variant[], returnElement : boolean) : variant;
        function insertAfter (el : string, values : variant[]) : variant;
        function insertAfter (el : HTMLElement, values : variant, returnElement : boolean) : variant;
        function insertAfter (el : HTMLElement, values : variant) : variant;
        function insertAfter (el : HTMLElement, values : variant[], returnElement : boolean) : variant;
        function insertAfter (el : HTMLElement, values : variant[]) : variant;
        function insertAfter (el : Ext.dom.Element, values : variant, returnElement : boolean) : variant;
        function insertAfter (el : Ext.dom.Element, values : variant) : variant;
        function insertAfter (el : Ext.dom.Element, values : variant[], returnElement : boolean) : variant;
        function insertAfter (el : Ext.dom.Element, values : variant[]) : variant;
        function insertBefore (el : string, values : variant, returnElement : boolean) : variant;
        function insertBefore (el : string, values : variant) : variant;
        function insertBefore (el : string, values : variant[], returnElement : boolean) : variant;
        function insertBefore (el : string, values : variant[]) : variant;
        function insertBefore (el : HTMLElement, values : variant, returnElement : boolean) : variant;
        function insertBefore (el : HTMLElement, values : variant) : variant;
        function insertBefore (el : HTMLElement, values : variant[], returnElement : boolean) : variant;
        function insertBefore (el : HTMLElement, values : variant[]) : variant;
        function insertBefore (el : Ext.dom.Element, values : variant, returnElement : boolean) : variant;
        function insertBefore (el : Ext.dom.Element, values : variant) : variant;
        function insertBefore (el : Ext.dom.Element, values : variant[], returnElement : boolean) : variant;
        function insertBefore (el : Ext.dom.Element, values : variant[]) : variant;
        function insertFirst (el : string, values : variant, returnElement : boolean) : variant;
        function insertFirst (el : string, values : variant) : variant;
        function insertFirst (el : string, values : variant[], returnElement : boolean) : variant;
        function insertFirst (el : string, values : variant[]) : variant;
        function insertFirst (el : HTMLElement, values : variant, returnElement : boolean) : variant;
        function insertFirst (el : HTMLElement, values : variant) : variant;
        function insertFirst (el : HTMLElement, values : variant[], returnElement : boolean) : variant;
        function insertFirst (el : HTMLElement, values : variant[]) : variant;
        function insertFirst (el : Ext.dom.Element, values : variant, returnElement : boolean) : variant;
        function insertFirst (el : Ext.dom.Element, values : variant) : variant;
        function insertFirst (el : Ext.dom.Element, values : variant[], returnElement : boolean) : variant;
        function insertFirst (el : Ext.dom.Element, values : variant[]) : variant;
        function overwrite (el : string, values : variant, returnElement : boolean) : variant;
        function overwrite (el : string, values : variant) : variant;
        function overwrite (el : string, values : variant[], returnElement : boolean) : variant;
        function overwrite (el : string, values : variant[]) : variant;
        function overwrite (el : HTMLElement, values : variant, returnElement : boolean) : variant;
        function overwrite (el : HTMLElement, values : variant) : variant;
        function overwrite (el : HTMLElement, values : variant[], returnElement : boolean) : variant;
        function overwrite (el : HTMLElement, values : variant[]) : variant;
        function overwrite (el : Ext.dom.Element, values : variant, returnElement : boolean) : variant;
        function overwrite (el : Ext.dom.Element, values : variant) : variant;
        function overwrite (el : Ext.dom.Element, values : variant[], returnElement : boolean) : variant;
        function overwrite (el : Ext.dom.Element, values : variant[]) : variant;
        function set (html : string, compile : boolean) : variant;
        function set (html : string) : variant;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function from (el : string, config : variant) : Ext.Template;
        static function from (el : string) : Ext.Template;
        static function from (el : HTMLElement, config : variant) : Ext.Template;
        static function from (el : HTMLElement) : Ext.Template;
        static function getName () : string;
    }

    class Version
    {
        function constructor (version : string);
        function constructor (version : number);
        function equals (target : string) : boolean;
        function equals (target : number) : boolean;
        function getBuild () : number;
        function getMajor () : number;
        function getMinor () : number;
        function getPatch () : number;
        function getRelease () : number;
        function getShortVersion () : string;
        function gt (target : string) : boolean;
        function gt (target : number) : boolean;
        function gtEq (target : string) : boolean;
        function gtEq (target : number) : boolean;
        function isGreaterThan (target : string) : boolean;
        function isGreaterThan (target : number) : boolean;
        function isGreaterThanOrEqual (target : string) : boolean;
        function isGreaterThanOrEqual (target : number) : boolean;
        function isLessThan (target : string) : boolean;
        function isLessThan (target : number) : boolean;
        function isLessThanOrEqual (target : string) : boolean;
        function isLessThanOrEqual (target : number) : boolean;
        function lt (target : string) : boolean;
        function lt (target : number) : boolean;
        function ltEq (target : string) : boolean;
        function ltEq (target : number) : boolean;
        function match (target : string) : boolean;
        function match (target : number) : boolean;
        function toArray () : Number[];
        static function compare (current : string, target : string) : number;
        static function getComponentValue (value : variant) : variant;
    }

    class WindowManager extends Ext.ZIndexManager
    {
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class XTemplate extends Ext.Template
    {
        function applyOut (values : variant, out : variant, parent : variant) : variant[];
        override function compile () : variant;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function from (el : string, config : variant) : Ext.Template;
        static function from (el : string) : Ext.Template;
        static function from (el : HTMLElement, config : variant) : Ext.Template;
        static function from (el : HTMLElement) : Ext.Template;
        static function getName () : string;
        static function getTpl (instance : variant, name : string) : Ext.XTemplate;
    }


    class XTemplateParser extends Ext.Base
    {
        var level : number;

        function constructor (config : variant);
        function doCase (action : string, actions : variant) : void;
        function doDefault () : void;
        function doElse () : void;
        function doElseIf (action : string, actions : variant) : void;
        function doEnd (type : string, actions : variant) : void;
        function doEval (text : string) : void;
        function doExec (action : string, actions : variant) : void;
        function doExpr (expr : string) : void;
        function doFor (action : string, actions : variant) : void;
        function doForEach (action : string, actions : variant) : void;
        function doIf (action : string, actions : variant) : void;
        function doSwitch (action : string, actions : variant) : void;
        function doTag () : void;
        function doText (text : string) : void;
        function doTpl () : void;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class ZIndexManager extends Ext.Base
    {
        function constructor (container : variant);
        function bringToFront (comp : string) : boolean;
        function bringToFront (comp : variant) : boolean;
        function each (fn : function  () : void, scope : variant) : void;
        function each (fn : function  () : void) : void;
        function eachBottomUp (fn : function  () : void, scope : variant) : void;
        function eachBottomUp (fn : function  () : void) : void;
        function eachTopDown (fn : function  () : void, scope : variant) : void;
        function eachTopDown (fn : function  () : void) : void;
        function get (id : string) : Ext.Component;
        function get (id : variant) : Ext.Component;
        function getActive () : Ext.Component;
        function getBy (fn : function  () : void, scope : variant) : variant[];
        function getBy (fn : function  () : void) : variant[];
        function hideAll () : void;
        function register (comp : Ext.Component) : void;
        function sendToBack (comp : string) : Ext.Component;
        function sendToBack (comp : variant) : Ext.Component;
        function unregister (comp : Ext.Component) : void;
        static function addMembers (members : variant) : variant;
        static function addStatics (members : variant) : variant;
        static function create () : variant;
        static function createAlias (alias : string, origin : string) : void;
        static function createAlias (alias : string, origin : variant) : void;
        static function createAlias (alias : variant, origin : string) : void;
        static function createAlias (alias : variant, origin : variant) : void;
        static function getName () : string;
    }

    class app
    {

        class Application extends Ext.app.Controller
        {
            function constructor (config : variant);
            function constructor ();
            override function getApplication () : Ext.app.Application;
            function getController (name : variant) : Ext.app.Controller;
            function launch (profile : string) : boolean;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Controller extends Ext.Base
        {
            var application : Ext.app.Application;

            function constructor (config : variant);
            function constructor ();
            function addRef (refs : variant) : void;
            function addRef (refs : Object[]) : void;
            function control (selectors : string, listeners : variant) : void;
            function control (selectors : string) : void;
            function control (selectors : variant, listeners : variant) : void;
            function control (selectors : variant) : void;
            function getApplication () : Ext.app.Application;
            function getController (id : string) : Ext.app.Controller;
            function getModel (name : string) : Ext.data.Model;
            function getStore (name : string) : Ext.data.Store;
            function getView (name : string) : Ext.Base;
            function hasRef (ref : variant) : boolean;
            function init (application : Ext.app.Application) : void;
            function listen (to : variant) : void;
            function onLaunch (application : Ext.app.Application) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class EventDomain extends Ext.Base
        {
            static var instances : variant;

            function constructor ();
            function match (target : variant, selector : string) : boolean;
            function monitor (observable : Ext.Class) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class domain
        {

            class Component extends Ext.app.EventDomain
            {
                static function constructor ();
                static function match (target : variant, selector : variant) : boolean;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Controller extends Ext.app.EventDomain
            {
                static function constructor ();
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Direct extends Ext.app.EventDomain
            {
                static function constructor ();
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Global extends Ext.app.EventDomain
            {
                static function constructor ();
                static function match () : boolean;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Store extends Ext.app.EventDomain
            {
                static function constructor ();
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }
    }

    class button
    {

        class Button extends Ext.Component
        {
            var disabled : boolean;
            var hidden : boolean;
            var isAction : boolean;
            var menu : Ext.menu.Menu;
            var pressed : boolean;
            var template : Ext.Template;

            function disable (silent : variant) : void;
            function enable (silent : variant) : void;
            function getTemplateArgs () : variant;
            function getText () : string;
            function hasVisibleMenu () : boolean;
            function hideMenu () : variant;
            override function initComponent () : void;
            override function onDisable () : void;
            function setGlyph (glyph : number) : variant;
            function setGlyph (glyph : string) : variant;
            function setHandler (handler : function  () : void, scope : variant) : variant;
            function setHandler (handler : function  () : void) : variant;
            function setHref (href : string) : void;
            function setIcon (icon : string) : variant;
            function setIconCls (cls : string) : variant;
            function setParams (params : variant) : void;
            function setScale (scale : string) : void;
            function setText (text : string) : variant;
            function setTextAlign (align : string) : void;
            function setTooltip (tooltip : string) : variant;
            function setTooltip (tooltip : variant) : variant;
            function setUI (ui : variant) : void;
            function showMenu (fromEvent : variant) : void;
            function toggle (state : boolean, suppressEvent : boolean) : variant;
            function toggle (state : boolean) : variant;
            function toggle () : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Cycle extends Ext.button.Split
        {

            function getActiveItem () : Ext.menu.CheckItem;
            function setActiveItem (item : Ext.menu.CheckItem, suppressEvent : boolean) : void;
            function setActiveItem (item : Ext.menu.CheckItem) : void;
            function toggleSelected () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Split extends Ext.button.Button
        {
            function setArrowHandler (handler : function  () : void, scope : variant) : void;
            function setArrowHandler (handler : function  () : void) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class chart
    {

        class Callout extends Ext.Base
        {
            function constructor (config : variant);
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Chart extends Ext.draw.Component
        {
            function bindStore (store : variant, initial : variant) : void;
            function getStoreListeners () : variant;
            override function initComponent () : void;
            override function onShow () : void;
            function redraw (resize : boolean) : void;
            function redraw () : void;
            function save (config : variant) : variant;
            function save () : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Highlight extends Ext.Base
        {
            var highlightCfg : variant;

            function constructor (config : variant);
            function highlightItem (item : variant) : void;
            function unHighlightItem () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Label extends Ext.Base
        {
            function onCreateLabel (storeItem : Ext.data.Model, item : variant, i : number, display : string) : Ext.draw.Sprite;
            function onPlaceLabel (label : Ext.draw.Sprite, storeItem : Ext.data.Model, item : variant, i : number, display : string, animate : boolean, index : number) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Legend extends Ext.Base
        {
            var isVertical : boolean;

            function constructor (config : variant);
            function constructor ();
            function toggle (show : boolean) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class LegendItem extends Ext.draw.CompositeSprite
        {
            function constructor (config : variant);
            function createLegend (config : variant) : void;
            function updatePosition (relativeTo : variant) : void;
            function updatePosition () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Mask extends Ext.Base
        {
            function constructor (config : variant);
            function constructor ();
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Navigation extends Ext.Base
        {
            function restoreZoom () : void;
            function setZoom (zoomConfig : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Tip extends Ext.Base
        {
            function constructor (config : variant);
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class axis
        {

            class Abstract extends Ext.Base
            {
                function constructor (config : variant);
                function constructor ();
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Axis extends Ext.chart.axis.Abstract
            {
                function drawAxis (init : variant) : void;
                function drawGrid () : void;
                function drawLabel () : void;
                function setTitle (title : string) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Category extends Ext.chart.axis.Axis
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Gauge extends Ext.chart.axis.Abstract
            {
                function setTitle (title : string) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Numeric extends Ext.chart.axis.Axis
            {
                function constructor (config : variant);
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


            class Time extends Ext.chart.axis.Numeric
            {
                function constructor (config : variant);
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class series
        {

            class Area extends Ext.chart.series.Cartesian
            {
                function constructor (config : variant);
                function drawSeries () : void;
                override function getLegendColor (item : variant) : void;
                function highlightItem (item : variant) : void;
                function highlightSeries (item : variant) : void;
                function unHighlightItem (item : variant) : void;
                function unHighlightSeries (item : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Bar extends Ext.chart.series.Cartesian
            {
                function drawSeries () : void;
                override function getLegendColor (index : variant) : void;
                function highlightItem (item : variant) : void;
                function unHighlightItem () : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Cartesian extends Ext.chart.series.Series
            {
                function eachYValue (record : Ext.data.Model, fn : function  () : void, scope : variant) : void;
                function getMinMaxXValues () : variant[];
                function getMinMaxYValues () : variant[];
                function getYValueAccessors () : variant[];
                function getYValueCount () : number;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Column extends Ext.chart.series.Bar
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Gauge extends Ext.chart.series.Series
            {
                function constructor (config : variant);
                function drawSeries () : void;
                override function getLegendColor (item : variant) : void;
                function setValue (value : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Line extends Ext.chart.series.Cartesian
            {
                function constructor (config : variant);
                function drawSeries () : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Pie extends Ext.chart.series.Series
            {
                function constructor (config : variant);
                function drawSeries () : void;
                override function getLegendColor (item : variant) : void;
                function highlightItem (item : variant) : void;
                function unHighlightItem (item : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Radar extends Ext.chart.series.Series
            {
                function drawSeries () : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Scatter extends Ext.chart.series.Cartesian
            {
                function drawSeries () : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Series extends Ext.Base
            {
                function eachRecord (fn : function  () : void, scope : variant) : void;
                function getItemForPoint (x : number, y : number) : variant;
                function getLegendColor (index : variant) : void;
                function getRecordCount () : void;
                function hideAll () : void;
                function isExcluded (index : variant) : void;
                function setTitle (index : number, title : string) : void;
                function showAll () : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class theme
        {


            class Theme
            {
            }
        }
    }

    class container
    {

        class AbstractContainer extends Ext.Component
        {
            var items : Ext.util.AbstractMixedCollection;

            function add (component : Ext.Component[]) : variant;
            function add (component : Object[]) : variant;
            function add (component : Ext.Component) : variant;
            function add (component : variant) : variant;
            override function afterComponentLayout () : void;
            function afterLayout (layout : Ext.layout.container.Container) : void;
            function cascade (fn : function  () : void, scope : variant, args : variant[]) : variant;
            function cascade (fn : function  () : void, scope : variant) : variant;
            function cascade (fn : function  () : void, args : variant[]) : variant;
            function cascade (fn : function  () : void) : variant;
            function contains (comp : Ext.Component, deep : boolean) : boolean;
            function contains (comp : Ext.Component) : boolean;
            override function disable () : void;
            function doLayout () : variant;
            function getComponent (comp : string) : Ext.Component;
            function getComponent (comp : number) : Ext.Component;
            function getLayout () : Ext.layout.container.Container;
            function getRefItems (deep : variant) : void;
            function insert (index : number, component : Ext.Component) : Ext.Component;
            function insert (index : number, component : variant) : Ext.Component;
            function isAncestor (possibleDescendant : Ext.Component) : void;
            function move (fromIdx : number, toIdx : number) : Ext.Component;
            function move (fromIdx : Ext.Component, toIdx : number) : Ext.Component;
            function onAdd (component : Ext.Component, position : number) : void;
            function onBeforeAdd (item : Ext.Component) : void;
            function onPosition () : void;
            function onRemove (component : Ext.Component, autoDestroy : boolean) : void;
            function onResize () : void;
            function remove (component : Ext.Component, autoDestroy : boolean) : Ext.Component;
            function remove (component : Ext.Component) : Ext.Component;
            function remove (component : string, autoDestroy : boolean) : Ext.Component;
            function remove (component : string) : Ext.Component;
            function removeAll (autoDestroy : boolean) : Ext.Component[];
            function removeAll () : Ext.Component[];
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class ButtonGroup extends Ext.panel.Panel
        {
            function onBeforeAdd (component : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Container extends Ext.container.AbstractContainer
        {
            function getChildByElement (el : Ext.dom.Element, deep : boolean) : Ext.Component;
            function getChildByElement (el : HTMLElement, deep : boolean) : Ext.Component;
            function getChildByElement (el : string, deep : boolean) : Ext.Component;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class DockingContainer extends Ext.Base
        {
            function addDocked (component : variant, pos : number) : Ext.Component[];
            function addDocked (component : variant) : Ext.Component[];
            function addDocked (component : Object[], pos : number) : Ext.Component[];
            function addDocked (component : Object[]) : Ext.Component[];
            function getDockedComponent (comp : string) : Ext.Component;
            function getDockedComponent (comp : number) : Ext.Component;
            function getDockedItems (selector : string, beforeBody : boolean) : Ext.Component[];
            function insertDocked (pos : number, component : variant) : void;
            function insertDocked (pos : number, component : Object[]) : void;
            function onDockedAdd (component : Ext.Component) : void;
            function onDockedRemove (component : Ext.Component) : void;
            function removeDocked (item : Ext.Component, autoDestroy : boolean) : void;
            function removeDocked (item : Ext.Component) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Viewport extends Ext.container.Container
        {
            var isViewport : boolean;

            function onRender () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class data
    {

        class AbstractStore extends Ext.Base
        {
            var defaultProxyType : string;
            var filters : Ext.util.MixedCollection;
            var isDestroyed : boolean;
            var isStore : boolean;
            var removed : Ext.data.Model[];

            function constructor (config : variant);
            function getModifiedRecords () : Ext.data.Model[];
            function getNewRecords () : Ext.data.Model[];
            function getProxy () : Ext.data.proxy.Proxy;
            function getRemovedRecords () : Ext.data.Model[];
            function getUpdatedRecords () : Ext.data.Model[];
            function isLoading () : boolean;
            function load (options : variant) : Ext.data.Store;
            function load () : Ext.data.Store;
            function reload (options : variant) : void;
            function removeAll () : void;
            function resumeAutoSync () : void;
            function setProxy (proxy : string) : Ext.data.proxy.Proxy;
            function setProxy (proxy : variant) : Ext.data.proxy.Proxy;
            function setProxy (proxy : Ext.data.proxy.Proxy) : Ext.data.proxy.Proxy;
            function suspendAutoSync () : void;
            function sync (options : variant) : Ext.data.Store;
            function sync () : Ext.data.Store;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create (store : variant) : Ext.data.AbstractStore;
            static function create (store : Ext.data.AbstractStore) : Ext.data.AbstractStore;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class ArrayStore extends Ext.data.Store
        {
            function constructor (config : variant);
            function loadData (data : variant, append : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Batch extends Ext.Base
        {
            var current : number;
            var exceptions : Ext.data.Operation[];
            var hasException : boolean;
            var isComplete : boolean;
            var isRunning : boolean;
            var operations : Ext.data.Operation[];
            var total : number;

            function constructor (config : variant);
            function constructor ();
            function add (operation : variant) : variant;
            function pause () : variant;
            function retry () : variant;
            function runOperation (index : number) : variant;
            function start (index : variant) : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Connection extends Ext.Base
        {
            function constructor (config : variant);
            function abort (request : variant) : void;
            function abort () : void;
            function abortAll () : void;
            function isLoading (request : variant) : boolean;
            function isLoading () : boolean;
            function parseStatus (status : number) : variant;
            function request (options : variant) : variant;
            function setOptions (options : variant, scope : variant) : variant;
            function upload (form : string, url : string, params : string, options : variant) : void;
            function upload (form : HTMLElement, url : string, params : string, options : variant) : void;
            function upload (form : Ext.dom.Element, url : string, params : string, options : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class DirectStore extends Ext.data.Store
        {
            function constructor (config : variant);
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Errors extends Ext.util.MixedCollection
        {
            function getByField (fieldName : string) : Object[];
            function isValid () : boolean;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Field extends Ext.Base
        {
            function constructor (config : variant);
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Group extends Ext.util.Observable
        {
            function constructor ();
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class IdGenerator extends Ext.Base
        {
            var isGenerator : boolean;

            function constructor (config : variant);
            function constructor ();
            function generate () : string;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function get (config : string) : void;
            static function get (config : variant) : void;
            static function getName () : string;
        }

        class JsonP extends Ext.Base
        {
            static var callbackKey : string;
            static var disableCaching : boolean;
            static var disableCachingParam : string;
            static var timeout : number;

            static function abort (request : variant) : void;
            static function abort (request : string) : void;
            static function abort () : void;
            static function request (options : variant) : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class JsonPStore extends Ext.data.Store
        {
            function constructor (config : variant);
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class JsonStore extends Ext.data.Store
        {
            function constructor (config : variant);
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Model extends Ext.Base
        {
            var dirty : boolean;
            var editing : boolean;
            var fields : Ext.util.MixedCollection;
            var isModel : boolean;
            var modified : variant;
            var phantom : boolean;
            var raw : variant;
            var store : Ext.data.Store;
            var stores : Ext.data.Store[];
            static var COMMIT : string;
            static var EDIT : string;
            static var REJECT : string;

            function constructor (data : variant);
            function beginEdit () : void;
            function cancelEdit () : void;
            function commit (silent : boolean, modifiedFieldNames : string[]) : void;
            function commit (silent : boolean) : void;
            function commit (modifiedFieldNames : string[]) : void;
            function commit () : void;
            function copy (id : string) : Ext.data.Model;
            function copy () : Ext.data.Model;
            function destroy (options : variant) : Ext.data.Model;
            function endEdit (silent : boolean, modifiedFieldNames : string[]) : void;
            function endEdit (silent : boolean) : void;
            function endEdit (modifiedFieldNames : string[]) : void;
            function endEdit () : void;
            function get (fieldName : string) : variant;
            function getAssociatedData () : variant;
            function getChanges () : variant;
            function getData (includeAssociated : boolean) : variant;
            function getId () : variant;
            function getProxy () : Ext.data.proxy.Proxy;
            function isModified (fieldName : string) : boolean;
            function isValid () : boolean;
            function join (store : Ext.data.Store) : void;
            function reject (silent : boolean) : void;
            function reject () : void;
            function save (options : variant) : Ext.data.Model;
            function save () : Ext.data.Model;
            function set (fieldName : string, newValue : variant) : string[];
            function set (fieldName : variant, newValue : variant) : string[];
            function setDirty () : void;
            function setId (id : number) : void;
            function setId (id : string) : void;
            function setProxy (proxy : string) : Ext.data.proxy.Proxy;
            function setProxy (proxy : variant) : Ext.data.proxy.Proxy;
            function setProxy (proxy : Ext.data.proxy.Proxy) : Ext.data.proxy.Proxy;
            function unjoin (store : Ext.data.Store) : void;
            function validate () : Ext.data.Errors;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getFields () : Ext.data.Field[];
            static function getName () : string;
            static function getProxy () : Ext.data.proxy.Proxy;
            static function id (rec : Ext.data.Model) : string;
            static function load (id : number, config : variant) : void;
            static function load (id : number) : void;
            static function load (id : string, config : variant) : void;
            static function load (id : string) : void;
            static function setFields (fields : variant, idProperty : variant, clientIdProperty : variant) : void;
            static function setProxy (proxy : string) : Ext.data.proxy.Proxy;
            static function setProxy (proxy : variant) : Ext.data.proxy.Proxy;
            static function setProxy (proxy : Ext.data.proxy.Proxy) : Ext.data.proxy.Proxy;
        }

        class NodeInterface extends Ext.Base
        {
            var childNodes : Ext.data.NodeInterface[];
            var firstChild : Ext.data.NodeInterface;
            var isNode : boolean;
            var lastChild : Ext.data.NodeInterface;
            var nextSibling : Ext.data.NodeInterface;
            var parentNode : Ext.data.NodeInterface;
            var previousSibling : Ext.data.NodeInterface;

            function appendChild (node : Ext.data.NodeInterface, suppressEvents : boolean, commit : boolean) : Ext.data.NodeInterface;
            function appendChild (node : Ext.data.NodeInterface, suppressEvents : boolean) : Ext.data.NodeInterface;
            function appendChild (node : Ext.data.NodeInterface) : Ext.data.NodeInterface;
            function appendChild (node : Ext.data.NodeInterface[], suppressEvents : boolean, commit : boolean) : Ext.data.NodeInterface;
            function appendChild (node : Ext.data.NodeInterface[], suppressEvents : boolean) : Ext.data.NodeInterface;
            function appendChild (node : Ext.data.NodeInterface[]) : Ext.data.NodeInterface;
            function appendChild (node : variant, suppressEvents : boolean, commit : boolean) : Ext.data.NodeInterface;
            function appendChild (node : variant, suppressEvents : boolean) : Ext.data.NodeInterface;
            function appendChild (node : variant) : Ext.data.NodeInterface;
            function bubble (fn : function  () : void, scope : variant, args : variant[]) : void;
            function bubble (fn : function  () : void, scope : variant) : void;
            function bubble (fn : function  () : void, args : variant[]) : void;
            function bubble (fn : function  () : void) : void;
            function cascadeBy (fn : function  () : void, scope : variant, args : variant[]) : void;
            function cascadeBy (fn : function  () : void, scope : variant) : void;
            function cascadeBy (fn : function  () : void, args : variant[]) : void;
            function cascadeBy (fn : function  () : void) : void;
            function collapse (recursive : boolean, callback : function  () : void, scope : variant) : void;
            function collapse (recursive : boolean, callback : function  () : void) : void;
            function collapse (recursive : boolean, scope : variant) : void;
            function collapse (recursive : boolean) : void;
            function collapse (callback : function  () : void, scope : variant) : void;
            function collapse (callback : function  () : void) : void;
            function collapse (scope : variant) : void;
            function collapse () : void;
            function collapseChildren (recursive : function  () : void, callback : function  () : void, scope : variant) : void;
            function collapseChildren (recursive : function  () : void, callback : function  () : void) : void;
            function collapseChildren (recursive : function  () : void, scope : variant) : void;
            function collapseChildren (recursive : function  () : void) : void;
            function collapseChildren (scope : variant) : void;
            function collapseChildren () : void;
            function contains (node : Ext.data.NodeInterface) : boolean;
            function copy (id : string, deep : boolean) : Ext.data.NodeInterface;
            function copy (id : string) : Ext.data.NodeInterface;
            function copy (deep : boolean) : Ext.data.NodeInterface;
            function copy () : Ext.data.NodeInterface;
            function createNode (node : variant) : Ext.data.NodeInterface;
            function destroy (silent : variant) : void;
            function eachChild (fn : function  () : void, scope : variant, args : variant[]) : void;
            function eachChild (fn : function  () : void, scope : variant) : void;
            function eachChild (fn : function  () : void, args : variant[]) : void;
            function eachChild (fn : function  () : void) : void;
            function expand (recursive : boolean, callback : function  () : void, scope : variant) : void;
            function expand (recursive : boolean, callback : function  () : void) : void;
            function expand (recursive : boolean, scope : variant) : void;
            function expand (recursive : boolean) : void;
            function expand (callback : function  () : void, scope : variant) : void;
            function expand (callback : function  () : void) : void;
            function expand (scope : variant) : void;
            function expand () : void;
            function expandChildren (recursive : boolean, callback : function  () : void, scope : variant) : void;
            function expandChildren (recursive : boolean, callback : function  () : void) : void;
            function expandChildren (recursive : boolean, scope : variant) : void;
            function expandChildren (recursive : boolean) : void;
            function expandChildren (callback : function  () : void, scope : variant) : void;
            function expandChildren (callback : function  () : void) : void;
            function expandChildren (scope : variant) : void;
            function expandChildren () : void;
            function findChild (attribute : string, value : variant, deep : boolean) : Ext.data.NodeInterface;
            function findChild (attribute : string, value : variant) : Ext.data.NodeInterface;
            function findChildBy (fn : function  () : void, scope : variant, deep : boolean) : Ext.data.NodeInterface;
            function findChildBy (fn : function  () : void, scope : variant) : Ext.data.NodeInterface;
            function findChildBy (fn : function  () : void, deep : boolean) : Ext.data.NodeInterface;
            function findChildBy (fn : function  () : void) : Ext.data.NodeInterface;
            function getChildAt (index : number) : Ext.data.NodeInterface;
            function getDepth () : number;
            function getOwnerTree () : Ext.tree.Panel;
            function getPath (field : string, separator : string) : string;
            function getPath (field : string) : string;
            function getPath () : string;
            function hasChildNodes () : boolean;
            function indexOf (node : Ext.data.NodeInterface) : number;
            function indexOfId (id : string) : number;
            function insertBefore (node : Ext.data.NodeInterface, refNode : Ext.data.NodeInterface) : Ext.data.NodeInterface;
            function insertChild (index : number, node : Ext.data.NodeInterface) : Ext.data.NodeInterface;
            function isAncestor (node : Ext.data.NodeInterface) : boolean;
            function isExpandable () : boolean;
            function isExpanded () : boolean;
            function isFirst () : boolean;
            function isLast () : boolean;
            function isLeaf () : boolean;
            function isLoaded () : boolean;
            function isLoading () : boolean;
            function isRoot () : boolean;
            function isVisible () : boolean;
            function remove (destroy : boolean) : variant;
            function remove () : variant;
            function removeAll (destroy : boolean) : variant;
            function removeAll () : variant;
            function removeChild (node : Ext.data.NodeInterface, destroy : boolean) : Ext.data.NodeInterface;
            function removeChild (node : Ext.data.NodeInterface) : Ext.data.NodeInterface;
            function replaceChild (newChild : Ext.data.NodeInterface, oldChild : Ext.data.NodeInterface) : Ext.data.NodeInterface;
            function serialize () : void;
            function sort (fn : function  () : void, recursive : boolean, suppressEvent : boolean) : void;
            function sort (fn : function  () : void, recursive : boolean) : void;
            function sort (fn : function  () : void) : void;
            function updateInfo (commit : boolean, info : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function decorate (modelClass : Ext.Class) : void;
            static function decorate (modelClass : Ext.data.Model) : void;
            static function getName () : string;
        }


        class Operation extends Ext.Base
        {
            var actionCommitRecordsRe : RegExp;
            var actionSkipSyncRe : RegExp;

            function constructor (config : variant);
            function constructor ();
            function allowWrite () : boolean;
            function commitRecords (serverRecords : Ext.data.Model[]) : void;
            function getError () : variant;
            function getRecords () : Ext.data.Model[];
            function getResultSet () : Ext.data.ResultSet;
            function hasException () : boolean;
            function isComplete () : boolean;
            function isRunning () : boolean;
            function isStarted () : boolean;
            function setCompleted () : void;
            function setException (error : string) : void;
            function setException (error : variant) : void;
            function setException () : void;
            function setStarted () : void;
            function setSuccessful () : void;
            function wasSuccessful () : boolean;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Request extends Ext.Base
        {
            function constructor (config : variant);
            function constructor ();
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class ResultSet extends Ext.Base
        {
            function constructor (config : variant);
            function constructor ();
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class SequentialIdGenerator extends Ext.data.IdGenerator
        {
            function constructor ();
            override function generate () : string;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class SortTypes extends Ext.Base
        {
            static var stripTagsRE : RegExp;

            static function asDate (s : variant) : number;
            static function asFloat (s : variant) : number;
            static function asInt (s : variant) : number;
            static function asText (s : variant) : string;
            static function asUCString (s : variant) : string;
            static function asUCText (s : variant) : string;
            static function none (s : variant) : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Store extends Ext.data.AbstractStore
        {
            var currentPage : number;
            var data : variant;
            var snapshot : Ext.util.MixedCollection;

            function constructor (config : variant);
            function constructor ();
            function add (model : Ext.data.Model[]) : Ext.data.Model[];
            function add (model : Ext.data.Model) : Ext.data.Model[];
            function add (model : Object[]) : Ext.data.Model[];
            function add (model : variant) : Ext.data.Model[];
            function addFilter (filters : Object[], applyFilters : boolean) : void;
            function addFilter (filters : Object[]) : void;
            function addFilter (filters : Ext.util.Filter[], applyFilters : boolean) : void;
            function addFilter (filters : Ext.util.Filter[]) : void;
            function addSorted (record : Ext.data.Model) : void;
            function aggregate (fn : function  () : void, scope : variant, grouped : boolean, args : variant[]) : variant;
            function aggregate (fn : function  () : void, scope : variant, grouped : boolean) : variant;
            function aggregate (fn : function  () : void, scope : variant, args : variant[]) : variant;
            function aggregate (fn : function  () : void, scope : variant) : variant;
            function aggregate (fn : function  () : void, grouped : boolean, args : variant[]) : variant;
            function aggregate (fn : function  () : void, grouped : boolean) : variant;
            function aggregate (fn : function  () : void, args : variant[]) : variant;
            function aggregate (fn : function  () : void) : variant;
            function average (field : string, grouped : boolean) : variant;
            function average (field : string) : variant;
            function clearFilter (suppressEvent : boolean) : void;
            function clearFilter () : void;
            function clearGrouping () : void;
            function collect (dataIndex : string, allowNull : boolean, bypassFilter : boolean) : Object[];
            function collect (dataIndex : string, allowNull : boolean) : Object[];
            function collect (dataIndex : string) : Object[];
            function commitChanges () : void;
            function count (grouped : boolean) : number;
            function count () : number;
            function each (fn : function  () : void, scope : variant) : void;
            function each (fn : function  () : void) : void;
            function filter (filters : Object[], value : string) : void;
            function filter (filters : Object[]) : void;
            function filter (filters : Ext.util.Filter[], value : string) : void;
            function filter (filters : Ext.util.Filter[]) : void;
            function filter (filters : string, value : string) : void;
            function filter (filters : string) : void;
            function filter () : void;
            function filterBy (fn : function  () : void, scope : variant) : void;
            function filterBy (fn : function  () : void) : void;
            function find (fieldName : string, value : string, startIndex : number, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : number;
            function find (fieldName : string, value : string, startIndex : number, anyMatch : boolean, caseSensitive : boolean) : number;
            function find (fieldName : string, value : string, startIndex : number, anyMatch : boolean) : number;
            function find (fieldName : string, value : string, startIndex : number) : number;
            function find (fieldName : string, value : string, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : number;
            function find (fieldName : string, value : string, anyMatch : boolean, caseSensitive : boolean) : number;
            function find (fieldName : string, value : string, anyMatch : boolean) : number;
            function find (fieldName : string, value : string) : number;
            function find (fieldName : string, value : RegExp, startIndex : number, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : number;
            function find (fieldName : string, value : RegExp, startIndex : number, anyMatch : boolean, caseSensitive : boolean) : number;
            function find (fieldName : string, value : RegExp, startIndex : number, anyMatch : boolean) : number;
            function find (fieldName : string, value : RegExp, startIndex : number) : number;
            function find (fieldName : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : number;
            function find (fieldName : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean) : number;
            function find (fieldName : string, value : RegExp, anyMatch : boolean) : number;
            function find (fieldName : string, value : RegExp) : number;
            function findBy (fn : function  () : void, scope : variant, startIndex : number) : number;
            function findBy (fn : function  () : void, scope : variant) : number;
            function findBy (fn : function  () : void, startIndex : number) : number;
            function findBy (fn : function  () : void) : number;
            function findExact (fieldName : string, value : variant, startIndex : number) : number;
            function findExact (fieldName : string, value : variant) : number;
            function findRecord (fieldName : string, value : string, startIndex : number, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : string, startIndex : number, anyMatch : boolean, caseSensitive : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : string, startIndex : number, anyMatch : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : string, startIndex : number) : Ext.data.Model;
            function findRecord (fieldName : string, value : string, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : string, anyMatch : boolean, caseSensitive : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : string, anyMatch : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : string) : Ext.data.Model;
            function findRecord (fieldName : string, value : RegExp, startIndex : number, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : RegExp, startIndex : number, anyMatch : boolean, caseSensitive : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : RegExp, startIndex : number, anyMatch : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : RegExp, startIndex : number) : Ext.data.Model;
            function findRecord (fieldName : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : RegExp, anyMatch : boolean) : Ext.data.Model;
            function findRecord (fieldName : string, value : RegExp) : Ext.data.Model;
            function first (grouped : boolean) : variant;
            function first () : variant;
            function getAt (index : number) : Ext.data.Model;
            function getById (id : variant) : Ext.data.Model;
            function getCount () : number;
            function getGroupString (instance : Ext.data.Model) : string;
            function getGroups (groupName : string) : variant;
            function getGroups () : variant;
            override function getNewRecords () : Ext.data.Model[];
            function getPageFromRecordIndex (index : number) : number;
            function getRange (start : number, end : number, options : variant) : Ext.data.Model[];
            function getRange (start : number, end : number) : Ext.data.Model[];
            function getTotalCount () : number;
            override function getUpdatedRecords () : Ext.data.Model[];
            function group (groupers : string, direction : string) : void;
            function group (groupers : string) : void;
            function group (groupers : Object[], direction : string) : void;
            function group (groupers : Object[]) : void;
            function indexOf (record : Ext.data.Model) : number;
            function indexOfId (id : string) : number;
            function indexOfTotal (record : Ext.data.Model) : number;
            function insert (index : number, records : Ext.data.Model[]) : Ext.data.Model[];
            function isFiltered () : boolean;
            function isGrouped () : boolean;
            function last (grouped : boolean) : variant;
            function last () : variant;
            override function load (options : variant) : Ext.data.Store;
            function load (options : function  () : void) : Ext.data.Store;
            override function load () : Ext.data.Store;
            function loadData (data : Ext.data.Model[], append : boolean) : void;
            function loadData (data : Ext.data.Model[]) : void;
            function loadData (data : Object[], append : boolean) : void;
            function loadData (data : Object[]) : void;
            function loadPage (page : number, options : variant) : void;
            function loadPage (page : number) : void;
            function loadRawData (data : Object[], append : boolean) : void;
            function loadRawData (data : Object[]) : void;
            function loadRecords (records : Ext.data.Model[], options : variant) : void;
            function max (field : string, grouped : boolean) : variant;
            function max (field : string) : variant;
            function min (field : string, grouped : boolean) : variant;
            function min (field : string) : variant;
            function nextPage (options : variant) : void;
            function prefetch (options : variant) : void;
            function prefetch () : void;
            function prefetchPage (page : number, options : variant) : void;
            function prefetchPage (page : number) : void;
            function prefetchRange (start : variant, end : variant) : void;
            function previousPage (options : variant) : void;
            function query (property : string, value : string, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : Ext.util.MixedCollection;
            function query (property : string, value : string, anyMatch : boolean, caseSensitive : boolean) : Ext.util.MixedCollection;
            function query (property : string, value : string, anyMatch : boolean) : Ext.util.MixedCollection;
            function query (property : string, value : string) : Ext.util.MixedCollection;
            function query (property : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean, exactMatch : boolean) : Ext.util.MixedCollection;
            function query (property : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean) : Ext.util.MixedCollection;
            function query (property : string, value : RegExp, anyMatch : boolean) : Ext.util.MixedCollection;
            function query (property : string, value : RegExp) : Ext.util.MixedCollection;
            function queryBy (fn : function  () : void, scope : variant) : Ext.util.MixedCollection;
            function queryBy (fn : function  () : void) : Ext.util.MixedCollection;
            function rejectChanges () : void;
            override function reload (options : variant) : void;
            function remove (records : Ext.data.Model) : void;
            function remove (records : Ext.data.Model[]) : void;
            function remove (records : number) : void;
            function remove (records : Number[]) : void;
            function removeAll (silent : boolean) : void;
            override function removeAll () : void;
            function removeAt (index : number, count : number) : void;
            function removeAt (index : number) : void;
            function removeFilter (toRemove : variant, applyFilters : boolean) : void;
            function removeFilter (toRemove : variant) : void;
            function sort () : Ext.util.Sorter[];
            function sum (field : string, grouped : boolean) : number;
            function sum (field : string) : number;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class StoreManager extends Ext.util.MixedCollection
        {
            static function getKey (o : variant) : variant;
            static function lookup (store : string) : Ext.data.Store;
            static function lookup (store : variant) : Ext.data.Store;
            static function register (stores : Ext.data.Store) : void;
            static function unregister (stores : string) : void;
            static function unregister (stores : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Tree extends Ext.Base
        {
            var root : Ext.data.NodeInterface;

            function constructor (root : Ext.data.NodeInterface);
            function constructor ();
            function getNodeById (id : string) : Ext.data.NodeInterface;
            function getRootNode () : Ext.data.NodeInterface;
            function removeRootNode () : Ext.data.NodeInterface;
            function setRootNode (node : Ext.data.NodeInterface) : Ext.data.NodeInterface;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class TreeModel extends Ext.data.Model
        {
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getFields () : Ext.data.Field[];
            static function getName () : string;
            static function getProxy () : Ext.data.proxy.Proxy;
            static function load (id : number, config : variant) : void;
            static function load (id : number) : void;
            static function load (id : string, config : variant) : void;
            static function load (id : string) : void;
            static function setFields (fields : variant, idProperty : variant, clientIdProperty : variant) : void;
            static function setProxy (proxy : string) : Ext.data.proxy.Proxy;
            static function setProxy (proxy : variant) : Ext.data.proxy.Proxy;
            static function setProxy (proxy : Ext.data.proxy.Proxy) : Ext.data.proxy.Proxy;
        }

        class TreeStore extends Ext.data.AbstractStore
        {
            var fields : variant;

            function constructor (config : variant);
            override function getNewRecords () : Ext.data.Model[];
            function getNodeById (id : variant) : Ext.data.NodeInterface;
            function getRootNode () : Ext.data.NodeInterface;
            override function getUpdatedRecords () : Ext.data.Model[];
            override function load (options : variant) : Ext.data.Store;
            override function load () : Ext.data.Store;
            override function removeAll () : void;
            override function setProxy (proxy : variant) : Ext.data.proxy.Proxy;
            function setRootNode (root : Ext.data.Model) : Ext.data.NodeInterface;
            function setRootNode (root : Ext.data.NodeInterface) : Ext.data.NodeInterface;
            function setRootNode (root : variant) : Ext.data.NodeInterface;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Types extends Ext.Base
        {
            static var AUTO : variant;
            static var BOOL : variant;
            static var BOOLEAN : variant;
            static var DATE : variant;
            static var FLOAT : variant;
            static var INT : variant;
            static var INTEGER : variant;
            static var NUMBER : variant;
            static var STRING : variant;
            static var stripRe : RegExp;

            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class UuidGenerator extends Ext.data.IdGenerator
        {
            var salt : variant;
            var timestamp : variant;

            function reconfigure (config : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class XmlStore extends Ext.data.Store
        {
            function constructor (config : variant);
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class association
        {

            class Association extends Ext.Base
            {
                var associatedName : string;
                var ownerName : string;

                function constructor (config : variant);
                function constructor ();
                function getReader () : Ext.data.reader.Reader;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class BelongsTo extends Ext.data.association.Association
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class HasMany extends Ext.data.association.Association
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class HasOne extends Ext.data.association.Association
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class flash
        {

        }

        class proxy
        {

            class Ajax extends Ext.data.proxy.Server
            {
                var actionMethods : variant;

                function constructor (config : variant);
                function constructor ();
                function getMethod (request : Ext.data.Request) : string;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Client extends Ext.data.proxy.Proxy
            {

                function clear () : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Direct extends Ext.data.proxy.Server
            {
                function constructor (config : variant);
                function buildUrl () : string;
                function doRequest (operation : variant, callback : variant, scope : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class JsonP extends Ext.data.proxy.Server
            {
                function constructor ();
                function abort () : void;
                override function buildUrl (request : Ext.data.Request) : string;
                function encodeRecords (records : Ext.data.Model[]) : variant[];
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class LocalStorage extends Ext.data.proxy.WebStorage
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Memory extends Ext.data.proxy.Client
            {
                override function clear () : void;
                override function create (operation : Ext.data.Operation, callback : function  () : void, scope : variant) : void;
                override function destroy (operation : Ext.data.Operation, callback : function  () : void, scope : variant) : void;
                override function read (operation : Ext.data.Operation, callback : function  () : void, scope : variant) : void;
                override function update (operation : Ext.data.Operation, callback : function  () : void, scope : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Proxy extends Ext.Base
            {
                var isProxy : boolean;
                var isSynchronous : boolean;

                function constructor (config : variant);
                function constructor ();
                function batch (options : variant) : Ext.data.Batch;
                function create (operation : Ext.data.Operation, callback : function  () : void, scope : variant) : void;
                function destroy (operation : Ext.data.Operation, callback : function  () : void, scope : variant) : void;
                function getModel () : Ext.data.Model;
                function getReader () : Ext.data.reader.Reader;
                function getWriter () : Ext.data.writer.Writer;
                function read (operation : Ext.data.Operation, callback : function  () : void, scope : variant) : void;
                function setModel (model : string, setOnStore : boolean) : void;
                function setModel (model : Ext.data.Model, setOnStore : boolean) : void;
                function setReader (reader : string) : Ext.data.reader.Reader;
                function setReader (reader : variant) : Ext.data.reader.Reader;
                function setReader (reader : Ext.data.reader.Reader) : Ext.data.reader.Reader;
                function setWriter (writer : string) : Ext.data.writer.Writer;
                function setWriter (writer : variant) : Ext.data.writer.Writer;
                function setWriter (writer : Ext.data.writer.Writer) : Ext.data.writer.Writer;
                function update (operation : Ext.data.Operation, callback : function  () : void, scope : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Rest extends Ext.data.proxy.Ajax
            {

                function buildUrl (request : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Server extends Ext.data.proxy.Proxy
            {
                function afterRequest (request : Ext.data.Request, success : boolean) : void;
                function buildRequest (operation : Ext.data.Operation) : Ext.data.Request;
                function buildUrl (request : Ext.data.Request) : string;
                function destroy () : void;
                function doRequest (operation : Ext.data.Operation, callback : function  () : void, scope : variant) : void;
                function encodeFilters (filters : Ext.util.Filter[]) : string;
                function encodeSorters (sorters : Ext.util.Sorter[]) : string;
                function read () : void;
                function setExtraParam (name : string, value : variant) : void;
                function update () : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class SessionStorage extends Ext.data.proxy.WebStorage
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class WebStorage extends Ext.data.proxy.Client
            {
                var cache : variant;

                function constructor (config : variant);
                function constructor ();
                override function clear () : void;
                function create (operation : variant, callback : variant, scope : variant) : void;
                function destroy (operation : variant, callback : variant, scope : variant) : void;
                function read (operation : variant, callback : variant, scope : variant) : void;
                function setRecord (record : Ext.data.Model, id : string) : void;
                function setRecord (record : Ext.data.Model) : void;
                function update (operation : variant, callback : variant, scope : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class reader
        {

            class Array extends Ext.data.reader.Json
            {
                function constructor (meta : variant);
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Json extends Ext.data.reader.Reader
            {
                override function getResponseData (response : variant) : Ext.data.ResultSet;
                override function readRecords (data : variant) : Ext.data.ResultSet;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Reader extends Ext.Base
            {
                var metaData : variant;
                var rawData : variant;

                function constructor (config : variant);
                function constructor ();
                function getResponseData (response : variant) : Ext.data.ResultSet;
                function read (response : variant) : Ext.data.ResultSet;
                function readRecords (data : variant) : Ext.data.ResultSet;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Xml extends Ext.data.reader.Reader
            {
                function getData (data : variant) : variant;
                override function getResponseData (response : variant) : Ext.data.ResultSet;
                override function readRecords (doc : variant) : Ext.data.ResultSet;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class validations extends Ext.Base
        {
            static var emailMessage : string;
            static var emailRe : RegExp;
            static var exclusionMessage : string;
            static var formatMessage : string;
            static var inclusionMessage : string;
            static var lengthMessage : string;
            static var presenceMessage : string;

            static function email (config : variant, email : string) : boolean;
            static function exclusion (config : variant, value : string) : boolean;
            static function format (config : variant, value : string) : boolean;
            static function inclusion (config : variant, value : string) : boolean;
            static function length (config : variant, value : string) : boolean;
            static function presence (config : variant, value : variant) : boolean;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class writer
        {

            class Json extends Ext.data.writer.Writer
            {
                function getExpandedData (data : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Writer extends Ext.Base
            {
                function constructor (config : variant);
                function constructor ();
                function getRecordData (record : Ext.data.Model, operation : Ext.data.Operation) : variant;
                function getRecordData (record : Ext.data.Model) : variant;
                function write (request : Ext.data.Request) : Ext.data.Request;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Xml extends Ext.data.writer.Writer
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }
    }

    class dd
    {

        class DD extends Ext.dd.DragDrop
        {
            var scroll : boolean;

            function constructor (id : string, sGroup : string, config : variant);
            function alignElWithMouse (el : HTMLElement, iPageX : number, iPageY : number) : void;
            override function applyConfig () : void;
            function autoOffset (iPageX : number, iPageY : number) : void;
            function b4Drag (e : variant) : void;
            function b4MouseDown (e : variant) : void;
            function cachePosition (iPageX : number, iPageY : number) : void;
            function cachePosition (iPageX : number) : void;
            function cachePosition () : void;
            function setDelta (iDeltaX : number, iDeltaY : number) : void;
            function setDragElPos (iPageX : number, iPageY : number) : void;
            override function toString () : string;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class DDProxy extends Ext.dd.DD
        {
            var centerFrame : boolean;
            var resizeFrame : boolean;
            static var dragElId : string;

            function constructor (id : string, sGroup : string, config : variant);
            override function applyConfig () : void;
            override function b4MouseDown (e : variant) : void;
            function createFrame () : void;
            function endDrag (e : variant) : void;
            function initFrame () : void;
            override function toString () : string;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class DDTarget extends Ext.dd.DragDrop
        {
            function constructor (id : string, sGroup : string, config : variant);
            function addInvalidHandleClass () : void;
            function addInvalidHandleId () : void;
            function addInvalidHandleType () : void;
            override function clearConstraints () : void;
            override function clearTicks () : void;
            function endDrag () : void;
            override function getDragEl () : HTMLElement;
            function isValidHandleChild () : void;
            function onDrag () : void;
            function onDragDrop () : void;
            function onDragEnter () : void;
            function onDragOut () : void;
            function onDragOver () : void;
            function onInvalidDrop () : void;
            function onMouseDown () : void;
            function onMouseUp () : void;
            function removeInvalidHandleClass () : void;
            function removeInvalidHandleId () : void;
            function removeInvalidHandleType () : void;
            function resetConstraints () : void;
            function setDragElId () : void;
            function setHandleElId () : void;
            function setInitPosition () : void;
            function setOuterHandleElId () : void;
            function setXConstraint () : void;
            function setYConstraint () : void;
            function startDrag () : void;
            override function toString () : string;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class DragDrop extends Ext.Base
        {
            var available : boolean;
            var config : variant;
            var defaultPadding : variant;
            var groups : variant;
            var hasOuterHandles : boolean;
            var id : string;
            var ignoreSelf : boolean;
            var invalidHandleClasses : string[];
            var invalidHandleIds : variant;
            var invalidHandleTypes : variant;
            var isTarget : boolean;
            var maintainOffset : boolean;
            var moveOnly : boolean;
            var padding : Number[];
            var primaryButtonOnly : boolean;
            var xTicks : Number[];
            var yTicks : Number[];

            function constructor (id : string, sGroup : string, config : variant);
            function addInvalidHandleClass (cssClass : string) : void;
            function addInvalidHandleId (id : string) : void;
            function addInvalidHandleType (tagName : string) : void;
            function addToGroup (sGroup : string) : void;
            function applyConfig () : void;
            function clearConstraints () : void;
            function clearTicks () : void;
            function constrainTo (constrainTo : string, pad : variant, inContent : boolean) : void;
            function constrainTo (constrainTo : string, pad : variant) : void;
            function constrainTo (constrainTo : string, pad : number, inContent : boolean) : void;
            function constrainTo (constrainTo : string, pad : number) : void;
            function constrainTo (constrainTo : string, inContent : boolean) : void;
            function constrainTo (constrainTo : string) : void;
            function constrainTo (constrainTo : HTMLElement, pad : variant, inContent : boolean) : void;
            function constrainTo (constrainTo : HTMLElement, pad : variant) : void;
            function constrainTo (constrainTo : HTMLElement, pad : number, inContent : boolean) : void;
            function constrainTo (constrainTo : HTMLElement, pad : number) : void;
            function constrainTo (constrainTo : HTMLElement, inContent : boolean) : void;
            function constrainTo (constrainTo : HTMLElement) : void;
            function constrainTo (constrainTo : Ext.dom.Element, pad : variant, inContent : boolean) : void;
            function constrainTo (constrainTo : Ext.dom.Element, pad : variant) : void;
            function constrainTo (constrainTo : Ext.dom.Element, pad : number, inContent : boolean) : void;
            function constrainTo (constrainTo : Ext.dom.Element, pad : number) : void;
            function constrainTo (constrainTo : Ext.dom.Element, inContent : boolean) : void;
            function constrainTo (constrainTo : Ext.dom.Element) : void;
            function destroy () : void;
            function endDrag (e : Event) : void;
            function getDragEl () : HTMLElement;
            function getEl () : HTMLElement;
            function init (id : string, sGroup : string, config : variant) : void;
            function initTarget (id : string, sGroup : string, config : variant) : void;
            function isLocked () : boolean;
            function isValidHandleChild (node : HTMLElement) : boolean;
            function lock () : void;
            function onAvailable () : void;
            function onDrag (e : Event) : void;
            function onDragDrop (e : Event, id : string) : void;
            function onDragDrop (e : Event, id : Ext.dd.DragDrop[]) : void;
            function onDragEnter (e : Event, id : string) : void;
            function onDragEnter (e : Event, id : Ext.dd.DragDrop[]) : void;
            function onDragOut (e : Event, id : string) : void;
            function onDragOut (e : Event, id : Ext.dd.DragDrop[]) : void;
            function onDragOver (e : Event, id : string) : void;
            function onDragOver (e : Event, id : Ext.dd.DragDrop[]) : void;
            function onInvalidDrop (e : Event) : void;
            function onMouseDown (e : Event) : void;
            function onMouseUp (e : Event) : void;
            function removeFromGroup (sGroup : string) : void;
            function removeInvalidHandleClass (cssClass : string) : void;
            function removeInvalidHandleId (id : string) : void;
            function removeInvalidHandleType (tagName : string) : void;
            function resetConstraints (maintainOffset : boolean) : void;
            function setDragElId (id : string) : void;
            function setHandleElId (id : string) : void;
            function setInitPosition (diffX : number, diffY : number) : void;
            function setOuterHandleElId (id : string) : void;
            function setPadding (iTop : number, iRight : number, iBot : number, iLeft : number) : void;
            function setXConstraint (iLeft : number, iRight : number, iTickSize : number) : void;
            function setXConstraint (iLeft : number, iRight : number) : void;
            function setYConstraint (iUp : number, iDown : number, iTickSize : number) : void;
            function setYConstraint (iUp : number, iDown : number) : void;
            function startDrag (x : number, y : number) : void;
            override function toString () : string;
            function unlock () : void;
            function unreg () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class DragDropElement
        {
            function getPosX (el : HTMLElement) : number;
            function getPosY (el : HTMLElement) : number;
            function getScrollLeft () : number;
            function getScrollTop () : number;
            function getStyle (el : HTMLElement, styleProp : string) : string;
            function handleWasClicked (node : HTMLElement) : void;
            function moveToEl (moveEl : HTMLElement, targetEl : HTMLElement) : void;
            function numericSort (a : number, b : number) : number;
            function swapNode (n1 : HTMLElement, n2 : HTMLElement) : void;
        }

        class DragDropManager extends Ext.Base
        {
            static var INTERSECT : number;
            static var POINT : number;
            static var clickPixelThresh : number;
            static var clickTimeThresh : number;
            static var dragCls : string;
            static var mode : number;
            static var notifyOccluded : boolean;
            static var preventDefault : boolean;
            static var stopPropagation : boolean;
            static var useCache : boolean;

            static function getBestMatch (dds : Ext.dd.DragDrop[]) : Ext.dd.DragDrop;
            static function getCss (id : string) : variant;
            static function getDDById (id : string) : Ext.dd.DragDrop;
            static function getLocation (oDD : Ext.dd.DragDrop) : Ext.util.Region;
            static function getRelated (p_oDD : Ext.dd.DragDrop, bTargetsOnly : boolean) : Ext.dd.DragDrop[];
            static function isDragDrop (id : string) : boolean;
            static function isHandle (id : string) : boolean;
            static function isLegalTarget (oDD : Ext.dd.DragDrop, oTargetDD : Ext.dd.DragDrop) : boolean;
            static function isLocked () : boolean;
            static function isTypeOfDD (the : variant) : boolean;
            static function lock () : void;
            static function refreshCache (groups : variant) : void;
            static function regDragDrop (oDD : Ext.dd.DragDrop, sGroup : string) : void;
            static function regHandle (sDDId : string, sHandleId : string) : void;
            static function startDrag (x : number, y : number) : void;
            static function stopEvent (e : Event) : void;
            static function unlock () : void;
            static function verifyEl (el : HTMLElement) : boolean;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;

        }

        class DragSource extends Ext.dd.DDProxy
        {
            var dragData : variant;

            function constructor (el : string, config : variant);
            function constructor (el : string);
            function constructor (el : HTMLElement, config : variant);
            function constructor (el : HTMLElement);
            function constructor (el : Ext.dom.Element, config : variant);
            function constructor (el : Ext.dom.Element);
            function afterDragDrop (target : Ext.dd.DragDrop, e : Event, id : string) : void;
            function afterDragEnter (target : Ext.dd.DragDrop, e : Event, id : string) : void;
            function afterDragOut (target : Ext.dd.DragDrop, e : Event, id : string) : void;
            function afterDragOver (target : Ext.dd.DragDrop, e : Event, id : string) : void;
            function afterInvalidDrop (e : Event, id : string) : void;
            function afterValidDrop (target : variant, e : Event, id : string) : void;
            function alignElWithMouse () : void;
            function beforeDragDrop (target : Ext.dd.DragDrop, e : Event, id : string) : boolean;
            function beforeDragEnter (target : Ext.dd.DragDrop, e : Event, id : string) : boolean;
            function beforeDragOut (target : Ext.dd.DragDrop, e : Event, id : string) : boolean;
            function beforeDragOver (target : Ext.dd.DragDrop, e : Event, id : string) : boolean;
            function beforeInvalidDrop (target : Ext.dd.DragDrop, e : Event, id : string) : boolean;
            override function destroy () : void;
            function getDragData (e : variant) : variant;
            function getProxy () : Ext.dd.StatusProxy;
            function hideProxy () : void;
            function onBeforeDrag (data : variant, e : Event) : boolean;
            function onStartDrag (x : number, y : number) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class DragTracker extends Ext.Base
        {
            var active : boolean;
            var dragTarget : HTMLElement;

            function getDragTarget () : Ext.dom.Element;
            function getOffset (constrainMode : string) : Number[];
            function getOffset () : Number[];
            function initEl (el : Ext.dom.Element) : void;
            function initEl (el : HTMLElement) : void;
            function onBeforeStart (e : Ext.EventObject) : void;
            function onDrag (e : Ext.EventObject) : void;
            function onEnd (e : Ext.EventObject) : void;
            function onStart (e : Ext.EventObject) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class DragZone extends Ext.dd.DragSource
        {
            function constructor (el : string, config : variant);
            function constructor (el : HTMLElement, config : variant);
            function constructor (el : Ext.dom.Element, config : variant);
            override function destroy () : void;
            function getDragData (e : Event) : variant;
            function getRepairXY (e : Event) : Number[];
            function onInitDrag (x : number, y : number) : boolean;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class DropTarget extends Ext.dd.DDTarget
        {

            function constructor (el : string, config : variant);
            function constructor (el : HTMLElement, config : variant);
            function constructor (el : Ext.dom.Element, config : variant);
            override function destroy () : void;
            function notifyDrop (source : Ext.dd.DragSource, e : Event, data : variant) : boolean;
            function notifyEnter (source : Ext.dd.DragSource, e : Event, data : variant) : string;
            function notifyOut (source : Ext.dd.DragSource, e : Event, data : variant) : void;
            function notifyOver (source : Ext.dd.DragSource, e : Event, data : variant) : string;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class DropZone extends Ext.dd.DropTarget
        {
            function getTargetFromEvent (e : Event) : variant;
            override function notifyDrop (source : Ext.dd.DragSource, e : Event, data : variant) : boolean;
            override function notifyEnter (source : Ext.dd.DragSource, e : Event, data : variant) : string;
            override function notifyOut (source : Ext.dd.DragSource, e : Event, data : variant) : void;
            override function notifyOver (source : Ext.dd.DragSource, e : Event, data : variant) : string;
            function onContainerDrop (source : Ext.dd.DragSource, e : Event, data : variant) : boolean;
            function onContainerOver (source : Ext.dd.DragSource, e : Event, data : variant) : string;
            function onNodeDrop (nodeData : variant, source : Ext.dd.DragSource, e : Event, data : variant) : boolean;
            function onNodeEnter (nodeData : variant, source : Ext.dd.DragSource, e : Event, data : variant) : void;
            function onNodeOut (nodeData : variant, source : Ext.dd.DragSource, e : Event, data : variant) : void;
            function onNodeOver (nodeData : variant, source : Ext.dd.DragSource, e : Event, data : variant) : string;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Registry extends Ext.Base
        {
            static function constructor ();
            static function getHandle (id : string) : variant;
            static function getHandle (id : HTMLElement) : variant;
            static function getHandleFromEvent (e : Event) : variant;
            static function getTarget (id : string) : variant;
            static function getTarget (id : HTMLElement) : variant;
            static function getTargetFromEvent (e : Event) : variant;
            static function register (element : string, data : variant) : void;
            static function register (element : HTMLElement, data : variant) : void;
            static function unregister (element : string) : void;
            static function unregister (element : HTMLElement) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class ScrollManager extends Ext.Base
        {
            static var animDuration : number;
            static var animate : boolean;
            static var ddGroup : string;
            static var frequency : number;
            static var hthresh : number;
            static var increment : number;
            static var vthresh : number;

            static function constructor ();
            static function refreshCache () : void;
            static function register (el : string) : void;
            static function register (el : HTMLElement) : void;
            static function register (el : Ext.dom.Element) : void;
            static function register (el : string[]) : void;
            static function register (el : HTMLElement[]) : void;
            static function register (el : Ext.dom.Element[]) : void;
            static function unregister (el : string) : void;
            static function unregister (el : HTMLElement) : void;
            static function unregister (el : Ext.dom.Element) : void;
            static function unregister (el : string[]) : void;
            static function unregister (el : HTMLElement[]) : void;
            static function unregister (el : Ext.dom.Element[]) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class StatusProxy extends Ext.Component
        {
            function constructor (config : variant);
            function constructor ();
            function getGhost () : Ext.dom.Element;
            function hide (clear : boolean) : void;
            function repair (xy : Number[], callback : function  () : void, scope : variant) : void;
            function reset (clearGhost : boolean) : void;
            function setStatus (cssClass : string) : void;
            function stop () : void;
            function sync () : void;
            override function update (html : string) : void;
            function update (html : HTMLElement) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class direct
    {

        class Event extends Ext.Base
        {
            function constructor (config : variant);
            function constructor ();
            function getData () : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
        }

        class ExceptionEvent extends Ext.direct.RemotingEvent
        {
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class JsonProvider extends Ext.direct.Provider
        {
            function createEvent (response : variant) : Ext.direct.Event;
            function createEvents (response : variant) : Ext.direct.Event[];
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Manager extends Ext.Base
        {
            static var exceptions : variant;

            static function constructor ();
            static function addProvider (provider : Ext.direct.Provider) : void;
            static function addProvider (provider : variant) : void;
            static function getProvider (id : string) : void;
            static function getProvider (id : Ext.direct.Provider) : void;
            static function parseMethod (fn : string) : function () : void;
            static function parseMethod (fn : function  () : void) : function () : void;
            static function removeProvider (provider : string) : Ext.direct.Provider;
            static function removeProvider (provider : Ext.direct.Provider) : Ext.direct.Provider;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class PollingProvider extends Ext.direct.JsonProvider
        {
            override function connect () : void;
            override function disconnect () : void;
            override function isConnected () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Provider extends Ext.Base
        {
            function connect () : void;
            function disconnect () : void;
            function isConnected () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class RemotingEvent extends Ext.direct.Event
        {
            function getTransaction () : Ext.direct.Transaction;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class RemotingProvider extends Ext.direct.JsonProvider
        {
            override function connect () : void;
            override function disconnect () : void;
            override function isConnected () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Transaction extends Ext.Base
        {
            function constructor (config : variant);
            function constructor ();
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class dom
    {

        class AbstractElement extends Ext.Base
        {
            var defaultUnit : string;
            var dom : HTMLElement;
            var id : string;
            static var ASCLASS : number;
            static var DISPLAY : number;
            static var OFFSETS : number;
            static var VISIBILITY : number;

            function constructor (element : variant, forceNew : variant);
            function addCls (className : string) : Ext.dom.Element;
            function addCls (className : string[]) : Ext.dom.Element;
            function appendChild (el : string, returnDom : boolean) : Ext.dom.AbstractElement;
            function appendChild (el : string) : Ext.dom.AbstractElement;
            function appendChild (el : HTMLElement, returnDom : boolean) : Ext.dom.AbstractElement;
            function appendChild (el : HTMLElement) : Ext.dom.AbstractElement;
            function appendChild (el : Ext.dom.AbstractElement, returnDom : boolean) : Ext.dom.AbstractElement;
            function appendChild (el : Ext.dom.AbstractElement) : Ext.dom.AbstractElement;
            function appendChild (el : variant, returnDom : boolean) : Ext.dom.AbstractElement;
            function appendChild (el : variant) : Ext.dom.AbstractElement;
            function appendTo (el : string) : variant;
            function appendTo (el : HTMLElement) : variant;
            function appendTo (el : Ext.dom.AbstractElement) : variant;
            function applyStyles (styles : string) : Ext.dom.Element;
            function applyStyles (styles : variant) : Ext.dom.Element;
            function applyStyles (styles : function  () : void) : Ext.dom.Element;
            function child (selector : string, returnDom : boolean) : variant;
            function child (selector : string) : variant;
            function contains (el : HTMLElement) : boolean;
            function contains (el : string) : boolean;
            function createChild (config : variant, insertBefore : HTMLElement, returnDom : boolean) : Ext.dom.AbstractElement;
            function createChild (config : variant, insertBefore : HTMLElement) : Ext.dom.AbstractElement;
            function createChild (config : variant, returnDom : boolean) : Ext.dom.AbstractElement;
            function createChild (config : variant) : Ext.dom.AbstractElement;
            function destroy () : void;
            function down (selector : string, returnDom : boolean) : variant;
            function down (selector : string) : variant;
            function findParent (selector : string, limit : number, returnEl : boolean) : HTMLElement;
            function findParent (selector : string, limit : number) : HTMLElement;
            function findParent (selector : string, limit : string, returnEl : boolean) : HTMLElement;
            function findParent (selector : string, limit : string) : HTMLElement;
            function findParent (selector : string, limit : HTMLElement, returnEl : boolean) : HTMLElement;
            function findParent (selector : string, limit : HTMLElement) : HTMLElement;
            function findParent (selector : string, limit : Ext.dom.Element, returnEl : boolean) : HTMLElement;
            function findParent (selector : string, limit : Ext.dom.Element) : HTMLElement;
            function findParent (selector : string, returnEl : boolean) : HTMLElement;
            function findParent (selector : string) : HTMLElement;
            function findParentNode (selector : string, limit : number, returnEl : boolean) : HTMLElement;
            function findParentNode (selector : string, limit : number) : HTMLElement;
            function findParentNode (selector : string, limit : string, returnEl : boolean) : HTMLElement;
            function findParentNode (selector : string, limit : string) : HTMLElement;
            function findParentNode (selector : string, limit : HTMLElement, returnEl : boolean) : HTMLElement;
            function findParentNode (selector : string, limit : HTMLElement) : HTMLElement;
            function findParentNode (selector : string, limit : Ext.dom.Element, returnEl : boolean) : HTMLElement;
            function findParentNode (selector : string, limit : Ext.dom.Element) : HTMLElement;
            function findParentNode (selector : string, returnEl : boolean) : HTMLElement;
            function findParentNode (selector : string) : HTMLElement;
            function first (selector : string, returnDom : boolean) : variant;
            function first (selector : string) : variant;
            function first (returnDom : boolean) : variant;
            function first () : variant;
            function getActiveElement () : HTMLElement;
            function getAttribute (name : string, namespace : string) : string;
            function getAttribute (name : string) : string;
            function getBorderWidth (side : string) : number;
            function getById (id : string, asDom : boolean) : void;
            function getById (id : string) : void;
            function getHTML () : void;
            function getHeight (contentHeight : boolean) : number;
            function getHeight () : number;
            function getMargin (sides : string) : variant;
            function getMargin () : variant;
            function getPadding (side : string) : number;
            function getSize (contentSize : boolean) : variant;
            function getSize () : variant;
            function getStyle (property : string, inline : boolean) : variant;
            function getStyle (property : string) : variant;
            function getStyle (property : string[], inline : boolean) : variant;
            function getStyle (property : string[]) : variant;
            function getValue (asNumber : boolean) : variant;
            function getViewSize () : variant;
            function getWidth (contentWidth : boolean) : number;
            function getWidth () : number;
            function hasCls (className : string) : boolean;
            function hide (animate : boolean) : variant;
            function hide (animate : variant) : variant;
            function hide () : variant;
            function insertAfter (el : string) : variant;
            function insertAfter (el : HTMLElement) : variant;
            function insertAfter (el : Ext.dom.AbstractElement) : variant;
            function insertBefore (el : string) : variant;
            function insertBefore (el : HTMLElement) : variant;
            function insertBefore (el : Ext.dom.AbstractElement) : variant;
            function insertFirst (el : string) : Ext.dom.AbstractElement;
            function insertFirst (el : HTMLElement) : Ext.dom.AbstractElement;
            function insertFirst (el : Ext.dom.AbstractElement) : Ext.dom.AbstractElement;
            function insertFirst (el : variant) : Ext.dom.AbstractElement;
            function insertHtml (where : string, html : string, returnEl : boolean) : variant;
            function insertHtml (where : string, html : string) : variant;
            function insertSibling (el : string, where : string, returnDom : boolean) : Ext.dom.AbstractElement;
            function insertSibling (el : string, where : string) : Ext.dom.AbstractElement;
            function insertSibling (el : string, returnDom : boolean) : Ext.dom.AbstractElement;
            function insertSibling (el : string) : Ext.dom.AbstractElement;
            function insertSibling (el : HTMLElement, where : string, returnDom : boolean) : Ext.dom.AbstractElement;
            function insertSibling (el : HTMLElement, where : string) : Ext.dom.AbstractElement;
            function insertSibling (el : HTMLElement, returnDom : boolean) : Ext.dom.AbstractElement;
            function insertSibling (el : HTMLElement) : Ext.dom.AbstractElement;
            function insertSibling (el : Ext.dom.AbstractElement, where : string, returnDom : boolean) : Ext.dom.AbstractElement;
            function insertSibling (el : Ext.dom.AbstractElement, where : string) : Ext.dom.AbstractElement;
            function insertSibling (el : Ext.dom.AbstractElement, returnDom : boolean) : Ext.dom.AbstractElement;
            function insertSibling (el : Ext.dom.AbstractElement) : Ext.dom.AbstractElement;
            function insertSibling (el : variant, where : string, returnDom : boolean) : Ext.dom.AbstractElement;
            function insertSibling (el : variant, where : string) : Ext.dom.AbstractElement;
            function insertSibling (el : variant, returnDom : boolean) : Ext.dom.AbstractElement;
            function insertSibling (el : variant) : Ext.dom.AbstractElement;
            function insertSibling (el : variant[], where : string, returnDom : boolean) : Ext.dom.AbstractElement;
            function insertSibling (el : variant[], where : string) : Ext.dom.AbstractElement;
            function insertSibling (el : variant[], returnDom : boolean) : Ext.dom.AbstractElement;
            function insertSibling (el : variant[]) : Ext.dom.AbstractElement;
            function is (selector : string) : boolean;
            function isStyle (style : string, value : string) : boolean;
            function isTransparent (prop : string) : boolean;
            function last (selector : string, returnDom : boolean) : variant;
            function last (selector : string) : variant;
            function last (returnDom : boolean) : variant;
            function last () : variant;
            function mask (msg : string, msgCls : string) : void;
            function mask (msg : string) : void;
            function mask () : void;
            function next (selector : string, returnDom : boolean) : variant;
            function next (selector : string) : variant;
            function next (returnDom : boolean) : variant;
            function next () : variant;
            function parent (selector : string, returnDom : boolean) : variant;
            function parent (selector : string) : variant;
            function parent (returnDom : boolean) : variant;
            function parent () : variant;
            function prev (selector : string, returnDom : boolean) : variant;
            function prev (selector : string) : variant;
            function prev (returnDom : boolean) : variant;
            function prev () : variant;
            function query (selector : string) : HTMLElement[];
            function radioCls (className : string) : Ext.dom.Element;
            function radioCls (className : string[]) : Ext.dom.Element;
            function remove () : void;
            function removeCls (className : string) : Ext.dom.Element;
            function removeCls (className : string[]) : Ext.dom.Element;
            function repaint () : variant;
            function replace (el : string) : variant;
            function replace (el : HTMLElement) : variant;
            function replace (el : Ext.dom.AbstractElement) : variant;
            function replaceCls (oldClassName : string, newClassName : string) : Ext.dom.Element;
            function replaceWith (el : string) : Ext.dom.AbstractElement;
            function replaceWith (el : HTMLElement) : Ext.dom.AbstractElement;
            function replaceWith (el : Ext.dom.AbstractElement) : Ext.dom.AbstractElement;
            function replaceWith (el : variant) : Ext.dom.AbstractElement;
            function select (selector : string, unique : boolean) : Ext.dom.CompositeElement;
            function select (selector : string) : Ext.dom.CompositeElement;
            function serializeForm (form : variant) : string;
            function set (o : variant, useSet : boolean) : variant;
            function set (o : variant) : variant;
            function setHTML (html : string) : variant;
            function setHeight (height : number) : Ext.dom.Element;
            function setHeight (height : string) : Ext.dom.Element;
            function setSize (width : number, height : number) : Ext.dom.Element;
            function setSize (width : number, height : string) : Ext.dom.Element;
            function setSize (width : string, height : number) : Ext.dom.Element;
            function setSize (width : string, height : string) : Ext.dom.Element;
            function setStyle (property : string, value : string) : Ext.dom.Element;
            function setStyle (property : string) : Ext.dom.Element;
            function setStyle (property : variant, value : string) : Ext.dom.Element;
            function setStyle (property : variant) : Ext.dom.Element;
            function setVisibilityMode (mode : variant) : variant;
            function setVisible (visible : boolean, animate : boolean) : Ext.dom.Element;
            function setVisible (visible : boolean, animate : variant) : Ext.dom.Element;
            function setVisible (visible : boolean) : Ext.dom.Element;
            function setWidth (width : number) : Ext.dom.Element;
            function setWidth (width : string) : Ext.dom.Element;
            function show (animate : boolean) : variant;
            function show (animate : variant) : variant;
            function show () : variant;
            function toggleCls (className : string) : Ext.dom.Element;
            function unmask () : void;
            function up (selector : string, limit : number, returnDom : boolean) : Ext.dom.Element;
            function up (selector : string, limit : number) : Ext.dom.Element;
            function up (selector : string, limit : string, returnDom : boolean) : Ext.dom.Element;
            function up (selector : string, limit : string) : Ext.dom.Element;
            function up (selector : string, limit : HTMLElement, returnDom : boolean) : Ext.dom.Element;
            function up (selector : string, limit : HTMLElement) : Ext.dom.Element;
            function up (selector : string, limit : Ext.dom.Element, returnDom : boolean) : Ext.dom.Element;
            function up (selector : string, limit : Ext.dom.Element) : Ext.dom.Element;
            function up (selector : string, returnDom : boolean) : Ext.dom.Element;
            function up (selector : string) : Ext.dom.Element;
            function update (html : string) : variant;
            function wrap (config : variant, returnDom : boolean, selector : string) : variant;
            function wrap (config : variant, returnDom : boolean) : variant;
            function wrap (config : variant, selector : string) : variant;
            function wrap (config : variant) : variant;
            function wrap (returnDom : boolean, selector : string) : variant;
            function wrap (returnDom : boolean) : variant;
            function wrap (selector : string) : variant;
            function wrap () : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function fly (dom : string, named : string) : Ext.dom.Element.Fly;
            static function fly (dom : string) : Ext.dom.Element.Fly;
            static function fly (dom : HTMLElement, named : string) : Ext.dom.Element.Fly;
            static function fly (dom : HTMLElement) : Ext.dom.Element.Fly;
            static function fromPoint (x : number, y : number) : string;
            static function get (el : string) : Ext.dom.Element;
            static function get (el : HTMLElement) : Ext.dom.Element;
            static function get (el : Ext.dom.Element) : Ext.dom.Element;
            static function getDocumentHeight () : number;
            static function getDocumentWidth () : number;
            static function getName () : string;
            static function getOrientation () : string;
            static function getViewSize () : variant;
            static function getViewportHeight () : number;
            static function getViewportWidth () : number;
            static function mergeClsList (clsList1 : variant, clsList2 : variant) : variant[];
            static function normalize (prop : string) : string;
            static function parseBox (box : number) : variant;
            static function parseBox (box : string) : variant;
            static function parseStyles (styles : string) : variant;
            static function removeCls (existingClsList : variant, removeClsList : variant) : variant[];
            static function unitizeBox (box : number, units : string) : string;
            static function unitizeBox (box : string, units : string) : string;
            static function unitizeBox (box : variant, units : string) : string;
        }

        class AbstractHelper extends Ext.Base
        {
            function append (el : string, o : variant, returnElement : boolean) : variant;
            function append (el : string, o : variant) : variant;
            function append (el : string, o : string, returnElement : boolean) : variant;
            function append (el : string, o : string) : variant;
            function append (el : HTMLElement, o : variant, returnElement : boolean) : variant;
            function append (el : HTMLElement, o : variant) : variant;
            function append (el : HTMLElement, o : string, returnElement : boolean) : variant;
            function append (el : HTMLElement, o : string) : variant;
            function append (el : Ext.dom.Element, o : variant, returnElement : boolean) : variant;
            function append (el : Ext.dom.Element, o : variant) : variant;
            function append (el : Ext.dom.Element, o : string, returnElement : boolean) : variant;
            function append (el : Ext.dom.Element, o : string) : variant;
            function applyStyles (el : string, styles : string) : void;
            function applyStyles (el : string, styles : variant) : void;
            function applyStyles (el : string, styles : function  () : void) : void;
            function applyStyles (el : HTMLElement, styles : string) : void;
            function applyStyles (el : HTMLElement, styles : variant) : void;
            function applyStyles (el : HTMLElement, styles : function  () : void) : void;
            function generateStyles (styles : variant, buffer : string[]) : variant;
            function generateStyles (styles : variant) : variant;
            function insertAfter (el : string, o : variant, returnElement : boolean) : variant;
            function insertAfter (el : string, o : variant) : variant;
            function insertAfter (el : HTMLElement, o : variant, returnElement : boolean) : variant;
            function insertAfter (el : HTMLElement, o : variant) : variant;
            function insertAfter (el : Ext.dom.Element, o : variant, returnElement : boolean) : variant;
            function insertAfter (el : Ext.dom.Element, o : variant) : variant;
            function insertBefore (el : string, o : variant, returnElement : boolean) : variant;
            function insertBefore (el : string, o : variant) : variant;
            function insertBefore (el : string, o : string, returnElement : boolean) : variant;
            function insertBefore (el : string, o : string) : variant;
            function insertBefore (el : HTMLElement, o : variant, returnElement : boolean) : variant;
            function insertBefore (el : HTMLElement, o : variant) : variant;
            function insertBefore (el : HTMLElement, o : string, returnElement : boolean) : variant;
            function insertBefore (el : HTMLElement, o : string) : variant;
            function insertBefore (el : Ext.dom.Element, o : variant, returnElement : boolean) : variant;
            function insertBefore (el : Ext.dom.Element, o : variant) : variant;
            function insertBefore (el : Ext.dom.Element, o : string, returnElement : boolean) : variant;
            function insertBefore (el : Ext.dom.Element, o : string) : variant;
            function insertFirst (el : string, o : variant, returnElement : boolean) : variant;
            function insertFirst (el : string, o : variant) : variant;
            function insertFirst (el : string, o : string, returnElement : boolean) : variant;
            function insertFirst (el : string, o : string) : variant;
            function insertFirst (el : HTMLElement, o : variant, returnElement : boolean) : variant;
            function insertFirst (el : HTMLElement, o : variant) : variant;
            function insertFirst (el : HTMLElement, o : string, returnElement : boolean) : variant;
            function insertFirst (el : HTMLElement, o : string) : variant;
            function insertFirst (el : Ext.dom.Element, o : variant, returnElement : boolean) : variant;
            function insertFirst (el : Ext.dom.Element, o : variant) : variant;
            function insertFirst (el : Ext.dom.Element, o : string, returnElement : boolean) : variant;
            function insertFirst (el : Ext.dom.Element, o : string) : variant;
            function insertHtml (where : string, el : HTMLElement, html : string) : HTMLElement;
            function insertHtml (where : string, el : Text, html : string) : HTMLElement;
            function markup (spec : variant) : string;
            function overwrite (el : string, o : variant, returnElement : boolean) : variant;
            function overwrite (el : string, o : variant) : variant;
            function overwrite (el : string, o : string, returnElement : boolean) : variant;
            function overwrite (el : string, o : string) : variant;
            function overwrite (el : HTMLElement, o : variant, returnElement : boolean) : variant;
            function overwrite (el : HTMLElement, o : variant) : variant;
            function overwrite (el : HTMLElement, o : string, returnElement : boolean) : variant;
            function overwrite (el : HTMLElement, o : string) : variant;
            function overwrite (el : Ext.dom.Element, o : variant, returnElement : boolean) : variant;
            function overwrite (el : Ext.dom.Element, o : variant) : variant;
            function overwrite (el : Ext.dom.Element, o : string, returnElement : boolean) : variant;
            function overwrite (el : Ext.dom.Element, o : string) : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class CompositeElement extends Ext.dom.CompositeElementLite
        {
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class CompositeElementLite extends Ext.Base
        {
            var elements : HTMLElement[];
            var isComposite : boolean;

            function constructor (elements : variant, root : variant);
            function add (els : HTMLElement[]) : variant;
            function add (els : Ext.dom.CompositeElement) : variant;
            function clear (removeDom : boolean) : void;
            function clear () : void;
            function contains (el : string) : boolean;
            function contains (el : HTMLElement) : boolean;
            function contains (el : Ext.dom.Element) : boolean;
            function contains (el : number) : boolean;
            function each (fn : function  () : void, scope : variant) : Ext.dom.CompositeElement;
            function each (fn : function  () : void) : Ext.dom.CompositeElement;
            function fill (els : HTMLElement[]) : Ext.dom.CompositeElement;
            function fill (els : Ext.dom.CompositeElement) : Ext.dom.CompositeElement;
            function filter (selector : string) : Ext.dom.CompositeElement;
            function filter (selector : function  () : void) : Ext.dom.CompositeElement;
            function first () : Ext.dom.Element;
            function getCount () : number;
            function indexOf (el : string) : number;
            function indexOf (el : HTMLElement) : number;
            function indexOf (el : Ext.dom.Element) : number;
            function indexOf (el : number) : number;
            function item (index : number) : Ext.dom.Element;
            function last () : Ext.dom.Element;
            function removeElement (el : string, removeDom : boolean) : Ext.dom.CompositeElement;
            function removeElement (el : string) : Ext.dom.CompositeElement;
            function removeElement (el : HTMLElement, removeDom : boolean) : Ext.dom.CompositeElement;
            function removeElement (el : HTMLElement) : Ext.dom.CompositeElement;
            function removeElement (el : Ext.dom.Element, removeDom : boolean) : Ext.dom.CompositeElement;
            function removeElement (el : Ext.dom.Element) : Ext.dom.CompositeElement;
            function removeElement (el : number, removeDom : boolean) : Ext.dom.CompositeElement;
            function removeElement (el : number) : Ext.dom.CompositeElement;
            function replaceElement (el : string, replacement : string, domReplace : boolean) : variant;
            function replaceElement (el : string, replacement : string) : variant;
            function replaceElement (el : string, replacement : Ext.dom.Element, domReplace : boolean) : variant;
            function replaceElement (el : string, replacement : Ext.dom.Element) : variant;
            function replaceElement (el : HTMLElement, replacement : string, domReplace : boolean) : variant;
            function replaceElement (el : HTMLElement, replacement : string) : variant;
            function replaceElement (el : HTMLElement, replacement : Ext.dom.Element, domReplace : boolean) : variant;
            function replaceElement (el : HTMLElement, replacement : Ext.dom.Element) : variant;
            function replaceElement (el : Ext.dom.Element, replacement : string, domReplace : boolean) : variant;
            function replaceElement (el : Ext.dom.Element, replacement : string) : variant;
            function replaceElement (el : Ext.dom.Element, replacement : Ext.dom.Element, domReplace : boolean) : variant;
            function replaceElement (el : Ext.dom.Element, replacement : Ext.dom.Element) : variant;
            function replaceElement (el : number, replacement : string, domReplace : boolean) : variant;
            function replaceElement (el : number, replacement : string) : variant;
            function replaceElement (el : number, replacement : Ext.dom.Element, domReplace : boolean) : variant;
            function replaceElement (el : number, replacement : Ext.dom.Element) : variant;
            function slice (start : number, end : number) : HTMLElement[];
            function slice (start : number) : HTMLElement[];
            function slice () : HTMLElement[];
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Element extends Ext.dom.AbstractElement
        {
            var autoBoxAdjust : boolean;
            var originalDisplay : string;
            static var ASCLASS : number;
            static var DISPLAY : number;
            static var OFFSETS : number;
            static var VISIBILITY : number;

            function constructor (element : string, forceNew : boolean);
            function constructor (element : string);
            function constructor (element : HTMLElement, forceNew : boolean);
            function constructor (element : HTMLElement);
            function addClsOnClick (className : string, testFn : function  () : void, scope : variant) : variant;
            function addClsOnClick (className : string, testFn : function  () : void) : variant;
            function addClsOnClick (className : string, scope : variant) : variant;
            function addClsOnClick (className : string) : variant;
            function addClsOnFocus (className : string, testFn : function  () : void, scope : variant) : variant;
            function addClsOnFocus (className : string, testFn : function  () : void) : variant;
            function addClsOnFocus (className : string, scope : variant) : variant;
            function addClsOnFocus (className : string) : variant;
            function addClsOnOver (className : string, testFn : function  () : void, scope : variant) : variant;
            function addClsOnOver (className : string, testFn : function  () : void) : variant;
            function addClsOnOver (className : string, scope : variant) : variant;
            function addClsOnOver (className : string) : variant;
            function addKeyListener (key : string, fn : function  () : void, scope : variant) : Ext.util.KeyMap;
            function addKeyListener (key : string, fn : function  () : void) : Ext.util.KeyMap;
            function addKeyListener (key : number, fn : function  () : void, scope : variant) : Ext.util.KeyMap;
            function addKeyListener (key : number, fn : function  () : void) : Ext.util.KeyMap;
            function addKeyListener (key : Number[], fn : function  () : void, scope : variant) : Ext.util.KeyMap;
            function addKeyListener (key : Number[], fn : function  () : void) : Ext.util.KeyMap;
            function addKeyListener (key : variant, fn : function  () : void, scope : variant) : Ext.util.KeyMap;
            function addKeyListener (key : variant, fn : function  () : void) : Ext.util.KeyMap;
            function addKeyMap (config : variant) : Ext.util.KeyMap;
            function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : variant;
            function addListener (eventName : string, fn : function  () : void, scope : variant) : variant;
            function addListener (eventName : string, fn : function  () : void) : variant;
            function animate (config : variant) : variant;
            function blur () : variant;
            function boxWrap (class_ : string) : Ext.dom.Element;
            function boxWrap () : Ext.dom.Element;
            function cacheScrollValues () : function () : void;
            function center (centerIn : string) : void;
            function center (centerIn : HTMLElement) : void;
            function center (centerIn : Ext.dom.Element) : void;
            function clean (forceReclean : boolean) : void;
            function clean () : void;
            function clearListeners () : variant;
            function clearOpacity () : variant;
            function clearPositioning (value : string) : variant;
            function clearPositioning () : variant;
            function clip () : variant;
            function createProxy (config : string, renderTo : string, matchBox : boolean) : Ext.dom.Element;
            function createProxy (config : string, renderTo : string) : Ext.dom.Element;
            function createProxy (config : string, renderTo : HTMLElement, matchBox : boolean) : Ext.dom.Element;
            function createProxy (config : string, renderTo : HTMLElement) : Ext.dom.Element;
            function createProxy (config : string, matchBox : boolean) : Ext.dom.Element;
            function createProxy (config : string) : Ext.dom.Element;
            function createProxy (config : variant, renderTo : string, matchBox : boolean) : Ext.dom.Element;
            function createProxy (config : variant, renderTo : string) : Ext.dom.Element;
            function createProxy (config : variant, renderTo : HTMLElement, matchBox : boolean) : Ext.dom.Element;
            function createProxy (config : variant, renderTo : HTMLElement) : Ext.dom.Element;
            function createProxy (config : variant, matchBox : boolean) : Ext.dom.Element;
            function createProxy (config : variant) : Ext.dom.Element;
            function createShim () : Ext.dom.Element;
            function enableDisplayMode (display : string) : variant;
            function enableDisplayMode () : variant;
            function fadeIn (options : variant) : variant;
            function fadeIn () : variant;
            function fadeOut (options : variant) : Ext.dom.Element;
            function fadeOut () : Ext.dom.Element;
            function focus (defer : number) : variant;
            function focus () : variant;
            function focusable () : boolean;
            function frame (color : string, count : number, options : variant) : Ext.dom.Element;
            function frame (color : string, count : number) : Ext.dom.Element;
            function frame (color : string, options : variant) : Ext.dom.Element;
            function frame (color : string) : Ext.dom.Element;
            function frame (count : number, options : variant) : Ext.dom.Element;
            function frame (count : number) : Ext.dom.Element;
            function frame (options : variant) : Ext.dom.Element;
            function frame () : Ext.dom.Element;
            function getAttributeNS (namespace : string, name : string) : string;
            function getColor (attr : string, defaultValue : string, prefix : string) : void;
            function getColor (attr : string, defaultValue : string) : void;
            function getComputedHeight () : number;
            function getComputedWidth () : number;
            function getFrameWidth (sides : string) : number;
            function getLoader () : Ext.ElementLoader;
            function getLocalX () : number;
            function getLocalXY () : variant[];
            function getLocalY () : number;
            function getScroll () : variant;
            function getScrollLeft () : number;
            function getScrollTop () : number;
            function getStyleSize () : variant;
            function getTextWidth (text : string, min : number, max : number) : number;
            function getTextWidth (text : string, min : number) : number;
            function getTextWidth (text : string) : number;
            function getX () : number;
            function getXY () : variant[];
            function getY () : number;
            function ghost (anchor : string, options : variant) : Ext.dom.Element;
            function ghost (anchor : string) : Ext.dom.Element;
            function ghost (options : variant) : Ext.dom.Element;
            function ghost () : Ext.dom.Element;
            override function hide (animate : boolean) : variant;
            override function hide (animate : variant) : variant;
            override function hide () : variant;
            function highlight (color : string, options : variant) : Ext.dom.Element;
            function highlight (color : string) : Ext.dom.Element;
            function highlight (options : variant) : Ext.dom.Element;
            function highlight () : Ext.dom.Element;
            function hover (overFn : function  () : void, outFn : function  () : void, scope : variant, options : variant) : variant;
            function hover (overFn : function  () : void, outFn : function  () : void, scope : variant) : variant;
            function hover (overFn : function  () : void, outFn : function  () : void) : variant;
            function initDD (group : string, config : variant, overrides : variant) : Ext.dd.DD;
            function initDDProxy (group : string, config : variant, overrides : variant) : Ext.dd.DDProxy;
            function initDDTarget (group : string, config : variant, overrides : variant) : Ext.dd.DDTarget;
            function isBorderBox () : boolean;
            function isDisplayed () : boolean;
            function isFocusable (asFocusEl : variant) : boolean;
            function isMasked () : boolean;
            function isScrollable () : boolean;
            function isVisible (deep : boolean) : boolean;
            function isVisible () : boolean;
            function load (options : variant) : variant;
            override function mask (msg : string, msgCls : string) : void;
            override function mask (msg : string) : void;
            override function mask () : void;
            function monitorMouseLeave (delay : number, handler : function  () : void, scope : variant) : variant;
            function monitorMouseLeave (delay : number, handler : function  () : void) : variant;
            function needsTabIndex () : void;
            function on (eventName : string, fn : function  () : void, scope : variant, options : variant) : variant;
            function on (eventName : string, fn : function  () : void, scope : variant) : variant;
            function on (eventName : string, fn : function  () : void) : variant;
            function position (pos : string, zIndex : number, x : number, y : number) : void;
            function position (pos : string, zIndex : number, x : number) : void;
            function position (pos : string, zIndex : number) : void;
            function position (pos : string) : void;
            function position (zIndex : number, x : number, y : number) : void;
            function position (zIndex : number, x : number) : void;
            function position (zIndex : number) : void;
            function position () : void;
            function puff (options : variant) : Ext.dom.Element;
            function puff () : Ext.dom.Element;
            function purgeAllListeners () : variant;
            function relayEvent (eventName : string, observable : variant) : void;
            function removeAllListeners () : variant;
            function removeListener (eventName : string, fn : function  () : void, scope : variant) : variant;
            function scroll (direction : string, distance : number, animate : boolean) : boolean;
            function scroll (direction : string, distance : number, animate : variant) : boolean;
            function scroll (direction : string, distance : number) : boolean;
            function scrollBy (deltaX : number, deltaY : number, animate : boolean) : Ext.dom.Element;
            function scrollBy (deltaX : number, deltaY : number, animate : variant) : Ext.dom.Element;
            function scrollBy (deltaX : number, deltaY : boolean, animate : boolean) : Ext.dom.Element;
            function scrollBy (deltaX : number, deltaY : boolean, animate : variant) : Ext.dom.Element;
            function scrollBy (deltaX : number, deltaY : variant, animate : boolean) : Ext.dom.Element;
            function scrollBy (deltaX : number, deltaY : variant, animate : variant) : Ext.dom.Element;
            function scrollBy (deltaX : Number[], deltaY : number, animate : boolean) : Ext.dom.Element;
            function scrollBy (deltaX : Number[], deltaY : number, animate : variant) : Ext.dom.Element;
            function scrollBy (deltaX : Number[], deltaY : boolean, animate : boolean) : Ext.dom.Element;
            function scrollBy (deltaX : Number[], deltaY : boolean, animate : variant) : Ext.dom.Element;
            function scrollBy (deltaX : Number[], deltaY : variant, animate : boolean) : Ext.dom.Element;
            function scrollBy (deltaX : Number[], deltaY : variant, animate : variant) : Ext.dom.Element;
            function scrollBy (deltaX : variant, deltaY : number, animate : boolean) : Ext.dom.Element;
            function scrollBy (deltaX : variant, deltaY : number, animate : variant) : Ext.dom.Element;
            function scrollBy (deltaX : variant, deltaY : boolean, animate : boolean) : Ext.dom.Element;
            function scrollBy (deltaX : variant, deltaY : boolean, animate : variant) : Ext.dom.Element;
            function scrollBy (deltaX : variant, deltaY : variant, animate : boolean) : Ext.dom.Element;
            function scrollBy (deltaX : variant, deltaY : variant, animate : variant) : Ext.dom.Element;
            function scrollIntoView (container : string, hscroll : boolean, animate : boolean, highlight : boolean) : variant;
            function scrollIntoView (container : string, hscroll : boolean, animate : boolean) : variant;
            function scrollIntoView (container : string, hscroll : boolean, animate : variant, highlight : boolean) : variant;
            function scrollIntoView (container : string, hscroll : boolean, animate : variant) : variant;
            function scrollIntoView (container : string, hscroll : boolean) : variant;
            function scrollIntoView (container : string, animate : variant, highlight : boolean) : variant;
            function scrollIntoView (container : string, animate : variant) : variant;
            function scrollIntoView (container : string) : variant;
            function scrollIntoView (container : HTMLElement, hscroll : boolean, animate : boolean, highlight : boolean) : variant;
            function scrollIntoView (container : HTMLElement, hscroll : boolean, animate : boolean) : variant;
            function scrollIntoView (container : HTMLElement, hscroll : boolean, animate : variant, highlight : boolean) : variant;
            function scrollIntoView (container : HTMLElement, hscroll : boolean, animate : variant) : variant;
            function scrollIntoView (container : HTMLElement, hscroll : boolean) : variant;
            function scrollIntoView (container : HTMLElement, animate : variant, highlight : boolean) : variant;
            function scrollIntoView (container : HTMLElement, animate : variant) : variant;
            function scrollIntoView (container : HTMLElement) : variant;
            function scrollIntoView (container : Ext.dom.Element, hscroll : boolean, animate : boolean, highlight : boolean) : variant;
            function scrollIntoView (container : Ext.dom.Element, hscroll : boolean, animate : boolean) : variant;
            function scrollIntoView (container : Ext.dom.Element, hscroll : boolean, animate : variant, highlight : boolean) : variant;
            function scrollIntoView (container : Ext.dom.Element, hscroll : boolean, animate : variant) : variant;
            function scrollIntoView (container : Ext.dom.Element, hscroll : boolean) : variant;
            function scrollIntoView (container : Ext.dom.Element, animate : variant, highlight : boolean) : variant;
            function scrollIntoView (container : Ext.dom.Element, animate : variant) : variant;
            function scrollIntoView (container : Ext.dom.Element) : variant;
            function scrollIntoView (hscroll : boolean, animate : boolean, highlight : boolean) : variant;
            function scrollIntoView (hscroll : boolean, animate : boolean) : variant;
            function scrollIntoView (hscroll : boolean, animate : variant, highlight : boolean) : variant;
            function scrollIntoView (hscroll : boolean, animate : variant) : variant;
            function scrollIntoView (hscroll : boolean) : variant;
            function scrollIntoView (animate : variant, highlight : boolean) : variant;
            function scrollIntoView (animate : variant) : variant;
            function scrollIntoView () : variant;
            function scrollTo (side : string, value : number, animate : boolean) : Ext.dom.Element;
            function scrollTo (side : string, value : number, animate : variant) : Ext.dom.Element;
            function scrollTo (side : string, value : number) : Ext.dom.Element;
            function selectable () : Ext.dom.Element;
            function setDisplayed (value : boolean) : variant;
            function setDisplayed (value : string) : variant;
            function setOpacity (opacity : number, animate : boolean) : variant;
            function setOpacity (opacity : number, animate : variant) : variant;
            function setOpacity (opacity : number) : variant;
            function setPositioning (posCfg : variant) : variant;
            function setScrollLeft (left : number) : variant;
            function setScrollTop (top : number) : variant;
            override function setVisible (visible : boolean, animate : boolean) : Ext.dom.Element;
            override function setVisible (visible : boolean, animate : variant) : Ext.dom.Element;
            override function setVisible (visible : boolean) : Ext.dom.Element;
            override function show (animate : boolean) : variant;
            override function show (animate : variant) : variant;
            override function show () : variant;
            function slideIn (anchor : string, options : variant) : Ext.dom.Element;
            function slideIn (anchor : string) : Ext.dom.Element;
            function slideIn (options : variant) : Ext.dom.Element;
            function slideIn () : Ext.dom.Element;
            function slideOut (anchor : string, options : variant) : Ext.dom.Element;
            function slideOut (anchor : string) : Ext.dom.Element;
            function slideOut (options : variant) : Ext.dom.Element;
            function slideOut () : Ext.dom.Element;
            function swallowEvent (eventName : string, preventDefault : boolean) : variant;
            function swallowEvent (eventName : string) : variant;
            function swallowEvent (eventName : string[], preventDefault : boolean) : variant;
            function swallowEvent (eventName : string[]) : variant;
            function switchOff (options : variant) : Ext.dom.Element;
            function switchOff () : Ext.dom.Element;
            function toggle (animate : boolean) : variant;
            function toggle (animate : variant) : variant;
            function toggle () : variant;
            function un (eventName : string, fn : function  () : void, scope : variant) : variant;
            function unclip () : variant;
            override function unmask () : void;
            function unselectable () : variant;
            function update (html : string, loadScripts : boolean, callback : function  () : void) : variant;
            function update (html : string, loadScripts : boolean) : variant;
            function update (html : string, callback : function  () : void) : variant;
            override function update (html : string) : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function fromPoint (x : number, y : number) : string;
            static function get (el : string) : Ext.dom.Element;
            static function get (el : HTMLElement) : Ext.dom.Element;
            static function get (el : Ext.dom.Element) : Ext.dom.Element;
            static function getDocumentHeight () : number;
            static function getDocumentWidth () : number;
            static function getName () : string;
            static function getOrientation () : string;
            static function getViewSize () : variant;
            static function getViewportHeight () : number;
            static function getViewportWidth () : number;
            static function mergeClsList (clsList1 : variant, clsList2 : variant) : variant[];
            static function normalize (prop : string) : string;
            static function parseBox (box : number) : variant;
            static function parseBox (box : string) : variant;
            static function parseStyles (styles : string) : variant;
            static function removeCls (existingClsList : variant, removeClsList : variant) : variant[];
            static function select (selector : string, unique : boolean, root : HTMLElement) : variant;
            static function select (selector : string, unique : boolean, root : string) : variant;
            static function select (selector : string, unique : boolean) : variant;
            static function select (selector : string, root : HTMLElement) : variant;
            static function select (selector : string, root : string) : variant;
            static function select (selector : string) : variant;
            static function select (selector : HTMLElement[], unique : boolean, root : HTMLElement) : variant;
            static function select (selector : HTMLElement[], unique : boolean, root : string) : variant;
            static function select (selector : HTMLElement[], unique : boolean) : variant;
            static function select (selector : HTMLElement[], root : HTMLElement) : variant;
            static function select (selector : HTMLElement[], root : string) : variant;
            static function select (selector : HTMLElement[]) : variant;
            static function unitizeBox (box : number, units : string) : string;
            static function unitizeBox (box : string, units : string) : string;
            static function unitizeBox (box : variant, units : string) : string;

            class Fly extends Ext.dom.Element
            {
                var isFly : boolean;
                static var ASCLASS : number;
                static var DISPLAY : number;
                static var OFFSETS : number;
                static var VISIBILITY : number;

                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function fromPoint (x : number, y : number) : string;
                static function get (el : string) : Ext.dom.Element;
                static function get (el : HTMLElement) : Ext.dom.Element;
                static function get (el : Ext.dom.Element) : Ext.dom.Element;
                static function getDocumentHeight () : number;
                static function getDocumentWidth () : number;
                static function getName () : string;
                static function getOrientation () : string;
                static function getViewSize () : variant;
                static function getViewportHeight () : number;
                static function getViewportWidth () : number;
                static function mergeClsList (clsList1 : variant, clsList2 : variant) : variant[];
                static function normalize (prop : string) : string;
                static function parseBox (box : number) : variant;
                static function parseBox (box : string) : variant;
                static function parseStyles (styles : string) : variant;
                static function removeCls (existingClsList : variant, removeClsList : variant) : variant[];
                static function unitizeBox (box : number, units : string) : string;
                static function unitizeBox (box : string, units : string) : string;
                static function unitizeBox (box : variant, units : string) : string;
            }
        }

        class Helper extends Ext.dom.AbstractHelper
        {
            var useDom : boolean;

            function createDom (o : variant) : HTMLElement;
            function createDom (o : string) : HTMLElement;
            function createHtml (spec : variant) : string;
            function createTemplate (o : variant) : Ext.Template;
            override function overwrite (el : string, o : variant, returnElement : boolean) : variant;
            override function overwrite (el : string, o : variant) : variant;
            override function overwrite (el : string, o : string, returnElement : boolean) : variant;
            override function overwrite (el : string, o : string) : variant;
            override function overwrite (el : HTMLElement, o : variant, returnElement : boolean) : variant;
            override function overwrite (el : HTMLElement, o : variant) : variant;
            override function overwrite (el : HTMLElement, o : string, returnElement : boolean) : variant;
            override function overwrite (el : HTMLElement, o : string) : variant;
            override function overwrite (el : Ext.dom.Element, o : variant, returnElement : boolean) : variant;
            override function overwrite (el : Ext.dom.Element, o : variant) : variant;
            override function overwrite (el : Ext.dom.Element, o : string, returnElement : boolean) : variant;
            override function overwrite (el : Ext.dom.Element, o : string) : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Layer extends Ext.dom.Element
        {
            static var ASCLASS : number;
            static var DISPLAY : number;
            static var OFFSETS : number;
            static var VISIBILITY : number;

            function constructor (config : variant, existingEl : string);
            function constructor (config : variant, existingEl : HTMLElement);
            function constructor (config : variant);
            function constructor (existingEl : string);
            function constructor (existingEl : HTMLElement);
            function constructor ();
            override function remove () : void;
            function setHeight (h : variant, animate : variant, duration : variant, callback : variant, easing : variant) : Ext.dom.Element;
            function setSize (w : variant, h : variant, animate : variant, duration : variant, callback : variant, easing : variant) : Ext.dom.Element;
            function setVisible (visible : variant, animate : variant, duration : variant, callback : variant, easing : variant) : Ext.dom.Element;
            function setWidth (w : variant, animate : variant, duration : variant, callback : variant, easing : variant) : Ext.dom.Element;
            function setZIndex (zindex : number) : Ext.dom.Layer;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function fromPoint (x : number, y : number) : string;
            static function get (el : string) : Ext.dom.Element;
            static function get (el : HTMLElement) : Ext.dom.Element;
            static function get (el : Ext.dom.Element) : Ext.dom.Element;
            static function getDocumentHeight () : number;
            static function getDocumentWidth () : number;
            static function getName () : string;
            static function getOrientation () : string;
            static function getViewSize () : variant;
            static function getViewportHeight () : number;
            static function getViewportWidth () : number;
            static function mergeClsList (clsList1 : variant, clsList2 : variant) : variant[];
            static function normalize (prop : string) : string;
            static function parseBox (box : number) : variant;
            static function parseBox (box : string) : variant;
            static function parseStyles (styles : string) : variant;
            static function removeCls (existingClsList : variant, removeClsList : variant) : variant[];
            static function unitizeBox (box : number, units : string) : string;
            static function unitizeBox (box : string, units : string) : string;
            static function unitizeBox (box : variant, units : string) : string;
        }

        class Query
        {
            static var matchers : variant;
            static var operators : variant;
            static var pseudos : variant;

            static function compile (selector : string, type : string) : function () : void;
            static function compile (selector : string) : function () : void;
            static function filter (el : HTMLElement[], selector : string, nonMatches : boolean) : HTMLElement[];
            static function is (el : string, selector : string) : boolean;
            static function is (el : HTMLElement, selector : string) : boolean;
            static function is (el : HTMLElement[], selector : string) : boolean;
            static function jsSelect (selector : string, root : HTMLElement) : HTMLElement[];
            static function jsSelect (selector : string, root : string) : HTMLElement[];
            static function jsSelect (selector : string) : HTMLElement[];
            static function select (path : string, root : HTMLElement, type : string, single : boolean) : HTMLElement[];
            static function select (path : string, root : HTMLElement, type : string) : HTMLElement[];
            static function select (path : string, root : HTMLElement, single : boolean) : HTMLElement[];
            static function select (path : string, root : HTMLElement) : HTMLElement[];
            static function select (path : string, type : string, single : boolean) : HTMLElement[];
            static function select (path : string, type : string) : HTMLElement[];
            static function select (path : string, single : boolean) : HTMLElement[];
            static function select (path : string) : HTMLElement[];
            static function selectNode (selector : string, root : HTMLElement) : HTMLElement;
            static function selectNode (selector : string) : HTMLElement;
            static function selectNumber (selector : string, root : HTMLElement, defaultValue : number) : number;
            static function selectNumber (selector : string, root : HTMLElement) : number;
            static function selectNumber (selector : string, defaultValue : number) : number;
            static function selectNumber (selector : string) : number;
            static function selectValue (selector : string, root : HTMLElement, defaultValue : string) : string;
            static function selectValue (selector : string, root : HTMLElement) : string;
            static function selectValue (selector : string, defaultValue : string) : string;
            static function selectValue (selector : string) : string;
        }
    }

    class draw
    {

        class Color extends Ext.Base
        {
            function constructor (red : number, green : number, blue : number);
            function getBlue () : number;
            function getDarker (factor : number) : variant;
            function getGrayscale () : number;
            function getGreen () : number;
            function getHSL () : Number[];
            function getLighter (factor : number) : variant;
            function getRGB () : Number[];
            function getRed () : number;
            override function toString () : string;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function fromHSL (h : number, s : number, l : number) : variant;
            static function fromString (str : string) : variant;
            static function getName () : string;
            static function toHex (color : string) : string;
            static function toHex (color : string[]) : string;
        }

        class Component extends Ext.Component
        {
            var surface : Ext.draw.Surface;

            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class CompositeSprite extends Ext.util.MixedCollection
        {
            function constructor (config : variant);
            override function add (key : variant, o : variant) : variant;
            function addCls (cls : string) : void;
            function destroy () : void;
            function getBBox () : variant;
            function hide (redraw : boolean) : variant;
            function insert (index : variant, key : variant, o : variant) : variant;
            function redraw () : void;
            override function remove (o : variant) : variant;
            function removeCls (cls : string) : void;
            function setAttributes (attrs : variant, redraw : boolean) : variant;
            function setStyle (style : string) : void;
            function show (redraw : boolean) : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }



        class Sprite extends Ext.Base
        {
            var dd : Ext.dd.DragSource;
            var isSprite : boolean;

            function constructor (config : variant);
            function addCls (className : string) : variant;
            function addCls (className : string[]) : variant;
            function destroy () : void;
            function getBBox () : variant;
            function hide (redraw : boolean) : variant;
            function redraw () : variant;
            function remove () : boolean;
            function removeCls (className : string) : variant;
            function removeCls (className : string[]) : variant;
            function setAttributes (attrs : variant, redraw : boolean) : variant;
            function setStyle (property : string, value : string) : variant;
            function setStyle (property : string) : variant;
            function setStyle (property : variant, value : string) : variant;
            function setStyle (property : variant) : variant;
            function show (redraw : boolean) : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Surface extends Ext.Base
        {
            function constructor (config : variant);
            function constructor ();
            function add (args : Ext.draw.Sprite[]) : variant;
            function add (args : Ext.draw.Sprite) : variant;
            function addCls (sprite : variant, className : string) : void;
            function addCls (sprite : variant, className : string[]) : void;
            function addGradient (gradient : variant) : void;
            function destroy () : void;
            function getGroup (id : string) : variant;
            function getId () : void;
            function remove (sprite : Ext.draw.Sprite, destroySprite : boolean) : void;
            function removeAll (destroySprites : boolean) : void;
            function removeCls (sprite : variant, className : string) : void;
            function removeCls (sprite : variant, className : string[]) : void;
            function setSize (w : number, h : number) : void;
            function setStyle (sprite : variant, styles : variant) : void;
            function setText (sprite : variant, text : string) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create (config : variant, enginePriority : string[]) : variant;
            static function create (config : variant) : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            static function save (surface : Ext.draw.Surface, config : variant) : variant;
            static function save (surface : Ext.draw.Surface) : variant;
        }

        class Text extends Ext.draw.Component
        {
            function constructor (text : variant);
            override function initComponent () : void;
            function setAngle (degrees : number) : void;
            function setText (t : string) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class engine
        {

            class ImageExporter extends Ext.Base
            {
                static var defaultUrl : string;
                static var heightParam : string;
                static var supportedTypes : variant[];
                static var svgParam : string;
                static var typeParam : string;
                static var widthParam : string;

                static function generate (surface : Ext.draw.Surface, config : variant) : boolean;
                static function generate (surface : Ext.draw.Surface) : boolean;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Svg extends Ext.draw.Surface
            {
                function addCls (sprite : variant, className : variant) : void;
                override function addGradient (gradient : variant) : void;
                function applyZIndex (sprite : Ext.draw.Sprite) : void;
                override function destroy () : void;
                function getRegion () : Ext.util.Region;
                function hasCls (sprite : Ext.draw.Sprite, className : string) : boolean;
                function removeCls (sprite : variant, className : variant) : void;
                function setSize (width : variant, height : variant) : void;
                function setText (sprite : variant, textString : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class SvgExporter extends Ext.Base
            {
                static function generate (surface : Ext.draw.Surface, config : variant) : string;
                static function generate (surface : Ext.draw.Surface) : string;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Vml extends Ext.draw.Surface
            {
                function addCls (sprite : variant, className : variant) : void;
                override function addGradient (gradient : variant) : void;
                override function destroy () : void;
                function removeCls (sprite : variant, className : variant) : void;
                function setSize (width : variant, height : variant) : void;
                function setText (sprite : variant, text : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }
    }

    class enums
    {

        class Feature
        {
            var abstractsummary : string;
            var feature : string;
            var grouping : string;
            var groupingsummary : string;
            var rowbody : string;
            var summary : string;

        }

        class Layout
        {
            var absolute : string;
            var accordion : string;
            var anchor : string;
            var auto : string;
            var autocomponent : string;
            var autocontainer : string;
            var border : string;
            var box : string;
            var card : string;
            var checkboxgroup : string;
            var column : string;
            var container : string;
            var fit : string;
            var form : string;
            var hbox : string;
            var table : string;
            var vbox : string;

        }

        class Plugin
        {
            var bufferedrenderer : string;
            var cellediting : string;
            var gridheaderresizer : string;
            var gridviewdragdrop : string;
            var rowediting : string;
            var rowexpander : string;
            var treeviewdragdrop : string;

        }

        class Widget
        {
            var actioncolumn : string;
            var booleancolumn : string;
            var boundlist : string;
            var box : string;
            var button : string;
            var buttongroup : string;
            var chart : string;
            var checkbox : string;
            var checkboxfield : string;
            var checkboxgroup : string;
            var checkcolumn : string;
            var colormenu : string;
            var colorpicker : string;
            var combo : string;
            var combobox : string;
            var component : string;
            var container : string;
            var cycle : string;
            var dataview : string;
            var datecolumn : string;
            var datefield : string;
            var datemenu : string;
            var datepicker : string;
            var displayfield : string;
            var draw : string;
            var editor : string;
            var field : string;
            var fieldcontainer : string;
            var fieldset : string;
            var filebutton : string;
            var filefield : string;
            var fileuploadfield : string;
            var flash : string;
            var form : string;
            var grid : string;
            var gridcolumn : string;
            var gridpanel : string;
            var gridview : string;
            var header : string;
            var headercontainer : string;
            var hidden : string;
            var hiddenfield : string;
            var htmleditor : string;
            var image : string;
            var imagecomponent : string;
            var jsonpstore : string;
            var label : string;
            var loadmask : string;
            var menu : string;
            var menucheckitem : string;
            var menuitem : string;
            var menuseparator : string;
            var messagebox : string;
            var multislider : string;
            var numbercolumn : string;
            var numberfield : string;
            var pagingtoolbar : string;
            var panel : string;
            var pickerfield : string;
            var progressbar : string;
            var propertygrid : string;
            var quicktip : string;
            var radio : string;
            var radiofield : string;
            var radiogroup : string;
            var rownumberer : string;
            var slider : string;
            var sliderfield : string;
            var slidertip : string;
            var spinnerfield : string;
            var splitbutton : string;
            var splitter : string;
            var tab : string;
            var tabbar : string;
            var tablepanel : string;
            var tableview : string;
            var tabpanel : string;
            var tbfill : string;
            var tbitem : string;
            var tbseparator : string;
            var tbspacer : string;
            var tbtext : string;
            var templatecolumn : string;
            var text : string;
            var textarea : string;
            var textareafield : string;
            var textfield : string;
            var timefield : string;
            var timepicker : string;
            var tip : string;
            var tool : string;
            var toolbar : string;
            var tooltip : string;
            var treepanel : string;
            var treeview : string;
            var trigger : string;
            var triggerfield : string;
            var viewport : string;
            var window : string;

        }
    }

    class flash
    {

        class Component extends Ext.Component
        {
            var swf : Ext.dom.Element;
            static var EXPRESS_INSTALL_URL : string;

            override function afterRender () : void;
            override function beforeDestroy () : void;
            function getSwfId () : void;
            override function initComponent () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class form
    {

        class Basic extends Ext.util.Observable
        {
            var owner : Ext.container.Container;

            function constructor (owner : Ext.container.Container, config : variant);
            function applyIfToFields (obj : variant) : variant;
            function applyToFields (obj : variant) : variant;
            function checkDirty () : void;
            function checkValidity () : void;
            function clearInvalid () : variant;
            function destroy () : void;
            function doAction (action : string, options : variant) : variant;
            function doAction (action : string) : variant;
            function doAction (action : Ext.form.action.Action, options : variant) : variant;
            function doAction (action : Ext.form.action.Action) : variant;
            function findField (id : string) : Ext.form.field.Field;
            function getFieldValues (dirtyOnly : boolean) : variant;
            function getFieldValues () : variant;
            function getFields () : Ext.util.MixedCollection;
            function getRecord () : Ext.data.Model;
            function getValues (asString : boolean, dirtyOnly : boolean, includeEmptyText : boolean, useDataValues : boolean) : variant;
            function getValues (asString : boolean, dirtyOnly : boolean, includeEmptyText : boolean) : variant;
            function getValues (asString : boolean, dirtyOnly : boolean) : variant;
            function getValues (asString : boolean) : variant;
            function getValues () : variant;
            function hasInvalidField () : void;
            function hasUpload () : boolean;
            function isDirty () : boolean;
            function isValid () : boolean;
            function load (options : variant) : variant;
            function loadRecord (record : Ext.data.Model) : variant;
            function markInvalid (errors : variant) : variant;
            function markInvalid (errors : Object[]) : variant;
            function markInvalid (errors : Ext.data.Errors) : variant;
            function reset (resetRecord : boolean) : variant;
            function reset () : variant;
            function setValues (values : variant) : variant;
            function setValues (values : Object[]) : variant;
            function submit (options : variant) : variant;
            function updateRecord (record : Ext.data.Model) : variant;
            function updateRecord () : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class CheckboxGroup extends Ext.form.FieldContainer
        {
            function getChecked () : Ext.form.field.Checkbox[];
            function getErrors () : string[];
            function getModelData () : variant;
            function getSubmitData () : variant;
            function getValue () : void;
            function initValue () : void;
            function isDirty () : boolean;
            function isEqual (value1 : variant, value2 : variant) : boolean;
            function onAdd (field : variant) : void;
            function onRemove (item : variant) : void;
            function reset () : void;
            function resetOriginalValue () : void;
            function setValue (value : variant) : variant;
            function validate () : boolean;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class FieldAncestor extends Ext.Base
        {
            function initFieldAncestor () : void;
            function onFieldErrorChange (field : Ext.form.Labelable, error : string) : void;
            function onFieldValidityChange (field : Ext.form.field.Field, valid : boolean) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class FieldContainer extends Ext.container.Container
        {

            function getCombinedErrors (invalidFields : Ext.form.field.Field[]) : string[];
            function getFieldLabel () : string;
            function getSubTplMarkup () : string;
            function initRenderData () : variant;
            function onAdd (labelable : Ext.form.Labelable) : void;
            function onRemove (labelable : Ext.form.Labelable) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class FieldSet extends Ext.container.Container
        {
            var checkboxCmp : Ext.form.field.Checkbox;
            var legend : Ext.Component;
            var toggleCmp : Ext.panel.Tool;

            function collapse () : variant;
            function createCheckboxCmp () : Ext.Component;
            function createTitleCmp () : Ext.Component;
            function createToggleCmp () : Ext.Component;
            function expand () : variant;
            override function getRefItems (deep : variant) : void;
            override function getState () : variant;
            function setTitle (title : string) : variant;
            function toggle () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Label extends Ext.Component
        {
            function setText (text : string, encode : boolean) : variant;
            function setText (text : string) : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Labelable extends Ext.Base
        {
            var bodyEl : Ext.dom.Element;
            var errorEl : Ext.dom.Element;
            var isFieldLabelable : boolean;
            var labelCell : Ext.dom.Element;
            var labelEl : Ext.dom.Element;

            function getActiveError () : string;
            function getActiveErrors () : string[];
            function getFieldLabel () : string;
            function getInputId () : string;
            function getLabelWidth () : number;
            function getLabelableRenderData () : variant;
            function getSubTplMarkup () : string;
            function hasActiveError () : boolean;
            function hasVisibleLabel () : boolean;
            function initLabelable () : void;
            function setActiveError (msg : string) : void;
            function setActiveErrors (errors : string[]) : void;
            function setFieldDefaults (defaults : variant) : void;
            function setFieldLabel (label : string) : void;
            function trimLabelSeparator () : string;
            function unsetActiveError () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Panel extends Ext.panel.Panel
        {
            function checkChange () : void;
            function getForm () : Ext.form.Basic;
            function getRecord () : Ext.data.Model;
            function getValues (asString : boolean, dirtyOnly : boolean, includeEmptyText : boolean, useDataValues : boolean) : variant;
            function getValues (asString : boolean, dirtyOnly : boolean, includeEmptyText : boolean) : variant;
            function getValues (asString : boolean, dirtyOnly : boolean) : variant;
            function getValues (asString : boolean) : variant;
            function getValues () : variant;
            function hasInvalidField () : void;
            function isDirty () : boolean;
            function isValid () : boolean;
            function load (options : variant) : void;
            function loadRecord (record : Ext.data.Model) : Ext.form.Basic;
            function startPolling (interval : number) : void;
            function stopPolling () : void;
            function submit (options : variant) : void;
            function updateRecord (record : Ext.data.Model) : Ext.form.Basic;
            function updateRecord () : Ext.form.Basic;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class RadioGroup extends Ext.form.CheckboxGroup
        {
            function checkChange () : void;
            override function setValue (value : variant) : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class action
        {

            class Action extends Ext.Base
            {
                var failureType : string;
                var response : variant;
                var result : variant;
                var type : string;
                static var CLIENT_INVALID : string;
                static var CONNECT_FAILURE : string;
                static var LOAD_FAILURE : string;
                static var SERVER_INVALID : string;

                function constructor (config : variant);
                function constructor ();
                function run () : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class DirectLoad extends Ext.form.action.Load
            {

                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class DirectSubmit extends Ext.form.action.Submit
            {

                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Load extends Ext.form.action.Action
            {

                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class StandardSubmit extends Ext.form.action.Submit
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Submit extends Ext.form.action.Action
            {

                override function run () : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class field
        {

            class Base extends Ext.Component
            {
                var inputEl : Ext.dom.Element;

                function clearInvalid () : void;
                override function doComponentLayout () : variant;
                function getInputId () : void;
                function getRawValue () : string;
                function getSubTplData () : variant;
                function getSubTplMarkup () : void;
                function getSubmitData () : variant;
                function getSubmitValue () : string;
                function getValue () : variant;
                override function initComponent () : void;
                override function initEvents () : void;
                function initRenderData () : variant;
                function isFileUpload () : boolean;
                function isValid () : boolean;
                function markInvalid (errors : string) : void;
                function markInvalid (errors : string[]) : void;
                override function onDisable () : void;
                override function onEnable () : void;
                function onRender () : void;
                function processRawValue (value : variant) : variant;
                function rawToValue (rawValue : variant) : variant;
                function setFieldStyle (style : string) : void;
                function setFieldStyle (style : variant) : void;
                function setFieldStyle (style : function  () : void) : void;
                function setRawValue (value : variant) : variant;
                function setReadOnly (readOnly : boolean) : void;
                function setValue (value : variant) : void;
                function transformRawValue (value : variant) : variant;
                function validateValue (value : variant) : boolean;
                function valueToRaw (value : variant) : variant;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Checkbox extends Ext.form.field.Base
            {
                var boxLabelEl : Ext.dom.Element;
                var originalValue : variant;

                override function beforeDestroy () : void;
                override function getRawValue () : string;
                override function getSubTplData () : variant;
                override function getSubmitValue () : string;
                override function getValue () : boolean;
                override function initComponent () : void;
                override function initEvents () : void;
                function initValue () : void;
                override function onEnable () : void;
                function resetOriginalValue (fromBoxInGroup : variant) : void;
                function setBoxLabel (boxLabel : string) : void;
                function setRawValue (value : boolean) : boolean;
                function setRawValue (value : string) : boolean;
                function setRawValue (value : number) : boolean;
                function setReadOnly (readOnly : variant) : void;
                function setValue (checked : boolean) : variant;
                function setValue (checked : string) : variant;
                override function valueToRaw (value : variant) : variant;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class ComboBox extends Ext.form.field.Picker
            {
                var lastQuery : string;

                function afterQuery (queryPlan : variant) : void;
                override function afterRender () : void;
                override function alignPicker () : void;
                function beforeBlur () : void;
                function beforeQuery (queryPlan : variant) : void;
                function beforeReset () : void;
                function clearValue () : void;
                override function createPicker () : void;
                function doQuery (queryString : string, forceAll : boolean, rawQuery : boolean) : boolean;
                function doQuery (queryString : string, forceAll : boolean) : boolean;
                function doQuery (queryString : string) : boolean;
                function findRecord (field : string, value : variant) : Ext.data.Model;
                function findRecordByDisplay (value : variant) : Ext.data.Model;
                function findRecordByValue (value : variant) : Ext.data.Model;
                function getStore () : Ext.data.Store;
                function getStoreListeners () : variant;
                override function getSubTplData () : variant;
                override function getSubmitValue () : string;
                override function getValue () : variant;
                override function initComponent () : void;
                override function initEvents () : void;
                override function onAdded () : void;
                function onBindStore (store : variant, initial : variant) : void;
                override function onTriggerClick () : void;
                function onUnbindStore (store : variant) : void;
                function select (r : variant) : void;
                function setValue (value : string) : Ext.form.field.Field;
                function setValue (value : string[]) : Ext.form.field.Field;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Date extends Ext.form.field.Picker
            {
                function beforeBlur () : void;
                override function createPicker () : void;
                override function getErrors (value : variant) : string[];
                function getErrors () : string[];
                override function initComponent () : void;
                function initValue () : void;
                override function rawToValue (rawValue : variant) : variant;
                function safeParse (value : string, format : string) : Date;
                function setDisabledDates (disabledDates : string[]) : void;
                function setDisabledDays (disabledDays : Number[]) : void;
                function setMaxValue (value : Date) : void;
                function setMinValue (value : Date) : void;
                function setValue (date : string) : variant;
                function setValue (date : Date) : variant;
                override function valueToRaw (value : variant) : variant;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Display extends Ext.form.field.Base
            {
                override function getRawValue () : string;
                override function getSubTplData () : variant;
                override function initEvents () : void;
                function isDirty () : boolean;
                override function isValid () : boolean;
                override function setRawValue (value : variant) : variant;
                function validate () : boolean;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Field extends Ext.Base
            {
                var isFormField : boolean;
                var originalValue : variant;

                function batchChanges (fn : variant) : void;
                function beforeReset () : void;
                function checkChange () : void;
                function checkDirty () : void;
                function clearInvalid () : void;
                function extractFileInput () : HTMLElement;
                function getErrors (value : variant) : string[];
                function getModelData () : variant;
                function getSubmitData () : variant;
                function getValue () : variant;
                function initField () : void;
                function initValue () : void;
                function isDirty () : boolean;
                function isEqual (value1 : variant, value2 : variant) : boolean;
                function isFileUpload () : boolean;
                function isValid () : boolean;
                function markInvalid (errors : string) : void;
                function markInvalid (errors : string[]) : void;
                function reset () : void;
                function resetOriginalValue () : void;
                function setValue (value : variant) : variant;
                function transformOriginalValue (value : variant) : variant;
                function validate () : boolean;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
            }

            class File extends Ext.form.field.Trigger
            {
                var button : Ext.button.Button;
                var fileInputEl : Ext.dom.Element;

                function extractFileInput () : HTMLElement;
                function getTriggerMarkup () : void;
                override function isFileUpload () : boolean;
                override function onDisable () : void;
                override function onEnable () : void;
                override function onRender () : void;
                override function onShow () : void;
                override function reset () : void;
                function setValue () : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class FileButton extends Ext.button.Button
            {
                override function afterRender () : void;
                override function getTemplateArgs () : variant;
                override function onDisable () : void;
                override function onEnable () : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Hidden extends Ext.form.field.Base
            {
                override function clearInvalid () : void;
                override function initComponent () : void;
                override function initEvents () : void;
                function markInvalid () : void;
                function setHeight () : Ext.Component;
                function setPagePosition () : Ext.Component;
                function setPosition () : Ext.Component;
                function setSize () : Ext.Component;
                function setWidth () : Ext.Component;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class HtmlEditor extends Ext.form.FieldContainer
            {
                var buttonTips : variant;

                function cleanHtml (html : string) : string;
                function clearInvalid () : void;
                function execCmd (cmd : string, value : string) : void;
                function execCmd (cmd : string, value : boolean) : void;
                function execCmd (cmd : string) : void;
                function focus (selectText : variant, delay : variant) : Ext.Component;
                function getDocMarkup () : void;
                function getToolbar () : Ext.toolbar.Toolbar;
                function getValue () : variant;
                function insertAtCursor (text : string) : void;
                function isEqual (value1 : variant, value2 : variant) : boolean;
                function pushValue () : void;
                function relayCmd (cmd : string, value : string) : void;
                function relayCmd (cmd : string, value : boolean) : void;
                function relayCmd (cmd : string) : void;
                function setReadOnly (readOnly : boolean) : void;
                function setValue (value : variant) : Ext.form.field.Field;
                function syncValue () : void;
                function toggleSourceEdit (sourceEditMode : boolean) : void;
                function toggleSourceEdit () : void;
                function updateToolbar () : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Number extends Ext.form.field.Spinner
            {
                function beforeBlur () : void;
                override function getErrors (value : variant) : string[];
                function getErrors () : string[];
                override function getSubmitValue () : string;
                override function initComponent () : void;
                override function onSpinDown () : void;
                override function onSpinUp () : void;
                override function rawToValue (rawValue : variant) : variant;
                function setMaxValue (value : number) : void;
                function setMinValue (value : number) : void;
                function setSpinDownEnabled (enabled : variant, internal : variant) : void;
                function setSpinUpEnabled (enabled : variant, internal : variant) : void;
                override function valueToRaw (value : variant) : variant;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Picker extends Ext.form.field.Trigger
            {
                var isExpanded : boolean;

                function alignPicker () : void;
                function collapse () : void;
                function createPicker () : void;
                function expand () : void;
                function getPicker () : Ext.Component;
                override function initComponent () : void;
                override function initEvents () : void;
                function onTriggerClick () : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Radio extends Ext.form.field.Checkbox
            {
                var isRadio : boolean;

                function getGroupValue () : string;
                function getModelData () : variant;
                override function getSubmitValue () : string;
                function onRemoved () : void;
                override function setValue (value : string) : variant;
                override function setValue (value : boolean) : variant;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Spinner extends Ext.form.field.Trigger
            {
                var spinDownEl : Ext.dom.Element;
                var spinUpEl : Ext.dom.Element;

                override function getSubTplMarkup (values : variant) : void;
                override function getTriggerWidth () : number;
                override function initComponent () : void;
                function onSpinDown () : void;
                function onSpinUp () : void;
                function setSpinDownEnabled (enabled : boolean) : void;
                function setSpinUpEnabled (enabled : boolean) : void;
                function spinDown () : void;
                function spinUp () : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Text extends Ext.form.field.Base
            {
                override function afterComponentLayout () : void;
                override function afterRender () : void;
                function applyState (state : variant) : void;
                function autoSize () : void;
                function beforeFocus () : void;
                function getErrors (value : variant) : string[];
                override function getRawValue () : string;
                override function getState () : variant;
                override function getSubTplData () : variant;
                override function initComponent () : void;
                override function initEvents () : void;
                override function onDestroy () : void;
                override function onDisable () : void;
                override function onEnable () : void;
                function postBlur () : void;
                function processRawValue (value : string) : string;
                function reset () : void;
                function selectText (start : number, end : number) : void;
                function selectText (start : number) : void;
                function selectText () : void;
                override function setValue (value : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class TextArea extends Ext.form.field.Text
            {
                override function afterRender () : void;
                override function autoSize () : void;
                override function beforeDestroy () : void;
                override function getSubTplData () : variant;
                override function getValue () : variant;
                function transformOriginalValue (value : variant) : variant;
                override function transformRawValue (value : variant) : variant;
                override function valueToRaw (value : variant) : variant;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Time extends Ext.form.field.ComboBox
            {
                override function getErrors (value : variant) : string[];
                function getErrors () : string[];
                override function getValue () : variant;
                override function initComponent () : void;
                override function postBlur () : void;
                override function rawToValue (rawValue : variant) : variant;
                function setMaxValue (value : Date) : void;
                function setMaxValue (value : string) : void;
                function setMinValue (value : Date) : void;
                function setMinValue (value : string) : void;
                function setValue () : Ext.form.field.Field;
                override function valueToRaw (value : variant) : variant;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Trigger extends Ext.form.field.Text
            {
                var inputCell : Ext.dom.Element;
                var triggerEl : Ext.dom.CompositeElement;
                var triggerWrap : Ext.dom.Element;

                function getLabelableRenderData () : variant;
                override function getSubTplData () : variant;
                function getSubTplMarkup (values : variant) : void;
                function getTriggerWidth () : number;
                override function initComponent () : void;
                override function onRender () : void;
                function onTriggerClick (e : Ext.EventObject) : void;
                function setEditable (editable : boolean) : void;
                override function setReadOnly (readOnly : boolean) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class VTypes extends Ext.Base
            {
                static var alphaMask : RegExp;
                static var alphaText : string;
                static var alphanumMask : RegExp;
                static var alphanumText : string;
                static var emailMask : RegExp;
                static var emailText : string;
                static var urlText : string;

                static function alpha (value : string) : boolean;
                static function alphanum (value : string) : boolean;
                static function email (value : string) : boolean;
                static function url (value : string) : boolean;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }
    }

    class fx
    {

        class Anim extends Ext.Base
        {
            var currentIteration : number;
            var isAnimation : boolean;
            var paused : boolean;
            var running : boolean;
            var startTime : Date;

            function end () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Animator extends Ext.Base
        {
            var currentIteration : number;
            var isAnimator : boolean;
            var keyframeStep : number;
            var paused : boolean;
            var running : boolean;

            function end () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Easing
        {
        }




        class target
        {

            class Component extends Ext.fx.target.Target
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class CompositeElement extends Ext.fx.target.Element
            {
                var isComposite : boolean;

                function constructor (target : variant);
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class CompositeElementCSS extends Ext.fx.target.CompositeElement
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class CompositeSprite extends Ext.fx.target.Sprite
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Element extends Ext.fx.target.Target
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class ElementCSS extends Ext.fx.target.Element
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Sprite extends Ext.fx.target.Target
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Target extends Ext.Base
            {
                function constructor (target : Ext.Component);
                function constructor (target : Ext.dom.Element);
                function constructor (target : Ext.draw.Sprite);
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }
    }

    class grid
    {






        class Panel extends Ext.panel.Table
        {
            function reconfigure (store : Ext.data.Store, columns : Object[]) : void;
            function reconfigure (store : Ext.data.Store) : void;
            function reconfigure (columns : Object[]) : void;
            function reconfigure () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }



        class View extends Ext.view.Table
        {
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class column
        {

            class Action extends Ext.grid.column.Column
            {

                function constructor (config : variant);
                function cascade (fn : variant, scope : variant) : variant;
                function defaultRenderer (v : variant, meta : variant, record : variant, rowIdx : variant, colIdx : variant, store : variant, view : variant) : void;
                function disableAction (index : number, silent : boolean) : void;
                function disableAction (index : number) : void;
                function disableAction (index : Ext.grid.column.Action, silent : boolean) : void;
                function disableAction (index : Ext.grid.column.Action) : void;
                function enableAction (index : number, silent : boolean) : void;
                function enableAction (index : number) : void;
                function enableAction (index : Ext.grid.column.Action, silent : boolean) : void;
                function enableAction (index : Ext.grid.column.Action) : void;
                function getRefItems () : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Boolean extends Ext.grid.column.Column
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class CheckColumn extends Ext.grid.column.Column
            {
                function constructor ();
                function onDisable (silent : boolean) : void;
                override function onDisable () : void;
                function onEnable (silent : boolean) : void;
                override function onEnable () : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Column extends Ext.grid.header.Container
            {
                var isColumn : boolean;
                var textEl : Ext.dom.Element;
                var triggerEl : Ext.dom.Element;

                function afterComponentLayout (width : variant, height : variant, oldWidth : variant, oldHeight : variant) : void;
                override function afterRender () : void;
                function autoSize (The : Ext.grid.column.Column) : void;
                function autoSize (The : number) : void;
                function defaultRenderer () : void;
                function getEditor (record : variant, defaultField : variant) : Ext.form.field.Field;
                function getIndex () : number;
                function getSortParam () : string;
                function getVisibleIndex () : number;
                override function hide (fromOwner : variant) : void;
                function initRenderData () : variant;
                function isHideable () : void;
                function isLockable () : void;
                override function onAdd (child : variant) : void;
                override function onDestroy () : void;
                override function onRemove (child : variant) : void;
                function setEditor (field : variant) : void;
                function setText (text : string) : void;
                function show (fromOwner : variant, fromChild : variant) : Ext.Component;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Date extends Ext.grid.column.Column
            {
                function defaultRenderer (value : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Number extends Ext.grid.column.Column
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class RowNumberer extends Ext.grid.column.Column
            {
                function constructor (config : variant);
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Template extends Ext.grid.column.Column
            {
                function defaultRenderer (value : variant, meta : variant, record : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class feature
        {

            class AbstractSummary extends Ext.grid.feature.Feature
            {
                function toggleSummaryRow (visible : boolean) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Feature extends Ext.util.Observable
            {
                var disabled : boolean;
                var eventPrefix : string;
                var eventSelector : string;
                var grid : Ext.grid.Panel;
                var hasFeatureEvent : boolean;
                var view : Ext.view.Table;

                function constructor (config : variant);
                function disable () : void;
                function enable () : void;
                function getFireEventArgs (eventName : variant, view : variant, featureTarget : variant, e : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


            class Grouping extends Ext.grid.feature.Feature
            {

                function constructor ();
                function collapse (groupName : string, focus : boolean) : void;
                function collapseAll () : void;
                override function disable () : void;
                override function enable () : void;
                function expand (groupName : string, focus : boolean) : void;
                function expandAll () : void;
                override function getFireEventArgs (type : variant, view : variant, targetEl : variant, e : variant) : void;
                function getRecordGroup (record : Ext.data.Model) : variant;
                function isExpanded (groupName : string) : boolean;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class GroupingSummary extends Ext.grid.feature.Grouping
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class RowBody extends Ext.grid.feature.Feature
            {

                function getAdditionalData (data : variant, idx : number, record : Ext.data.Model, orig : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


            class Summary extends Ext.grid.feature.AbstractSummary
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class header
        {

            class Container extends Ext.container.Container
            {
                var isGroupHeader : boolean;

                function getColumnCount () : void;
                function getColumnMenu (headerContainer : variant) : void;
                function getFullWidth () : void;
                function getGridColumns (inResult : variant, hiddenAncestor : variant) : variant[];
                function getHeaderAtIndex (index : number) : void;
                function getHeaderIndex (header : Ext.grid.column.Column) : number;
                function getMenuItems () : variant[];
                function getVisibleGridColumns () : variant[];
                function getVisibleHeaderClosestToIndex (index : number) : void;
                override function isLayoutRoot () : void;
                function onAdd (c : variant) : void;
                override function onDestroy () : void;
                function onRemove (c : variant) : void;
                override function onShow () : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


        }

        class locking
        {



        }

        class plugin
        {

            class BufferedRenderer extends Ext.AbstractPlugin
            {
                var position : number;

                override function destroy () : void;
                function init (grid : variant) : void;
                function scrollTo (recordIdx : number, doSelect : boolean, callback : function  () : void, scope : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class CellEditing extends Ext.grid.plugin.Editing
            {
                override function cancelEdit () : void;
                override function completeEdit () : void;
                override function startEdit (record : Ext.data.Model, columnHeader : Ext.grid.column.Column) : boolean;
                override function startEdit (record : Ext.data.Model, columnHeader : number) : boolean;
                override function startEdit (record : number, columnHeader : Ext.grid.column.Column) : boolean;
                override function startEdit (record : number, columnHeader : number) : boolean;
                function startEditByPosition (position : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class DragDrop extends Ext.AbstractPlugin
            {
                override function disable () : void;
                override function enable () : void;
                function init (view : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Editing extends Ext.AbstractPlugin
            {
                var editing : boolean;

                function constructor (config : variant);
                function cancelEdit () : void;
                function completeEdit () : void;
                function startEdit (record : Ext.data.Model, columnHeader : Ext.grid.column.Column) : boolean;
                function startEdit (record : Ext.data.Model, columnHeader : number) : boolean;
                function startEdit (record : number, columnHeader : Ext.grid.column.Column) : boolean;
                function startEdit (record : number, columnHeader : number) : boolean;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


            class HeaderResizer extends Ext.AbstractPlugin
            {
                override function disable () : void;
                override function enable () : void;
                function getDynamic () : boolean;
                function init (headerCt : variant) : void;
                function setDynamic (dynamic : boolean) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class RowEditing extends Ext.grid.plugin.Editing
            {
                function constructor ();
                function startEdit (record : Ext.data.Model, columnHeader : Ext.data.Model) : boolean;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class RowExpander extends Ext.AbstractPlugin
            {
                function init (grid : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }

        class property
        {

            class Grid extends Ext.grid.Panel
            {
                function getSource () : variant;
                function removeProperty (prop : string) : void;
                function setProperty (prop : string, value : variant, create : boolean) : void;
                function setProperty (prop : string, value : variant) : void;
                function setSource (source : variant, sourceConfig : variant) : void;
                function setSource (source : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class HeaderContainer extends Ext.grid.header.Container
            {
                function constructor (grid : Ext.grid.property.Grid, source : variant);
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Property extends Ext.data.Model
            {

                function constructor (config : variant);
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getFields () : Ext.data.Field[];
                static function getName () : string;
                static function getProxy () : Ext.data.proxy.Proxy;
                static function load (id : number, config : variant) : void;
                static function load (id : number) : void;
                static function load (id : string, config : variant) : void;
                static function load (id : string) : void;
                static function setFields (fields : variant, idProperty : variant, clientIdProperty : variant) : void;
                static function setProxy (proxy : string) : Ext.data.proxy.Proxy;
                static function setProxy (proxy : variant) : Ext.data.proxy.Proxy;
                static function setProxy (proxy : Ext.data.proxy.Proxy) : Ext.data.proxy.Proxy;
            }

            class Store extends Ext.data.Store
            {
                function constructor (grid : Ext.grid.Panel, source : variant);
                override function getProxy () : Ext.data.proxy.Proxy;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }
    }

    class is
    {
        static var Android : boolean;
        static var Blackberry : boolean;
        static var Desktop : boolean;
        static var Linux : boolean;
        static var Mac : boolean;
        static var Phone : boolean;
        static var Standalone : boolean;
        static var Tablet : variant;
        static var Windows : boolean;
        static var iOS : boolean;
        static var iPad : boolean;
        static var iPhone : boolean;
        static var iPod : boolean;

    }

    class layout
    {

        class ClassList extends Ext.Base
        {
            function add (cls : variant) : void;
            function addMany (classes : variant) : void;
            function remove (cls : variant) : void;
            function removeMany (classes : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class ContextItem extends Ext.Base
        {
            var state : variant;
            var wrapsComponent : boolean;

            function constructor (config : variant);
            function addCls (newCls : variant) : void;
            function block (layout : Ext.layout.Layout, propName : string) : void;
            function clearMarginCache () : void;
            function domBlock (layout : Ext.layout.Layout, propName : string) : void;
            function flush () : void;
            function getBorderInfo () : variant;
            function getClassList () : void;
            function getDomProp (propName : string) : variant;
            function getEl (nameOrEl : string, owner : Ext.layout.container.Container) : Ext.layout.ContextItem;
            function getEl (nameOrEl : string, owner : Ext.Component) : Ext.layout.ContextItem;
            function getEl (nameOrEl : string) : Ext.layout.ContextItem;
            function getEl (nameOrEl : Ext.dom.Element, owner : Ext.layout.container.Container) : Ext.layout.ContextItem;
            function getEl (nameOrEl : Ext.dom.Element, owner : Ext.Component) : Ext.layout.ContextItem;
            function getEl (nameOrEl : Ext.dom.Element) : Ext.layout.ContextItem;
            function getFrameInfo () : variant;
            function getMarginInfo () : variant;
            function getPaddingInfo () : variant;
            function getProp (propName : string) : variant;
            function getStyle (styleName : string) : variant;
            function getStyles (styleNames : string[], altNames : string[]) : variant;
            function getStyles (styleNames : string[]) : variant;
            function hasDomProp (propName : string) : boolean;
            function hasProp (propName : string) : boolean;
            function invalidate (options : variant) : void;
            function recoverProp (propName : string, oldProps : variant, oldDirty : variant) : void;
            function removeCls (removeCls : variant) : void;
            function removeEl (nameOrEl : string, owner : Ext.layout.container.Container) : void;
            function removeEl (nameOrEl : string, owner : Ext.Component) : void;
            function removeEl (nameOrEl : string) : void;
            function removeEl (nameOrEl : Ext.dom.Element, owner : Ext.layout.container.Container) : void;
            function removeEl (nameOrEl : Ext.dom.Element, owner : Ext.Component) : void;
            function removeEl (nameOrEl : Ext.dom.Element) : void;
            function setAttribute (name : variant, value : variant) : void;
            function setContentHeight (height : variant, measured : variant) : void;
            function setContentSize (width : variant, height : variant, measured : variant) : void;
            function setContentWidth (width : variant, measured : variant) : void;
            function setHeight (height : number, dirty : boolean) : number;
            function setHeight (height : number) : number;
            function setProp (propName : string, value : variant, dirty : boolean) : number;
            function setWidth (width : number, dirty : boolean) : number;
            function setWidth (width : number) : number;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Layout extends Ext.Base
        {
            var done : boolean;
            var isLayout : boolean;

            function constructor (config : variant);
            function afterRemove (item : variant) : void;
            function beginLayout (ownerContext : Ext.layout.ContextItem) : void;
            function beginLayoutCycle (ownerContext : Ext.layout.ContextItem) : void;
            function calculate (ownerContext : Ext.layout.ContextItem) : void;
            function completeLayout (ownerContext : Ext.layout.ContextItem) : void;
            function configureItem (item : Ext.Component) : void;
            function destroy () : void;
            function finalizeLayout (ownerContext : Ext.layout.ContextItem) : void;
            function finishedLayout (ownerContext : Ext.layout.ContextItem) : void;
            function getItemSizePolicy (item : Ext.Component) : Ext.layout.SizePolicy;
            function getLayoutItems () : Ext.Component[];
            function initLayout () : void;
            function isValidParent (item : variant, target : variant, position : variant) : void;
            function notifyOwner (ownerContext : Ext.layout.ContextItem) : void;
            function onContentChange (child : Ext.Component) : boolean;
            function renderItems (items : variant, target : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class SizePolicy
        {
            var readsHeight : boolean;
            var readsWidth : boolean;
            var setsHeight : boolean;
            var setsWidth : boolean;

        }

        class component
        {

            class Auto extends Ext.layout.component.Component
            {
                override function beginLayoutCycle (ownerContext : variant, firstCycle : variant) : void;
                function calculate (ownerContext : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Body extends Ext.layout.component.Auto
            {
                function beginLayout (ownerContext : variant) : void;
                override function beginLayoutCycle (ownerContext : variant, firstCycle : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }



            class Component extends Ext.layout.Layout
            {
                function beginLayoutCycle (ownerContext : variant, firstCycle : variant) : void;
                function finishedLayout (ownerContext : variant) : void;
                function getRenderTarget () : Ext.dom.Element;
                function getTarget () : Ext.dom.Element;
                function notifyOwner (ownerContext : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }





            class field
            {


                class Field extends Ext.layout.component.Auto
                {
                    var elementId : variant;
                    var errorStrategies : variant;
                    var labelStrategies : variant;
                    var left : variant;
                    var qtip : variant;
                    var right : variant;
                    var side : variant;
                    var title : variant;
                    var top : variant;
                    var under : variant;

                    function beginLayout (ownerContext : variant) : void;
                    function beginLayoutCycle (ownerContext : variant) : void;
                    override function finishedLayout (ownerContext : variant) : void;
                    function getErrorStrategy () : void;
                    function getLabelStrategy () : void;
                    static function addMembers (members : variant) : variant;
                    static function addStatics (members : variant) : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function destroyTip () : void;
                    static function getName () : string;
                    static function initTip () : void;
                }

                class FieldContainer extends Ext.layout.component.field.Field
                {
                    override function beginLayout (ownerContext : variant) : void;
                    static function addMembers (members : variant) : variant;
                    static function addStatics (members : variant) : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }



                class Text extends Ext.layout.component.field.Field
                {
                    override function beginLayoutCycle (ownerContext : variant) : void;
                    static function addMembers (members : variant) : variant;
                    static function addStatics (members : variant) : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }


                class Trigger extends Ext.layout.component.field.Field
                {
                    override function beginLayout (ownerContext : variant) : void;
                    override function beginLayoutCycle (ownerContext : variant) : void;
                    static function addMembers (members : variant) : variant;
                    static function addStatics (members : variant) : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }
            }
        }

        class container
        {

            class Absolute extends Ext.layout.container.Anchor
            {
                override function beginLayout (ownerContext : variant) : void;
                function onContentChange () : boolean;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Accordion extends Ext.layout.container.VBox
            {
                function constructor ();
                override function beginLayout (ownerContext : variant) : void;
                override function configureItem (item : variant) : void;
                override function renderItems (items : variant, target : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Anchor extends Ext.layout.container.Auto
            {

                override function beginLayoutCycle (ownerContext : variant) : void;
                override function configureItem (item : variant) : void;
                function getItemSizePolicy (item : variant) : Ext.layout.SizePolicy;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Auto extends Ext.layout.container.Container
            {
                var manageOverflow : boolean;
                var managePadding : boolean;

                override function beginLayout (ownerContext : variant) : void;
                function beginLayoutCycle (ownerContext : variant) : void;
                function calculate (ownerContext : variant) : void;
                function calculateOverflow (ownerContext : Ext.layout.ContextItem) : void;
                function completeLayout (ownerContext : variant) : void;
                function finishedLayout (ownerContext : variant) : void;
                override function getContainerSize (ownerContext : Ext.layout.ContextItem, inDom : boolean) : variant;
                override function getContainerSize (ownerContext : Ext.layout.ContextItem) : variant;
                override function getElementTarget () : Ext.dom.Element;
                function getOverflowXStyle (ownerContext : Ext.layout.ContextItem) : string;
                function getOverflowYStyle (ownerContext : Ext.layout.ContextItem) : string;
                override function getRenderTarget () : Ext.dom.Element;
                override function initLayout () : void;
                function setCtSizeIfNeeded (ownerContext : Ext.layout.ContextItem, containerSize : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Border extends Ext.layout.container.Container
            {
                override function beginLayout (ownerContext : variant) : void;
                function calculate (ownerContext : variant) : void;
                function getItemSizePolicy (item : variant) : Ext.layout.SizePolicy;
                override function getLayoutItems () : Ext.Component[];
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Box extends Ext.layout.container.Container
            {
                function constructor (config : variant);
                override function beginLayout (ownerContext : variant) : void;
                override function beginLayoutCycle (ownerContext : variant, firstCycle : variant) : void;
                function cacheFlexes (ownerContext : variant) : void;
                function calculate (ownerContext : variant) : void;
                function completeLayout (ownerContext : variant) : void;
                function finishedLayout (ownerContext : variant) : void;
                override function getElementTarget () : Ext.dom.Element;
                function getItemSizePolicy (item : variant, ownerSizeModel : variant) : Ext.layout.SizePolicy;
                override function getRenderTarget () : Ext.dom.Element;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Card extends Ext.layout.container.Fit
            {
                function getActiveItem () : Ext.Component;
                function getNext () : Ext.Component;
                function getPrev () : Ext.Component;
                override function isValidParent (item : variant, target : variant, position : variant) : void;
                function next () : Ext.Component;
                function prev () : Ext.Component;
                function setActiveItem (newCard : Ext.Component) : Ext.Component;
                function setActiveItem (newCard : number) : Ext.Component;
                function setActiveItem (newCard : string) : Ext.Component;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class CheckboxGroup extends Ext.layout.container.Container
            {
                override function beginLayout (ownerContext : variant) : void;
                function calculate (ownerContext : variant) : void;
                function getItemSizePolicy (item : variant) : Ext.layout.SizePolicy;
                override function initLayout () : void;
                function isValidParent () : void;
                function renderItems (items : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Column extends Ext.layout.container.Auto
            {

                function getItemSizePolicy (item : variant, ownerSizeModel : variant) : Ext.layout.SizePolicy;
                function setCtSizeIfNeeded (ownerContext : variant, containerSize : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Container extends Ext.layout.Layout
            {
                var overflowPadderEl : Ext.dom.Element;

                function constructor ();
                function beginLayout (ownerContext : variant) : void;
                function beginLayoutCycle (ownerContext : variant, firstCycle : variant) : void;
                function configureItem (item : variant) : void;
                function getContainerSize (ownerContext : Ext.layout.ContextItem, inDom : boolean) : variant;
                function getContainerSize (ownerContext : Ext.layout.ContextItem) : variant;
                function getElementTarget () : Ext.dom.Element;
                override function getLayoutItems () : Ext.Component[];
                function getRenderTarget () : Ext.dom.Element;
                function getRenderedItems () : variant[];
                function getTarget () : Ext.dom.Element;
                function getVisibleItems () : variant[];
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }


            class Fit extends Ext.layout.container.Container
            {
                override function beginLayoutCycle (ownerContext : variant, firstCycle : variant) : void;
                function calculate (ownerContext : variant) : void;
                function getItemSizePolicy (item : variant, ownerSizeModel : variant) : Ext.layout.SizePolicy;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Form extends Ext.layout.container.Container
            {
                var getScrollRangeFlags : variant;

                override function beginLayoutCycle (ownerContext : variant, firstCycle : variant) : void;
                function calculate (ownerContext : variant) : void;
                function calculateOverflow (ownerContext : Ext.layout.ContextItem, containerSize : variant, dimensions : number) : void;
                function completeLayout (ownerContext : variant) : void;
                function doRenderPadder (out : variant, renderData : variant) : void;
                function getContainerSize (ownerContext : Ext.layout.ContextItem, inDom : boolean, ignoreOverflow : boolean) : variant;
                override function getContainerSize (ownerContext : Ext.layout.ContextItem, inDom : boolean) : variant;
                override function getContainerSize (ownerContext : Ext.layout.ContextItem) : variant;
                function getItemSizePolicy (item : variant) : Ext.layout.SizePolicy;
                function getOverflowXStyle (ownerContext : Ext.layout.ContextItem) : string;
                function getOverflowYStyle (ownerContext : Ext.layout.ContextItem) : string;
                override function getRenderTarget () : Ext.dom.Element;
                override function initLayout () : void;
                override function isValidParent (item : variant, target : variant, position : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class HBox extends Ext.layout.container.Box
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class Table extends Ext.layout.container.Container
            {
                function calculate (ownerContext : variant) : void;
                function finalizeLayout () : void;
                override function getLayoutItems () : Ext.Component[];
                function isValidParent (item : variant, target : variant, rowIdx : variant, cellIdx : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class VBox extends Ext.layout.container.Box
            {
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }

            class boxOverflow
            {


                class None extends Ext.Base
                {
                    function constructor (layout : variant, config : variant);
                    static function addMembers (members : variant) : variant;
                    static function addStatics (members : variant) : variant;
                    static function create () : variant;
                    static function createAlias (alias : string, origin : string) : void;
                    static function createAlias (alias : string, origin : variant) : void;
                    static function createAlias (alias : variant, origin : string) : void;
                    static function createAlias (alias : variant, origin : variant) : void;
                    static function getName () : string;
                }

            }
        }
    }

    class menu
    {

        class CheckItem extends Ext.menu.Item
        {
            override function afterRender () : void;
            function disableCheckChange () : void;
            function enableCheckChange () : void;
            override function initComponent () : void;
            override function onDestroy () : void;
            function setChecked (checked : boolean, suppressEvents : boolean) : void;
            function setChecked (checked : boolean) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class ColorPicker extends Ext.menu.Menu
        {
            var picker : Ext.picker.Color;

            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class DatePicker extends Ext.menu.Menu
        {
            var picker : Ext.picker.Date;

            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Item extends Ext.Component
        {
            var activated : boolean;
            var menu : Ext.menu.Menu;
            var parentMenu : Ext.menu.Menu;

            override function initComponent () : void;
            override function onDestroy () : void;
            function onRemoved () : void;
            function onRender () : void;
            function setHandler (fn : function  () : void, scope : variant) : void;
            function setHandler (fn : function  () : void) : void;
            function setIcon (icon : string) : void;
            function setIconCls (iconCls : string) : void;
            function setMenu (menu : Ext.menu.Menu, destroyMenu : boolean) : void;
            function setMenu (menu : Ext.menu.Menu) : void;
            function setMenu (menu : variant, destroyMenu : boolean) : void;
            function setMenu (menu : variant) : void;
            function setText (text : string) : void;
            function setTooltip (tooltip : string) : variant;
            function setTooltip (tooltip : variant) : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Manager extends Ext.Base
        {
            static function get (menu : string) : Ext.menu.Menu;
            static function get (menu : variant) : Ext.menu.Menu;
            static function hideAll () : boolean;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Menu extends Ext.panel.Panel
        {
            var isMenu : boolean;
            var parentMenu : Ext.menu.Menu;

            override function afterShow () : void;
            override function beforeShow () : void;
            function canActivateItem (item : variant) : boolean;
            function deactivateActiveItem (andBlurFocusedItem : variant) : void;
            override function hide () : void;
            override function isVisible () : boolean;
            override function onDestroy () : void;
            function showBy (cmp : variant, pos : variant, off : variant) : Ext.Component;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Separator extends Ext.menu.Item
        {
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class panel
    {

        class AbstractPanel extends Ext.container.Container
        {
            var body : Ext.dom.Element;
            var isPanel : boolean;

            function addBodyCls (cls : string) : Ext.panel.Panel;
            function addUIClsToElement (cls : variant) : void;
            override function getComponent (comp : string) : Ext.Component;
            override function getComponent (comp : number) : Ext.Component;
            override function getRefItems (deep : variant) : void;
            function removeBodyCls (cls : string) : Ext.panel.Panel;
            function removeUIClsFromElement (cls : variant) : void;
            function setBodyStyle (style : variant, value : string) : Ext.panel.Panel;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Header extends Ext.container.Container
        {
            var isHeader : boolean;

            function addTool (tool : variant) : void;
            function addUIClsToElement (cls : variant) : void;
            function afterLayout () : void;
            override function beforeLayout () : void;
            function getTools () : Ext.panel.Tool[];
            function onAdd (component : variant, index : variant) : void;
            function removeUIClsFromElement (cls : variant) : void;
            function setGlyph (glyph : number) : void;
            function setGlyph (glyph : string) : void;
            function setIcon (icon : string) : void;
            function setIconCls (cls : string) : void;
            function setTitle (title : string) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Panel extends Ext.panel.AbstractPanel
        {
            var dd : variant;

            function addTool (tools : Object[]) : void;
            function addTool (tools : Ext.panel.Tool[]) : void;
            function afterCollapse (animated : boolean) : void;
            function afterExpand (animated : boolean) : void;
            function close () : void;
            function collapse (direction : string, animate : boolean) : variant;
            function collapse (direction : string) : variant;
            function collapse (animate : boolean) : variant;
            function collapse () : variant;
            function convertCollapseDir (collapseDir : variant) : void;
            function expand (animate : boolean) : variant;
            function expand () : variant;
            function getCollapsed () : variant;
            function getHeader () : void;
            override function getState () : variant;
            override function isLayoutRoot () : void;
            function isVisible (deep : variant) : boolean;
            override function onHide () : void;
            function onRemoved (destroying : variant) : void;
            override function onShow () : void;
            function setBorder (border : variant, targetEl : variant) : void;
            function setGlyph (newGlyph : number) : void;
            function setGlyph (newGlyph : string) : void;
            function setIcon (newIcon : string) : void;
            function setIconCls (newIconCls : string) : void;
            function setTitle (newTitle : string) : void;
            function setUI (ui : variant) : void;
            function toggleCollapse () : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Table extends Ext.panel.Panel
        {
            var hasView : boolean;
            var optimizedColumnMove : boolean;

            function afterCollapse () : void;
            function afterExpand () : void;
            function applyState (state : variant) : void;
            function getSelectionModel () : Ext.selection.Model;
            override function getState () : variant;
            function getStore () : Ext.data.Store;
            function getView () : Ext.view.Table;
            override function onDestroy () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Tool extends Ext.Component
        {
            var isTool : boolean;

            override function afterRender () : void;
            override function initComponent () : void;
            override function onDestroy () : void;
            function setType (type : string) : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class perf
    {


    }

    class picker
    {

        class Color extends Ext.Component
        {
            var colors : string[];

            function clear () : void;
            function getValue () : string;
            function onRender () : void;
            function select (color : string, suppressEvent : boolean) : void;
            function select (color : string) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Date extends Ext.Component
        {
            function getDayInitial (value : variant) : string;
            function getValue () : Date;
            function hideMonthPicker (animate : boolean) : variant;
            function hideMonthPicker () : variant;
            override function initComponent () : void;
            function selectToday () : variant;
            function setDisabledDates (disabledDates : string[]) : variant;
            function setDisabledDates (disabledDates : RegExp) : variant;
            function setDisabledDays (disabledDays : Number[]) : variant;
            function setMaxDate (value : Date) : variant;
            function setMinDate (value : Date) : variant;
            function setValue (value : Date) : variant;
            function showMonthPicker (animate : boolean) : variant;
            function showMonthPicker () : variant;
            function showNextMonth (e : variant) : variant;
            function showNextYear () : variant;
            function showPrevMonth (e : variant) : variant;
            function showPrevYear () : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Time extends Ext.view.BoundList
        {
            function focusNode (rec : variant) : void;
            override function initComponent () : void;
            function setMaxValue (value : Date) : void;
            function setMinValue (value : Date) : void;
            function updateList () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class resizer
    {



        class Handle extends Ext.Component
        {
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class ResizeTracker extends Ext.dd.DragTracker
        {
            function constructor (config : variant);
            function createProxy (target : Ext.Component) : Ext.dom.Element;
            function createProxy (target : Ext.dom.Element) : Ext.dom.Element;
            function onBeforeStart (e : variant) : void;
            function onDrag (e : variant) : void;
            function onEnd (e : variant) : void;
            function onStart (e : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Resizer extends Ext.Base
        {
            var el : Ext.dom.Element;
            var originalTarget : variant;
            var resizeTracker : Ext.resizer.ResizeTracker;

            function getEl () : Ext.dom.Element;
            function getTarget () : variant;
            function resizeTo (width : number, height : number) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Splitter extends Ext.Component
        {
            var orientation : string;

            override function beforeDestroy () : void;
            function getTrackerConfig () : void;
            function onRender () : void;
            function setSize () : Ext.Component;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class SplitterTracker extends Ext.dd.DragTracker
        {
            function onBeforeStart (e : variant) : void;
            function onDrag (e : variant) : void;
            function onEnd (e : variant) : void;
            function onStart (e : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class selection
    {

        class CellModel extends Ext.selection.Model
        {
            function constructor ();
            function deselect (record : variant, suppressEvent : variant) : void;
            function getCurrentPosition () : void;
            function select (pos : variant, keepExisting : variant, suppressEvent : variant) : void;
            function setCurrentPosition (position : variant, suppressEvent : boolean) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class CheckboxModel extends Ext.selection.RowModel
        {
            function constructor ();
            function getHeaderConfig () : void;
            function onHeaderClick (headerCt : variant, header : variant, e : variant) : void;
            function renderer (value : variant, metaData : variant, record : variant, rowIndex : variant, colIndex : variant, store : variant, view : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Model extends Ext.util.Observable
        {
            var selected : Ext.util.MixedCollection;

            function constructor (cfg : variant);
            function bindStore (store : variant, initial : variant) : void;
            function deselect (records : Ext.data.Model[], suppressEvent : boolean) : void;
            function deselect (records : Ext.data.Model[]) : void;
            function deselect (records : number, suppressEvent : boolean) : void;
            function deselect (records : number) : void;
            function deselectAll (suppressEvent : boolean) : void;
            function deselectAll () : void;
            function deselectRange (startRow : Ext.data.Model, endRow : Ext.data.Model) : void;
            function deselectRange (startRow : Ext.data.Model, endRow : number) : void;
            function deselectRange (startRow : number, endRow : Ext.data.Model) : void;
            function deselectRange (startRow : number, endRow : number) : void;
            function getCount () : number;
            function getLastSelected () : Ext.data.Model;
            function getSelection () : Ext.data.Model[];
            function getSelectionMode () : string;
            function getStoreListeners () : variant;
            function hasSelection () : boolean;
            function isFocused (record : Ext.data.Model) : void;
            function isLocked () : boolean;
            function isRangeSelected (from : Ext.data.Model, to : Ext.data.Model) : boolean;
            function isRangeSelected (from : Ext.data.Model, to : number) : boolean;
            function isRangeSelected (from : number, to : Ext.data.Model) : boolean;
            function isRangeSelected (from : number, to : number) : boolean;
            function isSelected (record : Ext.data.Model) : boolean;
            function isSelected (record : number) : boolean;
            function select (records : Ext.data.Model[], keepExisting : boolean, suppressEvent : boolean) : void;
            function select (records : Ext.data.Model[], keepExisting : boolean) : void;
            function select (records : Ext.data.Model[]) : void;
            function select (records : number, keepExisting : boolean, suppressEvent : boolean) : void;
            function select (records : number, keepExisting : boolean) : void;
            function select (records : number) : void;
            function selectAll (suppressEvent : boolean) : void;
            function selectRange (startRow : Ext.data.Model, endRow : Ext.data.Model, keepExisting : boolean) : void;
            function selectRange (startRow : Ext.data.Model, endRow : Ext.data.Model) : void;
            function selectRange (startRow : Ext.data.Model, endRow : number, keepExisting : boolean) : void;
            function selectRange (startRow : Ext.data.Model, endRow : number) : void;
            function selectRange (startRow : number, endRow : Ext.data.Model, keepExisting : boolean) : void;
            function selectRange (startRow : number, endRow : Ext.data.Model) : void;
            function selectRange (startRow : number, endRow : number, keepExisting : boolean) : void;
            function selectRange (startRow : number, endRow : number) : void;
            function setLastFocused (record : Ext.data.Model) : void;
            function setLocked (locked : boolean) : void;
            function setSelectionMode (selMode : string) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class RowModel extends Ext.selection.Model
        {
            function constructor ();
            function getCurrentPosition () : void;
            function selectNext (keepExisting : boolean, suppressEvent : boolean) : boolean;
            function selectNext (keepExisting : boolean) : boolean;
            function selectNext () : boolean;
            function selectPrevious (keepExisting : boolean, suppressEvent : boolean) : boolean;
            function selectPrevious (keepExisting : boolean) : boolean;
            function selectPrevious () : boolean;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class TreeModel extends Ext.selection.RowModel
        {
            override function bindStore (store : variant, initial : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class slider
    {

        class Multi extends Ext.form.field.Base
        {
            var dragging : boolean;
            var thumbs : variant[];

            function addThumb (value : number) : Ext.slider.Thumb;
            function addThumb () : Ext.slider.Thumb;
            override function beforeDestroy () : void;
            override function getSubTplData () : variant;
            override function getSubmitValue () : string;
            function getValue (index : number) : variant;
            function getValues () : Number[];
            override function initComponent () : void;
            function initValue () : void;
            override function onDisable () : void;
            override function onEnable () : void;
            override function onRender () : void;
            function reset () : void;
            function setMaxValue (val : number) : void;
            function setMinValue (val : number) : void;
            function setReadOnly (readOnly : variant) : void;
            function setValue (index : number, value : number, animate : boolean) : variant;
            function setValue (index : number, value : number) : variant;
            function setValue (index : Number[], value : number, animate : boolean) : variant;
            function setValue (index : Number[], value : number) : variant;
            function syncThumbs () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Single extends Ext.slider.Multi
        {
            override function getValue () : number;
            function setValue (value : number, animate : boolean) : void;
            function setValue (value : number) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Thumb extends Ext.Base
        {
            var slider : Ext.slider.Multi;

            function constructor (config : variant);
            function constructor ();
            function disable () : void;
            function enable () : void;
            function initEvents () : void;
            function render () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Tip extends Ext.tip.Tip
        {
            function getText (thumb : Ext.slider.Thumb) : string;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class state
    {

        class CookieProvider extends Ext.state.Provider
        {
            function constructor (config : variant);
            function constructor ();
            function clear (name : variant) : void;
            function set (name : variant, value : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class LocalStorageProvider extends Ext.state.Provider
        {
            function constructor ();
            function clear (name : variant) : void;
            function set (name : variant, value : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Manager extends Ext.Base
        {
            static function constructor ();
            static function clear (name : string) : void;
            static function get (name : string, defaultValue : variant) : variant;
            static function getProvider () : Ext.state.Provider;
            static function set (name : string, value : variant) : void;
            static function setProvider (stateProvider : Ext.state.Provider) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Provider extends Ext.Base
        {
            function constructor (config : variant);
            function clear (name : string) : void;
            function decodeValue (value : string) : variant;
            function encodeValue (value : variant) : string;
            function get (name : string, defaultValue : variant) : variant;
            function set (name : string, value : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Stateful extends Ext.Base
        {
            function constructor (config : variant);
            function addStateEvents (events : string) : void;
            function addStateEvents (events : string[]) : void;
            function applyState (state : variant) : void;
            function destroy () : void;
            function getState () : variant;
            function savePropToState (propName : string, state : variant, stateName : string) : boolean;
            function savePropToState (propName : string, state : variant) : boolean;
            function savePropsToState (propNames : string, state : variant) : variant;
            function savePropsToState (propNames : string[], state : variant) : variant;
            function saveState () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class supports
    {
        static var ArraySort : boolean;
        static var AudioTag : boolean;
        static var BoundingClientRect : boolean;
        static var CSS3BorderRadius : boolean;
        static var CSS3BoxShadow : boolean;
        static var CSS3DTransform : boolean;
        static var CSS3LinearGradient : boolean;
        static var Canvas : boolean;
        static var ClassList : boolean;
        static var ComputedStyle : boolean;
        static var CreateContextualFragment : boolean;
        static var DeviceMotion : boolean;
        static var Direct2DBug : boolean;
        static var DisplayChangeInputSelectionBug : variant;
        static var DisplayChangeTextAreaSelectionBug : variant;
        static var Float : boolean;
        static var GeoLocation : boolean;
        static var GetPositionPercentage : boolean;
        static var History : boolean;
        static var LocalStorage : variant;
        static var MouseEnterLeave : boolean;
        static var MouseWheel : boolean;
        static var Opacity : boolean;
        static var OrientationChange : boolean;
        static var Placeholder : boolean;
        static var PointerEvents : boolean;
        static var Range : boolean;
        static var RightMargin : boolean;
        static var RotatedBoundingClientRect : boolean;
        static var ScrollWidthInlinePaddingBug : boolean;
        static var Svg : boolean;
        static var TextAreaMaxLength : boolean;
        static var TimeoutActualLateness : boolean;
        static var Touch : boolean;
        static var Transitions : boolean;
        static var TransparentColor : boolean;
        static var Vml : boolean;
        static var WindowOnError : boolean;

    }

    class tab
    {

        class Bar extends Ext.panel.Header
        {
            var isTabBar : boolean;

            function afterComponentLayout (width : variant) : void;
            override function afterLayout () : void;
            override function afterRender () : void;
            override function getLayout () : Ext.layout.container.Container;
            function onRemove (tab : variant) : void;
            function onRender () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Panel extends Ext.panel.Panel
        {
            var tabBar : Ext.tab.Bar;

            function getActiveTab () : Ext.Component;
            function getTabBar () : Ext.tab.Bar;
            function onAdd (item : variant, index : variant) : void;
            function setActiveTab (card : string) : Ext.Component;
            function setActiveTab (card : number) : Ext.Component;
            function setActiveTab (card : Ext.Component) : Ext.Component;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Tab extends Ext.button.Button
        {
            var active : boolean;
            var closable : boolean;
            var isTab : boolean;

            override function disable (silent : variant) : void;
            override function enable (silent : variant) : void;
            override function getTemplateArgs () : variant;
            override function initComponent () : void;
            function setCard (card : Ext.Component) : void;
            function setClosable (closable : boolean) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class tip
    {

        class QuickTip extends Ext.tip.ToolTip
        {
            function cancelShow (el : string) : void;
            function cancelShow (el : HTMLElement) : void;
            function cancelShow (el : Ext.dom.Element) : void;
            override function hide () : void;
            function register (config : variant) : void;
            override function show () : void;
            override function showAt (xy : variant) : void;
            function unregister (el : string) : void;
            function unregister (el : HTMLElement) : void;
            function unregister (el : Ext.dom.Element) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class QuickTipManager extends Ext.Base
        {
            static function destroy () : void;
            static function disable () : void;
            static function enable () : void;
            static function getQuickTip () : Ext.tip.QuickTip;
            static function init (autoRender : boolean, config : variant) : void;
            static function init (autoRender : boolean) : void;
            static function init (config : variant) : void;
            static function init () : void;
            static function isEnabled () : boolean;
            static function register (config : variant) : void;
            static function tips (config : variant) : void;
            static function unregister (el : string) : void;
            static function unregister (el : HTMLElement) : void;
            static function unregister (el : Ext.dom.Element) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Tip extends Ext.panel.Panel
        {
            override function showAt (xy : Number[]) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class ToolTip extends Ext.tip.Tip
        {
            var triggerElement : HTMLElement;

            override function hide () : void;
            function setTarget (t : string) : void;
            function setTarget (t : HTMLElement) : void;
            function setTarget (t : Ext.dom.Element) : void;
            override function show () : void;
            function showAt (xy : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class toolbar
    {

        class Fill extends Ext.Component
        {
            var isFill : boolean;

            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Item extends Ext.Component
        {
            override function disable () : void;
            override function enable () : void;
            override function focus () : Ext.Component;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Paging extends Ext.toolbar.Toolbar
        {
            function bind (store : Ext.data.Store) : void;
            function doRefresh () : void;
            function getStoreListeners () : variant;
            function moveFirst () : void;
            function moveLast () : void;
            function moveNext () : void;
            function movePrevious () : void;
            function unbind (store : Ext.data.Store) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Separator extends Ext.toolbar.Item
        {
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Spacer extends Ext.Component
        {
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class TextItem extends Ext.toolbar.Item
        {
            function constructor (text : variant);
            function setText (text : string) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Toolbar extends Ext.container.Container
        {
            var isToolbar : boolean;

            function constructor (config : variant);
            function constructor (config : Object[]);
            override function add (args : Ext.Component) : variant;
            override function add (args : variant) : variant;
            function add (args : string) : variant;
            function add (args : HTMLElement) : variant;
            override function getRefItems (deep : variant) : void;
            override function insert (index : number, component : Ext.Component) : Ext.Component;
            override function insert (index : number, component : variant) : Ext.Component;
            function insert (index : number, component : string) : Ext.Component;
            function insert (index : number, component : HTMLElement) : Ext.Component;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class tree
    {


        class Panel extends Ext.panel.Table
        {
            function constructor (config : variant);
            function collapseAll (callback : function  () : void, scope : variant) : void;
            function collapseAll (callback : function  () : void) : void;
            function collapseAll (scope : variant) : void;
            function collapseAll () : void;
            function collapseNode (record : Ext.data.Model, deep : boolean, callback : function  () : void, scope : variant) : void;
            function collapseNode (record : Ext.data.Model, deep : boolean, callback : function  () : void) : void;
            function collapseNode (record : Ext.data.Model, deep : boolean, scope : variant) : void;
            function collapseNode (record : Ext.data.Model, deep : boolean) : void;
            function collapseNode (record : Ext.data.Model, callback : function  () : void, scope : variant) : void;
            function collapseNode (record : Ext.data.Model, callback : function  () : void) : void;
            function collapseNode (record : Ext.data.Model, scope : variant) : void;
            function collapseNode (record : Ext.data.Model) : void;
            function expandAll (callback : function  () : void, scope : variant) : void;
            function expandAll (callback : function  () : void) : void;
            function expandAll (scope : variant) : void;
            function expandAll () : void;
            function expandNode (record : Ext.data.Model, deep : boolean, callback : function  () : void, scope : variant) : void;
            function expandNode (record : Ext.data.Model, deep : boolean, callback : function  () : void) : void;
            function expandNode (record : Ext.data.Model, deep : boolean, scope : variant) : void;
            function expandNode (record : Ext.data.Model, deep : boolean) : void;
            function expandNode (record : Ext.data.Model, callback : function  () : void, scope : variant) : void;
            function expandNode (record : Ext.data.Model, callback : function  () : void) : void;
            function expandNode (record : Ext.data.Model, scope : variant) : void;
            function expandNode (record : Ext.data.Model) : void;
            function expandPath (path : string, field : string, separator : string, callback : function  () : void, scope : variant) : void;
            function expandPath (path : string, field : string, separator : string, callback : function  () : void) : void;
            function expandPath (path : string, field : string, separator : string, scope : variant) : void;
            function expandPath (path : string, field : string, separator : string) : void;
            function expandPath (path : string, field : string, callback : function  () : void, scope : variant) : void;
            function expandPath (path : string, field : string, callback : function  () : void) : void;
            function expandPath (path : string, field : string, scope : variant) : void;
            function expandPath (path : string, field : string) : void;
            function expandPath (path : string, callback : function  () : void, scope : variant) : void;
            function expandPath (path : string, callback : function  () : void) : void;
            function expandPath (path : string, scope : variant) : void;
            function expandPath (path : string) : void;
            function getChecked () : Ext.data.NodeInterface[];
            function getRootNode () : Ext.data.NodeInterface;
            function selectPath (path : string, field : string, separator : string, callback : function  () : void, scope : variant) : void;
            function selectPath (path : string, field : string, separator : string, callback : function  () : void) : void;
            function selectPath (path : string, field : string, separator : string, scope : variant) : void;
            function selectPath (path : string, field : string, separator : string) : void;
            function selectPath (path : string, field : string, callback : function  () : void, scope : variant) : void;
            function selectPath (path : string, field : string, callback : function  () : void) : void;
            function selectPath (path : string, field : string, scope : variant) : void;
            function selectPath (path : string, field : string) : void;
            function selectPath (path : string, callback : function  () : void, scope : variant) : void;
            function selectPath (path : string, callback : function  () : void) : void;
            function selectPath (path : string, scope : variant) : void;
            function selectPath (path : string) : void;
            function setRootNode (root : Ext.data.Model) : Ext.data.NodeInterface;
            function setRootNode (root : Ext.data.NodeInterface) : Ext.data.NodeInterface;
            function setRootNode (root : variant) : Ext.data.NodeInterface;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class View extends Ext.view.Table
        {
            var isTreeView : boolean;

            override function afterComponentLayout () : void;
            function collapse (record : Ext.data.Model, deep : boolean, callback : function  () : void, scope : variant) : void;
            function collapse (record : Ext.data.Model, deep : boolean, callback : function  () : void) : void;
            function collapse (record : Ext.data.Model, deep : boolean, scope : variant) : void;
            function collapse (record : Ext.data.Model, deep : boolean) : void;
            function collapse (record : Ext.data.Model, callback : function  () : void, scope : variant) : void;
            function collapse (record : Ext.data.Model, callback : function  () : void) : void;
            function collapse (record : Ext.data.Model, scope : variant) : void;
            function collapse (record : Ext.data.Model) : void;
            function expand (record : Ext.data.Model, deep : boolean, callback : function  () : void, scope : variant) : void;
            function expand (record : Ext.data.Model, deep : boolean, callback : function  () : void) : void;
            function expand (record : Ext.data.Model, deep : boolean, scope : variant) : void;
            function expand (record : Ext.data.Model, deep : boolean) : void;
            function expand (record : Ext.data.Model, callback : function  () : void, scope : variant) : void;
            function expand (record : Ext.data.Model, callback : function  () : void) : void;
            function expand (record : Ext.data.Model, scope : variant) : void;
            function expand (record : Ext.data.Model) : void;
            override function getStoreListeners () : variant;
            function getTreeStore () : void;
            override function initComponent () : void;
            function onBindStore () : void;
            function onUnbindStore () : void;
            function toggle (record : Ext.data.Model, deep : boolean, callback : function  () : void, scope : variant) : void;
            function toggle (record : Ext.data.Model, deep : boolean, callback : function  () : void) : void;
            function toggle (record : Ext.data.Model, deep : boolean, scope : variant) : void;
            function toggle (record : Ext.data.Model, deep : boolean) : void;
            function toggle (record : Ext.data.Model, callback : function  () : void, scope : variant) : void;
            function toggle (record : Ext.data.Model, callback : function  () : void) : void;
            function toggle (record : Ext.data.Model, scope : variant) : void;
            function toggle (record : Ext.data.Model) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }



        class plugin
        {

            class TreeViewDragDrop extends Ext.AbstractPlugin
            {
                function init (view : variant) : void;
                static function addMembers (members : variant) : variant;
                static function addStatics (members : variant) : variant;
                static function create () : variant;
                static function createAlias (alias : string, origin : string) : void;
                static function createAlias (alias : string, origin : variant) : void;
                static function createAlias (alias : variant, origin : string) : void;
                static function createAlias (alias : variant, origin : variant) : void;
                static function getName () : string;
            }
        }
    }

    class util
    {

        class AbstractMixedCollection extends Ext.Base
        {
            var isMixedCollection : boolean;

            function constructor (allowFunctions : variant, keyFn : variant);
            function add (key : string, obj : variant) : variant;
            function add (key : string) : variant;
            function add (key : variant, obj : variant) : variant;
            function add (key : variant) : variant;
            function addAll (objs : variant) : void;
            function addAll (objs : variant[]) : void;
            function clear () : void;
            function clone () : Ext.util.MixedCollection;
            function collect (property : string, root : string, allowBlank : boolean) : variant[];
            function collect (property : string, root : string) : variant[];
            function collect (property : string, allowBlank : boolean) : variant[];
            function collect (property : string) : variant[];
            function contains (o : variant) : boolean;
            function containsKey (key : string) : boolean;
            function each (fn : function  () : void, scope : variant) : void;
            function each (fn : function  () : void) : void;
            function eachKey (fn : function  () : void, scope : variant) : void;
            function eachKey (fn : function  () : void) : void;
            function filter (property : Ext.util.Filter[], value : string, anyMatch : boolean, caseSensitive : boolean) : Ext.util.MixedCollection;
            function filter (property : Ext.util.Filter[], value : string, anyMatch : boolean) : Ext.util.MixedCollection;
            function filter (property : Ext.util.Filter[], value : string) : Ext.util.MixedCollection;
            function filter (property : Ext.util.Filter[], value : RegExp, anyMatch : boolean, caseSensitive : boolean) : Ext.util.MixedCollection;
            function filter (property : Ext.util.Filter[], value : RegExp, anyMatch : boolean) : Ext.util.MixedCollection;
            function filter (property : Ext.util.Filter[], value : RegExp) : Ext.util.MixedCollection;
            function filter (property : string, value : string, anyMatch : boolean, caseSensitive : boolean) : Ext.util.MixedCollection;
            function filter (property : string, value : string, anyMatch : boolean) : Ext.util.MixedCollection;
            function filter (property : string, value : string) : Ext.util.MixedCollection;
            function filter (property : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean) : Ext.util.MixedCollection;
            function filter (property : string, value : RegExp, anyMatch : boolean) : Ext.util.MixedCollection;
            function filter (property : string, value : RegExp) : Ext.util.MixedCollection;
            function filterBy (fn : function  () : void, scope : variant) : Ext.util.MixedCollection;
            function filterBy (fn : function  () : void) : Ext.util.MixedCollection;
            function findBy (fn : function  () : void, scope : variant) : variant;
            function findBy (fn : function  () : void) : variant;
            function findIndex (property : string, value : string, start : number, anyMatch : boolean, caseSensitive : boolean) : number;
            function findIndex (property : string, value : string, start : number, anyMatch : boolean) : number;
            function findIndex (property : string, value : string, start : number) : number;
            function findIndex (property : string, value : string, anyMatch : boolean, caseSensitive : boolean) : number;
            function findIndex (property : string, value : string, anyMatch : boolean) : number;
            function findIndex (property : string, value : string) : number;
            function findIndex (property : string, value : RegExp, start : number, anyMatch : boolean, caseSensitive : boolean) : number;
            function findIndex (property : string, value : RegExp, start : number, anyMatch : boolean) : number;
            function findIndex (property : string, value : RegExp, start : number) : number;
            function findIndex (property : string, value : RegExp, anyMatch : boolean, caseSensitive : boolean) : number;
            function findIndex (property : string, value : RegExp, anyMatch : boolean) : number;
            function findIndex (property : string, value : RegExp) : number;
            function findIndexBy (fn : function  () : void, scope : variant, start : number) : number;
            function findIndexBy (fn : function  () : void, scope : variant) : number;
            function findIndexBy (fn : function  () : void, start : number) : number;
            function findIndexBy (fn : function  () : void) : number;
            function first () : variant;
            function get (key : string) : variant;
            function get (key : number) : variant;
            function getAt (index : number) : variant;
            function getByKey (key : string) : variant;
            function getByKey (key : number) : variant;
            function getCount () : number;
            function getKey (item : variant) : variant;
            function getRange (startIndex : number, endIndex : number) : variant[];
            function getRange (startIndex : number) : variant[];
            function getRange () : variant[];
            function indexOf (o : variant) : number;
            function indexOfKey (key : string) : number;
            function insert (index : number, key : string, o : variant) : variant;
            function insert (index : number, key : string, o : Object[]) : variant;
            function insert (index : number, key : string) : variant;
            function insert (index : number, key : variant, o : variant) : variant;
            function insert (index : number, key : variant, o : Object[]) : variant;
            function insert (index : number, key : variant) : variant;
            function insert (index : number, key : string[], o : variant) : variant;
            function insert (index : number, key : string[], o : Object[]) : variant;
            function insert (index : number, key : string[]) : variant;
            function insert (index : number, key : Object[], o : variant) : variant;
            function insert (index : number, key : Object[], o : Object[]) : variant;
            function insert (index : number, key : Object[]) : variant;
            function last () : variant;
            function remove (o : variant) : variant;
            function removeAll (items : variant[]) : Ext.util.MixedCollection;
            function removeAll () : Ext.util.MixedCollection;
            function removeAt (index : number) : variant;
            function removeAtKey (key : string) : variant;
            function removeRange (index : number, removeCount : number) : variant;
            function removeRange (index : number) : variant;
            function replace (key : string, o : variant) : variant;
            function sum (property : string, root : string, start : number, end : number) : number;
            function sum (property : string, root : string, start : number) : number;
            function sum (property : string, root : string) : number;
            function sum (property : string, start : number, end : number) : number;
            function sum (property : string, start : number) : number;
            function sum (property : string) : number;
            function updateKey (oldKey : variant, newKey : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Animate extends Ext.Base
        {
            function animate (config : variant) : variant;
            function getActiveAnimation () : variant;
            function sequenceFx () : variant;
            function stopAnimation () : variant;
            function syncFx () : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Bindable extends Ext.Base
        {
            function bindStore (store : Ext.data.AbstractStore) : void;
            function bindStore (store : string) : void;
            function bindStore () : void;
            function bindStoreListeners (store : Ext.data.AbstractStore) : void;
            function getStore () : Ext.data.AbstractStore;
            function getStoreListeners (store : Ext.data.Store) : variant;
            function onBindStore (store : Ext.data.AbstractStore, initial : boolean) : void;
            function onUnbindStore (store : Ext.data.AbstractStore, initial : boolean) : void;
            function unbindStoreListeners (store : Ext.data.AbstractStore) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class CSS extends Ext.Base
        {
            static function createRule (styleSheet : CSSStyleSheet, selector : string, property : string) : CSSStyleRule;
            static function createStyleSheet (cssText : string, id : string) : CSSStyleSheet;
            static function getRule (selector : string, refreshCache : boolean) : CSSStyleRule;
            static function getRule (selector : string[], refreshCache : boolean) : CSSStyleRule;
            static function getRules (refreshCache : boolean) : variant;
            static function refreshCache () : variant;
            static function removeStyleSheet (id : string) : void;
            static function swapStyleSheet (id : string, url : string) : void;
            static function updateRule (selector : string, property : string, value : string) : boolean;
            static function updateRule (selector : string[], property : string, value : string) : boolean;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class ClickRepeater extends Ext.util.Observable
        {
            function constructor (el : string, config : variant);
            function constructor (el : string);
            function constructor (el : HTMLElement, config : variant);
            function constructor (el : HTMLElement);
            function constructor (el : Ext.dom.Element, config : variant);
            function constructor (el : Ext.dom.Element);
            function disable (force : variant) : void;
            function enable () : void;
            function setDisabled (disabled : boolean) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class ComponentDragger extends Ext.dd.DragTracker
        {
            function constructor (comp : variant, config : variant);
            function constructor (comp : variant);
            function onDrag (e : variant) : void;
            function onEnd (e : variant) : void;
            function onStart (e : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Cookies extends Ext.Base
        {
            static function clear (name : string, path : string) : void;
            static function clear (name : string) : void;
            static function get (name : string) : variant;
            static function set (name : string, value : variant, expires : variant, path : string, domain : string, secure : boolean) : void;
            static function set (name : string, value : variant, expires : variant, path : string, domain : string) : void;
            static function set (name : string, value : variant, expires : variant, path : string, secure : boolean) : void;
            static function set (name : string, value : variant, expires : variant, path : string) : void;
            static function set (name : string, value : variant, expires : variant, secure : boolean) : void;
            static function set (name : string, value : variant, expires : variant) : void;
            static function set (name : string, value : variant, path : string, domain : string, secure : boolean) : void;
            static function set (name : string, value : variant, path : string, domain : string) : void;
            static function set (name : string, value : variant, path : string, secure : boolean) : void;
            static function set (name : string, value : variant, path : string) : void;
            static function set (name : string, value : variant, secure : boolean) : void;
            static function set (name : string, value : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class DelayedTask
        {
            var id : number;

            function constructor (fn : function  () : void, scope : variant, args : variant[], cancelOnDelay : boolean);
            function constructor (fn : function  () : void, scope : variant, args : variant[]);
            function constructor (fn : function  () : void, scope : variant, cancelOnDelay : boolean);
            function constructor (fn : function  () : void, scope : variant);
            function constructor (fn : function  () : void, args : variant[], cancelOnDelay : boolean);
            function constructor (fn : function  () : void, args : variant[]);
            function constructor (fn : function  () : void, cancelOnDelay : boolean);
            function constructor (fn : function  () : void);
            function constructor (scope : variant, args : variant[], cancelOnDelay : boolean);
            function constructor (scope : variant, args : variant[]);
            function constructor (scope : variant, cancelOnDelay : boolean);
            function constructor (scope : variant);
            function constructor (args : variant[], cancelOnDelay : boolean);
            function constructor (args : variant[]);
            function constructor (cancelOnDelay : boolean);
            function constructor ();
            function cancel () : void;
            function delay (newDelay : number, newFn : function  () : void, newScope : variant, newArgs : variant[]) : void;
            function delay (newDelay : number, newFn : function  () : void, newScope : variant) : void;
            function delay (newDelay : number, newFn : function  () : void, newArgs : variant[]) : void;
            function delay (newDelay : number, newFn : function  () : void) : void;
            function delay (newDelay : number, newScope : variant, newArgs : variant[]) : void;
            function delay (newDelay : number, newScope : variant) : void;
            function delay (newDelay : number, newArgs : variant[]) : void;
            function delay (newDelay : number) : void;
        }



        class Filter extends Ext.Base
        {
            var disabled : boolean;

            function constructor (config : variant);
            function constructor ();
            function setFilterFn (filterFn : function  () : void) : void;
            function setValue (value : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function createFilterFn (filters : Ext.util.Filter[]) : function () : void;
            static function getName () : string;
        }

        class Floating extends Ext.Base
        {
            function center () : Ext.Component;
            function doConstrain (constrainTo : string) : void;
            function doConstrain (constrainTo : HTMLElement) : void;
            function doConstrain (constrainTo : Ext.dom.Element) : void;
            function doConstrain (constrainTo : Ext.util.Region) : void;
            function doConstrain () : void;
            function setActive (active : boolean, newActive : Ext.Component) : void;
            function setActive (active : boolean) : void;
            function setActive (newActive : Ext.Component) : void;
            function setActive () : void;
            function toBack () : variant;
            function toFront (preventFocus : boolean) : Ext.Component;
            function toFront () : Ext.Component;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Format
        {
            static var currencyAtEnd : boolean;
            static var currencyPrecision : number;
            static var currencySign : string;
            static var decimalSeparator : string;
            static var thousandSeparator : string;

            static function attributes (attributes : variant) : void;
            static function capitalize (string : string) : string;
            static function currency (value : number, sign : string, decimals : number, end : boolean) : string;
            static function currency (value : number, sign : string, decimals : number) : string;
            static function currency (value : number, sign : string, end : boolean) : string;
            static function currency (value : number, sign : string) : string;
            static function currency (value : number, decimals : number, end : boolean) : string;
            static function currency (value : number, decimals : number) : string;
            static function currency (value : number, end : boolean) : string;
            static function currency (value : number) : string;
            static function currency (value : string, sign : string, decimals : number, end : boolean) : string;
            static function currency (value : string, sign : string, decimals : number) : string;
            static function currency (value : string, sign : string, end : boolean) : string;
            static function currency (value : string, sign : string) : string;
            static function currency (value : string, decimals : number, end : boolean) : string;
            static function currency (value : string, decimals : number) : string;
            static function currency (value : string, end : boolean) : string;
            static function currency (value : string) : string;
            static function date (value : string, format : string) : string;
            static function date (value : string) : string;
            static function date (value : Date, format : string) : string;
            static function date (value : Date) : string;
            static function dateRenderer (format : string) : function () : void;
            static function defaultValue (value : variant, defaultValue : string) : string;
            static function defaultValue (value : variant) : string;
            static function ellipsis (value : string, length : number, word : boolean) : string;
            static function ellipsis (value : string, length : number) : string;
            static function escapeRegex (str : string) : string;
            static function fileSize (size : number) : string;
            static function fileSize (size : string) : string;
            static function format (string : string, values : variant) : string;
            static function htmlDecode (value : string) : string;
            static function htmlEncode (value : string) : string;
            static function leftPad (string : string, size : number, character : string) : string;
            static function leftPad (string : string, size : number) : string;
            static function lowercase (value : string) : string;
            static function math () : function () : void;
            static function nl2br (v : string) : string;
            static function number (v : number, format : string) : string;
            static function numberRenderer (format : string) : function () : void;
            static function parseBox (v : number) : variant;
            static function parseBox (v : string) : variant;
            static function plural (value : number, singular : string, plural : string) : void;
            static function plural (value : number, singular : string) : void;
            static function round (value : number, precision : number) : number;
            static function round (value : string, precision : number) : number;
            static function stripScripts (value : variant) : string;
            static function stripTags (value : variant) : string;
            static function substr (value : string, start : number, length : number) : string;
            static function trim (string : string) : string;
            static function undef (value : variant) : variant;
            static function uppercase (value : string) : string;
            static function usMoney (value : number) : string;
            static function usMoney (value : string) : string;
        }

        class Grouper extends Ext.util.Sorter
        {
            function getGroupString (instance : Ext.data.Model) : string;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class HashMap extends Ext.Base
        {
            function constructor (config : variant);
            function constructor ();
            function add (key : string, o : variant) : variant;
            function add (key : string) : variant;
            function add (key : variant, o : variant) : variant;
            function add (key : variant) : variant;
            function clear (initial : variant) : variant;
            function clone () : Ext.util.HashMap;
            function contains (value : variant) : boolean;
            function containsKey (key : string) : boolean;
            function each (fn : function  () : void, scope : variant) : variant;
            function each (fn : function  () : void) : variant;
            function get (key : string) : variant;
            function getCount () : number;
            function getKey (o : variant) : string;
            function getKeys () : variant[];
            function getValues () : variant[];
            function remove (o : variant) : boolean;
            function removeAtKey (key : string) : boolean;
            function replace (key : string, value : variant) : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class History extends Ext.Base
        {
            static var fieldId : string;
            static var iframeId : string;
            static var useTopWindow : boolean;

            static function constructor ();
            static function add (token : string, preventDuplicates : boolean) : void;
            static function add (token : string) : void;
            static function back () : void;
            static function forward () : void;
            static function getToken () : string;
            static function init (onReady : function  () : void, scope : variant) : void;
            static function init (onReady : function  () : void) : void;
            static function init (scope : variant) : void;
            static function init () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Inflector extends Ext.Base
        {
            static function classify (word : string) : string;
            static function clearPlurals () : void;
            static function clearSingulars () : void;
            static function isTransnumeral (word : string) : boolean;
            static function ordinalize (number : number) : string;
            static function plural (matcher : RegExp, replacer : string) : void;
            static function pluralize (word : string) : string;
            static function singular (matcher : RegExp, replacer : string) : void;
            static function singularize (word : string) : string;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class KeyMap extends Ext.Base
        {
            function constructor (config : variant);
            function addBinding (binding : variant) : void;
            function addBinding (binding : Object[]) : void;
            function destroy (removeTarget : boolean) : void;
            function disable () : void;
            function enable () : void;
            function isEnabled () : boolean;
            function on (key : number, fn : function  () : void, scope : variant) : void;
            function on (key : number, fn : function  () : void) : void;
            function on (key : Number[], fn : function  () : void, scope : variant) : void;
            function on (key : Number[], fn : function  () : void) : void;
            function on (key : variant, fn : function  () : void, scope : variant) : void;
            function on (key : variant, fn : function  () : void) : void;
            function removeBinding (binding : variant) : void;
            function setDisabled (disabled : boolean) : void;
            function un (key : number, fn : function  () : void, scope : variant) : void;
            function un (key : number, fn : function  () : void) : void;
            function un (key : Number[], fn : function  () : void, scope : variant) : void;
            function un (key : Number[], fn : function  () : void) : void;
            function un (key : variant, fn : function  () : void, scope : variant) : void;
            function un (key : variant, fn : function  () : void) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class KeyNav extends Ext.Base
        {
            function constructor (config : variant);
            function destroy (removeEl : boolean) : void;
            function disable () : void;
            function enable () : void;
            function setDisabled (disabled : boolean) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class LruCache extends Ext.util.HashMap
        {
            override function add (key : variant, newValue : variant) : variant;
            override function clear (initial : variant) : Ext.util.HashMap;
            override function clone () : Ext.util.HashMap;
            function each (fn : function  () : void, scope : variant, reverse : boolean) : variant;
            override function each (fn : function  () : void, scope : variant) : variant;
            function get (key : variant) : variant;
            function prune () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Memento extends Ext.Base
        {
            var target : variant;

            function constructor (target : variant, props : string);
            function constructor (target : variant, props : string[]);
            function capture (props : string, target : variant) : void;
            function capture (props : string[], target : variant) : void;
            function remove (props : string) : void;
            function remove (props : string[]) : void;
            function restore (props : string, clear : boolean, target : variant) : void;
            function restore (props : string[], clear : boolean, target : variant) : void;
            function restoreAll (clear : boolean, target : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class MixedCollection extends Ext.util.AbstractMixedCollection
        {
            function constructor (config : variant);
            function findInsertionIndex (newItem : variant, sorterFn : function  () : void) : number;
            function findInsertionIndex (newItem : variant) : number;
            function reorder (mapping : variant) : void;
            function sortBy (sorterFn : function  () : void) : void;
            function sortByKey (direction : string, fn : function  () : void) : void;
            function sortByKey (direction : string) : void;
            function sortByKey (fn : function  () : void) : void;
            function sortByKey () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Observable extends Ext.Base
        {
            var hasListeners : variant;
            var isObservable : boolean;

            function addEvents (eventNames : variant) : void;
            function addEvents (eventNames : string) : void;
            function addListener (eventName : string, fn : function  () : void, scope : variant, options : variant) : variant;
            function addListener (eventName : string, fn : function  () : void, scope : variant) : variant;
            function addListener (eventName : string, fn : function  () : void) : variant;
            function addListener (eventName : string, scope : variant, options : variant) : variant;
            function addListener (eventName : string, scope : variant) : variant;
            function addListener (eventName : string) : variant;
            function addListener (eventName : variant, fn : function  () : void, scope : variant, options : variant) : variant;
            function addListener (eventName : variant, fn : function  () : void, scope : variant) : variant;
            function addListener (eventName : variant, fn : function  () : void) : variant;
            function addListener (eventName : variant, scope : variant, options : variant) : variant;
            function addListener (eventName : variant, scope : variant) : variant;
            function addListener (eventName : variant) : variant;
            function addManagedListener (item : Ext.util.Observable, ename : variant, fn : function  () : void, scope : variant, options : variant) : variant;
            function addManagedListener (item : Ext.util.Observable, ename : variant, fn : function  () : void, scope : variant) : variant;
            function addManagedListener (item : Ext.util.Observable, ename : variant, fn : function  () : void) : variant;
            function addManagedListener (item : Ext.util.Observable, ename : variant, scope : variant, options : variant) : variant;
            function addManagedListener (item : Ext.util.Observable, ename : variant, scope : variant) : variant;
            function addManagedListener (item : Ext.util.Observable, ename : variant) : variant;
            function addManagedListener (item : Ext.util.Observable, ename : string, fn : function  () : void, scope : variant, options : variant) : variant;
            function addManagedListener (item : Ext.util.Observable, ename : string, fn : function  () : void, scope : variant) : variant;
            function addManagedListener (item : Ext.util.Observable, ename : string, fn : function  () : void) : variant;
            function addManagedListener (item : Ext.util.Observable, ename : string, scope : variant, options : variant) : variant;
            function addManagedListener (item : Ext.util.Observable, ename : string, scope : variant) : variant;
            function addManagedListener (item : Ext.util.Observable, ename : string) : variant;
            function addManagedListener (item : Ext.dom.Element, ename : variant, fn : function  () : void, scope : variant, options : variant) : variant;
            function addManagedListener (item : Ext.dom.Element, ename : variant, fn : function  () : void, scope : variant) : variant;
            function addManagedListener (item : Ext.dom.Element, ename : variant, fn : function  () : void) : variant;
            function addManagedListener (item : Ext.dom.Element, ename : variant, scope : variant, options : variant) : variant;
            function addManagedListener (item : Ext.dom.Element, ename : variant, scope : variant) : variant;
            function addManagedListener (item : Ext.dom.Element, ename : variant) : variant;
            function addManagedListener (item : Ext.dom.Element, ename : string, fn : function  () : void, scope : variant, options : variant) : variant;
            function addManagedListener (item : Ext.dom.Element, ename : string, fn : function  () : void, scope : variant) : variant;
            function addManagedListener (item : Ext.dom.Element, ename : string, fn : function  () : void) : variant;
            function addManagedListener (item : Ext.dom.Element, ename : string, scope : variant, options : variant) : variant;
            function addManagedListener (item : Ext.dom.Element, ename : string, scope : variant) : variant;
            function addManagedListener (item : Ext.dom.Element, ename : string) : variant;
            function clearListeners () : void;
            function clearManagedListeners () : void;
            function enableBubble (eventNames : string) : void;
            function enableBubble (eventNames : string[]) : void;
            function fireEvent (eventName : string, args : variant) : boolean;
            function fireEventArgs (eventName : string, args : Object[]) : boolean;
            function hasListener (eventName : string) : boolean;
            function mon (item : Ext.util.Observable, ename : variant, fn : function  () : void, scope : variant, options : variant) : variant;
            function mon (item : Ext.util.Observable, ename : variant, fn : function  () : void, scope : variant) : variant;
            function mon (item : Ext.util.Observable, ename : variant, fn : function  () : void) : variant;
            function mon (item : Ext.util.Observable, ename : variant, scope : variant, options : variant) : variant;
            function mon (item : Ext.util.Observable, ename : variant, scope : variant) : variant;
            function mon (item : Ext.util.Observable, ename : variant) : variant;
            function mon (item : Ext.util.Observable, ename : string, fn : function  () : void, scope : variant, options : variant) : variant;
            function mon (item : Ext.util.Observable, ename : string, fn : function  () : void, scope : variant) : variant;
            function mon (item : Ext.util.Observable, ename : string, fn : function  () : void) : variant;
            function mon (item : Ext.util.Observable, ename : string, scope : variant, options : variant) : variant;
            function mon (item : Ext.util.Observable, ename : string, scope : variant) : variant;
            function mon (item : Ext.util.Observable, ename : string) : variant;
            function mon (item : Ext.dom.Element, ename : variant, fn : function  () : void, scope : variant, options : variant) : variant;
            function mon (item : Ext.dom.Element, ename : variant, fn : function  () : void, scope : variant) : variant;
            function mon (item : Ext.dom.Element, ename : variant, fn : function  () : void) : variant;
            function mon (item : Ext.dom.Element, ename : variant, scope : variant, options : variant) : variant;
            function mon (item : Ext.dom.Element, ename : variant, scope : variant) : variant;
            function mon (item : Ext.dom.Element, ename : variant) : variant;
            function mon (item : Ext.dom.Element, ename : string, fn : function  () : void, scope : variant, options : variant) : variant;
            function mon (item : Ext.dom.Element, ename : string, fn : function  () : void, scope : variant) : variant;
            function mon (item : Ext.dom.Element, ename : string, fn : function  () : void) : variant;
            function mon (item : Ext.dom.Element, ename : string, scope : variant, options : variant) : variant;
            function mon (item : Ext.dom.Element, ename : string, scope : variant) : variant;
            function mon (item : Ext.dom.Element, ename : string) : variant;
            function mun (item : Ext.util.Observable, ename : variant, fn : function  () : void, scope : variant) : void;
            function mun (item : Ext.util.Observable, ename : variant, fn : function  () : void) : void;
            function mun (item : Ext.util.Observable, ename : variant, scope : variant) : void;
            function mun (item : Ext.util.Observable, ename : variant) : void;
            function mun (item : Ext.util.Observable, ename : string, fn : function  () : void, scope : variant) : void;
            function mun (item : Ext.util.Observable, ename : string, fn : function  () : void) : void;
            function mun (item : Ext.util.Observable, ename : string, scope : variant) : void;
            function mun (item : Ext.util.Observable, ename : string) : void;
            function mun (item : Ext.dom.Element, ename : variant, fn : function  () : void, scope : variant) : void;
            function mun (item : Ext.dom.Element, ename : variant, fn : function  () : void) : void;
            function mun (item : Ext.dom.Element, ename : variant, scope : variant) : void;
            function mun (item : Ext.dom.Element, ename : variant) : void;
            function mun (item : Ext.dom.Element, ename : string, fn : function  () : void, scope : variant) : void;
            function mun (item : Ext.dom.Element, ename : string, fn : function  () : void) : void;
            function mun (item : Ext.dom.Element, ename : string, scope : variant) : void;
            function mun (item : Ext.dom.Element, ename : string) : void;
            function on (eventName : string, fn : function  () : void, scope : variant, options : variant) : variant;
            function on (eventName : string, fn : function  () : void, scope : variant) : variant;
            function on (eventName : string, fn : function  () : void) : variant;
            function on (eventName : string, scope : variant, options : variant) : variant;
            function on (eventName : string, scope : variant) : variant;
            function on (eventName : string) : variant;
            function on (eventName : variant, fn : function  () : void, scope : variant, options : variant) : variant;
            function on (eventName : variant, fn : function  () : void, scope : variant) : variant;
            function on (eventName : variant, fn : function  () : void) : variant;
            function on (eventName : variant, scope : variant, options : variant) : variant;
            function on (eventName : variant, scope : variant) : variant;
            function on (eventName : variant) : variant;
            function relayEvents (origin : variant, events : string[], prefix : string) : variant;
            function relayEvents (origin : variant, events : string[]) : variant;
            function removeListener (eventName : string, fn : function  () : void, scope : variant) : void;
            function removeListener (eventName : string, fn : function  () : void) : void;
            function removeManagedListener (item : Ext.util.Observable, ename : variant, fn : function  () : void, scope : variant) : void;
            function removeManagedListener (item : Ext.util.Observable, ename : variant, fn : function  () : void) : void;
            function removeManagedListener (item : Ext.util.Observable, ename : variant, scope : variant) : void;
            function removeManagedListener (item : Ext.util.Observable, ename : variant) : void;
            function removeManagedListener (item : Ext.util.Observable, ename : string, fn : function  () : void, scope : variant) : void;
            function removeManagedListener (item : Ext.util.Observable, ename : string, fn : function  () : void) : void;
            function removeManagedListener (item : Ext.util.Observable, ename : string, scope : variant) : void;
            function removeManagedListener (item : Ext.util.Observable, ename : string) : void;
            function removeManagedListener (item : Ext.dom.Element, ename : variant, fn : function  () : void, scope : variant) : void;
            function removeManagedListener (item : Ext.dom.Element, ename : variant, fn : function  () : void) : void;
            function removeManagedListener (item : Ext.dom.Element, ename : variant, scope : variant) : void;
            function removeManagedListener (item : Ext.dom.Element, ename : variant) : void;
            function removeManagedListener (item : Ext.dom.Element, ename : string, fn : function  () : void, scope : variant) : void;
            function removeManagedListener (item : Ext.dom.Element, ename : string, fn : function  () : void) : void;
            function removeManagedListener (item : Ext.dom.Element, ename : string, scope : variant) : void;
            function removeManagedListener (item : Ext.dom.Element, ename : string) : void;
            function resumeEvent (eventName : string) : void;
            function resumeEvents () : void;
            function suspendEvent (eventName : string) : void;
            function suspendEvents (queueSuspended : boolean) : void;
            function un (eventName : string, fn : function  () : void, scope : variant) : void;
            function un (eventName : string, fn : function  () : void) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function capture (o : Ext.util.Observable, fn : function  () : void, scope : variant) : void;
            static function capture (o : Ext.util.Observable, fn : function  () : void) : void;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
            static function observe (c : function  () : void, listeners : variant) : void;
            static function releaseCapture (o : Ext.util.Observable) : void;
        }

        class Offset extends Ext.Base
        {
            function constructor (x : variant, y : variant);
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Point extends Ext.util.Region
        {
            function constructor (x : number, y : number);
            function equals (p : Ext.util.Point) : boolean;
            function equals (p : variant) : boolean;
            function isContainedBy (region : Ext.util.Region) : boolean;
            function isContainedBy (region : Ext.Component) : boolean;
            function isContainedBy (region : Ext.dom.Element) : boolean;
            function isContainedBy (region : HTMLElement) : boolean;
            function isWithin (p : Ext.util.Point, threshold : variant) : boolean;
            function isWithin (p : Ext.util.Point, threshold : number) : boolean;
            function isWithin (p : variant, threshold : variant) : boolean;
            function isWithin (p : variant, threshold : number) : boolean;
            function roundedEquals (p : Ext.util.Point) : boolean;
            function roundedEquals (p : variant) : boolean;
            override function toString () : string;
            function translate (x : Ext.util.Offset, y : number) : Ext.util.Region;
            function translate (x : variant, y : number) : Ext.util.Region;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function fromEvent (e : Ext.EventObject) : Ext.util.Point;
            static function fromEvent (e : Event) : Ext.util.Point;
            static function getName () : string;
        }

        class Positionable extends Ext.Base
        {
            function alignTo (element : Ext.util.Positionable, position : string, offsets : Number[], animate : boolean) : variant;
            function alignTo (element : Ext.util.Positionable, position : string, offsets : Number[], animate : variant) : variant;
            function alignTo (element : Ext.util.Positionable, position : string, offsets : Number[]) : variant;
            function alignTo (element : Ext.util.Positionable, position : string, animate : boolean) : variant;
            function alignTo (element : Ext.util.Positionable, position : string, animate : variant) : variant;
            function alignTo (element : Ext.util.Positionable, position : string) : variant;
            function alignTo (element : Ext.util.Positionable, offsets : Number[], animate : boolean) : variant;
            function alignTo (element : Ext.util.Positionable, offsets : Number[], animate : variant) : variant;
            function alignTo (element : Ext.util.Positionable, offsets : Number[]) : variant;
            function alignTo (element : Ext.util.Positionable, animate : boolean) : variant;
            function alignTo (element : Ext.util.Positionable, animate : variant) : variant;
            function alignTo (element : Ext.util.Positionable) : variant;
            function alignTo (element : HTMLElement, position : string, offsets : Number[], animate : boolean) : variant;
            function alignTo (element : HTMLElement, position : string, offsets : Number[], animate : variant) : variant;
            function alignTo (element : HTMLElement, position : string, offsets : Number[]) : variant;
            function alignTo (element : HTMLElement, position : string, animate : boolean) : variant;
            function alignTo (element : HTMLElement, position : string, animate : variant) : variant;
            function alignTo (element : HTMLElement, position : string) : variant;
            function alignTo (element : HTMLElement, offsets : Number[], animate : boolean) : variant;
            function alignTo (element : HTMLElement, offsets : Number[], animate : variant) : variant;
            function alignTo (element : HTMLElement, offsets : Number[]) : variant;
            function alignTo (element : HTMLElement, animate : boolean) : variant;
            function alignTo (element : HTMLElement, animate : variant) : variant;
            function alignTo (element : HTMLElement) : variant;
            function alignTo (element : string, position : string, offsets : Number[], animate : boolean) : variant;
            function alignTo (element : string, position : string, offsets : Number[], animate : variant) : variant;
            function alignTo (element : string, position : string, offsets : Number[]) : variant;
            function alignTo (element : string, position : string, animate : boolean) : variant;
            function alignTo (element : string, position : string, animate : variant) : variant;
            function alignTo (element : string, position : string) : variant;
            function alignTo (element : string, offsets : Number[], animate : boolean) : variant;
            function alignTo (element : string, offsets : Number[], animate : variant) : variant;
            function alignTo (element : string, offsets : Number[]) : variant;
            function alignTo (element : string, animate : boolean) : variant;
            function alignTo (element : string, animate : variant) : variant;
            function alignTo (element : string) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, offsets : Number[], animate : boolean, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, offsets : Number[], animate : boolean, monitorScroll : boolean) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, offsets : Number[], animate : boolean, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, offsets : Number[], animate : boolean, monitorScroll : number) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, offsets : Number[], animate : boolean, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, offsets : Number[], animate : boolean) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, offsets : Number[], animate : variant, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, offsets : Number[], animate : variant, monitorScroll : boolean) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, offsets : Number[], animate : variant, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, offsets : Number[], animate : variant, monitorScroll : number) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, offsets : Number[], animate : variant, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, offsets : Number[], animate : variant) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, offsets : Number[], monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, offsets : Number[], monitorScroll : number) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, offsets : Number[], callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, offsets : Number[]) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, animate : boolean, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, animate : boolean, monitorScroll : boolean) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, animate : boolean, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, animate : boolean, monitorScroll : number) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, animate : boolean, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, animate : boolean) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, animate : variant, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, animate : variant, monitorScroll : boolean) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, animate : variant, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, animate : variant, monitorScroll : number) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, animate : variant, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, animate : variant) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, monitorScroll : number) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, position : string) : variant;
            function anchorTo (element : Ext.util.Positionable, offsets : Number[], animate : boolean, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, offsets : Number[], animate : boolean, monitorScroll : boolean) : variant;
            function anchorTo (element : Ext.util.Positionable, offsets : Number[], animate : boolean, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, offsets : Number[], animate : boolean, monitorScroll : number) : variant;
            function anchorTo (element : Ext.util.Positionable, offsets : Number[], animate : boolean, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, offsets : Number[], animate : boolean) : variant;
            function anchorTo (element : Ext.util.Positionable, offsets : Number[], animate : variant, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, offsets : Number[], animate : variant, monitorScroll : boolean) : variant;
            function anchorTo (element : Ext.util.Positionable, offsets : Number[], animate : variant, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, offsets : Number[], animate : variant, monitorScroll : number) : variant;
            function anchorTo (element : Ext.util.Positionable, offsets : Number[], animate : variant, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, offsets : Number[], animate : variant) : variant;
            function anchorTo (element : Ext.util.Positionable, offsets : Number[], monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, offsets : Number[], monitorScroll : number) : variant;
            function anchorTo (element : Ext.util.Positionable, offsets : Number[], callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, offsets : Number[]) : variant;
            function anchorTo (element : Ext.util.Positionable, animate : boolean, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, animate : boolean, monitorScroll : boolean) : variant;
            function anchorTo (element : Ext.util.Positionable, animate : boolean, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, animate : boolean, monitorScroll : number) : variant;
            function anchorTo (element : Ext.util.Positionable, animate : boolean, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, animate : boolean) : variant;
            function anchorTo (element : Ext.util.Positionable, animate : variant, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, animate : variant, monitorScroll : boolean) : variant;
            function anchorTo (element : Ext.util.Positionable, animate : variant, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, animate : variant, monitorScroll : number) : variant;
            function anchorTo (element : Ext.util.Positionable, animate : variant, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, animate : variant) : variant;
            function anchorTo (element : Ext.util.Positionable, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable, monitorScroll : number) : variant;
            function anchorTo (element : Ext.util.Positionable, callback : function  () : void) : variant;
            function anchorTo (element : Ext.util.Positionable) : variant;
            function anchorTo (element : HTMLElement, position : string, offsets : Number[], animate : boolean, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, position : string, offsets : Number[], animate : boolean, monitorScroll : boolean) : variant;
            function anchorTo (element : HTMLElement, position : string, offsets : Number[], animate : boolean, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, position : string, offsets : Number[], animate : boolean, monitorScroll : number) : variant;
            function anchorTo (element : HTMLElement, position : string, offsets : Number[], animate : boolean, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, position : string, offsets : Number[], animate : boolean) : variant;
            function anchorTo (element : HTMLElement, position : string, offsets : Number[], animate : variant, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, position : string, offsets : Number[], animate : variant, monitorScroll : boolean) : variant;
            function anchorTo (element : HTMLElement, position : string, offsets : Number[], animate : variant, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, position : string, offsets : Number[], animate : variant, monitorScroll : number) : variant;
            function anchorTo (element : HTMLElement, position : string, offsets : Number[], animate : variant, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, position : string, offsets : Number[], animate : variant) : variant;
            function anchorTo (element : HTMLElement, position : string, offsets : Number[], monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, position : string, offsets : Number[], monitorScroll : number) : variant;
            function anchorTo (element : HTMLElement, position : string, offsets : Number[], callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, position : string, offsets : Number[]) : variant;
            function anchorTo (element : HTMLElement, position : string, animate : boolean, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, position : string, animate : boolean, monitorScroll : boolean) : variant;
            function anchorTo (element : HTMLElement, position : string, animate : boolean, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, position : string, animate : boolean, monitorScroll : number) : variant;
            function anchorTo (element : HTMLElement, position : string, animate : boolean, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, position : string, animate : boolean) : variant;
            function anchorTo (element : HTMLElement, position : string, animate : variant, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, position : string, animate : variant, monitorScroll : boolean) : variant;
            function anchorTo (element : HTMLElement, position : string, animate : variant, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, position : string, animate : variant, monitorScroll : number) : variant;
            function anchorTo (element : HTMLElement, position : string, animate : variant, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, position : string, animate : variant) : variant;
            function anchorTo (element : HTMLElement, position : string, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, position : string, monitorScroll : number) : variant;
            function anchorTo (element : HTMLElement, position : string, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, position : string) : variant;
            function anchorTo (element : HTMLElement, offsets : Number[], animate : boolean, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, offsets : Number[], animate : boolean, monitorScroll : boolean) : variant;
            function anchorTo (element : HTMLElement, offsets : Number[], animate : boolean, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, offsets : Number[], animate : boolean, monitorScroll : number) : variant;
            function anchorTo (element : HTMLElement, offsets : Number[], animate : boolean, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, offsets : Number[], animate : boolean) : variant;
            function anchorTo (element : HTMLElement, offsets : Number[], animate : variant, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, offsets : Number[], animate : variant, monitorScroll : boolean) : variant;
            function anchorTo (element : HTMLElement, offsets : Number[], animate : variant, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, offsets : Number[], animate : variant, monitorScroll : number) : variant;
            function anchorTo (element : HTMLElement, offsets : Number[], animate : variant, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, offsets : Number[], animate : variant) : variant;
            function anchorTo (element : HTMLElement, offsets : Number[], monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, offsets : Number[], monitorScroll : number) : variant;
            function anchorTo (element : HTMLElement, offsets : Number[], callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, offsets : Number[]) : variant;
            function anchorTo (element : HTMLElement, animate : boolean, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, animate : boolean, monitorScroll : boolean) : variant;
            function anchorTo (element : HTMLElement, animate : boolean, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, animate : boolean, monitorScroll : number) : variant;
            function anchorTo (element : HTMLElement, animate : boolean, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, animate : boolean) : variant;
            function anchorTo (element : HTMLElement, animate : variant, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, animate : variant, monitorScroll : boolean) : variant;
            function anchorTo (element : HTMLElement, animate : variant, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, animate : variant, monitorScroll : number) : variant;
            function anchorTo (element : HTMLElement, animate : variant, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, animate : variant) : variant;
            function anchorTo (element : HTMLElement, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement, monitorScroll : number) : variant;
            function anchorTo (element : HTMLElement, callback : function  () : void) : variant;
            function anchorTo (element : HTMLElement) : variant;
            function anchorTo (element : string, position : string, offsets : Number[], animate : boolean, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : string, position : string, offsets : Number[], animate : boolean, monitorScroll : boolean) : variant;
            function anchorTo (element : string, position : string, offsets : Number[], animate : boolean, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : string, position : string, offsets : Number[], animate : boolean, monitorScroll : number) : variant;
            function anchorTo (element : string, position : string, offsets : Number[], animate : boolean, callback : function  () : void) : variant;
            function anchorTo (element : string, position : string, offsets : Number[], animate : boolean) : variant;
            function anchorTo (element : string, position : string, offsets : Number[], animate : variant, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : string, position : string, offsets : Number[], animate : variant, monitorScroll : boolean) : variant;
            function anchorTo (element : string, position : string, offsets : Number[], animate : variant, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : string, position : string, offsets : Number[], animate : variant, monitorScroll : number) : variant;
            function anchorTo (element : string, position : string, offsets : Number[], animate : variant, callback : function  () : void) : variant;
            function anchorTo (element : string, position : string, offsets : Number[], animate : variant) : variant;
            function anchorTo (element : string, position : string, offsets : Number[], monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : string, position : string, offsets : Number[], monitorScroll : number) : variant;
            function anchorTo (element : string, position : string, offsets : Number[], callback : function  () : void) : variant;
            function anchorTo (element : string, position : string, offsets : Number[]) : variant;
            function anchorTo (element : string, position : string, animate : boolean, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : string, position : string, animate : boolean, monitorScroll : boolean) : variant;
            function anchorTo (element : string, position : string, animate : boolean, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : string, position : string, animate : boolean, monitorScroll : number) : variant;
            function anchorTo (element : string, position : string, animate : boolean, callback : function  () : void) : variant;
            function anchorTo (element : string, position : string, animate : boolean) : variant;
            function anchorTo (element : string, position : string, animate : variant, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : string, position : string, animate : variant, monitorScroll : boolean) : variant;
            function anchorTo (element : string, position : string, animate : variant, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : string, position : string, animate : variant, monitorScroll : number) : variant;
            function anchorTo (element : string, position : string, animate : variant, callback : function  () : void) : variant;
            function anchorTo (element : string, position : string, animate : variant) : variant;
            function anchorTo (element : string, position : string, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : string, position : string, monitorScroll : number) : variant;
            function anchorTo (element : string, position : string, callback : function  () : void) : variant;
            function anchorTo (element : string, position : string) : variant;
            function anchorTo (element : string, offsets : Number[], animate : boolean, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : string, offsets : Number[], animate : boolean, monitorScroll : boolean) : variant;
            function anchorTo (element : string, offsets : Number[], animate : boolean, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : string, offsets : Number[], animate : boolean, monitorScroll : number) : variant;
            function anchorTo (element : string, offsets : Number[], animate : boolean, callback : function  () : void) : variant;
            function anchorTo (element : string, offsets : Number[], animate : boolean) : variant;
            function anchorTo (element : string, offsets : Number[], animate : variant, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : string, offsets : Number[], animate : variant, monitorScroll : boolean) : variant;
            function anchorTo (element : string, offsets : Number[], animate : variant, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : string, offsets : Number[], animate : variant, monitorScroll : number) : variant;
            function anchorTo (element : string, offsets : Number[], animate : variant, callback : function  () : void) : variant;
            function anchorTo (element : string, offsets : Number[], animate : variant) : variant;
            function anchorTo (element : string, offsets : Number[], monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : string, offsets : Number[], monitorScroll : number) : variant;
            function anchorTo (element : string, offsets : Number[], callback : function  () : void) : variant;
            function anchorTo (element : string, offsets : Number[]) : variant;
            function anchorTo (element : string, animate : boolean, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : string, animate : boolean, monitorScroll : boolean) : variant;
            function anchorTo (element : string, animate : boolean, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : string, animate : boolean, monitorScroll : number) : variant;
            function anchorTo (element : string, animate : boolean, callback : function  () : void) : variant;
            function anchorTo (element : string, animate : boolean) : variant;
            function anchorTo (element : string, animate : variant, monitorScroll : boolean, callback : function  () : void) : variant;
            function anchorTo (element : string, animate : variant, monitorScroll : boolean) : variant;
            function anchorTo (element : string, animate : variant, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : string, animate : variant, monitorScroll : number) : variant;
            function anchorTo (element : string, animate : variant, callback : function  () : void) : variant;
            function anchorTo (element : string, animate : variant) : variant;
            function anchorTo (element : string, monitorScroll : number, callback : function  () : void) : variant;
            function anchorTo (element : string, monitorScroll : number) : variant;
            function anchorTo (element : string, callback : function  () : void) : variant;
            function anchorTo (element : string) : variant;
            function calculateConstrainedPosition (constrainTo : string, proposedPosition : Number[], local : boolean, proposedSize : Number[]) : Number[];
            function calculateConstrainedPosition (constrainTo : string, proposedPosition : Number[], local : boolean) : Number[];
            function calculateConstrainedPosition (constrainTo : string, proposedPosition : Number[], proposedSize : Number[]) : Number[];
            function calculateConstrainedPosition (constrainTo : string, proposedPosition : Number[]) : Number[];
            function calculateConstrainedPosition (constrainTo : string, local : boolean, proposedSize : Number[]) : Number[];
            function calculateConstrainedPosition (constrainTo : string, local : boolean) : Number[];
            function calculateConstrainedPosition (constrainTo : string) : Number[];
            function calculateConstrainedPosition (constrainTo : HTMLElement, proposedPosition : Number[], local : boolean, proposedSize : Number[]) : Number[];
            function calculateConstrainedPosition (constrainTo : HTMLElement, proposedPosition : Number[], local : boolean) : Number[];
            function calculateConstrainedPosition (constrainTo : HTMLElement, proposedPosition : Number[], proposedSize : Number[]) : Number[];
            function calculateConstrainedPosition (constrainTo : HTMLElement, proposedPosition : Number[]) : Number[];
            function calculateConstrainedPosition (constrainTo : HTMLElement, local : boolean, proposedSize : Number[]) : Number[];
            function calculateConstrainedPosition (constrainTo : HTMLElement, local : boolean) : Number[];
            function calculateConstrainedPosition (constrainTo : HTMLElement) : Number[];
            function calculateConstrainedPosition (constrainTo : Ext.dom.Element, proposedPosition : Number[], local : boolean, proposedSize : Number[]) : Number[];
            function calculateConstrainedPosition (constrainTo : Ext.dom.Element, proposedPosition : Number[], local : boolean) : Number[];
            function calculateConstrainedPosition (constrainTo : Ext.dom.Element, proposedPosition : Number[], proposedSize : Number[]) : Number[];
            function calculateConstrainedPosition (constrainTo : Ext.dom.Element, proposedPosition : Number[]) : Number[];
            function calculateConstrainedPosition (constrainTo : Ext.dom.Element, local : boolean, proposedSize : Number[]) : Number[];
            function calculateConstrainedPosition (constrainTo : Ext.dom.Element, local : boolean) : Number[];
            function calculateConstrainedPosition (constrainTo : Ext.dom.Element) : Number[];
            function calculateConstrainedPosition (constrainTo : Ext.util.Region, proposedPosition : Number[], local : boolean, proposedSize : Number[]) : Number[];
            function calculateConstrainedPosition (constrainTo : Ext.util.Region, proposedPosition : Number[], local : boolean) : Number[];
            function calculateConstrainedPosition (constrainTo : Ext.util.Region, proposedPosition : Number[], proposedSize : Number[]) : Number[];
            function calculateConstrainedPosition (constrainTo : Ext.util.Region, proposedPosition : Number[]) : Number[];
            function calculateConstrainedPosition (constrainTo : Ext.util.Region, local : boolean, proposedSize : Number[]) : Number[];
            function calculateConstrainedPosition (constrainTo : Ext.util.Region, local : boolean) : Number[];
            function calculateConstrainedPosition (constrainTo : Ext.util.Region) : Number[];
            function calculateConstrainedPosition (proposedPosition : Number[], local : boolean, proposedSize : Number[]) : Number[];
            function calculateConstrainedPosition (proposedPosition : Number[], local : boolean) : Number[];
            function calculateConstrainedPosition (proposedPosition : Number[], proposedSize : Number[]) : Number[];
            function calculateConstrainedPosition (proposedPosition : Number[]) : Number[];
            function calculateConstrainedPosition (local : boolean, proposedSize : Number[]) : Number[];
            function calculateConstrainedPosition (local : boolean) : Number[];
            function calculateConstrainedPosition () : Number[];
            function getAlignToXY (element : Ext.util.Positionable, position : string, offsets : Number[]) : Number[];
            function getAlignToXY (element : Ext.util.Positionable, position : string) : Number[];
            function getAlignToXY (element : Ext.util.Positionable, offsets : Number[]) : Number[];
            function getAlignToXY (element : Ext.util.Positionable) : Number[];
            function getAlignToXY (element : HTMLElement, position : string, offsets : Number[]) : Number[];
            function getAlignToXY (element : HTMLElement, position : string) : Number[];
            function getAlignToXY (element : HTMLElement, offsets : Number[]) : Number[];
            function getAlignToXY (element : HTMLElement) : Number[];
            function getAlignToXY (element : string, position : string, offsets : Number[]) : Number[];
            function getAlignToXY (element : string, position : string) : Number[];
            function getAlignToXY (element : string, offsets : Number[]) : Number[];
            function getAlignToXY (element : string) : Number[];
            function getAnchorXY (anchor : string, local : boolean, size : variant) : Number[];
            function getAnchorXY (anchor : string, local : boolean) : Number[];
            function getAnchorXY (anchor : string, size : variant) : Number[];
            function getAnchorXY (anchor : string) : Number[];
            function getAnchorXY (local : boolean, size : variant) : Number[];
            function getAnchorXY (local : boolean) : Number[];
            function getAnchorXY (size : variant) : Number[];
            function getAnchorXY () : Number[];
            function getBox (contentBox : boolean, local : boolean) : variant;
            function getBox (contentBox : boolean) : variant;
            function getBox () : variant;
            function getConstrainVector (constrainTo : Ext.util.Positionable, proposedPosition : Number[], proposedSize : Number[]) : variant;
            function getConstrainVector (constrainTo : Ext.util.Positionable, proposedPosition : Number[]) : variant;
            function getConstrainVector (constrainTo : Ext.util.Positionable) : variant;
            function getConstrainVector (constrainTo : HTMLElement, proposedPosition : Number[], proposedSize : Number[]) : variant;
            function getConstrainVector (constrainTo : HTMLElement, proposedPosition : Number[]) : variant;
            function getConstrainVector (constrainTo : HTMLElement) : variant;
            function getConstrainVector (constrainTo : string, proposedPosition : Number[], proposedSize : Number[]) : variant;
            function getConstrainVector (constrainTo : string, proposedPosition : Number[]) : variant;
            function getConstrainVector (constrainTo : string) : variant;
            function getConstrainVector (constrainTo : Ext.util.Region, proposedPosition : Number[], proposedSize : Number[]) : variant;
            function getConstrainVector (constrainTo : Ext.util.Region, proposedPosition : Number[]) : variant;
            function getConstrainVector (constrainTo : Ext.util.Region) : variant;
            function getConstrainVector (proposedPosition : Number[], proposedSize : Number[]) : variant;
            function getConstrainVector (proposedPosition : Number[]) : variant;
            function getConstrainVector () : variant;
            function getLocalX () : number;
            function getLocalXY () : Number[];
            function getLocalY () : number;
            function getOffsetsTo (offsetsTo : Ext.util.Positionable) : Number[];
            function getOffsetsTo (offsetsTo : HTMLElement) : Number[];
            function getOffsetsTo (offsetsTo : string) : Number[];
            function getRegion () : Ext.util.Region;
            function getViewRegion () : Ext.util.Region;
            function getX () : number;
            function getXY () : Number[];
            function getY () : number;
            function move (direction : string, distance : number, animate : boolean) : void;
            function move (direction : string, distance : number, animate : variant) : void;
            function move (direction : string, distance : number) : void;
            function removeAnchor () : variant;
            function setBox (box : variant, animate : boolean) : variant;
            function setBox (box : variant, animate : variant) : variant;
            function setBox (box : variant) : variant;
            function setLocalX (x : number) : variant;
            function setLocalXY (x : number, y : number) : variant;
            function setLocalXY (x : number) : variant;
            function setLocalXY (x : variant[], y : number) : variant;
            function setLocalXY (x : variant[]) : variant;
            function setLocalY (y : number) : variant;
            function setRegion (region : Ext.util.Region, animate : boolean) : variant;
            function setRegion (region : Ext.util.Region, animate : variant) : variant;
            function setRegion (region : Ext.util.Region) : variant;
            function setX (The : number, animate : boolean) : variant;
            function setX (The : number, animate : variant) : variant;
            function setX (The : number) : variant;
            function setXY (pos : Number[], animate : boolean) : variant;
            function setXY (pos : Number[], animate : variant) : variant;
            function setXY (pos : Number[]) : variant;
            function setY (The : number, animate : boolean) : variant;
            function setY (The : number, animate : variant) : variant;
            function setY (The : number) : variant;
            function translatePoints (x : number, y : number) : variant;
            function translatePoints (x : number) : variant;
            function translatePoints (x : variant[], y : number) : variant;
            function translatePoints (x : variant[]) : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Queue extends Ext.Base
        {
            function constructor ();
            function clear () : void;
            function getCount () : number;
            function remove (obj : variant) : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Region extends Ext.Base
        {
            function constructor (top : number, right : number, bottom : number, left : number);
            function adjust (top : number, right : number, bottom : number, left : number) : variant;
            function constrainTo (targetRegion : Ext.util.Region) : variant;
            function contains (region : Ext.util.Region) : boolean;
            function copy () : Ext.util.Region;
            function copyFrom (p : Ext.util.Region) : variant;
            function equals (region : Ext.util.Region) : boolean;
            function getOutOfBoundOffset (axis : string, p : Ext.util.Point) : Ext.util.Offset;
            function getOutOfBoundOffset (axis : string) : Ext.util.Offset;
            function getOutOfBoundOffset (p : Ext.util.Point) : Ext.util.Offset;
            function getOutOfBoundOffset () : Ext.util.Offset;
            function getOutOfBoundOffsetX (p : number) : number;
            function getOutOfBoundOffsetY (p : number) : number;
            function intersect (region : Ext.util.Region) : variant;
            function isOutOfBound (axis : string, p : Ext.util.Point) : boolean;
            function isOutOfBound (axis : string, p : number) : boolean;
            function isOutOfBound (axis : string) : boolean;
            function isOutOfBound (p : Ext.util.Point) : boolean;
            function isOutOfBound (p : number) : boolean;
            function isOutOfBound () : boolean;
            function isOutOfBoundX (p : number) : boolean;
            function isOutOfBoundY (p : number) : boolean;
            function round () : variant;
            function translateBy (x : Ext.util.Offset, y : number) : variant;
            function translateBy (x : variant, y : number) : variant;
            function union (region : Ext.util.Region) : Ext.util.Region;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function from (o : variant) : Ext.util.Region;
            static function getName () : string;
            static function getRegion (el : string) : Ext.util.Region;
            static function getRegion (el : HTMLElement) : Ext.util.Region;
            static function getRegion (el : Ext.dom.Element) : Ext.util.Region;
        }


        class Sortable extends Ext.Base
        {
            var isSortable : boolean;
            var sorters : Ext.util.MixedCollection;

            function generateComparator () : void;
            function getFirstSorter () : Ext.util.Sorter;
            function initSortable () : void;
            function sort (sorters : string, direction : string) : Ext.util.Sorter[];
            function sort (sorters : string) : Ext.util.Sorter[];
            function sort (sorters : Ext.util.Sorter[], direction : string) : Ext.util.Sorter[];
            function sort (sorters : Ext.util.Sorter[]) : Ext.util.Sorter[];
            function sort () : Ext.util.Sorter[];
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function createComparator (sorters : Ext.util.Sorter[]) : function () : void;
            static function getName () : string;
        }

        class Sorter extends Ext.Base
        {
            function constructor (config : variant);
            function setDirection (direction : string) : void;
            function toggle () : void;
            function updateSortFunction (fn : function  () : void) : void;
            function updateSortFunction () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class TaskManager extends Ext.util.TaskRunner
        {
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class TaskRunner extends Ext.Base
        {
            function constructor (interval : number);
            function constructor (interval : variant);
            function constructor ();
            function destroy () : void;
            function newTask (config : variant) : void;
            function start (task : variant) : variant;
            function stop (task : variant) : variant;
            function stopAll () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;

            class Task
            {
                var fireOnStart : boolean;

                function destroy () : void;
                function restart (interval : number) : void;
                function restart () : void;
                function start (interval : number) : void;
                function start () : void;
                function stop () : void;
            }
        }

        class TextMetrics extends Ext.Base
        {
            function constructor (bindTo : string, fixedWidth : number);
            function constructor (bindTo : string);
            function constructor (bindTo : HTMLElement, fixedWidth : number);
            function constructor (bindTo : HTMLElement);
            function constructor (bindTo : Ext.dom.Element, fixedWidth : number);
            function constructor (bindTo : Ext.dom.Element);
            function bind (el : string) : void;
            function bind (el : HTMLElement) : void;
            function bind (el : Ext.dom.Element) : void;
            function destroy () : void;
            function getHeight (text : string) : number;
            function getSize (text : string) : variant;
            function getWidth (text : string) : number;
            function setFixedWidth (width : number) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function destroy () : void;
            static function getName () : string;
            static function measure (el : string, text : string, fixedWidth : number) : variant;
            static function measure (el : string, text : string) : variant;
            static function measure (el : HTMLElement, text : string, fixedWidth : number) : variant;
            static function measure (el : HTMLElement, text : string) : variant;
        }
    }

    class view
    {

        class AbstractView extends Ext.Component
        {
            override function afterRender () : void;
            function bindStore (store : Ext.data.Store) : void;
            function collectData (records : Ext.data.Model[], startIndex : number) : Object[];
            function deselect (records : Ext.data.Model[], suppressEvent : boolean) : void;
            function deselect (records : number, suppressEvent : boolean) : void;
            function findItemByChild (node : HTMLElement) : HTMLElement;
            function findTargetByEvent (e : Ext.EventObject) : void;
            function getNode (nodeInfo : HTMLElement) : HTMLElement;
            function getNode (nodeInfo : string) : HTMLElement;
            function getNode (nodeInfo : number) : HTMLElement;
            function getNode (nodeInfo : Ext.data.Model) : HTMLElement;
            function getNodes (start : number, end : number) : HTMLElement[];
            function getNodes (start : number) : HTMLElement[];
            function getNodes () : HTMLElement[];
            function getRecord (node : Ext.dom.Element) : Ext.data.Model;
            function getRecord (node : HTMLElement) : Ext.data.Model;
            function getRecords (nodes : HTMLElement[]) : Ext.data.Model[];
            function getSelectedNodes () : HTMLElement[];
            function getSelectionModel () : Ext.selection.Model;
            function getStore () : Ext.data.Store;
            function getStoreListeners () : variant;
            function indexOf (nodeInfo : HTMLElement) : number;
            function indexOf (nodeInfo : string) : number;
            function indexOf (nodeInfo : number) : number;
            function indexOf (nodeInfo : Ext.data.Model) : number;
            override function initComponent () : void;
            function isSelected (node : HTMLElement) : boolean;
            function isSelected (node : number) : boolean;
            function isSelected (node : Ext.data.Model) : boolean;
            function onBindStore (store : variant, initial : variant, propName : variant) : void;
            override function onDestroy () : void;
            function onRender () : void;
            function onUnbindStore (store : variant) : void;
            function prepareData (data : variant, recordIndex : number, record : Ext.data.Model) : variant;
            function prepareData (data : Object[], recordIndex : number, record : Ext.data.Model) : variant;
            function refresh () : void;
            function refreshNode (index : number) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class BoundList extends Ext.view.View
        {
            var pagingToolbar : Ext.toolbar.Paging;

            function bindStore (store : variant, initial : variant) : void;
            function getInnerTpl (displayField : string) : string;
            override function onDestroy () : void;
            override function refresh () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class BoundListKeyNav extends Ext.util.KeyNav
        {
            function highlightAt (index : number) : void;
            function selectHighlighted (e : variant) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class DragZone extends Ext.dd.DragZone
        {
            function constructor (config : variant);
            override function getDragData (e : variant) : variant;
            function getRepairXY (e : variant, data : variant) : Number[];
            function init (id : variant, sGroup : variant, config : variant) : void;
            function onInitDrag (x : variant, y : variant) : boolean;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class DropZone extends Ext.dd.DropZone
        {
            function constructor (config : variant);
            override function destroy () : void;
            function getTargetFromEvent (e : variant) : variant;
            function notifyOut (node : variant, dragZone : variant, e : variant, data : variant) : void;
            function onContainerDrop (dd : variant, e : variant, data : variant) : boolean;
            function onContainerOver (dd : variant, e : variant, data : variant) : string;
            function onNodeDrop (targetNode : variant, dragZone : variant, e : variant, data : variant) : boolean;
            function onNodeOver (node : variant, dragZone : variant, e : variant, data : variant) : string;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class Table extends Ext.view.View
        {
            function constructor (config : variant);
            function addRowCls (rowInfo : HTMLElement, cls : string) : void;
            function addRowCls (rowInfo : string, cls : string) : void;
            function addRowCls (rowInfo : number, cls : string) : void;
            function addRowCls (rowInfo : Ext.data.Model, cls : string) : void;
            function autoSizeColumn (header : Ext.grid.column.Column) : void;
            function autoSizeColumn (header : number) : void;
            override function beforeDestroy () : void;
            function collectData (records : variant, startIndex : variant) : Object[];
            function focus (selectText : variant, delay : variant) : Ext.Component;
            function focusRow (row : HTMLElement, delay : boolean) : void;
            function focusRow (row : HTMLElement, delay : number) : void;
            function focusRow (row : HTMLElement) : void;
            function focusRow (row : string, delay : boolean) : void;
            function focusRow (row : string, delay : number) : void;
            function focusRow (row : string) : void;
            function focusRow (row : number, delay : boolean) : void;
            function focusRow (row : number, delay : number) : void;
            function focusRow (row : number) : void;
            function focusRow (row : Ext.data.Model, delay : boolean) : void;
            function focusRow (row : Ext.data.Model, delay : number) : void;
            function focusRow (row : Ext.data.Model) : void;
            function getBodySelector () : void;
            function getCellSelector (header : Ext.grid.column.Column) : void;
            function getCellSelector () : void;
            function getColumnSizerSelector (header : variant) : void;
            function getDataRowSelector () : void;
            function getFeature (id : string) : Ext.grid.feature.Feature;
            function getItemSelector () : void;
            function getNode (nodeInfo : HTMLElement, dataRow : boolean) : HTMLElement;
            override function getNode (nodeInfo : HTMLElement) : HTMLElement;
            function getNode (nodeInfo : string, dataRow : boolean) : HTMLElement;
            override function getNode (nodeInfo : string) : HTMLElement;
            function getNode (nodeInfo : number, dataRow : boolean) : HTMLElement;
            override function getNode (nodeInfo : number) : HTMLElement;
            function getNode (nodeInfo : Ext.data.Model, dataRow : boolean) : HTMLElement;
            override function getNode (nodeInfo : Ext.data.Model) : HTMLElement;
            function getNodeContainerSelector () : void;
            function getPosition (record : variant, header : variant) : Number[];
            function getRecord (node : variant) : Ext.data.Model;
            function getRowClass (record : Ext.data.Model, index : number, rowParams : variant, store : Ext.data.Store) : string;
            function indexOf (node : variant) : number;
            override function initComponent () : void;
            override function onDestroy () : void;
            override function refresh () : void;
            function removeRowCls (rowInfo : HTMLElement, cls : string) : void;
            function removeRowCls (rowInfo : string, cls : string) : void;
            function removeRowCls (rowInfo : number, cls : string) : void;
            function removeRowCls (rowInfo : Ext.data.Model, cls : string) : void;
            function walkRecs (startRec : Ext.data.Model, distance : number) : void;
            function walkRows (startRow : number, distance : number) : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }


        class View extends Ext.view.AbstractView
        {
            function clearHighlight () : void;
            function focusNode (rec : Ext.data.Model) : void;
            function highlightItem (item : HTMLElement) : void;
            override function initComponent () : void;
            override function refresh () : void;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }

    class window
    {

        class MessageBox extends Ext.window.Window
        {
            var CANCEL : number;
            var ERROR : string;
            var INFO : string;
            var NO : number;
            var OK : number;
            var OKCANCEL : number;
            var QUESTION : string;
            var WARNING : string;
            var YES : number;
            var YESNO : number;
            var YESNOCANCEL : number;
            var buttonText : variant;
            var defaultTextHeight : number;
            var minProgressWidth : number;
            var minPromptWidth : number;

            function constructor (cfg : variant);
            function alert (title : string, msg : string, fn : function  () : void, scope : variant) : variant;
            function alert (title : string, msg : string, fn : function  () : void) : variant;
            function alert (title : string, msg : string, scope : variant) : variant;
            function alert (title : string, msg : string) : variant;
            function confirm (title : string, msg : string, fn : function  () : void, scope : variant) : variant;
            function confirm (title : string, msg : string, fn : function  () : void) : variant;
            function confirm (title : string, msg : string, scope : variant) : variant;
            function confirm (title : string, msg : string) : variant;
            override function hide () : void;
            override function onShow () : void;
            function progress (title : string, msg : string, progressText : string) : variant;
            function progress (title : string, msg : string) : variant;
            function prompt (title : string, msg : string, fn : function  () : void, scope : variant, multiline : boolean, value : string) : variant;
            function prompt (title : string, msg : string, fn : function  () : void, scope : variant, multiline : boolean) : variant;
            function prompt (title : string, msg : string, fn : function  () : void, scope : variant, multiline : number, value : string) : variant;
            function prompt (title : string, msg : string, fn : function  () : void, scope : variant, multiline : number) : variant;
            function prompt (title : string, msg : string, fn : function  () : void, scope : variant, value : string) : variant;
            function prompt (title : string, msg : string, fn : function  () : void, scope : variant) : variant;
            function prompt (title : string, msg : string, fn : function  () : void, multiline : boolean, value : string) : variant;
            function prompt (title : string, msg : string, fn : function  () : void, multiline : boolean) : variant;
            function prompt (title : string, msg : string, fn : function  () : void, multiline : number, value : string) : variant;
            function prompt (title : string, msg : string, fn : function  () : void, multiline : number) : variant;
            function prompt (title : string, msg : string, fn : function  () : void, value : string) : variant;
            function prompt (title : string, msg : string, fn : function  () : void) : variant;
            function prompt (title : string, msg : string, scope : variant, multiline : boolean, value : string) : variant;
            function prompt (title : string, msg : string, scope : variant, multiline : boolean) : variant;
            function prompt (title : string, msg : string, scope : variant, multiline : number, value : string) : variant;
            function prompt (title : string, msg : string, scope : variant, multiline : number) : variant;
            function prompt (title : string, msg : string, scope : variant, value : string) : variant;
            function prompt (title : string, msg : string, scope : variant) : variant;
            function prompt (title : string, msg : string, multiline : boolean, value : string) : variant;
            function prompt (title : string, msg : string, multiline : boolean) : variant;
            function prompt (title : string, msg : string, multiline : number, value : string) : variant;
            function prompt (title : string, msg : string, multiline : number) : variant;
            function prompt (title : string, msg : string, value : string) : variant;
            function prompt (title : string, msg : string) : variant;
            function setIcon (icon : string, width : number, height : number) : void;
            override function setIcon (icon : string) : void;
            override function show (config : variant) : void;
            function updateProgress (value : number, progressText : string, msg : string) : variant;
            function updateProgress (value : number, progressText : string) : variant;
            function updateProgress (value : number) : variant;
            function updateProgress (progressText : string, msg : string) : variant;
            function updateProgress (progressText : string) : variant;
            function updateProgress () : variant;
            function wait (msg : string, title : string, config : variant) : variant;
            function wait (msg : string, title : string) : variant;
            function wait (msg : string, config : variant) : variant;
            function wait (msg : string) : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }

        class Window extends Ext.panel.Panel
        {
            var isWindow : boolean;

            function afterCollapse () : void;
            function afterExpand () : void;
            function applyState (state : variant) : void;
            function getDefaultFocus () : void;
            function maximize (animate : boolean) : variant;
            function minimize () : variant;
            override function onShow () : void;
            function restore (animate : variant) : variant;
            function toggleMaximize () : variant;
            static function addMembers (members : variant) : variant;
            static function addStatics (members : variant) : variant;
            static function create () : variant;
            static function createAlias (alias : string, origin : string) : void;
            static function createAlias (alias : string, origin : variant) : void;
            static function createAlias (alias : variant, origin : string) : void;
            static function createAlias (alias : variant, origin : variant) : void;
            static function getName () : string;
        }
    }
} = """Ext;""";